// Credits to https://hubhop.mobiflight.com/ for providing this.
// Generated from dataset of 2024-11-23 08:11Z
export default {
	"Microsoft.Generic.Avionics.AS1000_PFD_VOL_1_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_VOL_1_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_VOL_2_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_VOL_2_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_VOL_2_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_VOL_2_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Switch": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Switch)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_NAV_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_NAV_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Switch_Long": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Switch_Long)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Switch": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Switch)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_COM_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_COM_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_BARO_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_BARO_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_BARO_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_BARO_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_CRS_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CRS_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_CRS_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CRS_DEC)"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_PFD_CRS_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CRS_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_HEADING_DEC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_HEADING_INC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_HEADING_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_HEADING_FAST_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_HEADING_SYNC": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_1)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_2)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_3)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_4)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_5)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_6)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_7)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_8)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_9)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_10)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_11)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_SOFTKEYS_12)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_DIRECTTO": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_DIRECTTO)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_ENT_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_CLR_Long": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CLR_Long)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_CLR": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CLR)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_MENU_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FPL_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_PROC_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_PROC_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_FMS_Upper_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FMS_Upper_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_FMS_Upper_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FMS_Upper_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_FMS_Upper_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FMS_Upper_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_FMS_Lower_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FMS_Lower_INC)"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_PFD_FMS_Lower_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_FMS_Lower_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_RANGE_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_RANGE_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_RANGE_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_RANGE_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_JOYSTICK_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_JOYSTICK_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_ActivateMapCursor": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_ActivateMapCursor)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_DeactivateMapCursor": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_DeactivateMapCursor)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_JOYSTICK_RIGHT": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_JOYSTICK_RIGHT)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_JOYSTICK_LEFT": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_JOYSTICK_LEFT)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_JOYSTICK_UP": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_JOYSTICK_UP)"
	},
	"Microsoft.Generic.Avionics.AS1000_PFD_JOYSTICK_DOWN": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_JOYSTICK_DOWN)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_VOL_1_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_VOL_1_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_VOL_1_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_VOL_1_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_VOL_2_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_VOL_2_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_VOL_2_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_VOL_2_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Switch": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Switch)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NAV_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_NAV_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Switch_Long": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Switch_Long)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Switch": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Switch)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_COM_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_MFD_COM_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_COM_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_BARO_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_BARO_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_BARO_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_BARO_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_CRS_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_CRS_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_CRS_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_CRS_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_CRS_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_CRS_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_HEADING_DEC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_HEADING_INC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_HEADING_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_HEADING_FAST_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_1)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_2)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_3)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_4)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_5)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_6)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_7)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_8)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_9)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_10)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_11)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_SOFTKEYS_12)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_DIRECTTO": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_DIRECTTO)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_ENT_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_CLR_Long": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_CLR_Long)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_CLR": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_CLR)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_MENU_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FPL_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_PROC_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_PROC_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FMS_Upper_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FMS_Upper_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FMS_Upper_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FMS_Upper_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FMS_Upper_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FMS_Upper_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FMS_Lower_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FMS_Lower_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FMS_Lower_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_FMS_Lower_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_RANGE_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_RANGE_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_RANGE_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_RANGE_DEC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_JOYSTICK_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_JOYSTICK_PUSH)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_ActivateMapCursor": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_ActivateMapCursor)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_DeactivateMapCursor": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_DeactivateMapCursor)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_JOYSTICK_RIGHT": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_JOYSTICK_RIGHT)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_JOYSTICK_LEFT": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_JOYSTICK_LEFT)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_JOYSTICK_UP": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_JOYSTICK_UP)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_JOYSTICK_DOWN": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_JOYSTICK_DOWN)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_HEADING_SYNC": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_MFD_FLC_Push": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NOSE_UP": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_INC) (>H:AP_DN) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_DEC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_UP) }"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_NOSE_DN": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_DEC) (>H:AP_UP) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_INC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_DN) }"
	},
	"Microsoft.Generic.Avionics.AS1000_MFD_FLIGHT_DIRECTOR_PUSH": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_ALT_INC_100": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_ALT_DEC_100": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 - (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_ALT_INC_1000": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 1000 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_ALT_DEC_1000": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 1000 - (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_VNAV_Push": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue, Bool) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_1_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_1_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_2_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_2_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_3_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_3_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_Mic_1_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_1_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_Mic_2_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_2_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_Mic_3_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_3_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_COM_Swap_1_2_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Swap_1_2_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_TEL_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_TEL_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_PA_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_PA_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_SPKR_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_SPKR_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_MKR_Mute_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_MKR_Mute_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_HI_SENS_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_HI_SENS_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_DME_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_DME_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_NAV_1_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_NAV_1_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_NAV_2_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_NAV_2_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_ADF_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_ADF_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_AUX_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_AUX_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_MAN_SQ_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_MAN_SQ_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_Play_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Play_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_Isolate_Pilot_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Isolate_Pilot_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_Isolate_Copilot_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Isolate_Copilot_Push)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_Pass_Copilot_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Pass_Copilot_INC)"
	},
	"Microsoft.Generic.Avionics.AS1000_MID_Pass_Copilot_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Pass_Copilot_DEC)"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_MID_Display_Backup_Push": {
		"method": "calcCode",
		"code": "(L:AS1000_MID_Display_Backup_Active) ! (>L:AS1000_MID_Display_Backup_Active)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_1)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_2)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_3)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_4)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_5)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_6)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_7)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_8)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_9)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_10)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_11)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_SOFTKEYS_12)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Push_Long": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Push_Long)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Push)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_BottomKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_BottomKnob_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_TopKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_TopKnob_Large_INC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_TopKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_TopKnob_Large_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_TopKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_TopKnob_Small_INC)"
	},
	"Microsoft.Generic.Avionics.AS3000_PFD_TopKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_TopKnob_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_1)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_2)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_3)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_4)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_5)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_6)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_7)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_8)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_9)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_10)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_11)"
	},
	"Microsoft.Generic.Avionics.AS3000_MFD_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_12)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_SoftKey_1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_SoftKey_1)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_SoftKey_2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_SoftKey_2)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_SoftKey_3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_SoftKey_3)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Large_INC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Large_DEC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Small_INC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Small_DEC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Push_Long": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Push_Long)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_TopKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_TopKnob_Push)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_BottomKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_BottomKnob_Small_INC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_BottomKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_BottomKnob_Small_DEC)"
	},
	"Asobo.TBM 580.Avionics.AS3000_TSC_Horizontal_BottomKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_BottomKnob_Push)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Small_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Push_Long": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Push_Long)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Push)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Large_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_BottomKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_BottomKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_TopKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_TopKnob_Large_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_TopKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_TopKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_TopKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_TopKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_TopKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_TopKnob_Small_DEC)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_AP": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_AP)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_HDG": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_HDG)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_NAV": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_NAV)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_APR": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_APR)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_REV": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_REV)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_ALT": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_ALT)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_UP": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_UP)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_DN": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_DN)"
	},
	"Microsoft.Generic.Avionics.KAP140_Long_Push_BARO": {
		"method": "calcCode",
		"code": "(>H:KAP140_Long_Push_BARO)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_BARO": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_BARO)"
	},
	"Microsoft.Generic.Avionics.KAP140_Push_ARM": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_ARM)"
	},
	"Microsoft.Generic.Avionics.KAP140_Knob_Inner_INC": {
		"method": "calcCode",
		"code": "(>H:KAP140_Knob_Inner_INC)"
	},
	"Microsoft.Generic.Avionics.KAP140_Knob_Inner_DEC": {
		"method": "calcCode",
		"code": "(>H:KAP140_Knob_Inner_DEC)"
	},
	"Microsoft.Generic.Avionics.KAP140_Knob_Outer_INC": {
		"method": "calcCode",
		"code": "(>H:KAP140_Knob_Outer_INC)"
	},
	"Microsoft.Generic.Avionics.KAP140_Knob_Outer_DEC": {
		"method": "calcCode",
		"code": "(>H:KAP140_Knob_Outer_DEC)"
	},
	"Microsoft.Generic.Avionics.oclock_select": {
		"method": "calcCode",
		"code": "(>H:oclock_select)"
	},
	"Microsoft.Generic.Avionics.oclock_oat": {
		"method": "calcCode",
		"code": "(>H:oclock_oat)"
	},
	"Microsoft.Generic.Avionics.oclock_control_long": {
		"method": "calcCode",
		"code": "(>H:oclock_control_long)"
	},
	"Microsoft.Generic.Avionics.oclock_control": {
		"method": "calcCode",
		"code": "(>H:oclock_control)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_ENT_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_MENU_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_FPL_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_DirectTo_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_DirectTo_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_CLR_Push_Long": {
		"method": "calcCode",
		"code": "(>H:AS530_CLR_Push_Long)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_CLR_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_CLR_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_MSG_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_MSG_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_OBS_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_OBS_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_VNAV_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_VNAV_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_PROC_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_PROC_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_COMSWAP_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_COMSWAP_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_NAVSWAP_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_NAVSWAP_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RNG_Dezoom": {
		"method": "calcCode",
		"code": "(>H:AS530_RNG_Dezoom)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RNG_Zoom": {
		"method": "calcCode",
		"code": "(>H:AS530_RNG_Zoom)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RightLargeKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS530_RightLargeKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RightLargeKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS530_RightLargeKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_LeftLargeKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS530_LeftLargeKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_LeftLargeKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS530_LeftLargeKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RightSmallKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS530_RightSmallKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RightSmallKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS530_RightSmallKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_RightSmallKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_RightSmallKnob_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_LeftSmallKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS530_LeftSmallKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_LeftSmallKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS530_LeftSmallKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_LeftSmallKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_LeftSmallKnob_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_ENT_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_MENU_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_FPL_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_DirectTo_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_DirectTo_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_CLR_Push_Long": {
		"method": "calcCode",
		"code": "(>H:AS430_CLR_Push_Long)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_CLR_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_CLR_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_MSG_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_MSG_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_OBS_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_OBS_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_PROC_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_PROC_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_COMSWAP_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_COMSWAP_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_NAVSWAP_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_NAVSWAP_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RNG_Dezoom": {
		"method": "calcCode",
		"code": "(>H:AS430_RNG_Dezoom)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RNG_Zoom": {
		"method": "calcCode",
		"code": "(>H:AS430_RNG_Zoom)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RightLargeKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS430_RightLargeKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RightLargeKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS430_RightLargeKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_LeftLargeKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS430_LeftLargeKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_LeftLargeKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS430_LeftLargeKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RightSmallKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS430_RightSmallKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RightSmallKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS430_RightSmallKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_RightSmallKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_RightSmallKnob_Push)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_LeftSmallKnob_Right": {
		"method": "calcCode",
		"code": "(>H:AS430_LeftSmallKnob_Right)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_LeftSmallKnob_Left": {
		"method": "calcCode",
		"code": "(>H:AS430_LeftSmallKnob_Left)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_LeftSmallKnob_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_LeftSmallKnob_Push)"
	},
	"Microsoft.Generic.Avionics.adf_AntAdf": {
		"method": "calcCode",
		"code": "(>H:adf_AntAdf)"
	},
	"Microsoft.Generic.Avionics.adf_bfo": {
		"method": "calcCode",
		"code": "(>H:adf_bfo)"
	},
	"Microsoft.Generic.Avionics.adf_frqTransfert": {
		"method": "calcCode",
		"code": "(>H:adf_frqTransfert)"
	},
	"Microsoft.Generic.Avionics.adf_FltEt": {
		"method": "calcCode",
		"code": "(>H:adf_FltEt)"
	},
	"Microsoft.Generic.Avionics.adf_SetRst": {
		"method": "calcCode",
		"code": "(>H:adf_SetRst)"
	},
	"Microsoft.Generic.Avionics.TransponderIDT": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_ON)"
	},
	"Microsoft.Generic.Avionics.TransponderVFR": {
		"method": "calcCode",
		"code": "(>H:TransponderVFR)"
	},
	"Microsoft.Generic.Avionics.TransponderCLR": {
		"method": "calcCode",
		"code": "(>H:TransponderCLR)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder0": {
		"method": "calcCode",
		"code": "(>H:Transponder0)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder1": {
		"method": "calcCode",
		"code": "(>H:Transponder1)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder2": {
		"method": "calcCode",
		"code": "(>H:Transponder2)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder3": {
		"method": "calcCode",
		"code": "(>H:Transponder3)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder4": {
		"method": "calcCode",
		"code": "(>H:Transponder4)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder5": {
		"method": "calcCode",
		"code": "(>H:Transponder5)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder6": {
		"method": "calcCode",
		"code": "(>H:Transponder6)"
	},
	"Microsoft.Generic.Avionics.Input.Transponder7": {
		"method": "calcCode",
		"code": "(>H:Transponder7)"
	},
	"Microsoft.Generic.Avionics.TransponderOFF": {
		"method": "calcCode",
		"code": "0 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Microsoft.Generic.Avionics.TransponderSTBY": {
		"method": "calcCode",
		"code": "1 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Microsoft.Generic.Avionics.TransponderTST": {
		"method": "calcCode",
		"code": "2 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Microsoft.Generic.Avionics.TransponderON": {
		"method": "calcCode",
		"code": "3 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Microsoft.Generic.Avionics.TransponderALT": {
		"method": "calcCode",
		"code": "4 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT AIRSPEED HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT AIRSPEED HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR,Knots)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT ALTITUDE LOCK": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK,Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT ALTITUDE LOCK VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:index,Feet)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT ALTITUDE SLOT INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE SLOT INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT APPROACH HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT ATTITUDE HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ATTITUDE HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT AVAILABLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT BACKCOURSE HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BACKCOURSE HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT BANK HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BANK HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT DISENGAGED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED,Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT FLIGHT DIRECTOR ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT FLIGHT DIRECTOR BANK": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR BANK,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT FLIGHT DIRECTOR BANK EX1": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR BANK EX1,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT FLIGHT DIRECTOR PITCH": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR PITCH,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT FLIGHT DIRECTOR PITCH EX1": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR PITCH EX1,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT GLIDESLOPE HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT GLIDESLOPE HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT HEADING LOCK": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK,Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT HEADING LOCK DIR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR,Degrees)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT HEADING SLOT INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING SLOT INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MACH HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MACH HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MACH HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MACH HOLD VAR,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MANAGED INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MANAGED SPEED IN MACH": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MANAGED THROTTLE ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED THROTTLE ACTIVE,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MASTER": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT MAX BANK": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT NAV1 LOCK": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV1 LOCK,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT NAV SELECTED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT PITCH HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT PITCH HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT PITCH HOLD REF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT PITCH HOLD REF,Radians)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT RPM HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT RPM HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT RPM HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT RPM HOLD VAR,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT RPM SLOT INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT RPM SLOT INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT SPEED SLOT INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT SPEED SLOT INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT TAKEOFF POWER ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT TAKEOFF POWER ACTIVE,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT THROTTLE ARM": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT THROTTLE MAX THRUST": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE MAX THRUST,Percent)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT VERTICAL HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT VERTICAL HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR,Feet/minute)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT VS SLOT INDEX": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VS SLOT INDEX,Number)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT WING LEVELER": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT WING LEVELER,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT YAW DAMPER": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT YAW DAMPER,Bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOTHROTTLE ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOTHROTTLE ACTIVE,Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.COM SPACING MODE": {
		"method": "calcCode",
		"code": "(A:COM SPACING MODE:index,Enum)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE ELAC FAILED": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE ELAC FAILED,Bool)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE ELAC SWITCH": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE ELAC SWITCH,Bool)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE FAC FAILED": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE FAC FAILED,Bool)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE FAC SWITCH": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE FAC SWITCH,Bool)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE SEC FAILED": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE SEC FAILED,Bool)"
	},
	"Microsoft.Generic.Autopilot.FLY BY WIRE SEC SWITCH": {
		"method": "calcCode",
		"code": "(A:FLY BY WIRE SEC SWITCH,Bool)"
	},
	"Microsoft.Generic.Avionics.ADF ACTIVE FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:ADF ACTIVE FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Avionics.ADF AVAILABLE": {
		"method": "calcCode",
		"code": "(A:ADF AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.ADF CARD": {
		"method": "calcCode",
		"code": "(A:ADF CARD,Degrees)"
	},
	"Microsoft.Generic.Avionics.ADF EXT FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:ADF EXT FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Avionics.ADF FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:ADF FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Avionics.ADF IDENT": {
		"method": "calcCode",
		"code": "(A:ADF IDENT,String)"
	},
	"Microsoft.Generic.Avionics.ADF LATLONALT:index": {
		"method": "calcCode",
		"code": "(A:ADF LATLONALT:index,Number)"
	},
	"Microsoft.Generic.Avionics.ADF NAME": {
		"method": "calcCode",
		"code": "(A:ADF NAME,String)"
	},
	"Microsoft.Generic.Avionics.ADF RADIAL:index": {
		"method": "calcCode",
		"code": "(A:ADF RADIAL:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.ADF SIGNAL:index": {
		"method": "calcCode",
		"code": "(A:ADF SIGNAL:index,Number)"
	},
	"Microsoft.Generic.Avionics.ADF SOUND:index": {
		"method": "calcCode",
		"code": "(A:ADF SOUND:index,Bool)"
	},
	"Microsoft.Generic.Avionics.ADF STANDBY AVAILABLE": {
		"method": "calcCode",
		"code": "(A:ADF STANDBY AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.ADF STANDBY FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:ADF STANDBY FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Avionics.AUDIO PANEL AVAILABLE": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.AUDIO PANEL VOLUME": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL VOLUME,Percent)"
	},
	"Microsoft.Generic.Avionics.AVIONICS MASTER SWITCH": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH,Bool)"
	},
	"Microsoft.Generic.Radio.Output.COM ACTIVE FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Radio.Output.COM AVAILABLE": {
		"method": "calcCode",
		"code": "(A:COM AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.COM RECEIVE ALL": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE ALL,Bool)"
	},
	"Microsoft.Generic.Radio.Output.COM STANDBY FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:COM STANDBY FREQUENCY:index,KHz)"
	},
	"Microsoft.Generic.Avionics.COM STATUS:index": {
		"method": "calcCode",
		"code": "(A:COM STATUS:index,Enum)"
	},
	"Microsoft.Generic.Avionics.COM TEST:index": {
		"method": "calcCode",
		"code": "(A:COM TEST:index,Bool)"
	},
	"Microsoft.Generic.Avionics.COM TRANSMIT:index": {
		"method": "calcCode",
		"code": "(A:COM TRANSMIT:index,Bool)"
	},
	"Microsoft.Generic.Avionics.COPILOT TRANSMITTER TYPE": {
		"method": "calcCode",
		"code": "(A:COPILOT TRANSMITTER TYPE,Enum)"
	},
	"Microsoft.Generic.Avionics.COPILOT TRANSMITTING": {
		"method": "calcCode",
		"code": "(A:COPILOT TRANSMITTING,Bool)"
	},
	"Microsoft.Generic.Avionics.DME SOUND": {
		"method": "calcCode",
		"code": "(A:DME SOUND:index,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH APPROACH INDEX": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH APPROACH INDEX,Number)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH APPROACH TYPE": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH APPROACH TYPE,Enum)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH IS FINAL": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH IS FINAL,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH IS MISSED": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH IS MISSED,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH IS WP RUNWAY": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH IS WP RUNWAY,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH MODE": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH MODE,Enum)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH SEGMENT TYPE": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH SEGMENT TYPE,Enum)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH TIMEZONE DEVIATION": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH TIMEZONE DEVIATION,Seconds)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH TRANSITION INDEX": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH TRANSITION INDEX,Number)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH WP COUNT": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH WP COUNT,Number)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH WP INDEX": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH WP INDEX,Number)"
	},
	"Microsoft.Generic.Avionics.GPS APPROACH WP TYPE": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH WP TYPE,Enum)"
	},
	"Microsoft.Generic.Avionics.GPS COURSE TO STEER": {
		"method": "calcCode",
		"code": "(A:GPS COURSE TO STEER,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS DRIVES NAV1": {
		"method": "calcCode",
		"code": "(A:GPS DRIVES NAV1,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS ETA": {
		"method": "calcCode",
		"code": "(A:GPS ETA,Seconds)"
	},
	"Microsoft.Generic.Avionics.GPS ETE": {
		"method": "calcCode",
		"code": "(A:GPS ETE,Seconds)"
	},
	"Microsoft.Generic.Avionics.GPS FLIGHT PLAN WP COUNT": {
		"method": "calcCode",
		"code": "(A:GPS FLIGHT PLAN WP COUNT,Number)"
	},
	"Microsoft.Generic.Avionics.GPS FLIGHT PLAN WP INDEX": {
		"method": "calcCode",
		"code": "(A:GPS FLIGHT PLAN WP INDEX,Number)"
	},
	"Microsoft.Generic.Avionics.GPS GROUND MAGNETIC TRACK": {
		"method": "calcCode",
		"code": "(A:GPS GROUND MAGNETIC TRACK,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS GROUND SPEED": {
		"method": "calcCode",
		"code": "(A:GPS GROUND SPEED,Meters per second)"
	},
	"Microsoft.Generic.Avionics.GPS GROUND TRUE HEADING": {
		"method": "calcCode",
		"code": "(A:GPS GROUND TRUE HEADING,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS GROUND TRUE TRACK": {
		"method": "calcCode",
		"code": "(A:GPS GROUND TRUE TRACK,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS IS ACTIVE FLIGHT PLAN": {
		"method": "calcCode",
		"code": "(A:GPS IS ACTIVE FLIGHT PLAN,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS ACTIVE WAY POINT": {
		"method": "calcCode",
		"code": "(A:GPS IS ACTIVE WAY POINT,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS ACTIVE WP LOCKED": {
		"method": "calcCode",
		"code": "(A:GPS IS ACTIVE WP LOCKED,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS APPROACH ACTIVE": {
		"method": "calcCode",
		"code": "(A:GPS IS APPROACH ACTIVE,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS APPROACH LOADED": {
		"method": "calcCode",
		"code": "(A:GPS IS APPROACH LOADED,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS ARRIVED": {
		"method": "calcCode",
		"code": "(A:GPS IS ARRIVED,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS IS DIRECTTO FLIGHTPLAN": {
		"method": "calcCode",
		"code": "(A:GPS IS DIRECTTO FLIGHTPLAN,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS MAGVAR": {
		"method": "calcCode",
		"code": "(A:GPS MAGVAR,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS POSITION ALT": {
		"method": "calcCode",
		"code": "(A:GPS POSITION ALT,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS POSITION LAT": {
		"method": "calcCode",
		"code": "(A:GPS POSITION LAT,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS POSITION LON": {
		"method": "calcCode",
		"code": "(A:GPS POSITION LON,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS TARGET ALTITUDE": {
		"method": "calcCode",
		"code": "(A:GPS TARGET ALTITUDE,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS TARGET DISTANCE": {
		"method": "calcCode",
		"code": "(A:GPS TARGET DISTANCE,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS VERTICAL ANGLE": {
		"method": "calcCode",
		"code": "(A:GPS VERTICAL ANGLE,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS VERTICAL ANGLE ERROR": {
		"method": "calcCode",
		"code": "(A:GPS VERTICAL ANGLE ERROR,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS VERTICAL ERROR": {
		"method": "calcCode",
		"code": "(A:GPS VERTICAL ERROR,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS WP BEARING": {
		"method": "calcCode",
		"code": "(A:GPS WP BEARING,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS WP CROSS TRK": {
		"method": "calcCode",
		"code": "(A:GPS WP CROSS TRK,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS WP DESIRED TRACK": {
		"method": "calcCode",
		"code": "(A:GPS WP DESIRED TRACK,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS WP DISTANCE": {
		"method": "calcCode",
		"code": "(A:GPS WP DISTANCE,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS WP ETA": {
		"method": "calcCode",
		"code": "(A:GPS WP ETA,Seconds)"
	},
	"Microsoft.Generic.Avionics.GPS WP ETE": {
		"method": "calcCode",
		"code": "(A:GPS WP ETE,Seconds)"
	},
	"Microsoft.Generic.Avionics.GPS WP NEXT ALT": {
		"method": "calcCode",
		"code": "(A:GPS WP NEXT ALT,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS WP NEXT LAT": {
		"method": "calcCode",
		"code": "(A:GPS WP NEXT LAT,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS WP NEXT LON": {
		"method": "calcCode",
		"code": "(A:GPS WP NEXT LON,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS WP PREV ALT": {
		"method": "calcCode",
		"code": "(A:GPS WP PREV ALT,Meters)"
	},
	"Microsoft.Generic.Avionics.GPS WP PREV LAT": {
		"method": "calcCode",
		"code": "(A:GPS WP PREV LAT,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS WP PREV LON": {
		"method": "calcCode",
		"code": "(A:GPS WP PREV LON,Degrees)"
	},
	"Microsoft.Generic.Avionics.GPS WP PREV VALID": {
		"method": "calcCode",
		"code": "(A:GPS WP PREV VALID,Bool)"
	},
	"Microsoft.Generic.Avionics.GPS WP TRACK ANGLE ERROR": {
		"method": "calcCode",
		"code": "(A:GPS WP TRACK ANGLE ERROR,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS WP TRUE BEARING": {
		"method": "calcCode",
		"code": "(A:GPS WP TRUE BEARING,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS WP TRUE REQ HDG": {
		"method": "calcCode",
		"code": "(A:GPS WP TRUE REQ HDG,Radians)"
	},
	"Microsoft.Generic.Avionics.GPS WP VERTICAL SPEED": {
		"method": "calcCode",
		"code": "(A:GPS WP VERTICAL SPEED,Meters per second)"
	},
	"Microsoft.Generic.Avionics.HSI BEARING": {
		"method": "calcCode",
		"code": "(A:HSI BEARING,Degrees)"
	},
	"Microsoft.Generic.Avionics.HSI BEARING VALID": {
		"method": "calcCode",
		"code": "(A:HSI BEARING VALID,Bool)"
	},
	"Microsoft.Generic.Avionics.HSI CDI NEEDLE": {
		"method": "calcCode",
		"code": "(A:HSI CDI NEEDLE,Number)"
	},
	"Microsoft.Generic.Avionics.HSI CDI NEEDLE VALID": {
		"method": "calcCode",
		"code": "(A:HSI CDI NEEDLE VALID,Bool)"
	},
	"Microsoft.Generic.Avionics.HSI DISTANCE": {
		"method": "calcCode",
		"code": "(A:HSI DISTANCE,Nautical miles)"
	},
	"Microsoft.Generic.Avionics.HSI GSI NEEDLE": {
		"method": "calcCode",
		"code": "(A:HSI GSI NEEDLE,Number)"
	},
	"Microsoft.Generic.Avionics.HSI GSI NEEDLE VALID": {
		"method": "calcCode",
		"code": "(A:HSI GSI NEEDLE VALID,Bool)"
	},
	"Microsoft.Generic.Avionics.HSI HAS LOCALIZER": {
		"method": "calcCode",
		"code": "(A:HSI HAS LOCALIZER,Bool)"
	},
	"Microsoft.Generic.Avionics.HSI SPEED": {
		"method": "calcCode",
		"code": "(A:HSI SPEED,Knots)"
	},
	"Microsoft.Generic.Avionics.HSI TF FLAGS": {
		"method": "calcCode",
		"code": "(A:HSI TF FLAGS,Enum)"
	},
	"Microsoft.Generic.Avionics.INNER MARKER": {
		"method": "calcCode",
		"code": "(A:INNER MARKER,Bool)"
	},
	"Microsoft.Generic.Avionics.INNER MARKER LATLONALT": {
		"method": "calcCode",
		"code": "(A:INNER MARKER LATLONALT,Number)"
	},
	"Microsoft.Generic.Avionics.INTERCOM MODE": {
		"method": "calcCode",
		"code": "(A:INTERCOM MODE,Enum)"
	},
	"Microsoft.Generic.Avionics.INTERCOM SYSTEM ACTIVE": {
		"method": "calcCode",
		"code": "(A:INTERCOM SYSTEM ACTIVE,Bool)"
	},
	"Microsoft.Generic.Avionics.MARKER AVAILABLE": {
		"method": "calcCode",
		"code": "(A:MARKER AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.MARKER BEACON SENSITIVITY HIGH": {
		"method": "calcCode",
		"code": "(A:MARKER BEACON SENSITIVITY HIGH,Bool)"
	},
	"Microsoft.Generic.Avionics.MARKER BEACON STATE": {
		"method": "calcCode",
		"code": "(A:MARKER BEACON STATE,Enum)"
	},
	"Microsoft.Generic.Avionics.MARKER BEACON TEST MUTE": {
		"method": "calcCode",
		"code": "(A:MARKER BEACON TEST MUTE,Bool)"
	},
	"Microsoft.Generic.Avionics.MARKER SOUND": {
		"method": "calcCode",
		"code": "(A:MARKER SOUND:index,Bool)"
	},
	"Microsoft.Generic.Avionics.MIDDLE MARKER": {
		"method": "calcCode",
		"code": "(A:MIDDLE MARKER,Bool)"
	},
	"Microsoft.Generic.Avionics.MIDDLE MARKER LATLONALT": {
		"method": "calcCode",
		"code": "(A:MIDDLE MARKER LATLONALT,Number)"
	},
	"Microsoft.Generic.Avionics.NAV ACTIVE FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:NAV ACTIVE FREQUENCY:index,MHz)"
	},
	"Microsoft.Generic.Avionics.NAV AVAILABLE:index": {
		"method": "calcCode",
		"code": "(A:NAV AVAILABLE:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV BACK COURSE flagsindex": {
		"method": "calcCode",
		"code": "(A:NAV BACK COURSE flagsindex,flags)"
	},
	"Microsoft.Generic.Avionics.NAV CDI:index": {
		"method": "calcCode",
		"code": "(A:NAV CDI:index,Number)"
	},
	"Microsoft.Generic.Avionics.NAV CLOSE DME": {
		"method": "calcCode",
		"code": "(A:NAV CLOSE DME,Nautical miles)"
	},
	"Microsoft.Generic.Avionics.NAV CLOSE FREQUENCY": {
		"method": "calcCode",
		"code": "(A:NAV CLOSE FREQUENCY,KHz)"
	},
	"Microsoft.Generic.Avionics.NAV CLOSE IDENT": {
		"method": "calcCode",
		"code": "(A:NAV CLOSE IDENT,String)"
	},
	"Microsoft.Generic.Avionics.NAV CLOSE LOCALIZER": {
		"method": "calcCode",
		"code": "(A:NAV CLOSE LOCALIZER,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV CLOSE NAME": {
		"method": "calcCode",
		"code": "(A:NAV CLOSE NAME,String)"
	},
	"Microsoft.Generic.Avionics.NAV CODES:index": {
		"method": "calcCode",
		"code": "(A:NAV CODES:index,flags)"
	},
	"Microsoft.Generic.Avionics.NAV DME:index": {
		"method": "calcCode",
		"code": "(A:NAV DME:index,Nautical miles)"
	},
	"Microsoft.Generic.Avionics.NAV DMESPEED:index": {
		"method": "calcCode",
		"code": "(A:NAV DMESPEED:index,Knots)"
	},
	"Microsoft.Generic.Avionics.NAV DME LATLONALT:index": {
		"method": "calcCode",
		"code": "(A:NAV DME LATLONALT:index,Number)"
	},
	"Microsoft.Generic.Avionics.NAV FREQUENCY": {
		"method": "calcCode",
		"code": "(A:NAV FREQUENCY,Hz)"
	},
	"Microsoft.Generic.Avionics.NAV GLIDE SLOPE": {
		"method": "calcCode",
		"code": "(A:NAV GLIDE SLOPE,Number)"
	},
	"Microsoft.Generic.Avionics.NAV GLIDE SLOPE ERROR:index": {
		"method": "calcCode",
		"code": "(A:NAV GLIDE SLOPE ERROR:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV GSI:index": {
		"method": "calcCode",
		"code": "(A:NAV GSI:index,Number)"
	},
	"Microsoft.Generic.Avionics.NAV GS FLAG:index": {
		"method": "calcCode",
		"code": "(A:NAV GS FLAG:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV GS LATLONALT:index": {
		"method": "calcCode",
		"code": "(A:NAV GS LATLONALT:index,Number)"
	},
	"Microsoft.Generic.Controls.TOGGLE_LEFT_BRAKE_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_LEFT_BRAKE_FAILURE)"
	},
	"Microsoft.Generic.Lights.TOGGLE_LOGO_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_LOGO_LIGHTS)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_MASTER_ALTERNATOR": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_ALTERNATOR)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_MASTER_BATTERY": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_BATTERY)"
	},
	"Microsoft.Generic.Electrical.Input.TOGGLE_MASTER_BATTERY_ALTERNATOR": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_BATTERY_ALTERNATOR)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_MASTER_IGNITION_SWITCH": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_IGNITION_SWITCH)"
	},
	"Microsoft.Generic.Lights.Input.TOGGLE_NAV_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_NAV_LIGHTS)"
	},
	"Microsoft.Generic.Anti-Ice.TOGGLE_PITOT_BLOCKAGE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PITOT_BLOCKAGE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PRIMER": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PRIMER)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PRIMER1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PRIMER1)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PRIMER2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PRIMER2)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PRIMER3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PRIMER3)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PRIMER4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PRIMER4)"
	},
	"Microsoft.Generic.Anti-Ice.TOGGLE_PROPELLER_DEICE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PROPELLER_DEICE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_PROPELLER_SYNC": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PROPELLER_SYNC)"
	},
	"Microsoft.Generic.Interaction.TOGGLE_PUSHBACK": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PUSHBACK)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_RACERESULTS_WINDOW": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_RACERESULTS_WINDOW)"
	},
	"Microsoft.Generic.Lights.TOGGLE_RECOGNITION_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_RECOGNITION_LIGHTS)"
	},
	"Microsoft.Generic.Controls.TOGGLE_RIGHT_BRAKE_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_RIGHT_BRAKE_FAILURE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_STARTER1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER1)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_STARTER2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER2)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_STARTER3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER3)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_STARTER4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER4)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_STATIC_PORT_BLOCKAGE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STATIC_PORT_BLOCKAGE)"
	},
	"Microsoft.Generic.Anti-Ice.TOGGLE_STRUCTURAL_DEICE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STRUCTURAL_DEICE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_TAIL_HOOK_HANDLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_TAIL_HOOK_HANDLE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_TAILWHEEL_LOCK": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_TAILWHEEL_LOCK)"
	},
	"Microsoft.Generic.Lights.TOGGLE_TAXI_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_TAXI_LIGHTS)"
	},
	"Microsoft.Generic.Controls.TOGGLE_TOTAL_BRAKE_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_TOTAL_BRAKE_FAILURE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_TURN_INDICATOR_SWITCH": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_TURN_INDICATOR_SWITCH)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_VACUUM_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_VACUUM_FAILURE)"
	},
	"Microsoft.Generic.Unsorted.Input.TOGGLE VARIOMETER SWITCH": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_VARIOMETER_SWITCH)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_WATER_BALLAST_VALVE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_WATER_BALLAST_VALVE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_WATER_RUDDER": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_WATER_RUDDER)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_WING_FOLD": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_WING_FOLD)"
	},
	"Microsoft.Generic.Lights.TOGGLE_WING_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_WING_LIGHTS)"
	},
	"Microsoft.Generic.Interaction.TOW_PLANE_RELEASE": {
		"method": "calcCode",
		"code": "(>K:TOW_PLANE_RELEASE)"
	},
	"Microsoft.Generic.Interaction.TOW_PLANE_REQUEST": {
		"method": "calcCode",
		"code": "(>K:TOW_PLANE_REQUEST)"
	},
	"Microsoft.Generic.Unsorted.TRUE_AIRSPEED_CAL_DEC": {
		"method": "calcCode",
		"code": "(>K:TRUE_AIRSPEED_CAL_DEC)"
	},
	"Microsoft.Generic.Unsorted.TRUE_AIRSPEED_CAL_INC": {
		"method": "calcCode",
		"code": "(>K:TRUE_AIRSPEED_CAL_INC)"
	},
	"Microsoft.Generic.Interaction.TUG_DISABLE": {
		"method": "calcCode",
		"code": "(>K:TUG_DISABLE)"
	},
	"Microsoft.Generic.Unsorted.TURBINE_IGNITION_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TURBINE_IGNITION_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.VIDEO_RECORD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIDEO_RECORD_TOGGLE)"
	},
	"Microsoft.Generic.Camera.VIEW_ALWAYS_PAN_DOWN": {
		"method": "calcCode",
		"code": "(>K:VIEW_ALWAYS_PAN_DOWN)"
	},
	"Microsoft.Generic.Camera.VIEW_ALWAYS_PAN_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_ALWAYS_PAN_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_AXIS_INDICATOR_CYCLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_AXIS_INDICATOR_CYCLE)"
	},
	"Microsoft.Generic.Camera.VIEW_CAMERA_SELECT_START": {
		"method": "calcCode",
		"code": "(>K:VIEW_CAMERA_SELECT_START)"
	},
	"Microsoft.Generic.Camera.VIEW_CHASE_DISTANCE_ADD": {
		"method": "calcCode",
		"code": "(>K:VIEW_CHASE_DISTANCE_ADD)"
	},
	"Microsoft.Generic.Camera.VIEW_CHASE_DISTANCE_SUB": {
		"method": "calcCode",
		"code": "(>K:VIEW_CHASE_DISTANCE_SUB)"
	},
	"Microsoft.Generic.Camera.VIEW_COCKPIT_FORWARD": {
		"method": "calcCode",
		"code": "(>K:VIEW_COCKPIT_FORWARD)"
	},
	"Microsoft.Generic.Camera.VIEW_DOWN": {
		"method": "calcCode",
		"code": "(>K:VIEW_DOWN)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD_LEFT": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD_LEFT)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD_LEFT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD_LEFT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD_RIGHT": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD_RIGHT)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD_RIGHT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD_RIGHT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_FORWARD_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_FORWARD_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_LEFT": {
		"method": "calcCode",
		"code": "(>K:VIEW_LEFT)"
	},
	"Microsoft.Generic.Camera.VIEW_LEFT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_LEFT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_LINKING_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_LINKING_TOGGLE)"
	},
	"Microsoft.Generic.Camera.VIEW_MAP_ORIENTATION_CYCLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_MAP_ORIENTATION_CYCLE)"
	},
	"Microsoft.Generic.Camera.VIEW_MODE": {
		"method": "calcCode",
		"code": "(>K:VIEW_MODE)"
	},
	"Microsoft.Generic.Camera.VIEW_MODE_REV": {
		"method": "calcCode",
		"code": "(>K:VIEW_MODE_REV)"
	},
	"Microsoft.Generic.Camera.VIEW_PANEL_ALPHA_DEC": {
		"method": "calcCode",
		"code": "(>K:VIEW_PANEL_ALPHA_DEC)"
	},
	"Microsoft.Generic.Camera.VIEW_PANEL_ALPHA_INC": {
		"method": "calcCode",
		"code": "(>K:VIEW_PANEL_ALPHA_INC)"
	},
	"Microsoft.Generic.Camera.VIEW_PANEL_ALPHA_SELECT": {
		"method": "calcCode",
		"code": "(>K:VIEW_PANEL_ALPHA_SELECT)"
	},
	"Microsoft.Generic.Camera.VIEW_PREVIOUS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_PREVIOUS_TOGGLE)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR_LEFT": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR_LEFT)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR_LEFT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR_LEFT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR_RIGHT": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR_RIGHT)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR_RIGHT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR_RIGHT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_REAR_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_REAR_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_RIGHT": {
		"method": "calcCode",
		"code": "(>K:VIEW_RIGHT)"
	},
	"Microsoft.Generic.Camera.VIEW_RIGHT_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_RIGHT_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_TRACK_PAN_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_TRACK_PAN_TOGGLE)"
	},
	"Microsoft.Generic.Camera.VIEW_UP": {
		"method": "calcCode",
		"code": "(>K:VIEW_UP)"
	},
	"Microsoft.Generic.Camera.VIEW_VIRTUAL_COCKPIT_FORWARD": {
		"method": "calcCode",
		"code": "(>K:VIEW_VIRTUAL_COCKPIT_FORWARD)"
	},
	"Microsoft.Generic.Camera.VIEW_WINDOW_TITLES_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIEW_WINDOW_TITLES_TOGGLE)"
	},
	"Microsoft.Generic.Camera.VIEW_WINDOW_TO_FRONT": {
		"method": "calcCode",
		"code": "(>K:VIEW_WINDOW_TO_FRONT)"
	},
	"Microsoft.Generic.Unsorted.VIRTUAL_COPILOT_ACTION": {
		"method": "calcCode",
		"code": "(>K:VIRTUAL_COPILOT_ACTION)"
	},
	"Microsoft.Generic.Unsorted.VIRTUAL_COPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:VIRTUAL_COPILOT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.VOR_OBS": {
		"method": "calcCode",
		"code": "(>K:VOR_OBS)"
	},
	"Microsoft.Generic.Radio.Input.VOR1_OBI_DEC": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_DEC)"
	},
	"Microsoft.Generic.Radio.Input.VOR1_OBI_INC": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_INC)"
	},
	"Microsoft.Generic.Radio.VOR2_OBI_DEC": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_DEC)"
	},
	"Microsoft.Generic.Radio.VOR2_OBI_INC": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_INC)"
	},
	"Microsoft.Generic.Unsorted.VSI_BUG_SELECT": {
		"method": "calcCode",
		"code": "(>K:VSI_BUG_SELECT)"
	},
	"Microsoft.Generic.Radio.XPNDR": {
		"method": "calcCode",
		"code": "(>K:XPNDR)"
	},
	"Microsoft.Generic.Radio.XPNDR_1_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_DEC)"
	},
	"Microsoft.Generic.Radio.XPNDR_1_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_INC)"
	},
	"Microsoft.Generic.Radio.XPNDR_10_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_DEC)"
	},
	"Microsoft.Generic.Radio.XPNDR_10_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_INC)"
	},
	"Microsoft.Generic.Radio.XPNDR_100_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_DEC)"
	},
	"Microsoft.Generic.Radio.XPNDR_100_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_INC)"
	},
	"Microsoft.Generic.Radio.XPNDR_1000_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_DEC)"
	},
	"Microsoft.Generic.Radio.XPNDR_1000_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_INC)"
	},
	"Microsoft.Generic.Radio.XPNDR_DEC_CARRY": {
		"method": "calcCode",
		"code": "(>K:XPNDR_DEC_CARRY)"
	},
	"Microsoft.Generic.Radio.XPNDR_INC_CARRY": {
		"method": "calcCode",
		"code": "(>K:XPNDR_INC_CARRY)"
	},
	"Microsoft.Generic.Autopilot.YAW_DAMPER_OFF": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_OFF)"
	},
	"Microsoft.Generic.Autopilot.YAW_DAMPER_ON": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_ON)"
	},
	"Microsoft.Generic.Autopilot.YAW_DAMPER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.YAXIS_INVERT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:YAXIS_INVERT_TOGGLE)"
	},
	"Microsoft.Generic.Camera.ZOOM_1X": {
		"method": "calcCode",
		"code": "(>K:ZOOM_1X)"
	},
	"Microsoft.Generic.Camera.ZOOM_IN": {
		"method": "calcCode",
		"code": "(>K:ZOOM_IN)"
	},
	"Microsoft.Generic.Camera.ZOOM_IN_FINE": {
		"method": "calcCode",
		"code": "(>K:ZOOM_IN_FINE)"
	},
	"Microsoft.Generic.Camera.ZOOM_MINUS": {
		"method": "calcCode",
		"code": "(>K:ZOOM_MINUS)"
	},
	"Microsoft.Generic.Camera.ZOOM_OUT": {
		"method": "calcCode",
		"code": "(>K:ZOOM_OUT)"
	},
	"Microsoft.Generic.Camera.ZOOM_OUT_FINE": {
		"method": "calcCode",
		"code": "(>K:ZOOM_OUT_FINE)"
	},
	"Microsoft.Generic.Camera.ZOOM_PLUS": {
		"method": "calcCode",
		"code": "(>K:ZOOM_PLUS)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_AP_ENG_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_AP_ENG)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_AP_ENG_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_AP_ENG)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_AP_DISC_PRESS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_AP_DISC, Bool) ! (>L:ASCRJ_FCP_AP_DISC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_AP_DISC_RELEASE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_AP_DISC, Bool) ! (>L:ASCRJ_FCP_AP_DISC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_SPEED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_SPEED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_APPR_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_APPR)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_APPR_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_APPR)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_HDG)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_HDG)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_NAV_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_NAV_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_ALT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_ALT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VS_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_VS)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VS_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_VS)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_FD1_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_FD1)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_FD1_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_FD1)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_TURB_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_TURB)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_TURB_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_TURB)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_BC_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_BC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_BC_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_BC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_12BANK_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_12BANK)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_12BANK_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_12BANK)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VNAV_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_VNAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VNAV_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_VNAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_CRS1_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_CRS1_CHANGE, number) ++ (>L:ASCRJ_FCP_CRS1_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_CRS1_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_CRS1_CHANGE, number) -- (>L:ASCRJ_FCP_CRS1_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_CRS1_DIRECT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_CRS1_DIRECT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_CRS1_DIRECT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_CRS1_DIRECT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_SPEED_SEL_INC": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_SPEED_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_SPEED_SEL_DEC": {
		"method": "calcCode",
		"code": "-1 (>L:ASCRJ_FCP_SPEED_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_MODE_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_SPEED_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_MODE_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_SPEED_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_HDG_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_HDG_CHANGE, number) ++ (>L:ASCRJ_FCP_HDG_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_HDG_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_HDG_CHANGE, number) -- (>L:ASCRJ_FCP_HDG_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_SYNC_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_HDG_SYNC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_SYNC_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_HDG_SYNC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_ALT_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_ALT_CHANGE, number) ++ (>L:ASCRJ_FCP_ALT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_ALT_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_ALT_CHANGE, number) -- (>L:ASCRJ_FCP_ALT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_CANCEL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_ALT_CANCEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_CANCEL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_ALT_CANCEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_WHEEL_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_WHEEL_CHANGE, number) ++ (>L:ASCRJ_FCP_WHEEL_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_WHEEL_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_WHEEL_CHANGE, number) -- (>L:ASCRJ_FCP_WHEEL_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_XFR_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_XFR)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_XFR_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_XFR)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_CRS2_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_CRS2_CHANGE, number) ++ (>L:ASCRJ_FCP_CRS2_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.Input.ASCRJ_FCP_CRS2_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_CRS2_CHANGE, number) -- (>L:ASCRJ_FCP_CRS2_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_CRS2_DIRECT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_CRS2_DIRECT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_CRS2_DIRECT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_CRS2_DIRECT)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_IAS_MACH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_IAS_MACH)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_IAS_MACH_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_IAS_MACH)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_FD2_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FCP_FD2)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_FD2_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FCP_FD2)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_PRI_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_PRI)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_STEP_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_STEP)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_BATTMASTER_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_BATTMASTER, Bool) ! (>L:ASCRJ_ELEC_BATTMASTER)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_NAV_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_NAV, Bool) ! (>L:ASCRJ_EXTL_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_BEACON_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_BEACON, Bool) ! (>L:ASCRJ_EXTL_BEACON)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_STROBE_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_STROBE, Bool) ! (>L:ASCRJ_EXTL_STROBE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_LOGO_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_LOGO, Bool) ! (>L:ASCRJ_EXTL_LOGO)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_WING_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_WING, Bool) ! (>L:ASCRJ_EXTL_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LEFT_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_LEFT, Bool) ! (>L:ASCRJ_OVHD_LDG_LEFT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_NOSE_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_NOSE, Bool) ! (>L:ASCRJ_OVHD_LDG_NOSE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_RIGHT_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_RIGHT, Bool) ! (>L:ASCRJ_OVHD_LDG_RIGHT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_TAXI_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_TAXI, Bool) ! (>L:ASCRJ_OVHD_TAXI)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_EMER_LTS_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_EMER_LTS, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_EMER_LTS, Number) } els{ (L:ASCRJ_OVHD_EMER_LTS, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_EMER_LTS, Number) } els{ (L:ASCRJ_OVHD_EMER_LTS, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_EMER_LTS, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIRC_FAN_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AIRC_RECIRC_FAN, Bool) ! (>L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_AFT_CARGO_AIRCOND_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AIRC_AFT_CARGO, Bool) ! (>L:ASCRJ_AIRC_AFT_CARGO)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Conditioning and Pressurization.Input.ASCRJ_AIRC_PACK_L_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_PACK_L, Bool) ! (>L:ASCRJ_AIRC_PACK_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_PACK_R_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_PACK_R, Bool) ! (>L:ASCRJ_AIRC_PACK_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_TEMPCTRL_CKPT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) 0 > if{ (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) -- (>L:ASCRJ_AIRC_TEMPCTRL_CKPT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_TEMPCTRL_CKPT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) 26 < if{ (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) ++ (>L:ASCRJ_AIRC_TEMPCTRL_CKPT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_TEMPCTRL_CABIN_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) 0 > if{ (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) -- (>L:ASCRJ_AIRC_TEMPCTRL_CABIN) }"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_TEMPCTRL_CABIN_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) 26 < if{ (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) ++ (>L:ASCRJ_AIRC_TEMPCTRL_CABIN) }"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_REV_1_ARM_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": " (L:ASCRJ_TQ_REV1_MODE, Bool) ! (>L:ASCRJ_TQ_REV1_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_REV_2_ARM_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": " (L:ASCRJ_TQ_REV2_MODE, Bool) ! (>L:ASCRJ_TQ_REV2_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_IRS1_KNOB_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_IRS1_KNOB, Number) 0 == if{ 1 (>L:ASCRJ_IRS1_KNOB, Number) } els{ (L:ASCRJ_IRS1_KNOB, Number) 1 == if{ 2 (>L:ASCRJ_IRS1_KNOB, Number) } els{ (L:ASCRJ_IRS1_KNOB, Number) 2 == if{ 0 (>L:ASCRJ_IRS1_KNOB, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_IRS2_KNOB_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_IRS2_KNOB, Number) 0 == if{ 1 (>L:ASCRJ_IRS2_KNOB, Number) } els{ (L:ASCRJ_IRS2_KNOB, Number) 1 == if{ 2 (>L:ASCRJ_IRS2_KNOB, Number) } els{ (L:ASCRJ_IRS2_KNOB, Number) 2 == if{ 0 (>L:ASCRJ_IRS2_KNOB, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_PWRFUEL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_APU_PWRFUEL_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_PWRFUEL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_APU_PWRFUEL_ANIM) 1 (>L:ASCRJ_APU_PWRFUEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_STARTSTOP_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_APU_STARTSTOP_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_STARTSTOP_RELEASE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_APU_STARTSTOP) ! s0 (>L:ASCRJ_APU_STARTSTOP)\nl0 (>L:ASCRJ_APU_STARTSTOP_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.Input.ASCRJ_GEAR_GEAR_LEVER_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_GEAR_GEAR_LEVER)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.Input.ASCRJ_GEAR_GEAR_LEVER_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_GEAR_GEAR_LEVER)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.Input.ASCRJ_PARK_BRAKE_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_PARK_BRAKE)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.Input.ASCRJ_PARK_BRAKE_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_PARK_BRAKE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_BARO_CHANGE_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_BARO_CHANGE, 2) ++ (>L:ASCRJ_LSP_BARO_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_BARO_CHANGE_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_BARO_CHANGE, 2) -- (>L:ASCRJ_LSP_BARO_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_BARO_STD_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_BARO_STD)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_BARO_STD_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_BARO_STD)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Input.ASCRJ_LSP_NAV_SOURCE_CHANGE_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_NAV_SOURCE_CHANGE, number) ++ (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Input.ASCRJ_LSP_NAV_SOURCE_CHANGE_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_NAV_SOURCE_CHANGE, number) -- (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_NAV_SOURCE_XSIDE_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_NAV_SOURCE_XSIDE_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Input.ASCRJ_LSP_ZOOM_RANGE_CHANGE_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_RANGE_CHANGE, number) ++ (>L:ASCRJ_LSP_RANGE_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Input.ASCRJ_LSP_ZOOM_RANGE_CHANGE_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_RANGE_CHANGE, number) -- (>L:ASCRJ_LSP_RANGE_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_XPDR_ATC_SEL_PRESS_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_XPDR_ATC_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_XPDR_ATC_SEL_PRESS_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_XPDR_ATC_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_LSP_CLCK_CHR_BTN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_CLCK_CHR)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_LSP_CLCK_CHR_BTN_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_CLCK_CHR)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_MASTER_WARN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_MASTER_WARN)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_MASTER_WARN_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_MASTER_WARN)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_MASTER_CAUT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_MASTER_CAUT)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_MASTER_CAUT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_MASTER_CAUT)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WING_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WING, Bool) ! (>L:ASCRJ_AICE_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_L_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_COWL_L, Bool) ! (>L:ASCRJ_AICE_COWL_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_R_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_COWL_R, Bool) ! (>L:ASCRJ_AICE_COWL_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_L_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_PHEAT_L, Bool) ! (>L:ASCRJ_AICE_PHEAT_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_R_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_PHEAT_R, Bool) ! (>L:ASCRJ_AICE_PHEAT_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_L_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WSHLD_L, Number) 0 == if{ 1 (>L:ASCRJ_AICE_WSHLD_L, Number) } els{ (L:ASCRJ_AICE_WSHLD_L, Number) 1 == if{ 2 (>L:ASCRJ_AICE_WSHLD_L, Number) } els{ (L:ASCRJ_AICE_WSHLD_L, Number) 2 == if{ 0 (>L:ASCRJ_AICE_WSHLD_L, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_R_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WSHLD_R, Number) 0 == if{ 1 (>L:ASCRJ_AICE_WSHLD_R, Number) } els{ (L:ASCRJ_AICE_WSHLD_R, Number) 1 == if{ 2 (>L:ASCRJ_AICE_WSHLD_R, Number) } els{ (L:ASCRJ_AICE_WSHLD_R, Number) 2 == if{ 0 (>L:ASCRJ_AICE_WSHLD_R, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_DSPL_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_DSPL, Number) 26 < if{ (L:ASCRJ_LSP_DSPL, Number) ++ (>L:ASCRJ_LSP_DSPL) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_DSPL_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_DSPL, Number) 0 > if{ (L:ASCRJ_LSP_DSPL, Number) -- (>L:ASCRJ_LSP_DSPL) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_INTEG_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_INTEG, Number) 26 < if{ (L:ASCRJ_LSP_INTEG, Number) ++ (>L:ASCRJ_LSP_INTEG) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_INTEG_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_INTEG, Number) 0 > if{ (L:ASCRJ_LSP_INTEG, Number) -- (>L:ASCRJ_LSP_INTEG) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_FLOOD_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_FLOOD, Number) 26 < if{ (L:ASCRJ_LSP_FLOOD, Number) ++ (>L:ASCRJ_LSP_FLOOD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_LSP_FLOOD_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_LSP_FLOOD, Number) 0 > if{ (L:ASCRJ_LSP_FLOOD, Number) -- (>L:ASCRJ_LSP_FLOOD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_DSPL_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_DSPL, Number) 26 < if{ (L:ASCRJ_RSP_DSPL, Number) ++ (>L:ASCRJ_RSP_DSPL) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_DSPL_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_DSPL, Number) 0 > if{ (L:ASCRJ_RSP_DSPL, Number) -- (>L:ASCRJ_RSP_DSPL) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_INTEG_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_INTEG, Number) 26 < if{ (L:ASCRJ_RSP_INTEG, Number) ++ (>L:ASCRJ_RSP_INTEG) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_INTEG_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_INTEG, Number) 0 > if{ (L:ASCRJ_RSP_INTEG, Number) -- (>L:ASCRJ_RSP_INTEG) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_FLOOD_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_FLOOD, Number) 26 < if{ (L:ASCRJ_RSP_FLOOD, Number) ++ (>L:ASCRJ_RSP_FLOOD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_RSP_FLOOD_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RSP_FLOOD, Number) 0 > if{ (L:ASCRJ_RSP_FLOOD, Number) -- (>L:ASCRJ_RSP_FLOOD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_DSPL_BRT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_DSPL_BRT, Number) 26 < if{ (L:ASCRJ_INTL_DSPL_BRT, Number) ++ (>L:ASCRJ_INTL_DSPL_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_DSPL_BRT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_DSPL_BRT, Number) 0 > if{ (L:ASCRJ_INTL_DSPL_BRT, Number) -- (>L:ASCRJ_INTL_DSPL_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_INTEG_BRT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_INTEG_BRT, Number) 26 < if{ (L:ASCRJ_INTL_INTEG_BRT, Number) ++ (>L:ASCRJ_INTL_INTEG_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_INTEG_BRT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_INTEG_BRT, Number) 0 > if{ (L:ASCRJ_INTL_INTEG_BRT, Number) -- (>L:ASCRJ_INTL_INTEG_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_FLOOD_BRT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_FLOOD_BRT, Number) 26 < if{ (L:ASCRJ_INTL_FLOOD_BRT, Number) ++ (>L:ASCRJ_INTL_FLOOD_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_FLOOD_BRT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_FLOOD_BRT, Number) 0 > if{ (L:ASCRJ_INTL_FLOOD_BRT, Number) -- (>L:ASCRJ_INTL_FLOOD_BRT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.Input.ASCRJ_INTL_CB_PNL_BRT_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_INTL_CB_PNL_BRT, Number) ++  0 max 26 min (>L:ASCRJ_INTL_CB_PNL_BRT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.Input.ASCRJ_INTL_CB_PNL_BRT_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_INTL_CB_PNL_BRT, Number) --  0 max 26 min (>L:ASCRJ_INTL_CB_PNL_BRT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_OVHD_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_OVHD, Number) 26 < if{ (L:ASCRJ_INTL_OVHD, Number) ++ (>L:ASCRJ_INTL_OVHD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_OVHD_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_INTL_OVHD, Number) 0 > if{ (L:ASCRJ_INTL_OVHD, Number) -- (>L:ASCRJ_INTL_OVHD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_DM_LT_CPT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ64_DM_LT_CPT, Number) 26 < if{ (L:ASCRJ64_DM_LT_CPT, Number) ++ (>L:ASCRJ64_DM_LT_CPT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_DM_LT_CPT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ64_DM_LT_CPT, Number) 0 > if{ (L:ASCRJ64_DM_LT_CPT, Number) -- (>L:ASCRJ64_DM_LT_CPT) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_DM_LT_FO_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ64_DM_LT_FO, Number) 26 < if{ (L:ASCRJ64_DM_LT_FO, Number) ++ (>L:ASCRJ64_DM_LT_FO) }"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_DM_LT_FO_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ64_DM_LT_FO, Number) 0 > if{ (L:ASCRJ64_DM_LT_FO, Number) -- (>L:ASCRJ64_DM_LT_FO) }"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_MCDU1_BRT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_MCDU1_BRT_CHANGE, Number) ++ (>L:ASCRJ_MCDU1_BRT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_MCDU1_BRT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_MCDU1_BRT_CHANGE, Number) -- (>L:ASCRJ_MCDU1_BRT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_MCDU2_BRT_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_MCDU2_BRT_CHANGE, Number) ++ (>L:ASCRJ_MCDU2_BRT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_MCDU2_BRT_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_MCDU2_BRT_CHANGE, Number) -- (>L:ASCRJ_MCDU2_BRT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_XPDR_ATC_SEL_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_XPDR_ATC_SEL, Number) 0 == if{ 1 (>L:ASCRJ_XPDR_ATC_SEL, Number) } els{ (L:ASCRJ_XPDR_ATC_SEL, Number) 1 == if{ 2 (>L:ASCRJ_XPDR_ATC_SEL, Number) } els{ (L:ASCRJ_XPDR_ATC_SEL, Number) 2 == if{ 0 (>L:ASCRJ_XPDR_ATC_SEL, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_KNOB_OUTER_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RTU1_KNOB_OUTER, Number) 10 + dnor (>L:ASCRJ_RTU1_KNOB_OUTER) (ASCRJ_RTU1_KNOB_OUTER_CHANGE, Number) ++ (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.Input.ASCRJ_RTU1_KNOB_OUTER_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RTU1_KNOB_OUTER, Number) 10 - dnor (>L:ASCRJ_RTU1_KNOB_OUTER) (ASCRJ_RTU1_KNOB_OUTER_CHANGE, Number) -- (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_KNOB_INNER_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RTU1_KNOB_INNER, Number) 10 + dnor (>L:ASCRJ_RTU1_KNOB_INNER) (ASCRJ_RTU1_KNOB_INNER_CHANGE, Number) ++ (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_KNOB_INNER_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_RTU1_KNOB_INNER, Number) 10 - dnor (>L:ASCRJ_RTU1_KNOB_INNER) (ASCRJ_RTU1_KNOB_INNER_CHANGE, Number) -- (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK1L_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK1L)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK2L_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK2L)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK3L_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK3L)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK4L_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK4L)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK1R_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK1R)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK2R_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK2R)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK3R_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK3R)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_LSK4R_SWITCH_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_LSK4R)"
	},
	"Aerosoft.CRJ 550-700-1000.Radio.ASCRJ_RTU1_IDENT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RTU1_IDENT)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_NO_SMOKING_SWITCH": {
		"method": "calcCode",
		"code": "1 (L:ASCRJ_OVHD_NO_SMOKING, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_NO_SMOKING, Number) } els{ (L:ASCRJ_OVHD_NO_SMOKING, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_NO_SMOKING, Number) } els{ (L:ASCRJ_OVHD_NO_SMOKING, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_NO_SMOKING, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_SEAT_BELTS_SWITCH": {
		"method": "calcCode",
		"code": "1 (L:ASCRJ_OVHD_SEAT_BELTS, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) } els{ (L:ASCRJ_OVHD_SEAT_BELTS, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) } els{ (L:ASCRJ_OVHD_SEAT_BELTS, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) }"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_TQ_TOGA_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_TQ_TOGA_1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GPU_INUSE_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_ELEC_GPU, Bool) ! (>L:ASCRJ_ELEC_GPU)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_FUEL_PUMP_L_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_FUEL_PUMP_L, Bool) ! (>L:ASCRJ_FUEL_PUMP_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_FUEL_PUMP_R_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_FUEL_PUMP_R, Bool) ! (>L:ASCRJ_FUEL_PUMP_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_LDG_ELEV_KNOB_DEC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_PRESS_LDG_ELEV, Number) 10 - dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) -- (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_LDG_ELEV_KNOB_INC": {
		"method": "calcCode",
		"code": " (L:ASCRJ_PRESS_LDG_ELEV, Number) 10 + dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) ++ (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_1_BUTTON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_PUMP_1, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_1, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_2_BUTTON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_PUMP_2, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_2, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3A_BUTTON": {
		"method": "calcCode",
		"code": " (L:ASCRJ_HYDR_PUMP_3A, Bool) ! (>L:ASCRJ_HYDR_PUMP_3A)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3B_BUTTON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_PUMP_3B, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_3B, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_CUTOFF_1_LEVER": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_TQ_CUTOFF_1)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_THROTTLE_1_POS_IDLE": {
		"method": "calcCode",
		"code": "400 (>L:ASCRJ_TQ_THROTTLE_1_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_CUTOFF_2_LEVER": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_TQ_CUTOFF_2)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_THROTTLE_2_POS_IDLE": {
		"method": "calcCode",
		"code": "400 (>L:ASCRJ_TQ_THROTTLE_2_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_THROTTLE_1_POS_SHUTOFF": {
		"method": "calcCode",
		"code": "500 (>L:ASCRJ_TQ_THROTTLE_1_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_THROTTLE_2_POS_SHUTOFF": {
		"method": "calcCode",
		"code": "500 (>L:ASCRJ_TQ_THROTTLE_2_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_STAB_TRIM_CH_1_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_STAB_TRIM_CH1_TRIGGER, Bool) ! (>L:ASCRJ_STAB_TRIM_CH1_TRIGGER)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_STAB_TRIM_CH_2_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_STAB_TRIM_CH2_TRIGGER, Bool) ! (>L:ASCRJ_STAB_TRIM_CH2_TRIGGER)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_MACH_TRIM_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_MACH_TRIM, Bool) ! (>L:ASCRJ_MACH_TRIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_YD1_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_YD1, Bool) ! (>L:ASCRJ_YD1)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_YD2_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_YD2, Bool) ! (>L:ASCRJ_YD2)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_YD_DISC_SWITCH": {
		"method": "calcCode",
		"code": " (L:ASCRJ_YD_DISC, Bool) ! (>L:ASCRJ_YD_DISC)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_AP_ENG_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_AP_ENG_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_XFR_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_XFR_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_SPEED_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_APPR_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_APPR_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_HDG_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_LNAV_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_NAV_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_ALT_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VNAV_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_VNAV_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_TURB_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_TURB_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_BC_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_BC_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_12_BANK_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_12BANK_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_VS_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_VS_LED)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_BEACON_LIGHT": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_BEACON)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_NAV_LIGHT": {
		"method": "calcCode",
		"code": "(L:ASCRJ_EXTL_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LEFT": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_LEFT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_NOSE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_NOSE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_RIGHT": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_LDG_RIGHT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_TAXI": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_TAXI)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_ALT_INFO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_ALT_INFO)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_WHEEL_INFO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_WHEEL_INFO) flr"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_HDG_INFO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_HDG_INFO)"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_FCP_SPEED_INFO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_SPEED_INFO)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_FLAPS_SET": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FLAPS_SET)"
	},
	"Aerosoft.CRJ 550-700-1000.Warning System.ASCRJ_GSC_MASTER_WARN_ON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GSC_MASTER_WARN_ON)"
	},
	"Aerosoft.CRJ 550-700-1000.Warning System.ASCRJ_GSC_MASTER_CAUT_ON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GSC_MASTER_CAUT_ON)"
	},
	"Aerosoft.CRJ 550-700-1000.Warning System.ASCRJ_GSF_MASTER_WARN_ON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GSF_MASTER_WARN_ON)"
	},
	"Aerosoft.CRJ 550-700-1000.Warning System.ASCRJ_GSF_MASTER_CAUT_ON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GSF_MASTER_CAUT_ON)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_PHEAT_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_PHEAT_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WING": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_COWL_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_COWL_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.ASCRJ_GEAR_LEFT_POS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GEAR_LEFT_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.ASCRJ_GEAR_NOSE_POS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GEAR_NOSE_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.ASCRJ_GEAR_RIGHT_POS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_GEAR_RIGHT_POS)"
	},
	"Aerosoft.CRJ 550-700-1000.Gear.ASCRJ_PARK_BRAKE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_PARK_BRAKE)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_STARTSTOP_AVAIL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_APU_STARTSTOP_AVAIL)"
	},
	"Aerosoft.CRJ 550-700-1000.Environment.PLANE AIRSPEED": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE:0, Knots) flr"
	},
	"Aerosoft.CRJ 550-700-1000.Environment.Output.PLANE HEADING": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES TRUE:0, degress) near"
	},
	"Aerosoft.CRJ 550-700-1000.Environment.PLANE ALTITUDE": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE:1, Feet) flr"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_REV1_MODE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_TQ_REV1_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_TQ_REV2_MODE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_TQ_REV2_MODE)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WSHLD_L) "
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AICE_WSHLD_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_IRS1_KNOB": {
		"method": "calcCode",
		"code": "(L:ASCRJ_IRS1_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_IRS2_KNOB": {
		"method": "calcCode",
		"code": "(L:ASCRJ_IRS2_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIRC_FAN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_AFT_CARGO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_AIRC_AFT_CARGO)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.Fuel Quantity Left": {
		"method": "calcCode",
		"code": "(A:FUEL LEFT QUANTITY,Gallons) 3.039 * flr"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.Fuel Quantity Center": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER QUANTITY,Gallons) 3.039 * flr"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.Fuel Quantity Right": {
		"method": "calcCode",
		"code": "(A:FUEL RIGHT QUANTITY,Gallons) 3.039 * flr"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_ALT_PUSH": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_CSTR_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_CSTR_1)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_CSTR_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_CSTR_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_WPT_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_WPT_1)"
	},
	"Fly By Wire.A320.EFIS.Output.(L:BTN_WPT_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_WPT_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_VORD_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_VORD_1)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_VORD_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_VORD_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_NDB_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_NDB_1)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_NDB_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_NDB_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.Input.A320_Neo_MFD_BTN_ARPT_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_ARPT_1)"
	},
	"Fly By Wire.A320.EFIS.Output.(L:BTN_ARPT_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_ARPT_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.Input.A32NX EFIS L PFD LS BUTTON PUSH": {
		"method": "calcCode",
		"code": "1 (>H:A320_Neo_PFD_BTN_LS_1, boolean)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_LS_1_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_LS_1_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool)"
	},
	"Fly By Wire.A320.EFIS.Output.(A:KOHLSMAN SETTING HG, Number) 100 / near": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG, Number) 100 / near"
	},
	"Fly By Wire.A320.EFIS.Output.(A:KOHLSMAN SETTING HG, Number) 33.866 / near": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG, Number) 33.866 / near"
	},
	"Fly By Wire.A320.EFIS.Output.(L:XMLVAR_Baro_Selector_HPA_1)": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Fly By Wire.A320.EFIS.Output.(L:XMLVAR_Baro1_Mode)": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A320.EFIS.A32NX_BARO_SELECT_HPA": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Fly By Wire.A320.EFIS.A32NX_BARO_SELECT_INHG": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Fly By Wire.A320.EFIS.Input.A32NX_BARO_SELECT_TOG": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Fly By Wire.A320.EFIS.Input.XMLVAR_Baro1_Mode_QNH": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A320.EFIS.Input.XMLVAR_Baro1_Mode_STD": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A320.EFIS.A32NX_BARO_MODE_TOG3": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) ++ 3 % (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_LS": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_MFD_NAV_MODE_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_VOR": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_NAV_MODE_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_NAV": {
		"method": "calcCode",
		"code": "2 (>L:A320_Neo_MFD_NAV_MODE_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_ARC": {
		"method": "calcCode",
		"code": "3 (>L:A320_Neo_MFD_NAV_MODE_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A320_Neo_MFD_NAV_MODE_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_DEC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE_1) 0 > if{ (L:A320_Neo_MFD_NAV_MODE_1) 1 - (>L:A320_Neo_MFD_NAV_MODE_1) }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_1_INC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE_1) 4 < if{ (L:A320_Neo_MFD_NAV_MODE_1) 1 + (>L:A320_Neo_MFD_NAV_MODE_1) }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_10": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_20": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_40": {
		"method": "calcCode",
		"code": "2 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_80": {
		"method": "calcCode",
		"code": "3 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_160": {
		"method": "calcCode",
		"code": "4 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_320": {
		"method": "calcCode",
		"code": "5 (>L:A320_Neo_MFD_Range_1)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_DEC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range_1) 0 > if{ (L:A320_Neo_MFD_Range_1) 1 - (>L:A320_Neo_MFD_Range_1) }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_1_INC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range_1) 5 < if{ (L:A320_Neo_MFD_Range_1) 1 + (>L:A320_Neo_MFD_Range_1) }"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L1_State_Off": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L1_State_ADF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L1_State_VOR": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L2_State_Off": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L2_State_ADF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_L2_State_VOR": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_1_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_1_ACTIVE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_2_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_2_ACTIVE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOTHRUST_STATUS)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_STATUS)"
	},
	"Fly By Wire.A320.Autopilot.Input. A32NX_FCU_AP_1_PUSH": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_AP_1_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.Autopilot 2 Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_AP_2_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.(L:XMLVAR_Autopilot_1_Status)": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_1_Status)"
	},
	"Fly By Wire.A320.Autopilot.(L:XMLVAR_Autopilot_2_Status)": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_2_Status)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_AP_MANAGED_SPEED_IN_MACH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_LOC_MODE)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_LOC_MODE)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320NX_LOC": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_LOC_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD) } els{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) 1 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD) }"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_APPR_MODE)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_APPR_MODE)"
	},
	"Fly By Wire.A320.Autopilot.A320NX_APPR": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_APPR_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) (>K:AP_LOC_HOLD_ON) (>K:AP_LOC_HOLD_OFF) } els{ 1 (>L:A32NX_AUTOPILOT_APPR_MODE) 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_APR_HOLD_ON) }"
	},
	"Fly By Wire.A320.Autopilot.A320NX_METRIC_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_METRIC_ALT_TOGGLE, bool) ! (>L:A32NX_METRIC_ALT_TOGGLE)"
	},
	"Fly By Wire.A320.Autopilot.XMLVAR_Autopilot_Altitude_Increment_100Feet": {
		"method": "calcCode",
		"code": "100 (>L:XMLVAR_Autopilot_Altitude_Increment)"
	},
	"Fly By Wire.A320.Autopilot.XMLVAR_Autopilot_Altitude_Increment_1000Feet": {
		"method": "calcCode",
		"code": "1000 (>L:XMLVAR_Autopilot_Altitude_Increment)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_CDU_MODE_MANAGED_SPEED": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_MODE_MANAGED_SPEED)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_MODE_MANAGED_SPEED": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_MODE_MANAGED_SPEED)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_CDU_MODE_SELECTED_SPEED": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_MODE_SELECTED_SPEED)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_EXPEDITE_MODE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EXPEDITE_MODE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_HEADING_SELECTED)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_HEADING_SELECTED)"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT HEADING SLOT INDEX, Number)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING SLOT INDEX, Number)"
	},
	"Fly By Wire.A320.Autopilot.Input.HDG Push Pull Toggle": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_HDG_PUSH) } els{ (>K:A32NX.FCU_HDG_PULL) }"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT MACH HOLD VAR, Number) 100 * near": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MACH HOLD VAR, Number) 100 * near"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT AIRSPEED HOLD VAR, knot)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR, knot)"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT SPEED SLOT INDEX, Number)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT SPEED SLOT INDEX, Number)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_SPEED_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ 1 (>K:AP_MACH_VAR_INC) } els{ 1 (>K:AP_SPD_VAR_INC) } (>H:A320_Neo_CDU_AP_INC_SPEED)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_SPEED_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ 1 (>K:AP_MACH_VAR_DEC) } els{ 1 (>K:AP_SPD_VAR_DEC) } (>H:A320_Neo_CDU_AP_DEC_SPEED)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_SPEED_PULL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_SPEED_PULL)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320_Neo_FCU_SPEED_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_SPEED_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320_Neo_FCU_SPEED_PUSH_PULL_TOG": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT SPEED SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_SPD_PUSH) } els{ (>K:A32NX.FCU_SPD_PULL) }"
	},
	"Fly By Wire.A320.Autopilot.Output.A32NX_AUTOPILOT_VS_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_VS_SELECTED)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_AUTOPILOT_FPA_SELECTED) 10 * near": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_FPA_SELECTED) 10 * near"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT VS SLOT INDEX. Number)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VS SLOT INDEX. Number)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_VS_INC": {
		"method": "calcCode",
		"code": " (L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_AP_INC_FPA) } els{ 3 (>K:AP_VS_VAR_INC)  (>H:A320_Neo_FCU_VS_INC) }"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_VS_DEC": {
		"method": "calcCode",
		"code": " (L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_AP_DEC_FPA) } els{ 3 (>K:AP_VS_VAR_DEC) (>H:A320_Neo_FCU_VS_DEC) }"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_VS_PULL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_VS_PULL)\n(>H:A320_Neo_CDU_VS)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_VS_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_VS_PUSH)\n(>H:A320_Neo_CDU_VS)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320_Neo_FCU_VS_PUSH_PULL_TOG": {
		"method": "calcCode",
		"code": "(L:MF_VS_TOG,Bool) if{ (>H:A320_Neo_FCU_VS_ZERO) } els{ (>H:A320_Neo_FCU_VS_HOLD) } (L:MF_VS_TOG,Bool) ! (>L:MF_VS_TOG,Bool)"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT ALTITUDE LOCK VAR:3, Feet)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:3, Feet)"
	},
	"Fly By Wire.A320.Autopilot.(A:AUTOPILOT ALTITUDE SLOT INDEX, Number)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE SLOT INDEX, Number)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_ALT_PULL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_ALT_PULL)\n(>H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320_Neo_FCU_ALT_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_ALT_PUSH)\n(>H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320_Neo_FCU_ALT_PUSH_PULL_TOG": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE SLOT INDEX, Number) 1 == if{ \n   (>H:A320_Neo_FCU_ALT_PUSH) (>H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE) } \n   els{ (>H:A320_Neo_FCU_ALT_PULL) (>H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE) }"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_INC": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_DEC": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_INC100": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_DEC100": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 - 100 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 100 % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_INC1000": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A32NX_FCU_ALT_DEC1000": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 - 1000 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 1000 % + 1000 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)"
	},
	"Fly By Wire.A320.Autopilot.A320_Neo_FCU_SPEED_TOGGLE_SPEED_MACH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_SPEED_TOGGLE_SPEED_MACH)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_CSTR_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_CSTR_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_WPT_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_WPT_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.Output.(L:BTN_VORD_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_VORD_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_NDB_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_NDB_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_ARPT_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_ARPT_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(L:BTN_LS_2_FILTER_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:BTN_LS_2_FILTER_ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE)": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE)"
	},
	"Fly By Wire.A320.EFIS.(L:XMLVAR_Baro2_Mode)": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_Mode)"
	},
	"Fly By Wire.A320.EFIS.Input.XMLVAR_Baro2_Mode_QNH": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro2_Mode)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_LS": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_MFD_NAV_MODE_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_VOR": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_NAV_MODE_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_NAV": {
		"method": "calcCode",
		"code": "2 (>L:A320_Neo_MFD_NAV_MODE_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_ARC": {
		"method": "calcCode",
		"code": "3 (>L:A320_Neo_MFD_NAV_MODE_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A320_Neo_MFD_NAV_MODE_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_DEC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE_2) 0 > if{ 1 if{ (L:A320_Neo_MFD_NAV_MODE_2) 1 - (>L:A320_Neo_MFD_NAV_MODE_2) } }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_NAV_MODE_2_INC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE_2) 4 < if{ 1 if{ (L:A320_Neo_MFD_NAV_MODE_2) 1 + (>L:A320_Neo_MFD_NAV_MODE_2) } }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_10": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_20": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_40": {
		"method": "calcCode",
		"code": "2 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_80": {
		"method": "calcCode",
		"code": "3 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_160": {
		"method": "calcCode",
		"code": "4 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_320": {
		"method": "calcCode",
		"code": "5 (>L:A320_Neo_MFD_Range_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_DEC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range_2) 0 > if{ 1 if{ (L:A320_Neo_MFD_Range_2) 1 - (>L:A320_Neo_MFD_Range_2) } }"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_Range_2_INC": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range_2) 5 < if{ 1 if{ (L:A320_Neo_MFD_Range_2) 1 + (>L:A320_Neo_MFD_Range_2) } }"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R1_State_Off": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R1_State_ADF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R1_State_VOR": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R2_State_Off": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R2_State_ADF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)"
	},
	"Fly By Wire.A320.EFIS.XMLVAR_NAV_AID_SWITCH_R2_State_VOR": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)"
	},
	"Fly By Wire.A320.EFIS.Input.A32NX EFIS R PFD LS BUTTON PUSH": {
		"method": "calcCode",
		"code": "1 (>H:A320_Neo_PFD_BTN_LS_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_CSTR_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_CSTR_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_WPT_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_WPT_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_VORD_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_VORD_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_NDB_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_NDB_2)"
	},
	"Fly By Wire.A320.EFIS.A320_Neo_MFD_BTN_ARPT_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_ARPT_2)"
	},
	"Fly By Wire.A320.Avionics.PUSH_AUTOPILOT_CHRONO_L": {
		"method": "calcCode",
		"code": "(L:PUSH_AUTOPILOT_CHRONO_L) ! (>L:PUSH_AUTOPILOT_CHRONO_L)"
	},
	"Fly By Wire.A320.Warning System.A320_Neo_MFD_BTN_TERRONND_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_TERRONND_1)"
	},
	"Fly By Wire.A320.Gear.Autobrake_Level": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE, number)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_FPLN": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_FPLN)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_RAD": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_RAD)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_FUEL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_FUEL)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_SEC": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_SEC)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_ATC": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_ATC)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_MENU": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_MENU)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_AIRPORT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_AIRPORT)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_UP": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_UP)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_DOWN": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_DOWN)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_PREVPAGE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_PREVPAGE)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_NEXTPAGE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_NEXTPAGE)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_A": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_A)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_B": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_B)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_C": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_C)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_D": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_D)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_E": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_E)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_F": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_F)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_G": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_G)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_H": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_H)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_I": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_I)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_J": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_J)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_K": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_K)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_L": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_L)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_M": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_M)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_N": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_N)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_O": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_O)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_P": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_P)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_Q": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_Q)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_R": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_R)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_S": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_S)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_T": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_T)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_U": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_U)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_V": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_V)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_W": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_W)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_X": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_X)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_Y": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_Y)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_Z": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_Z)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_7": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_7)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_8": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_8)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_9": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_9)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_0": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_0)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_DOT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_DOT)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_PLUSMINUS)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_SP": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_SP)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_DIV": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_DIV)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_OVFY": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_OVFY)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_1_BTN_CLR_Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_CLR)\n(E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime)\n1 (>L:A32NX_MCDU_CLR_Pressed)\n(>H:A320_Neo_CDU_1_BTN_CLR)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_DIR": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_DIR)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_PROG": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_PROG)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_PERF": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_PERF)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_INIT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_INIT)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_DATA": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_DATA)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_FPLN": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_FPLN)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_RAD": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_RAD)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_FUEL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_FUEL)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_SEC": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_SEC)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_ATC": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_ATC)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_MENU": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_MENU)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_AIRPORT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_AIRPORT)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_UP": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_UP)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_DOWN": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_DOWN)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_PREVPAGE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_PREVPAGE)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_NEXTPAGE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_NEXTPAGE)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_A": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_A)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_B": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_B)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_C": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_C)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_D": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_D)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_E": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_E)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_F": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_F)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_G": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_G)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_H": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_H)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_I": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_I)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_J": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_J)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_K": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_K)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_L": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_L)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_M": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_M)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_N": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_N)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_O": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_O)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_P": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_P)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_Q": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_Q)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_R": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_R)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_S": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_S)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_T": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_T)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_U": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_U)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_V": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_V)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_W": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_W)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_X": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_X)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_Y": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_Y)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_Z": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_Z)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_7": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_7)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_8": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_8)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_9": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_9)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_0": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_0)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_DOT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_DOT)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_PLUSMINUS)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_SP": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_SP)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_DIV": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_DIV)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_2_BTN_OVFY": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_2_BTN_OVFY)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_2_BTN_CLR_Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_CLR)\n(E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime)\n1 (>L:A32NX_MCDU_CLR_Pressed)\n(>H:A320_Neo_CDU_2_BTN_CLR)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_ENG": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_ENG)"
	},
	"Fly By Wire.A320.ECAM.Input.A32NX EICAS 2 ECAM CHANGE PAGE BLEED": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_BLEED)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_PRESS": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_PRESS)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_ELEC": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_ELEC)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_FUEL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_FUEL)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_APU": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_APU)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_COND": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_COND)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_DOOR": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_DOOR)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_WHEEL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_WHEEL)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_FTCL": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_FTCL)"
	},
	"Fly By Wire.A320.ECAM.A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_STS": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_EICAS_2_ECAM_CHANGE_PAGE_STS)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_RCL_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_RCL)"
	},
	"Fly By Wire.A320.ECAM.A32NX_ECAM_ALL_Push_IsDown_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ECAM_ALL_Push_IsDown)"
	},
	"Fly By Wire.A320.ECAM.A32NX_ECAM_ALL_Push_IsDown_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ECAM_ALL_Push_IsDown)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_TOCONFIG_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_TOCONFIG_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_CLR_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_CLR_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_1)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_2)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_3)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_4)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_5)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_6)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_7": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_7)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_8": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_8)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_9": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_9)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_ATC_BTN_0": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_0)"
	},
	"Fly By Wire.A320.Navigation.Input.A320_Neo_ATC_BTN_CLR": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_CLR)"
	},
	"Fly By Wire.A320.Navigation.Input.A320_Neo_ATC_BTN_IDENT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_ATC_BTN_IDENT)"
	},
	"Fly By Wire.A320.Radio.(A:COM ACTIVE FREQUENCY:1, KHz) near": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQUENCY:1, KHz) near"
	},
	"Fly By Wire.A320.Radio.(A:COM STANDBY FREQUENCY:1, KHz) near": {
		"method": "calcCode",
		"code": "(A:COM STANDBY FREQUENCY:1, KHz) near"
	},
	"Fly By Wire.A320.Radio.Input.A32NX RMP L TOGGLE ON": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) ! if{  \n   0 (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool) \n   (>H:A32NX_RMP_L_TOGGLE_SWITCH) }"
	},
	"Fly By Wire.A320.Radio.Input.A32NX RMP L TOGGLE OFF": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) if{ \n   0 (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool)\n   (>H:A32NX_RMP_L_TOGGLE_SWITCH) }"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_R_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_R_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320.Radio.Input.A32NX RMP L TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) ! (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_L_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_R_TOG": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_R_TOGGLE_SWITCH, bool) ! (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_VHF1": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF1) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_VHF2": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF2) 2 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_VHF3": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF3) 3 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_HF1": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_HF1) 4 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_HF2": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_HF2) 5 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_AM": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! and if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 4 == (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 5 == or } and if{ (>H:A320_Neo_FDW_BTN_L_AM) (L:XMLVAR_RMP_L_AM_Active) ! (>L:XMLVAR_RMP_L_AM_Active) }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_NAV": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) 1 and if{ (>H:A320_Neo_FDW_BTN_L_NAV) (L:XMLVAR_RMP_L_NAV_Active) ! (>L:XMLVAR_RMP_L_NAV_Active) 0 (L:XMLVAR_RMP_L_NAV_Active) == if{ 1 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) 0 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } els{ 0 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_VOR": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_VOR) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_ILS": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_ILS) 2 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_MLS": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 0 if{ (>H:A320_Neo_FDW_BTN_L_MLS) 3 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_ADF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_ADF) 4 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_BTN_L_BFO": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 4 == } and if{ (>H:A320_Neo_FDW_BTN_L_BFO) (L:XMLVAR_RMP_L_BFO_Active) ! (>L:XMLVAR_RMP_L_BFO_Active) }"
	},
	"Fly By Wire.A320.Radio.Input.A32NX RMP L TRANSFER BUTTON PRESSED": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_TRANSFER_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_L_OUTER_KNOB_TURNED_CLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_L_OUTER_KNOB_TURNED_ANTICLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_L_INNER_KNOB_TURNED_CLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"Fly By Wire.A320.Radio.A32NX_RMP_L_INNER_KNOB_TURNED_ANTICLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"Fly By Wire.A320.Radio.A320_Neo_FBW_SWITCH_L_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_RMP_L_On) ! (>L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_On) if{ 0 (>L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) 1 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 0 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 (>L:XMLVAR_RMP_L_AM_Active) 0 (>L:XMLVAR_RMP_L_NAV_Active) 0 (>L:XMLVAR_RMP_L_BFO_Active) } (>H:A320_Neo_FDW_SWITCH_L_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_AIRCOND_LVL_1)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_1_25": {
		"method": "calcCode",
		"code": "25 (>L:A320_Neo_AIRCOND_LVL_1)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_1_50": {
		"method": "calcCode",
		"code": "50 (>L:A320_Neo_AIRCOND_LVL_1)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_1_75": {
		"method": "calcCode",
		"code": "75 (>L:A320_Neo_AIRCOND_LVL_1)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_1_100": {
		"method": "calcCode",
		"code": "100 (>L:A320_Neo_AIRCOND_LVL_1)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_AIRCOND_LVL_2)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_2_25": {
		"method": "calcCode",
		"code": "25 (>L:A320_Neo_AIRCOND_LVL_2)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_2_50": {
		"method": "calcCode",
		"code": "50 (>L:A320_Neo_AIRCOND_LVL_2)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_2_75": {
		"method": "calcCode",
		"code": "75 (>L:A320_Neo_AIRCOND_LVL_2)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_2_100": {
		"method": "calcCode",
		"code": "100 (>L:A320_Neo_AIRCOND_LVL_2)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_3_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A320_Neo_AIRCOND_LVL_3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_3_25": {
		"method": "calcCode",
		"code": "25 (>L:A320_Neo_AIRCOND_LVL_3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_3_50": {
		"method": "calcCode",
		"code": "50 (>L:A320_Neo_AIRCOND_LVL_3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_3_75": {
		"method": "calcCode",
		"code": "75 (>L:A320_Neo_AIRCOND_LVL_3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A320_Neo_AIRCOND_LVL_3_100": {
		"method": "calcCode",
		"code": "100 (>L:A320_Neo_AIRCOND_LVL_3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_PACK1_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_AIRCOND_PACK1_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_PACK1_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_AIRCOND_PACK1_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_PACK2_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_AIRCOND_PACK2_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_PACK2_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_AIRCOND_PACK2_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND HOT AIR TOGGLE OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND HOT AIR TOGGLE ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_LOW": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_MED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_HIGH": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND XBLEED KNOB Position SHUT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND XBLEED KNOB Position AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND XBLEED KNOB Position OPEN": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_RAMAIR_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_AIRCOND_RAMAIR_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.A32NX_AIRCOND_RAMAIR_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_AIRCOND_RAMAIR_TOGGLE)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Input.A32NX OH AIRCOND ENG1 BLEED TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) "
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND APU BLEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Output.A32NX OVHD AIRCOND APU BLEED IS ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 ==  (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_COMMERCIAL_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ELEC_COMMERCIAL_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_COMMERCIAL_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ELEC_COMMERCIAL_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_GALYCAB_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ELEC_GALYCAB_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_GALYCAB_TOGGLE_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ELEC_GALYCAB_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_IDG1_FAULT_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ELEC_IDG1_FAULT)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_IDG1_FAULT_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ELEC_IDG1_FAULT)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_IDG2_FAULT_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ELEC_IDG2_FAULT)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_IDG2_FAULT_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ELEC_IDG2_FAULT)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX_OVHD_ELEC_BUSTIE_BUTTON_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX_OVHD_ELEC_BUSTIE_BUTTON_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)"
	},
	"Fly By Wire.A320.Electrical.ACPowerAvailable_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:ACPowerAvailable)"
	},
	"Fly By Wire.A320.Electrical.ACPowerAvailable_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:ACPowerAvailable)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_ACESSFEED_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ELEC_ACESSFEED_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_ELEC_ACESSFEED_TOGGLE_ALTN": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ELEC_ACESSFEED_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX OVHD ELEC GEN1 TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR1) "
	},
	"Fly By Wire.A320.Electrical.Input.A32NX OVHD ELEC GEN2 TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR2) "
	},
	"Fly By Wire.A320.Electrical.Input.A32NX_OH_ELEC_BAT1_TOG": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX_OH_ELEC_BAT2_TOG": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX_OH_ELEC_APUGEN_TOG": {
		"method": "calcCode",
		"code": "1 (>K:APU_GENERATOR_SWITCH_TOGGLE) "
	},
	"Fly By Wire.A320.Electrical.A32NX_OH_ELEC_EXTPWR_TOG": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"Fly By Wire.A320.Fuel.Input.A32NX OVHD FUEL CTK L XFR Toggle": {
		"method": "calcCode",
		"code": "9 (>K:FUELSYSTEM_VALVE_TOGGLE) "
	},
	"Fly By Wire.A320.Fuel.Input.A32NX_OVHD_FUELSYSTEM_LTKPUMP1_TOGGLE": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_PUMP_TOGGLE) "
	},
	"Fly By Wire.A320.Fuel.Input.A32NX_OVHD_FUELSYSTEM_RTKPUMP1_TOGGLE": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_PUMP_TOGGLE) "
	},
	"Fly By Wire.A320.Fuel.Input.A32NX OVHD FUEL CTK R XFR Button Toggle": {
		"method": "calcCode",
		"code": "10 (>K:FUELSYSTEM_VALVE_TOGGLE) "
	},
	"Fly By Wire.A320.Fuel.Input.A32NX_OVHD_FUELSYSTEM_LTKPUMP2_TOGGLE": {
		"method": "calcCode",
		"code": "5 (>K:FUELSYSTEM_PUMP_TOGGLE) "
	},
	"Fly By Wire.A320.Fuel.Input.A32NX_OVHD_FUELSYSTEM_RTKPUMP2_TOGGLE": {
		"method": "calcCode",
		"code": "6 (>K:FUELSYSTEM_PUMP_TOGGLE) "
	},
	"Fly By Wire.A320.Electrical.(A:EXTERNAL POWER AVAILABLE:1, bool) (A:EXTERNAL POWER ON:1,bool) ! and if{ 1 } els{ 0 }": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1, bool) (A:EXTERNAL POWER ON:1,bool) ! and if{ 1 } els{ 0 }"
	},
	"Fly By Wire.A320.Electrical.(A:EXTERNAL POWER ON:1, Bool)": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER ON:1, Bool)"
	},
	"Fly By Wire.A320.Electrical.(L:A32NX_OVHD_APU_START_PB_IS_ON)": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_ON)"
	},
	"Fly By Wire.A320.Electrical.Output.A32NX OVHD APU START PB IS AVAILABLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_AVAILABLE)"
	},
	"Fly By Wire.A320.Anti-Ice.A32NX_OH_ANTIICE_ENG1_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)"
	},
	"Fly By Wire.A320.Anti-Ice.Input.A32NX_OH_ANTIICE_ENG2_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG2) \n(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)"
	},
	"Fly By Wire.A320.Anti-Ice.Input.A32NX_MAN_PITOT_HEAT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MAN_PITOT_HEAT)"
	},
	"Fly By Wire.A320.Anti-Ice.A32NX_MAN_PITOT_HEAT_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MAN_PITOT_HEAT)"
	},
	"Fly By Wire.A320.Radio.A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE)"
	},
	"Fly By Wire.A320.Radio.A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_1_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_1_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_2_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_2_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_ADIRS_KNOB_2)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_3_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_3_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_KNOB_3_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL SEC 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_1_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL ELAC 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_1_PUSHBUTTON_PRESSED)"
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL ELAC 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_2_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL SEC 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_2_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL SEC 3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_3_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Flight Controls.Input.A32NX OVHD FLTCTL FAC 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_2_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_EVAC_HORN_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_EVAC_HORN)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_EVAC_HORN_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_EVAC_HORN)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_EVAC_CAPT_TOGGLE_CAPT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EVAC_CAPT_TOGGLE)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_EVAC_CAPT_TOGGLE_CAPT_AND_PURS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EVAC_CAPT_TOGGLE)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_EVAC_COMMAND_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EVAC_COMMAND_TOGGLE)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_EVAC_COMMAND_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EVAC_COMMAND_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_GEN1_TOGGLE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EMERELECPWR_GEN1_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_GEN1_TOGGLE_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EMERELECPWR_GEN1_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_MANONLOCK_TOGGLE_AUTO": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EMERELECPWR_MANONLOCK_TOGGLE)"
	},
	"Fly By Wire.A320.Electrical.A32NX_EMERELECPWR_MANONLOCK_TOGGLE_MAN": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EMERELECPWR_MANONLOCK_TOGGLE)"
	},
	"Fly By Wire.A320.Warning System.Input.A32NX_GPWS_TERR_OFF_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_TERR_OFF)"
	},
	"Fly By Wire.A320.Warning System.Input.A32NX_GPWS_TERR_OFF_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_TERR_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_SYS_OFF_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_SYS_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_SYS_OFF_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_SYS_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_GS_OFF_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_GS_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_GS_OFF_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_GS_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_FLAP_OFF_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_FLAP_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_FLAP_OFF_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_FLAP_OFF)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_FLAPS3_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_FLAPS3)"
	},
	"Fly By Wire.A320.Warning System.A32NX_GPWS_FLAPS3_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_FLAPS3)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.PUSH_OVHD_OXYGEN_CREW_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_OXYGEN_CREW)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.PUSH_OVHD_OXYGEN_CREW_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_OXYGEN_CREW)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_MECH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_CALLS_MECH)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_MECH_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_CALLS_MECH)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_ALL_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_CALLS_ALL)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_ALL_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_CALLS_ALL)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_FWD_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_CALLS_FWD)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_FWD_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_CALLS_FWD)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_AFT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_OVHD_CALLS_AFT)"
	},
	"Fly By Wire.A320.Passengers/Crew.PUSH_OVHD_CALLS_AFT_ON": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_OVHD_CALLS_AFT)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_CALLS_EMER_ON_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_CALLS_EMER_ON)"
	},
	"Fly By Wire.A320.Passengers/Crew.A32NX_CALLS_EMER_ON_ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_CALLS_EMER_ON)"
	},
	"Fly By Wire.A320.Electrical.Input.A32NX OVHD APU MASTER SW Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) "
	},
	"Fly By Wire.A320.Electrical.Input.A32NX OVHD APU START Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) if{ 1 (>L:A32NX_OVHD_APU_START_PB_IS_ON) }"
	},
	"Fly By Wire.A320.Passengers/Crew.SEATBELT_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position) ! (>L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position)"
	},
	"Fly By Wire.A320.Passengers/Crew.NO_SMOKING_ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } }"
	},
	"Fly By Wire.A320.Passengers/Crew.NO_SMOKING_AUTO": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } }"
	},
	"Fly By Wire.A320.Passengers/Crew.NO_SMOKING_OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 0 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } }"
	},
	"Fly By Wire.A320.Lights.STBY_COMPASS_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_STBY_COMPASS_LIGHT_TOGGLE) ! (>L:A32NX_STBY_COMPASS_LIGHT_TOGGLE)"
	},
	"Fly By Wire.A320.Lights.STBY_COMPASS_LIGHT_OFF": {
		"method": "calcCode",
		"code": "(>L:A32NX_STBY_COMPASS_LIGHT_TOGGLE)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OH DOME LIGHT BRT": {
		"method": "calcCode",
		"code": "1 (>K:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OH DOME LIGHT TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:7, Percent) 0 == if{ \n  1 (>K:CABIN_LIGHTS_SET) 20 (>K:LIGHT_POTENTIOMETER_7_SET) } \n  els{ (A:LIGHT POTENTIOMETER:7, Percent) 100 == if{ \n	0 (>K:CABIN_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_7_SET) } \n	  els{ 1 (>K:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET) } }"
	},
	"Fly By Wire.A320.Lights.Input.EMER_EXIT_ON": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320.Lights.Input.EMER_EXIT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320.Lights.Input.EMER_EXIT_ARM": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_LANDING_LIGHTS_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING, Bool) ! if{ (>K:LANDING_LIGHTS_TOGGLE) }"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_LANDING_LIGHTS_TOG": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_TOGGLE)"
	},
	"Fly By Wire.A320.Lights.RIGHT_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": " if{1 (>L:LANDING_1_Retracted)"
	},
	"Fly By Wire.A320.Lights.Input.RIGHT_LANDING_LIGHTS_RETRACTED": {
		"method": "calcCode",
		"code": "2 (>LIGHTING_LANDING_3)\n1 (>L:LANDING_3_Retracted)\n0 3 r (>K:2:LANDING_LIGHTS_SET) "
	},
	"Fly By Wire.A320.Lights.LEFT_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": " if{1 (>L:LANDING_2_Retracted)"
	},
	"Fly By Wire.A320.Lights.Input.LEFT_LANDING_LIGHTS_RETRACTED": {
		"method": "calcCode",
		"code": "2 (>LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted)\n0 2 r (>K:2:LANDING_LIGHTS_SET) "
	},
	"Fly By Wire.A320.Lights.A32NX_OH_EXTLT_RWY_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI:2, Bool) ! if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_EXTLT_RWY_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI:2, Bool) if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_EXTLT_RWY_TOG": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS)"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_STROBES_TOG_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_STROBES_TOG_AUTO": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 1 (>L:STROBE_1_Auto)"
	},
	"Fly By Wire.A320.Lights.A32NX_OH_STROBES_TOG_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)"
	},
	"Fly By Wire.A320.Engines.Input.A32NX PED ENG 1 START LEVER TOG": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:1, Bool) if{ \n   1 (>K:FUELSYSTEM_VALVE_CLOSE) \n   (A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) } } \nels{ 1 (>K:FUELSYSTEM_VALVE_OPEN) \n   (A:GENERAL ENG STARTER:1, Bool) ! if{ (>K:TOGGLE_STARTER1) } }"
	},
	"Fly By Wire.A320.Engines.Input.A32NX PED ENG 2 START LEVER TOG": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:2, Bool) if{ 2 (>K:FUELSYSTEM_VALVE_CLOSE) \n   (A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) } } \nels{ 2 (>K:FUELSYSTEM_VALVE_OPEN) \n   (A:GENERAL ENG STARTER:2, Bool) ! if{ (>K:TOGGLE_STARTER2) } }"
	},
	"Fly By Wire.A320.Engines.A32NX_ENG_MODE_CRANK": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET)"
	},
	"Fly By Wire.A320.Engines.A32NX_ENG_MODE_NORMAL": {
		"method": "calcCode",
		"code": "1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:TURBINE_IGNITION_SWITCH_SET2)"
	},
	"Fly By Wire.A320.Engines.Input.A32NX PED ENG MODE KNOB IGNSTART": {
		"method": "calcCode",
		"code": "2 (>K:TURBINE_IGNITION_SWITCH_SET1) \n2 (>K:TURBINE_IGNITION_SWITCH_SET2) \n(>H:A320_Neo_EICAS_2_Ignition_Start)"
	},
	"Asobo.A320.Lights.ASOA320_OH_STROBES_TOG_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)"
	},
	"Asobo.A320.Lights.ASOA320_OH_STROBES_TOG_AUTO": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 1 (>L:STROBE_1_Auto)"
	},
	"Asobo.A320.Lights.ASOA320_OH_STROBES_TOG_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)"
	},
	"Asobo.A320.Lights.ASOA320_OH_EXTLT_RWY_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI:2, Bool) ! if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }"
	},
	"Asobo.A320.Lights.ASOA320_OH_EXTLT_RWY_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI:2, Bool) if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }"
	},
	"Asobo.A320.Lights.ASOA320_OH_EXTLT_RWY_TOG": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS)"
	},
	"PMDG.DC-6.Gear.PMDGDC6_GUST_LOCK_OFF": {
		"method": "calcCode",
		"code": "0 (>L:dc6_398_obj, bool)"
	},
	"PMDG.DC-6.Gear.PMDGDC6_GUST_LOCK_ON": {
		"method": "calcCode",
		"code": "1 (>L:dc6_398_obj, bool)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AUTOPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "43401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AUTOPILOT_LEVER_TOGGLE": {
		"method": "calcCode",
		"code": "40401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_PITCH_UP": {
		"method": "calcCode",
		"code": "44008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_HDG_UP": {
		"method": "calcCode",
		"code": "44207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_HDG_DOWN": {
		"method": "calcCode",
		"code": "44208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_NAV_ON": {
		"method": "calcCode",
		"code": "(L:dc6_445_obj, enum) 0 == if{ 44507 (>K:ROTOR_BRAKE) } els{ (L:dc6_445_obj, enum) 2 == if{ 44508 (>K:ROTOR_BRAKE) } }"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_NAV_OFF": {
		"method": "calcCode",
		"code": "(L:dc6_445_obj, enum) 1 == if{ 44508 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.DC-6.Gear.Input.PMDGDC6_GEAR_UP": {
		"method": "calcCode",
		"code": "40508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Gear.Input.PMDGDC6_GEAR_DOWN": {
		"method": "calcCode",
		"code": "40507 (>K:ROTOR_BRAKE)"
	},
	"Asobo.Longitude.Electrical.Input.LONGITUDE TOGGLE MASTER BATTERY SWITCH 1": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Asobo.Longitude.Electrical.Input.LONGITUDE TOGGLE MASTER BATTERY SWITCH 2": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Asobo.Longitude.Electrical.LONGITUDE_TOGGLE_ALTERNATOR_1_SWITCH_1": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_ALTERNATOR1)"
	},
	"Asobo.Longitude.Electrical.LONGITUDE_TOGGLE_ALTERNATOR_2_SWITCH_2": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_ALTERNATOR2)"
	},
	"Asobo.Longitude.Electrical.LONGITUDE_TOGGLE_EXTERNAL_POWER_SWITCH": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_EXTERNAL_POWER)"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_LANDING_LIGHTS_L_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_1) ! s0 (>L:LIGHTING_LANDING_1)\n1 l0 (>K:2:LANDING_LIGHTS_SET)"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_LANDING_LIGHTS_R_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_2) ! s0 (>L:LIGHTING_LANDING_2)\n2 l0 (>K:2:LANDING_LIGHTS_SET) "
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_TAXI_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_TAXI_1) ! s0 (>L:LIGHTING_TAXI_1) \n1 l0 (>K:2:TAXI_LIGHTS_SET) \n(A:GEAR CENTER POSITION, Percent) 95 > (A:GEAR HANDLE POSITION, Bool) 0 != and \n100 * 6 (>K:2:LIGHT_POTENTIOMETER_SET)\n"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_RECOG_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_RECOGNITION_LIGHTS) (A:LIGHT TAXI, Bool) if{ (>K:TOGGLE_TAXI_LIGHTS) } (A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_PULSE_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_3) ! s0 (>L:LIGHTING_LANDING_3) \n3 l0 (>K:2:LANDING_LIGHTS_SET) "
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_WING_INSP_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_WING_1) ! s0 (>L:LIGHTING_WING_1)\n 1 l0 (>K:2:WING_LIGHTS_SET)"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_TAIL_FLOOD_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LOGO_1) ! s0 (>L:LIGHTING_LOGO_1) \n1 l0 (>K:2:LOGO_LIGHTS_SET)"
	},
	"Asobo.Longitude.Lights.(A:LIGHT LANDING ON, Number)": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON, Number)"
	},
	"Asobo.Longitude.Lights.Output.(A:LIGHT TAXI ON, Number)": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI ON, Bool)"
	},
	"Asobo.Longitude.Lights.(A:LIGHT NAV ON, Number)": {
		"method": "calcCode",
		"code": "(A:LIGHT NAV ON, Number)"
	},
	"Asobo.Longitude.Lights.Output.(A:LIGHT WING ON, Number)": {
		"method": "calcCode",
		"code": "(A:LIGHT WING ON:1, Number)"
	},
	"Asobo.Longitude.Anti-Ice.Output.(A:WING DEICE ON, Number)": {
		"method": "calcCode",
		"code": " (L:WT_LNG_WING_AI_MODE)"
	},
	"Asobo.Longitude.Lights.(A:PITOT DEICE ON, Number)": {
		"method": "calcCode",
		"code": "(A:PITOT DEICE ON, Number)"
	},
	"Asobo.Longitude.Anti-Ice.Output.Left Engine De-Ice ON": {
		"method": "calcCode",
		"code": " (A:ENG ANTI ICE:1,Bool)"
	},
	"Asobo.Longitude.Anti-Ice.Output.Right Engine De-Ice ON": {
		"method": "calcCode",
		"code": " (A:ENG ANTI ICE:2,Bool)\n"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_SOFTKEYS_1)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_SOFTKEYS_2)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_SOFTKEYS_3)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_SOFTKEYS_4)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_SOFTKEYS_5)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_ENT_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_FPL_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_CLR_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_CLR_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_MENU_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_DIRECTTO": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_DIRECTTO)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_NRST_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_NRST_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_RNG_Dezoom": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_RNG_Dezoom)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_RNG_Zoom": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_RNG_Zoom)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_JOYSTICK_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_JOYSTICK_PUSH)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_TURN_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_TURN_DEC)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_TURN_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_TURN_INC)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Mins_Selector_Baro_RADIO": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Mins_Selector_Baro_BARO": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_PFD_Mins_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_PFD_Mins_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_INC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_PFD_Mins_Press": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_Press)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Baro_Selector_HPA_1_IN": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Baro_Selector_HPA_1_HPA": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Bredok3d.737-MAX.EFIS.Input.KNOB_Baro_1_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_DEC) }"
	},
	"Bredok3d.737-MAX.EFIS.Input.KNOB_Baro_1_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_INC) }"
	},
	"Bredok3d.737-MAX.EFIS.KNOB_Baro_1_Press": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD) (L:XMLVAR_Baro1_ForcedToSTD) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure) (>K:2:KOHLSMAN_SET) }"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_Cursor_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Cursor_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_Cursor_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Cursor_INC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_Cursor_Press": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Cursor_Press)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_Range_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Range_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_Range_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Range_INC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_AUTOPILOT_CTR": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_AUTOPILOT_CTR)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_WXR": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_WXR)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_TFC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_TFC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_TERR": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_TERR)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_SYS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_SYS)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_INFO": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_INFO)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_CHKL": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_CHKL)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_COMM": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_COMM)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_ND": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_ND)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_ENG": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_ENG)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_1_EICAS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_EICAS)"
	},
	"Bredok3d.737-MAX.EFIS.737_XMLVAR_Mins_Selector_Baro_RADIO": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Bredok3d.737-MAX.EFIS.737_XMLVAR_Mins_Selector_Baro_BARO": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Bredok3d.737-MAX.EFIS.737_AS01B_PFD_Mins_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.737_AS01B_PFD_Mins_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_INC)"
	},
	"Bredok3d.737-MAX.EFIS.737_AS01B_PFD_Mins_Press": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_Press)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Baro_Selector_HPA_2_IN": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Baro_Selector_HPA_2)"
	},
	"Bredok3d.737-MAX.EFIS.XMLVAR_Baro_Selector_HPA_2_HPA": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro_Selector_HPA_2)"
	},
	"Bredok3d.737-MAX.EFIS.Input.KNOB_Baro_2_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_DEC) }"
	},
	"Bredok3d.737-MAX.EFIS.Input.KNOB_Baro_2_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_INC) }"
	},
	"Bredok3d.737-MAX.EFIS.KNOB_Baro_2_Press": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD) (L:XMLVAR_Baro1_ForcedToSTD) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure) (>K:2:KOHLSMAN_SET) }"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_Cursor_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_Cursor_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_Cursor_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_Cursor_INC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_Cursor_Press": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_Cursor_Press)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_Range_DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_Range_DEC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_Range_INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_Range_INC)"
	},
	"Bredok3d.737-MAX.EFIS.AS01B_MFD_2_AUTOPILOT_CTR": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_AUTOPILOT_CTR)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_ALT_VAR_INC": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_INC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_APPR_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_APPR_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_BC_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_BC_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_CRS1_DEC": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_LNAV_MODE, Number) 2 == if{ \n(A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) } \n   els{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) }"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_CRS1_INC": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_LNAV_MODE, Number) 2 == if{ \n(A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) } \n   els{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) }"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_CRS1_PRESSED": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) sp0 \n(L:WT_CJ4_LNAV_MODE, Number) 2 == if{ l0 (>K:VOR2_SET) } \n   els{ l0 (>K:VOR1_SET) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_FD_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_FD_TOGGLE)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_FLC_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_FLC_PRESSED) \n(A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HALFBANK_PRESSED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK, degrees) 16 < if{ (>K:AP_MAX_BANK_INC) } els{ (>K:AP_MAX_BANK_DEC) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_DEC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_FAST_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_INC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_HDG_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_SYNC": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_DISENGAGE_BAR_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) if{ 0 } els{ 1 } (>K:AUTOPILOT_DISENGAGE_SET) "
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_BUTTON_PRESSED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) \n(A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) \n(A:AUTOPILOT YAW DAMPER, bool) \nif{ (>K:YAW_DAMPER_TOGGLE) } }\nels{ (A:AUTOPILOT YAW DAMPER, bool) ! if{ (>K:YAW_DAMPER_TOGGLE) } } }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_NAV_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_NAV_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_SPEED_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVar_AirspeedIsInMach, Bool) if{ (>K:AP_MACH_VAR_DEC) }\n	els{ (>K:AP_SPD_VAR_DEC) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_SPEED_FAST_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_DEC) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 10 - 10 / near 10 * 0 max (>K:AP_SPD_VAR_SET) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_SPEED_FAST_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_INC) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 10 + 10 / ceil 10 * 0 max (>K:AP_SPD_VAR_SET) }"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_SPEED_INC": {
		"method": "calcCode",
		"code": "(L:XMLVar_AirspeedIsInMach, Bool) if{ (>K:AP_MACH_VAR_INC) } \n   els{ (>K:AP_SPD_VAR_INC) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_SPEED_PRESSED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool) ! (>L:XMLVAR_AirSpeedIsInMach, Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_VNAV_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_VNAV_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_VS_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) }\n	els{ (>K:AP_PITCH_REF_INC_DN) }"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_VS_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } \n   els{ (>K:AP_PITCH_REF_INC_UP) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_VS_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_VS_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_XFR_PRESSED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_YD_PRESSED": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_DATA_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_DATA_INC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_DATA_PUSH)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_PUSH_LONG": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_DATA_PUSH_LONG)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_JOYSTICK_DOWN": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_JOYSTICK_DOWN)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_JOYSTICK_LEFT": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_JOYSTICK_LEFT)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_JOYSTICK_RIGHT": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_JOYSTICK_RIGHT)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_JOYSTICK_UP": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_JOYSTICK_UP)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_MENU_ADV_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_MENU_ADV_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_MENU_ADV_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_MENU_ADV_INC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_CAS_PAGE": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_CAS_PAGE)"
	},
	"Working Title.CJ4.Avionics.Input.Generic_Lwr_Push_Chart_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_Chart_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_CKLST_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_CKLST_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_ENG": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_ENG)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_ESC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_ESC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_LWR_MENU": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_LWR_MENU)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_MEM1_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_MEM1_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_MEM2_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_MEM2_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_MEM3_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_MEM3_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_NAV_DATA": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_NAV_DATA)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_PASSBRIEF_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_PASSBRIEF_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_SYS": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_SYS)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_TERR_WX": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_TERR_WX)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_TFC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_TFC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_UPR_MENU": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_UPR_MENU)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_ZOOM_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_ZOOM_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Push_ZOOM_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Push_ZOOM_INC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Data_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Data_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Data_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Data_INC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Data_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Data_PUSH)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_MENU_ADV_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_MENU_ADV_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_MENU_ADV_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_MENU_ADV_INC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_ESC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_ESC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_ET": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_ET)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_FRMT": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_FRMT)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_NAV": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_NAV)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_PFD_MENU": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_PFD_MENU)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_REFS_MENU": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_REFS_MENU)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_TERR_WX": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_TERR_WX)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_Push_TFC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_TFC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_RANGE_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_RANGE_DEC)"
	},
	"Working Title.CJ4.Avionics.Generic_Upr_RANGE_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_RANGE_INC)"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO1_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ \n1 (>K:KOHLSMAN_DEC) \n(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } \nels{ (L:XMLVAR_Baro1_SavedPressure, number) 5 - (>L:XMLVAR_Baro1_SavedPressure) }"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO1_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ \n1 (>K:KOHLSMAN_INC) \n(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } \nels{ (L:XMLVAR_Baro1_SavedPressure, Number) 5 + (>L:XMLVAR_Baro1_SavedPressure) } "
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO1_STD_PUSH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! (>L:XMLVAR_Baro1_ForcedToSTD, bool) (L:XMLVAR_Baro1_ForcedToSTD, bool) if{ \n(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure, number) \n1 (>K:BAROMETRIC_STD_PRESSURE) } els{ \n1 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET)\n2 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) }"
	},
	"Working Title.CJ4.Avionics.CJ4_Generic_Upr_TILT_INC": {
		"method": "calcCode",
		"code": "(>H:CJ4_Generic_Upr_TILT_INC)"
	},
	"Working Title.CJ4.Avionics.CJ4_Generic_Upr_TILT_DEC": {
		"method": "calcCode",
		"code": "(>H:CJ4_Generic_Upr_TILT_DEC)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_IDX": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_IDX)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_MSG": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MSG)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_DIR": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DIR)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_TUN": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_TUN)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_FPLN": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_FPLN)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_LEGS": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_LEGS)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_DEPARR": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DEPARR)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_PERF": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PERF)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_DSPL_MENU": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DSPL_MENU)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_MFD_ADV": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MFD_ADV)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_MFD_DATA": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MFD_DATA)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_PREVPAGE": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PREVPAGE)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_NEXTPAGE": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_NEXTPAGE)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_EXEC": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_EXEC)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_CLR": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_CLR)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_CLR_Long": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_CLR_Long)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L1": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L1)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L2": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L2)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L3": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L3)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L4": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L4)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L5": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L5)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L6": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L6)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R1": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R1)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R2": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R2)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R3": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R3)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R4": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R4)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R5": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R5)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R6": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R6)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_A": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_A)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_B": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_B)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_C": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_C)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_D": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_D)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_E": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_E)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_F": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_F)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_G": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_G)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_H": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_H)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_I": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_I)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_J": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_J)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_K": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_K)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_L": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_M": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_M)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_N": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_N)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_O": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_O)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_P": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_P)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_Q": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Q)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_R": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_S": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_S)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_T": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_T)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_U": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_U)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_V": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_V)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_W": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_W)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_X": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_X)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_Y": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Y)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_Z": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Z)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_SP": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_SP)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_0": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_0)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_1": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_1)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_2": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_2)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_3": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_3)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_4": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_4)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_5": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_5)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_6": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_6)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_7": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_7)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_8": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_8)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_9": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_9)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_DOT": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DOT)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PLUSMINUS)"
	},
	"Working Title.CJ4.Navigation.CJ4_FMC_1_BTN_DIV": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DIV)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN1_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_1) 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) (L:LIGHTING_CABIN_1) 0 > != if{ \n1 (L:LIGHTING_CABIN_1) (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN1_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_1) 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) (L:LIGHTING_CABIN_1) 0 > != if{ \n1 (L:LIGHTING_CABIN_1) (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN1_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:1, Bool) ! if{ 1 1 (>K:2:CABIN_LIGHTS_SET) 100 5 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 5 (>K:2:LIGHT_POTENTIOMETER_SET) 1 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN2_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_2) 6 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) \n(L:LIGHTING_CABIN_2) 0 > != if{ \n2 (L:LIGHTING_CABIN_2) (>K:2:CABIN_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN2_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_2) 6 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) \n(L:LIGHTING_CABIN_2) 0 > != if{ \n2 (L:LIGHTING_CABIN_2) (>K:2:CABIN_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_CABIN2_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:2, Bool) ! if{ 2 1 (>K:2:CABIN_LIGHTS_SET) 100 6 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 6 (>K:2:LIGHT_POTENTIOMETER_SET) 2 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_FLOOD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_3) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_3) 4 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:3, Bool) \n(L:LIGHTING_CABIN_3) 0 > != if{ \n3 (L:LIGHTING_CABIN_3) (>K:2:CABIN_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_FLOOD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_3) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_3) 4 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:3, Bool) \n(L:LIGHTING_CABIN_3) 0 > != if{ \n3 (L:LIGHTING_CABIN_3) (>K:2:CABIN_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_FLOOD_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:3, Bool) ! if{ 3 1 (>K:2:CABIN_LIGHTS_SET) 100 4 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 4 (>K:2:LIGHT_POTENTIOMETER_SET) 3 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_MFD1_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_17) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_MFD1_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_17) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_MFD2_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_18) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_MFD2_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_18) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PANEL_LIGHTS_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_Knob_Master, number) 10 - 10 max (>L:LIGHTING_Knob_Master, number) "
	},
	"Working Title.CJ4.Lights.WT_CJ4_PANEL_LIGHTS_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_Knob_Master, number) 10 + 100 min (>L:LIGHTING_Knob_Master, number)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PANEL_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_Knob_Master, number) 90 > if{ 90 (>L:LIGHTING_Knob_Master, number) } els{ 100 (>L:LIGHTING_Knob_Master, number) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PFD1_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_15) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PFD1_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_15) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PFD2_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_16) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_PFD2_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_16) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_SAFETY_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SAFETY_LIGHT_ON) ! (>L:SAFETY_LIGHT_ON)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_SEATBELT_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SEATBELT_LIGHT_ON) ! (>L:SEATBELT_LIGHT_ON)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_TAXI_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI, Bool) if{ (>K:TOGGLE_TAXI_LIGHTS) }"
	},
	"Working Title.CJ4.Radio.WT_CJ4_COM1_VOLUME_DEC": {
		"method": "calcCode",
		"code": " (>K:COM1_VOLUME_DEC)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_COM1_VOLUME_INC": {
		"method": "calcCode",
		"code": " (>K:COM1_VOLUME_INC)"
	},
	"Working Title.CJ4.Radio.Input.WT_CJ4_COM1_VOLUME_ON_TOGGLE": {
		"method": "calcCode",
		"code": "0 100 (A:COM VOLUME:1, Percent) 0 > ? (>K:COM1_VOLUME_SET)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_COM2_VOLUME_DEC": {
		"method": "calcCode",
		"code": " (>K:COM2_VOLUME_DEC)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_COM2_VOLUME_INC": {
		"method": "calcCode",
		"code": " (>K:COM2_VOLUME_INC)"
	},
	"Working Title.CJ4.Radio.Input.WT_CJ4_COM2_VOLUME_ON_TOGGLE": {
		"method": "calcCode",
		"code": "0 100 (A:COM VOLUME:2, Percent) 0 > ? (>K:COM2_VOLUME_SET)"
	},
	"Working Title.CJ4.Radio.Input.WT_CJ4_COM1_ACTIVE_PUSH": {
		"method": "calcCode",
		"code": "(A:PILOT TRANSMITTER TYPE, Enum) 0 == if{ \n   4 (>K:PILOT_TRANSMITTER_SET) \n\t0 (>K:COM_RECEIVE_ALL_SET) }\nels{\n   0 (>K:PILOT_TRANSMITTER_SET) \n   1 (>K:COM1_RECEIVE_SELECT) }"
	},
	"Working Title.CJ4.Radio.Input.WT_CJ4_COM2_ACTIVE_PUSH": {
		"method": "calcCode",
		"code": "(A:PILOT TRANSMITTER TYPE, Enum) 1 == if{\n   4 (>K:PILOT_TRANSMITTER_SET) \n\t0 (>K:COM_RECEIVE_ALL_SET) }\nels{ \n   1 (>K:PILOT_TRANSMITTER_SET) \n   1 (>K:COM2_RECEIVE_SELECT) }"
	},
	"Working Title.CJ4.Radio.WT_CJ4_COM1COM2_ACTIVE_TOG": {
		"method": "calcCode",
		"code": "1 0 (A:COM TRANSMIT:1,bool) ? d (>K:PILOT_TRANSMITTER_SET) (>K:COPILOT_TRANSMITTER_SET)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV1_TOG": {
		"method": "calcCode",
		"code": "0 1 (A:NAV VOLUME:1, Percent) 0 > ? (>K:NAV1_VOLUME_SET)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV2_TOG": {
		"method": "calcCode",
		"code": "0 1 (A:NAV VOLUME:2, Percent) 0 > ? (>K:NAV2_VOLUME_SET)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_DME1_TOG": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_TOGGLE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_DME2_TOG": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME2_IDENT_TOGGLE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_MKR_TOG": {
		"method": "calcCode",
		"code": "(>K:MARKER_SOUND_TOGGLE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_MKR_MUTE_PRESS": {
		"method": "calcCode",
		"code": "1 (>K:MARKER_BEACON_TEST_MUTE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_MKR_MUTE_RELEASE": {
		"method": "calcCode",
		"code": "0 (>K:MARKER_BEACON_TEST_MUTE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_ADF1_TOG": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF_IDENT_TOGGLE)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_SPKR_TOG": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_SPEAKER)"
	},
	"Working Title.CJ4.Radio.(A:COM TRANSMIT:1, bool)": {
		"method": "calcCode",
		"code": "(A:COM TRANSMIT:1, bool)"
	},
	"Working Title.CJ4.Radio.(A:COM TRANSMIT:2, bool)": {
		"method": "calcCode",
		"code": "(A:COM TRANSMIT:2, bool)"
	},
	"Working Title.CJ4.Anti-Ice.Input.WT_CJ4_ANTIICE_WINGENG_LEFT_TOG": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_1) ! (>L:DEICE_Airframe_1) \n(L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }"
	},
	"Working Title.CJ4.Anti-Ice.Input.WT_CJ4_ANTIICE_WINGENG_RIGHT_TOG": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_2) ! (>L:DEICE_Airframe_2) \n(L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_WINGENG_LR_TOG": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_1) ! d (>L:DEICE_Airframe_1) (>L:DEICE_Airframe_2) (L:DEICE_Airframe_1) !  (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_ENG_LEFT_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_ENG_RIGHT_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG2)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_ENG_LR_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1) (>K:ANTI_ICE_TOGGLE_ENG2)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_1_TOG": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_TOGGLE) "
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_2_TOG": {
		"method": "calcCode",
		"code": "2 (>K:PITOT_HEAT_TOGGLE) "
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOTS_TOG": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_TOGGLE)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_WING_LIGHT_TOG": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_WING_1) ! d (>L:LIGHTING_WING_1) (>K:2:WING_LIGHTS_SET)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_ENG_LEFT_LED": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1,Bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_ENG_RIGHT_LED": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:2,Bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_DEICE_AIRFRAME_1": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_1, bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_DEICE_AIRFRAME_2": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_2, Bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT CJ4 Pitot Heat 1 is ON": {
		"method": "calcCode",
		"code": "(L:DEICE_Pitot_1, Bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT CJ4 Pitot Heat 2 is ON": {
		"method": "calcCode",
		"code": "(L:DEICE_Pitot_2, Bool)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_WING_LIGHT_ON": {
		"method": "calcCode",
		"code": "(A:LIGHT WING:0, Bool)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSURE_DUMP_PUSH": {
		"method": "calcCode",
		"code": "(>K:PRESSURIZATION_PRESSURE_DUMP_SWITCH)"
	},
	"Working Title.CJ4.Fuel.WT_CJ4_FUEL_BOOST_MAN_L": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP1)"
	},
	"Working Title.CJ4.Fuel.WT_CJ4_FUEL_BOOST_MAN_R": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP2)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_IGNITION_MAN_L_PUSH": {
		"method": "calcCode",
		"code": "2 1 (A:TURB ENG IGNITION SWITCH EX1:1, enum) 1 == ? (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_IGNITION_MAN_R_PUSH": {
		"method": "calcCode",
		"code": "2 1 (A:TURB ENG IGNITION SWITCH EX1:2, enum) 1 == ? (>K:TURBINE_IGNITION_SWITCH_SET2)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PILOT_FAN_INC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_AIR_1) 4 + 100 min (>L:PASSENGER_KNOB_AIR_1)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PILOT_FAN_DEC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_AIR_1) 4 - 0 max (>L:PASSENGER_KNOB_AIR_1)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_COPILOT_FAN_INC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_AIR_2) 4 + 100 min (>L:PASSENGER_KNOB_AIR_2)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_COPILOT_FAN_DEC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_AIR_2) 4 - 0 max (>L:PASSENGER_KNOB_AIR_2)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_COCKPIT_TEMP_INC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_HEAT_1) 4 + 100 min (>L:PASSENGER_KNOB_HEAT_1)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_COCKPIT_TEMP_DEC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_HEAT_1) 4 - 0 max (>L:PASSENGER_KNOB_HEAT_1)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_CABIN_TEMP_INC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_HEAT_2) 4 + 100 min (>L:PASSENGER_KNOB_HEAT_2)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_CABIN_TEMP_DEC": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_HEAT_2) 4 - 0 max (>L:PASSENGER_KNOB_HEAT_2)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSOURCE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PRESSOURCE) (* OFF *) 0"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSOURCE_L": {
		"method": "calcCode",
		"code": "1 (>L:PRESSOURCE) (* LEFT *) 1"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSOURCE_NORM": {
		"method": "calcCode",
		"code": "2 (>L:PRESSOURCE) (* NORM *) 2"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSOURCE_R": {
		"method": "calcCode",
		"code": "3 (>L:PRESSOURCE) (* RIGHT *) 3"
	},
	"Working Title.CJ4.Air Condition / Pressurization.WT_CJ4_PRESSOURCE_FRESH": {
		"method": "calcCode",
		"code": "4 (>L:PRESSOURCE) (* FRESH *) 4"
	},
	"Working Title.CJ4.Fuel.WT_CJ4_FUEL_XFER_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:45, bool) if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:46, bool) if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Working Title.CJ4.Fuel.WT_CJ4_FUEL_XFER_LTK": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:45, bool) if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:46, bool) ! if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Working Title.CJ4.Fuel.WT_CJ4_FUEL_XFER_RTK": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:45, bool) ! if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:46, bool) if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Working Title.CJ4.Fuel.(A:GENERAL ENG FUEL PUMP SWITCH:1, bool)": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:1, bool)"
	},
	"Working Title.CJ4.Fuel.(A:GENERAL ENG FUEL PUMP SWITCH:2, bool)": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:2, bool)"
	},
	"Working Title.CJ4.Fuel.(A:PRESSURIZATION DUMP SWITCH, bool)": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION DUMP SWITCH, bool)"
	},
	"Working Title.CJ4.Fuel.(A:TURB ENG IGNITION SWITCH EX1:1, enum) 2 ==": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:1, enum) 2 =="
	},
	"Working Title.CJ4.Fuel.(A:TURB ENG IGNITION SWITCH EX1:2, enum) 2 ==": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:2, enum) 2 =="
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_RUNSTOP_L_PUSH": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent) 0 > \n if{	 0 (>K:MIXTURE1_SET) 0 (>K:SET_FUEL_VALVE_ENG1) } \n els{ 16384 (>K:MIXTURE1_SET) 1 (>K:SET_FUEL_VALVE_ENG1) }"
	},
	"Working Title.CJ4.Engines.Input.WT_CJ4_ENG_RUNSTOP_R_PUSH": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, Percent) 0 > if{ \n   0 (>K:MIXTURE2_SET) 0 (>K:SET_FUEL_VALVE_ENG2) }\n els{ 16384 (>K:MIXTURE2_SET) 1 (>K:SET_FUEL_VALVE_ENG2) }"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_LEFT": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER1)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_RIGHT": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER2)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_DISENG": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) } \n(A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) }"
	},
	"Working Title.CJ4.Engines.Engine L Run ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent) 0 >"
	},
	"Working Title.CJ4.Engines.Engine R Run ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, Percent) 0 >"
	},
	"Working Title.CJ4.Engines.Engine L Stop ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, percent) 0 == (A:GENERAL ENG STARTER:1, bool) (A:GENERAL ENG STARTER:2, bool)  or ! and"
	},
	"Working Title.CJ4.Engines.Engine R Stop ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, percent) 0 == (A:GENERAL ENG STARTER:1, bool) (A:GENERAL ENG STARTER:2, bool)  or ! and"
	},
	"Working Title.CJ4.Engines.Engine L Starter ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, bool)"
	},
	"Working Title.CJ4.Engines.Engine R Starter ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:2, bool)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_MASTER_BATTERY_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ \n  1 (>K:TOGGLE_MASTER_BATTERY) } \n0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ \n  2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(L:XMLVAR_Essential_Bus_ON) if{ \n  1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n	1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n  2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n	2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } \nels{ \n  1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_MASTER_BATTERY_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_MASTER_BATTERY_EMER": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_AVIONICS_MASTER_ON": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) ! if{ \n  4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(A:CIRCUIT SWITCH ON:23, bool) ! if{ \n  23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ \n  5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n0 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_AVIONICS_MASTER_OFF": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_AVIONICS_MASTER_DSP": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ \n  4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(A:CIRCUIT SWITCH ON:23, bool) if{ \n  23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ \n  5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 1 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GENERATOR_L_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GENERATOR_L_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GENERATOR_R_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GENERATOR_R_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GEN_LR_TOG": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR1) (>K:TOGGLE_ALTERNATOR2)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_STBY_FTL_ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:49,bool) ! if{ 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_STBY_FTL_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:49,bool) if{ 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_STBY_FTL_TOG": {
		"method": "calcCode",
		"code": "49 (>K:ELECTRICAL_CIRCUIT_TOGGLE)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_EMER_LIGHT_ARM": {
		"method": "calcCode",
		"code": "1 (>L:WT_CJ4_EMER_LIGHT_ARMED) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_EMER_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:WT_CJ4_EMER_LIGHT_ARMED) }"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_EMER_LIGHT_TOG": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_EMER_LIGHT_ARMED) ! (>L:WT_CJ4_EMER_LIGHT_ARMED)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_AVIONICS_FTL_EMER_TOG": {
		"method": "calcCode",
		"code": "4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n0 (>L:XMLVAR_AVIONICS_IsComposite) 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n(L:WT_CJ4_EMER_LIGHT_ARMED) ! (>L:WT_CJ4_EMER_LIGHT_ARMED)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD MINS SELECTOR RADIO": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD MINS SELECTOR BARO": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD MINS KNOB DEC": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_Mins_DEC)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD MINS KNOB INC": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_Mins_INC)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD MINS PRESS": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_Mins_Press)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS PFD FPV PRESS": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_FPV)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFUS PFD MTRS PRESS": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_MTRS)"
	},
	"Asobo.747-8i.EFIS.B747_8_XMLVAR_Baro_Selector_HPA_1_IN": {
		"method": "calcCode",
		"code": "0 (>L:B747_8_XMLVAR_Baro_Selector_HPA_1)"
	},
	"Asobo.747-8i.EFIS.B747_8_XMLVAR_Baro_Selector_HPA_1_HPA": {
		"method": "calcCode",
		"code": "1 (>L:B747_8_XMLVAR_Baro_Selector_HPA_1)"
	},
	"Asobo.747-8i.EFIS.Input.B747_8_BARO_DEC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_DEC)"
	},
	"Asobo.747-8i.EFIS.Input.B747_8_BARO_INC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_INC)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS BARO STD PRESS": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS NAV AID L1 SWITCH VOR": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS NAV AID L1 SWITCH OFF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS  NAV AID L1 SWITCH ADF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"Asobo.747-8i.EFIS.B747_8_MFD_NAV_MODE_APP": {
		"method": "calcCode",
		"code": "0 (>L:B747_8_MFD_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.B747_8_MFD_NAV_MODE_VOR": {
		"method": "calcCode",
		"code": "1 (>L:B747_8_MFD_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.B747_8_MFD_NAV_MODE_MAP": {
		"method": "calcCode",
		"code": "2 (>L:B747_8_MFD_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.B747_8_MFD_NAV_MODE_PLN": {
		"method": "calcCode",
		"code": "3 (>L:B747_8_MFD_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 NAV MODE DEC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_1_NAV_MODE) -- 0 max 3 min (>L:B747_8_MFD_1_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 NAV MODE INC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_1_NAV_MODE) ++ 0 max 3 min (>L:B747_8_MFD_1_NAV_MODE)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 0.25": {
		"method": "calcCode",
		"code": "0 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 0.5": {
		"method": "calcCode",
		"code": "1 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 1": {
		"method": "calcCode",
		"code": "2 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 2": {
		"method": "calcCode",
		"code": "3 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 5": {
		"method": "calcCode",
		"code": "4 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 10": {
		"method": "calcCode",
		"code": "5 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 20": {
		"method": "calcCode",
		"code": "6 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 40": {
		"method": "calcCode",
		"code": "7 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 80": {
		"method": "calcCode",
		"code": "8 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 160": {
		"method": "calcCode",
		"code": "9 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 320": {
		"method": "calcCode",
		"code": "10 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range 640": {
		"method": "calcCode",
		"code": "11 (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range DEC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_1_Range) -- 0 max 12 min (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 Range INC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_1_Range) ++ 0 max 12 min (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS NAV AID L2 SWITCH VOR": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS NAV AID L2 SWITCH OFF": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS NAV AID L2 SWITCH ADF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 WXR PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_WXR)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 STA PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_STA)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 WPT PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_WPT)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 ARPT PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_ARPT)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 DATA PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_DATA)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 EFIS MFD 1 POS PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_POS)"
	},
	"Asobo.747-8i.EFIS.Input.B747_8 EFIS MFD 1 TERR PRESS": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_TERR)"
	},
	"Hype Performance Group.H135.Avionics.H135_DISPLAY_RIGHT_ON": {
		"method": "calcCode",
		"code": "(L:DISPLAY_RIGHT_ON) ! (>L:DISPLAY_RIGHT_ON)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_1": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_1, number) ! (>L:MFDR_SoftKey_Top_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_2": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_2, number) ! (>L:MFDR_SoftKey_Top_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_3": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_3, number) ! (>L:MFDR_SoftKey_Top_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_4": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_4, number) ! (>L:MFDR_SoftKey_Top_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_5": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_5, number) ! (>L:MFDR_SoftKey_Top_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Top_6": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Top_6, number) ! (>L:MFDR_SoftKey_Top_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_1": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_1, number) ! (>L:MFDR_SoftKey_Bottom_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_2": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_2, number) ! (>L:MFDR_SoftKey_Bottom_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_3": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_3, number) ! (>L:MFDR_SoftKey_Bottom_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_4": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_4, number) ! (>L:MFDR_SoftKey_Bottom_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_5": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_5, number) ! (>L:MFDR_SoftKey_Bottom_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Bottom_6": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Bottom_6, number) ! (>L:MFDR_SoftKey_Bottom_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_1": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_1, number) ! (>L:MFDR_SoftKey_Left_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_2": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_2, number) ! (>L:MFDR_SoftKey_Left_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_3": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_3, number) ! (>L:MFDR_SoftKey_Left_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_4": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_4, number) ! (>L:MFDR_SoftKey_Left_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_5": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_5, number) ! (>L:MFDR_SoftKey_Left_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Left_6": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Left_6, number) ! (>L:MFDR_SoftKey_Left_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_1": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_1, number) ! (>L:MFDR_SoftKey_Right_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_2": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_2, number) ! (>L:MFDR_SoftKey_Right_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_3": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_3, number) ! (>L:MFDR_SoftKey_Right_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_4": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_4, number) ! (>L:MFDR_SoftKey_Right_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_5": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_5, number) ! (>L:MFDR_SoftKey_Right_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDR_SoftKey_Right_6": {
		"method": "calcCode",
		"code": "(L:MFDR_SoftKey_Right_6, number) ! (>L:MFDR_SoftKey_Right_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_DISPLAY_CENTER_ON": {
		"method": "calcCode",
		"code": "(L:DISPLAY_CENTER_ON) ! (>L:DISPLAY_CENTER_ON)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_1": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_1, number) ! (>L:MFDC_SoftKey_Top_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_2": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_2, number) ! (>L:MFDC_SoftKey_Top_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_3": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_3, number) ! (>L:MFDC_SoftKey_Top_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_4": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_4, number) ! (>L:MFDC_SoftKey_Top_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_5": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_5, number) ! (>L:MFDC_SoftKey_Top_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Top_6": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Top_6, number) ! (>L:MFDC_SoftKey_Top_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_1": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_1, number) ! (>L:MFDC_SoftKey_Bottom_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_2": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_2, number) ! (>L:MFDC_SoftKey_Bottom_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_3": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_3, number) ! (>L:MFDC_SoftKey_Bottom_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_4": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_4, number) ! (>L:MFDC_SoftKey_Bottom_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_5": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_5, number) ! (>L:MFDC_SoftKey_Bottom_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Bottom_6": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Bottom_6, number) ! (>L:MFDC_SoftKey_Bottom_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_1": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_1, number) ! (>L:MFDC_SoftKey_Left_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_2": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_2, number) ! (>L:MFDC_SoftKey_Left_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_3": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_3, number) ! (>L:MFDC_SoftKey_Left_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_4": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_4, number) ! (>L:MFDC_SoftKey_Left_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_5": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_5, number) ! (>L:MFDC_SoftKey_Left_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Left_6": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Left_6, number) ! (>L:MFDC_SoftKey_Left_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_1": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_1, number) ! (>L:MFDC_SoftKey_Right_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_2": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_2, number) ! (>L:MFDC_SoftKey_Right_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_3": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_3, number) ! (>L:MFDC_SoftKey_Right_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_4": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_4, number) ! (>L:MFDC_SoftKey_Right_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_5": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_5, number) ! (>L:MFDC_SoftKey_Right_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDC_SoftKey_Right_6": {
		"method": "calcCode",
		"code": "(L:MFDC_SoftKey_Right_6, number) ! (>L:MFDC_SoftKey_Right_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_DISPLAY_LEFT_ON": {
		"method": "calcCode",
		"code": "(L:DISPLAY_LEFT_ON) ! (>L:DISPLAY_LEFT_ON)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_1": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_1, number) ! (>L:MFDL_SoftKey_Top_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_2": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_2, number) ! (>L:MFDL_SoftKey_Top_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_3": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_3, number) ! (>L:MFDL_SoftKey_Top_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_4": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_4, number) ! (>L:MFDL_SoftKey_Top_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_5": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_5, number) ! (>L:MFDL_SoftKey_Top_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Top_6": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Top_6, number) ! (>L:MFDL_SoftKey_Top_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_1": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_1, number) ! (>L:MFDL_SoftKey_Bottom_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_2": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_2, number) ! (>L:MFDL_SoftKey_Bottom_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_3": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_3, number) ! (>L:MFDL_SoftKey_Bottom_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_4": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_4, number) ! (>L:MFDL_SoftKey_Bottom_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_5": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_5, number) ! (>L:MFDL_SoftKey_Bottom_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Bottom_6": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Bottom_6, number) ! (>L:MFDL_SoftKey_Bottom_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_1": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_1, number) ! (>L:MFDL_SoftKey_Left_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_2": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_2, number) ! (>L:MFDL_SoftKey_Left_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_3": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_3, number) ! (>L:MFDL_SoftKey_Left_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_4": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_4, number) ! (>L:MFDL_SoftKey_Left_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_5": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_5, number) ! (>L:MFDL_SoftKey_Left_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Left_6": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Left_6, number) ! (>L:MFDL_SoftKey_Left_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_1": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_1, number) ! (>L:MFDL_SoftKey_Right_1, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_2": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_2, number) ! (>L:MFDL_SoftKey_Right_2, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_3": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_3, number) ! (>L:MFDL_SoftKey_Right_3, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_4": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_4, number) ! (>L:MFDL_SoftKey_Right_4, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_5": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_5, number) ! (>L:MFDL_SoftKey_Right_5, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_MFDL_SoftKey_Right_6": {
		"method": "calcCode",
		"code": "(L:MFDL_SoftKey_Right_6, number) ! (>L:MFDL_SoftKey_Right_6, number)"
	},
	"Hype Performance Group.H135.Avionics.H135_Left_Lower_MFD": {
		"method": "calcCode",
		"code": "(L:GTN_LEFT_ON) ! (>L:GTN_LEFT_ON)"
	},
	"Hype Performance Group.H135.Avionics.H135_Right_Lower_MFD": {
		"method": "calcCode",
		"code": "(L:GTN_RIGHT_ON) ! (>L:GTN_RIGHT_ON)"
	},
	"Hype Performance Group.H135.Engines.H135_Engine1_Up": {
		"method": "calcCode",
		"code": "(L:Engine1_Up, bool) ! (>L:Engine1_Up, bool)"
	},
	"Hype Performance Group.H135.Engines.H135_Engine2_Up": {
		"method": "calcCode",
		"code": "(L:Engine2_Up, bool) ! (>L:Engine2_Up, bool)"
	},
	"Hype Performance Group.H135.Engines.H135_Engine1_Down": {
		"method": "calcCode",
		"code": "(L:Engine1_Down, bool) ! (>L:Engine1_Down, bool)"
	},
	"Hype Performance Group.H135.Engines.H135_Engine2_Down": {
		"method": "calcCode",
		"code": "(L:Engine2_Down, bool) ! (>L:Engine2_Down, bool)"
	},
	"Hype Performance Group.H135.Passengers/Crew.H135_Pilot_1_Show": {
		"method": "calcCode",
		"code": "(L:PILOT_1_SHOW, bool) ! (>L:PILOT_1_SHOW, bool)"
	},
	"Hype Performance Group.H135.Passengers/Crew.H135_Pilot_0_Show": {
		"method": "calcCode",
		"code": "(L:PILOT_1_SHOW, bool) ! (>L:PILOT_0_SHOW, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_Turbo_Mode": {
		"method": "calcCode",
		"code": "(L:TURBO_MODE) ! (>L:TURBO_MODE)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_Search_Light": {
		"method": "calcCode",
		"code": "(L:SPOTLIGHT_MODE, bool) ! (>L:SPOTLIGHT_MODE, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_Tablet_Open": {
		"method": "calcCode",
		"code": "(L:TABLET_OPEN, bool) ! (>L:TABLET_OPEN, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDR_Knob_Up": {
		"method": "calcCode",
		"code": "(L:MFDR_Knob_Up, bool) ! (>L:MFDR_Knob_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDR_Knob_Down": {
		"method": "calcCode",
		"code": "(L:MFDR_Knob_Down, bool) ! (>L:MFDR_Knob_Down, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDC_Knob_Up": {
		"method": "calcCode",
		"code": "(L:MFDC_Knob_Up, bool) ! (>L:MFDC_Knob_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDC_Knob_Down": {
		"method": "calcCode",
		"code": "(L:MFDC_Knob_Down, bool) ! (>L:MFDC_Knob_Down, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDL_Knob_Up": {
		"method": "calcCode",
		"code": "(L:MFDL_Knob_Up, bool) ! (>L:MFDL_Knob_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDL_Knob_Down": {
		"method": "calcCode",
		"code": "(L:MFDL_Knob_Down, bool) ! (>L:MFDL_Knob_Down, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDR_SoftKey_Right_BRT_Up": {
		"method": "calcCode",
		"code": "(L:Bright_Up, bool) ! (>L:Bright_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDR_SoftKey_Right_BRT_Down": {
		"method": "calcCode",
		"code": "(L:Bright_Down, bool) ! (>L:Bright_Down, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDC_SoftKey_Right_BRT_Up": {
		"method": "calcCode",
		"code": "(L:Bright_Up, bool) ! (>L:Bright_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDC_SoftKey_Right_BRT_Down": {
		"method": "calcCode",
		"code": "(L:Bright_Down, bool) ! (>L:Bright_Down, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDL_SoftKey_Right_BRT_Up": {
		"method": "calcCode",
		"code": "(L:Bright_Up, bool) ! (>L:Bright_Up, bool)"
	},
	"Hype Performance Group.H135.Miscellaneous.H135_MFDL_SoftKey_Right_BRT_Down": {
		"method": "calcCode",
		"code": "(L:Bright_Down, bool) ! (>L:Bright_Down, bool)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_COMM2_outer_knob_left": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_outer_knob, enum) ++ 100 % (>L:KX175_COMM2_outer_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_COMM2_outer_knob_right": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_outer_knob, enum) -- (>L:KX175_COMM2_outer_knob, enum) (L:KX175_COMM2_outer_knob, enum) 0 < if{ 99 (>L:KX175_COMM2_outer_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_COMM2_inner_knob_left": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_inner_knob, enum) ++ 100 % (>L:KX175_COMM2_inner_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_COMM2_inner_knob_right": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_inner_knob, enum) -- (>L:KX175_COMM2_inner_knob, enum) (L:KX175_COMM2_inner_knob, enum) 0 < if{ 99 (>L:KX175_COMM2_inner_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_NAV2_outer_knob_left": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_outer_knob, enum) ++ 100 % (>L:KX175_NAV2_outer_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_NAV2_outer_knob_right": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_outer_knob, enum) -- (>L:KX175_NAV2_outer_knob, enum) (L:KX175_NAV2_outer_knob, enum) 0 < if{ 99 (>L:KX175_NAV2_outer_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_NAV2_inner_knob_left": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_inner_knob, enum) ++ 100 % (>L:KX175_NAV2_inner_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_NAV2_inner_knob_right": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_inner_knob, enum) -- (>L:KX175_NAV2_inner_knob, enum) (L:KX175_NAV2_inner_knob, enum) 0 < if{ 99 (>L:KX175_NAV2_inner_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_COMM1_outer_knob_left": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_outer_knob, enum) ++ 100 % (>L:KX170_COMM1_outer_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_COMM1_outer_knob_right": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_outer_knob, enum) -- (>L:KX170_COMM1_outer_knob, enum) (L:KX170_COMM1_outer_knob, enum) 0 < if{ 99 (>L:KX170_COMM1_outer_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_COMM1_inner_knob_left": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_inner_knob, enum) ++ 100 % (>L:KX170_COMM1_inner_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_COMM1_inner_knob_right": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_inner_knob, enum) -- (>L:KX170_COMM1_inner_knob, enum) (L:KX170_COMM1_inner_knob, enum) 0 < if{ 99 (>L:KX170_COMM1_inner_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_NAV1_outer_knob_left": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_outer_knob, enum) ++ 100 % (>L:KX170_NAV1_outer_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_NAV1_outer_knob_right": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_outer_knob, enum) -- (>L:KX170_NAV1_outer_knob, enum) (L:KX170_NAV1_outer_knob, enum) 0 < if{ 99 (>L:KX170_NAV1_outer_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_NAV1_inner_knob_left": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_inner_knob, enum) ++ 100 % (>L:KX170_NAV1_inner_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_NAV1_inner_knob_right": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_inner_knob, enum) -- (>L:KX170_NAV1_inner_knob, enum) (L:KX170_NAV1_inner_knob, enum) 0 < if{ 99 (>L:KX170_NAV1_inner_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.EFIS.Input.ALT_baro_knob_left": {
		"method": "calcCode",
		"code": "(L:ALTIMETER_baro_knob, enum) ++  100 min (>L:ALTIMETER_baro_knob, enum) (>K:KOHLSMAN_INC) (L:ALTIMETER_baro_knob, enum) 100 == if{ 0 (>L:ALTIMETER_baro_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.EFIS.Input.ALT_baro_knob_right": {
		"method": "calcCode",
		"code": "(L:ALTIMETER_baro_knob, enum) -- 0 max (>L:ALTIMETER_baro_knob, enum) (>K:KOHLSMAN_DEC) (L:ALTIMETER_baro_knob, enum) 0 == if{ 100 (>L:ALTIMETER_baro_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Electrical.CENTRE_LOWER_bat_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_bat)"
	},
	"Just Flight.Piper Arrow III.Electrical.CENTRE_LOWER_bat_ON_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_bat)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_on": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_onoff)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_off": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_onoff)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_alt_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_alt)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_navgps_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_navgps)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_hdg_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_hdg)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_hdg_OFF_PRESS": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_hdg)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_Nav_Mode_ON_PRESS": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_Omni_Mode_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_HDG_Mode_ON_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_LOC_NORM_Mode_ON_PRESS": {
		"method": "calcCode",
		"code": "3 (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_LOC_REV_Mode_ON_PRESS": {
		"method": "calcCode",
		"code": "4 (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Engines.THROTTLE_QUADRANT_mixture_lock_ON_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:THROTTLE_QUADRANT_mixture_lock)"
	},
	"Just Flight.Piper Arrow III.Engines.THROTTLE_QUADRANT_mixture_lock_ON_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:THROTTLE_QUADRANT_mixture_lock)"
	},
	"Just Flight.Piper Arrow III.Gear.Emergency_gear_down": {
		"method": "calcCode",
		"code": "0 (>L:LOWER_emergency_gear)"
	},
	"Just Flight.Piper Arrow III.Gear.Emergency_gear_off": {
		"method": "calcCode",
		"code": "1 (>L:LOWER_emergency_gear)"
	},
	"Just Flight.Piper Arrow III.Gear.Emergency_gear_on": {
		"method": "calcCode",
		"code": "2 (>L:LOWER_emergency_gear)"
	},
	"Just Flight.Piper Arrow III.Engines.EGT_knob_left": {
		"method": "calcCode",
		"code": "(L:RIGHT_LOWER_egt_knob, enum) ++ 100 % (>L:RIGHT_LOWER_egt_knob, enum)"
	},
	"Just Flight.Piper Arrow III.Engines.EGT_knob_right": {
		"method": "calcCode",
		"code": "(L:RIGHT_LOWER_egt_knob, enum) -- (>L:RIGHT_LOWER_egt_knob, enum) (L:RIGHT_LOWER_egt_knob, enum) 0 < if{ 99 (>L:RIGHT_LOWER_egt_knob, enum) }"
	},
	"Asobo.Cessna 172.Electrical.C172_BATTERY_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cessna 172.Electrical.C172_BATTERY_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cessna 172.Electrical.C172_ALTERNATOR_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.Cessna 172.Electrical.C172_ALTERNATOR_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.Cessna 172.Avionics.Input.C_172_AVIONICS_BUS_1_ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Asobo.Cessna 172.Avionics.Input.C_172_AVIONICS_BUS_1_OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Asobo.Cessna 172.Avionics.Input.C_172_AVIONICS_BUS_2_ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Asobo.Cessna 172.Avionics.Input.C_172_AVIONICS_BUS_2_OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Asobo.Cessna 172.Electrical.C_172_STBYBATTERY_TEST_ON": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_STBYBattery_Test) 1 (>L:XMLVAR_STBYBattery_IsHeld)"
	},
	"Asobo.Cessna 172.Electrical.C_172_STBYBATTERY_TEST_OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_STBYBattery_IsHeld)"
	},
	"Asobo.Cessna 172.Electrical.C_172_STBYBATTERY_ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_BatterySTBY_SwitchState) 1 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cessna 172.Electrical.C_172_STBYBATTERY_OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_BatterySTBY_SwitchState) 0 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cessna 172.Lights.C_172_LIGHTS_LANDING_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo.Cessna 172.Lights.C_172_LIGHTS_LANDING_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo.Cessna 172.Fuel.C_172_FUEL_PUMP_ON": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n   l0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.Cessna 172.Fuel.C_172_FUEL_PUMP_OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n   l0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.Cessna 172.Anti-Ice.C_172_PITOT_HEAT_ON": {
		"method": "calcCode",
		"code": "(A:PITOT HEAT, Bool) 0 == if{ (>K:PITOT_HEAT_TOGGLE) }"
	},
	"Asobo.Cessna 172.Anti-Ice.C_172_PITOT_HEAT_OFF": {
		"method": "calcCode",
		"code": "(A:PITOT HEAT, Bool) 1 == if{ (>K:PITOT_HEAT_TOGGLE) }"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (A:AUTOPILOT MASTER, bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }"
	},
	"Asobo.Cessna 172.Autopilot.C_172_FD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, bool) ! if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.Cessna 172.Autopilot.Input.C_172_AP_HDG": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_ALT": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_NAV": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_APR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD,Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_VS": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_FLC": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_NOSE_UP": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_INC) (>H:AP_DN) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_INC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_UP) }"
	},
	"Asobo.Cessna 172.Autopilot.C_172_AP_NOSE_DN": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_DEC) (>H:AP_UP) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_DEC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_DN) }"
	},
	"Asobo.Cessna 172.Fuel.C_172_FUEL_SHUTOFF_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:1, Bool) 0 == if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"Asobo.Cessna 172.Fuel.C_172_FUEL_SHUTOFF_VALVE_CLOSE": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:1, Bool) 1 == if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"Asobo.Cessna 172.Fuel.C_172_LEFT_FUEL_TANK": {
		"method": "calcCode",
		"code": "2 (>K:FUEL_SELECTOR_SET)"
	},
	"Asobo.Cessna 172.Fuel.C_172_BOTH_FUEL_TANKS": {
		"method": "calcCode",
		"code": "1 (>K:FUEL_SELECTOR_SET)"
	},
	"Asobo.Cessna 172.Fuel.C_172_RIGHT_FUEL_TANK": {
		"method": "calcCode",
		"code": "3 (>K:FUEL_SELECTOR_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_PILOT_CABIN_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:1, Bool) ! if{ 1 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:1, Percent) 10 + 100 min 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_PILOT_CABIN_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN POWER SETTING:1, Percent) 10 - 0 max 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:1, Bool) (A:LIGHT CABIN POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.Cessna 172.Lights.C_172_COPILOT_CABIN_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:2, Bool) ! if{ 2 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:2, Percent) 10 + 100 min 2 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_COPILOT_CABIN_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN POWER SETTING:2, Percent) 10 - 0 max 2 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:2, Bool) (A:LIGHT CABIN POWER SETTING:2, Percent) 0 == and if{ 2 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.Cessna 172.Lights.C_172_PANEL_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_3, percent) 5 + 100 min d (>L:LIGHTING_POTENTIOMETER_3) 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_PANEL_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_3, percent) 5 - 0 max d (>L:LIGHTING_POTENTIOMETER_3) 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_STBY_INSTRUMENTS_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL:1, Bool) ! if{ 1 1 (>K:2:PANEL_LIGHTS_SET) } (A:LIGHT PANEL POWER SETTING:1, Percent) 10 + 100 min 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_STBY_INSTRUMENTS_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL POWER SETTING:1, Percent) 10 - 0 max 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET) (A:LIGHT PANEL:1, Bool) (A:LIGHT PANEL POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"Asobo.Cessna 172.Lights.C_172_PEDESTRAL_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PEDESTRAL_1) 5 + 100 min d (>L:LIGHTING_PEDESTRAL_1) 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_PEDESTRAL_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PEDESTRAL_1) 5 - 0 max d (>L:LIGHTING_PEDESTRAL_1) 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Cessna 172.Lights.C_172_AVIONICS_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_4) 5 + 100 min d (>L:LIGHTING_POTENTIOMETER_4) 4 (>K:2:LIGHT_POTENTIOMETER_SET)\n"
	},
	"Asobo.Cessna 172.Lights.C_172_AVIONICS_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_4) 5 - 0 max d (>L:LIGHTING_POTENTIOMETER_4) 4 (>K:2:LIGHT_POTENTIOMETER_SET)\n"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_ALT_ARM_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:KAS297_ALT_ARM_PUSH)"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_AP_SELECT_ALT_OR_VS": {
		"method": "calcCode",
		"code": " (L:GAUGE_ALT_ALERT_MODE, Number) 0 == if{ 1 (>L:GAUGE_ALT_ALERT_MODE, Number) } els{ (L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{ 0 (>L:GAUGE_ALT_ALERT_MODE, Number) }"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_ALT_DEC_100": {
		"method": "calcCode",
		"code": " (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 100 - 0 max (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet)"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_ALT_INC_100": {
		"method": "calcCode",
		"code": " (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 100 + (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH)"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_ALT_DEC_1000": {
		"method": "calcCode",
		"code": " (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 1000 - 0 max (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet)"
	},
	"Carenado.M20R OVATION.Autopilot.KAS297_ALT_INC_1000": {
		"method": "calcCode",
		"code": " (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 1000 + (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot AP Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (L:XMLVAR_APTrim) 0 == if{ (A:AUTOPILOT YAW DAMPER, Bool) ! (A:AUTOPILOT MASTER, bool) and if{ (K:YAW_DAMPER_TOGGLE) } } (A:AUTOPILOT MASTER, Bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot HDG Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.King Air 350i.Autopilot.KA_BANK": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_INC)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot APPR Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD,Bool) (A:AUTOPILOT GLIDESLOPE HOLD,Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot YD Button Press": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot FLC Button Press": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot ALT Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot VS Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot NAV Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot VNAV Button Press": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot Capt FD Button Press ": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot YD/AP Disc Down": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ 1 (>K:AUTOPILOT_DISENGAGE_SET) \n   (A:AUTOPILOT YAW DAMPER, Bool) if{ (>K:YAW_DAMPER_TOGGLE) } }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot HDG Knob Press": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR,degrees) (>K:HEADING_BUG_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot HDG Knob Dec": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_DEC)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot HDG Knob Inc": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_INC)"
	},
	"Asobo.King Air 350i.Autopilot.KA_HDG_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - (>K:1:HEADING_BUG_SET)"
	},
	"Asobo.King Air 350i.Autopilot.KA_HDG_FAST_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + (>K:1:HEADING_BUG_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS1 Knob Press": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR,degrees) (>K:VOR1_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS1 Knob Dec": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS1 Knob Inc": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot Speed Knob Dec": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) \n} els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, Knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot Speed Knob Inc": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) \n} els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, Knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot ALT Knob Press": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot ALT Knob Dec": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot ALT Knob Inc": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)"
	},
	"Asobo.King Air 350i.Autopilot.KA_ALT_FAST_DEC": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_DEC)"
	},
	"Asobo.King Air 350i.Autopilot.KA_ALT_FAST_INC": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_INC)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot VS Knob Dec": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } els{ (>K:AP_PITCH_REF_INC_UP) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot VS Knob Inc": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) } els{ (>K:AP_PITCH_REF_INC_DN) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_BATTERY_1_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_BATTERY_1_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_BATTERY_2_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:2, Bool) 0 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_BATTERY_2_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:2, Bool) 1 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_ALTERNATOR_1_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_ALTERNATOR_1_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_ALTERNATOR_2_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Asobo.Bonanza G36.Electrical.G36_ALTERNATOR_2_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHTING_KNOB_FLOOD_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent) 10 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHTING_KNOB_FLOOD_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent) 10 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHTING_SWITCH_FLOOD": {
		"method": "calcCode",
		"code": "0 (>K:GLARESHIELD_LIGHTS_TOGGLE)"
	},
	"Asobo.Bonanza G36.Avionics.G36_AVIONICS_ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:24, Bool) 0 == if{ 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Asobo.Bonanza G36.Avionics.G36_AVIONICS_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:24, Bool) 1 == if{ 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Asobo.Bonanza G36.Fuel.G36_FUEL_PUMP_OFF": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)"
	},
	"Asobo.Bonanza G36.Fuel.G36_FUEL_PUMP_ON": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)"
	},
	"Asobo.Bonanza G36.Fuel.G36_FUEL_PUMP_HIGH": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET) 1 (>L:XMLVAR_FUEL_Pump1_High_ON)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_FLOOD_ON": {
		"method": "calcCode",
		"code": "1 (>K:GLARESHIELD_LIGHTS_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_FLOOD_OFF": {
		"method": "calcCode",
		"code": "0 (>K:GLARESHIELD_LIGHTS_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_PANEL_ON": {
		"method": "calcCode",
		"code": "1 (>K:PANEL_LIGHTS_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_PANEL_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PANEL_LIGHTS_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_AVIONICS_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent) 1 - 0 max 14 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_AVIONICS_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent) 1 + 100 min 14 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_GLARESHIELD_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent) 1 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_GLARESHIELD_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent) 1 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_PANEL_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent) 1 - 0 max 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_PANEL_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent) 1 + 100 min 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_SUBPANEL_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, Percent) 1 - 0 max 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Bonanza G36.Lights.G36_LIGHT_KNOB_SUBPANEL_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, Percent) 1 + 100 min 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 LANDING TAXI OFF State 1 TAXI": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_1)\n0 (>K:LANDING_LIGHTS_SET) \n1 (>K:TAXI_LIGHTS_SET) \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } \nels{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t(A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n\t(A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n\t17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 LANDING TAXI OFF State 2 OFF": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_1)\n0 (>K:LANDING_LIGHTS_SET) \n0 (>K:TAXI_LIGHTS_SET) \n(A:LIGHT LANDING, Bool) if{ \n\t100 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t0 (>K:LIGHT_POTENTIOMETER_2_SET) \n\t0 sp0 \n} els{ \n\t0 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t(A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n\t(A:LIGHT LOGO, Bool) sp0 \n} \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n\t17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) \n}"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 LANDING TAXI OFF State 0 LDG": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_1)\n1 (>K:LANDING_LIGHTS_SET) \n0 (>K:TAXI_LIGHTS_SET) \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } \nels{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t(A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n\t(A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n\t17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_MASTER_OFF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) } (A:RUDDER TRIM DISABLED, Bool) ! if{ 1 (>K:RUDDER_TRIM_DISABLED_SET) } (A:AILERON TRIM DISABLED, Bool) ! if{ 1 (>K:AILERON_TRIM_DISABLED_SET) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_MASTER_TRIM_ONLY": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) } (A:RUDDER TRIM DISABLED, Bool) if{ 0 (>K:RUDDER_TRIM_DISABLED_SET) } (A:AILERON TRIM DISABLED, Bool) if{ 0 (>K:AILERON_TRIM_DISABLED_SET) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_MASTER_ON": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) }"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AUTOPILOT_MASTER_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ \n\t\t(>K:AP_MASTER) \n\t\t(A:AUTOPILOT MASTER, Bool) ! if{ \n\t\t\t(>H:Generic_Autopilot_Manual_Off) \n\t\t} els{ \n\t\t\t (A:AUTOPILOT YAW DAMPER, Bool) ! if{ \n\t\t\t\t (>K:YAW_DAMPER_TOGGLE) } } } "
	},
	"Asobo.TBM 930.Lights.Input.TBM930_NAV_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 sp0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930_NAV_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 sp0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930_NAV_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_NAV_1) ! s0 (>L:LIGHTING_NAV_1) \n1 l0 (>K:2:NAV_LIGHTS_SET) "
	},
	"Asobo.TBM 930.Lights.Input.TBM930_STROBE_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 sp0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930_STROBE_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 sp0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930_STROBE_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_STROBE_1) ! s0 (>L:LIGHTING_STROBE_1)\n1 l0 (>K:2:STROBES_SET)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930_PANEL_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent) 5 + 100 min s0 \n14 (>K:2:LIGHT_POTENTIOMETER_SET) \nl0 0 > if{ (A:LIGHT PANEL, Bool) ! (A:LIGHT PEDESTRAL, Bool) ! or if{ \n1 (>K:PANEL_LIGHTS_SET) 1 (>K:PEDESTRAL_LIGHTS_SET) }\nl0 100 == if{ 0 (>K:PANEL_LIGHTS_SET) 0 (>K:PEDESTRAL_LIGHTS_SET) }\n(A:LIGHT POTENTIOMETER:14, Percent) sp0 \nl0 14 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) \nl0 19 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) "
	},
	"Asobo.TBM 930.Lights.Input.TBM930_PANEL_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent) 5 - 0 max s0 \n14 (>K:2:LIGHT_POTENTIOMETER_SET) \nl0 0 > if{ (A:LIGHT PANEL, Bool) ! (A:LIGHT PEDESTRAL, Bool) ! or if{ \n1 (>K:PANEL_LIGHTS_SET) 1 (>K:PEDESTRAL_LIGHTS_SET) }\nl0 100 == if{ 0 (>K:PANEL_LIGHTS_SET) 0 (>K:PEDESTRAL_LIGHTS_SET) }\n(A:LIGHT POTENTIOMETER:14, Percent) sp0 \nl0 14 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) \nl0 19 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) "
	},
	"Asobo.TBM 930.Engines.Input.TBM930_STARTER_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } "
	},
	"Asobo.TBM 930.Engines.Input.TBM930_STARTER_ABORT": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_Starter, Number) \n(A:GENERAL ENG STARTER:1, Bool) if{ \n   0 (>K:SET_STARTER1_HELD) 0 (>K:STARTER1_SET) }"
	},
	"Asobo.TBM 930.Engines.Input.TBM930_IGNITION_ON": {
		"method": "calcCode",
		"code": "2 (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Asobo.TBM 930.Engines.Input.TBM930_IGNITION_OFF": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Asobo.TBM 930.Engines.Input.TBM930_IGNITION_AUTO": {
		"method": "calcCode",
		"code": "1 (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Asobo.TBM 930.Miscellaneous.Input.TBM930_CRASH_BAR_UP": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Elec_CrashBar_State)"
	},
	"Asobo.TBM 930.Miscellaneous.Input.TBM930_CRASH_BAR_DOWN": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Elec_CrashBar_State) \n0 (>L:XMLVAR_Elec_Source_Switch_State) \n5 (A:1:BUS CONNECTION ON:1, Bool) ! if{ \n\t5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:14, Bool) ! if{ \n\t5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n20 (A:1:BUS CONNECTION ON:13, Bool) ! if{ \n\t20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }\n0 (>L:XMLVAR_Elec_Generator_Switch_State) \n5 (A:1:BUS CONNECTION ON:12, Bool) ! if{ \n   5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:20, Bool) ! if{ \n   5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_ELECTRICAL_SOURCE_GPU": {
		"method": "calcCode",
		"code": "2 s0 (>L:XMLVAR_Elec_Source_Switch_State) \nl0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ \n\t5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ \n\t5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ \n\t20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_ELECTRICAL_SOURCE_BATT": {
		"method": "calcCode",
		"code": "1 s0 (>L:XMLVAR_Elec_Source_Switch_State) \nl0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ \n\t5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ \n\t5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ \n\t20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_ELECTRICAL_SOURCE_OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:XMLVAR_Elec_Source_Switch_State) \nl0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ \n\t5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ \n\t5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ \n\t20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_GENERATOR_STANDBY": {
		"method": "calcCode",
		"code": "2 s0 (>L:XMLVAR_Elec_Generator_Switch_State) \nl0 0 == if{ 0 sp1 0 sp2 } \nl0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) }\nl0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ \n   5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ \n   5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_GENERATOR_MAIN": {
		"method": "calcCode",
		"code": "1 s0 (>L:XMLVAR_Elec_Generator_Switch_State) \nl0 0 == if{ 0 sp1 0 sp2 } \nl0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) }\nl0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ \n   5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ \n   5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Electrical.Input.TBM930_GENERATOR_OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:XMLVAR_Elec_Generator_Switch_State) \nl0 0 == if{ 0 sp1 0 sp2 } \nl0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) }\nl0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } \n5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ \n   5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ \n   5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Fuel.TBM930_AUX_BP_AUTO": {
		"method": "calcCode",
		"code": "2 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \nl0 (>K:ELECT_FUEL_PUMP1_SET) } "
	},
	"Asobo.TBM 930.Fuel.TBM930_AUX_BP_ON": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \nl0 (>K:ELECT_FUEL_PUMP1_SET) } "
	},
	"Asobo.TBM 930.Fuel.TBM930_AUX_BP_OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Asobo.TBM 930.Fuel.TBM930_SHIFT_FUEL_TANK": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) 2 == if{ (>K:FUEL_SELECTOR_RIGHT) } els{ (>K:FUEL_SELECTOR_LEFT) }"
	},
	"Asobo.TBM 930.Warning System.TBM930_ELT_ON": {
		"method": "calcCode",
		"code": "(>K:ELT_ON) (E:SIMULATION TIME, seconds) (>L:XMLVAR_ELT_ACTIVATION_TIME, Number)"
	},
	"Asobo.TBM 930.Warning System.TBM930_ELT_ARM": {
		"method": "calcCode",
		"code": "(>K:ELT_OFF)"
	},
	"Asobo.TBM 930.Warning System.TBM930_ELT_TEST": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_ELT_STATE, Number) (E:SIMULATION TIME, seconds) (>L:XMLVAR_ELT_TEST_TIME, Number)"
	},
	"Asobo.TBM 930.Warning System.TBM930_ELT_LED": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED, Bool) (E:SIMULATION TIME, second) 3 * 2 % and (L:XMLVAR_ELT_STATE) 3 == or"
	},
	"Asobo.TBM 930.Warning System.Input.TBM930_MASTER_WARNING_PUSH": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_WARNING_ACKNOWLEDGE)"
	},
	"Asobo.TBM 930.Warning System.Input.TBM930_MASTER_CAUTION_PUSH": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_CAUTION_ACKNOWLEDGE)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_1)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_2)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_3)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_4)"
	},
	"Asobo.TBM 930.Avionics.Input.TBM930_PFD_1_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_5)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_6)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_7)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_8)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_9)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_10)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_11)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_1_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_1_SOFTKEYS_12)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_1)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_2)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_3)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_4)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_5)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_6)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_7)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_8)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_9)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_10)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_11)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_3_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_3_SOFTKEYS_12)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_1)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_2)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_3)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_4)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_5)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_6": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_6)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_7": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_7)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_8": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_8)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_9": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_9)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_10": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_10)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_11": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_11)"
	},
	"Asobo.TBM 930.Avionics.TBM930_PFD_2_SOFTKEYS_12": {
		"method": "calcCode",
		"code": "1 (>H:AS3000_PFD_2_SOFTKEYS_12)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_AIRFRAME_DE_ICE_ON": {
		"method": "calcCode",
		"code": "(A:STRUCTURAL DEICE SWITCH, Bool) ! if{ (>K:TOGGLE_STRUCTURAL_DEICE) }"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_AIRFRAME_DE_ICE_OFF": {
		"method": "calcCode",
		"code": "(A:STRUCTURAL DEICE SWITCH, Bool) if{ (>K:TOGGLE_STRUCTURAL_DEICE) }"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_ICE_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:WING_LIGHTS_SET) 1 (>L:LIGHTING_WING_1)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_ICE_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 0 (>K:2:WING_LIGHTS_SET) 0 (>L:LIGHTING_WING_1)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_WINDSHIELD_ON": {
		"method": "calcCode",
		"code": "1 (>K:WINDSHIELD_DEICE_SET)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_WINDSHIELD_OFF": {
		"method": "calcCode",
		"code": "0 (>K:WINDSHIELD_DEICE_SET)"
	},
	"Asobo.TBM 930.Anti-Ice.Input.TBM930_PROP_DE_ICE_ON": {
		"method": "calcCode",
		"code": "1 s0 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) }\nl0 (>L:DEICE_Propeller_1)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PROP_DE_ICE_OFF": {
		"method": "calcCode",
		"code": "(A:PROP DEICE SWITCH:1, Bool) if{ (>K:TOGGLE_PROPELLER_DEICE) }"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PITOT_L_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PITOT_L_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PITOT_R_ON": {
		"method": "calcCode",
		"code": "2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PITOT_R_OFF": {
		"method": "calcCode",
		"code": "2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_Pitot_L_TOG": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Pitot_1) ! (>L:XMLVAR_Pitot_1) (L:XMLVAR_Pitot_1) ! (L:XMLVAR_Pitot_2) ! and (A:PITOT HEAT, bool) == if{ (>K:PITOT_HEAT_TOGGLE) }"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_Pitot_R_TOG": {
		"method": "calcCode",
		"code": "2 (A:PITOT HEAT SWITCH:2) ! (>K:2:PITOT_HEAT_SET) (A:PITOT HEAT SWITCH:2) ! (>L:DEICE_Pitot_2)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_INERT_SEP_ON": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, Bool) ! if{ (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"Asobo.TBM 930.Anti-Ice.Input.TBM930_INERT_SEP_OFF": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, Bool) if{ (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_LTS_TEST_ON": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_LTS_Test)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_LTS_TEST_OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_LTS_TEST)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_LTS_TEST_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_LTS_TEST, Number) ! (>L:XMLVAR_LTS_TEST)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_AIRFRAME_DE_ICE_LED_LEFT": {
		"method": "calcCode",
		"code": "(L:XMLVAR_IsDeiceAirFrame, Number)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_AIRFRAME_DE_ICE_LED_RIGHT": {
		"method": "calcCode",
		"code": "(L:XMLVAR_IsDeiceAirFrame2)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_PROP_DE_ICE_LED": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD DEICE SWITCH, Bool)"
	},
	"Asobo.TBM 930.Anti-Ice.TBM930_WINDSHIELD_DE_ICE_LEDS": {
		"method": "calcCode",
		"code": "(A:PROP DEICE SWITCH:1, Bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_BARO_SYNC": {
		"method": "calcCode",
		"code": "1 (>K:BAROMETRIC)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_BARO_DEC": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_DEC) (>H:AP_BARO_DOWN)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_BARO_INC": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_INC) (>H:AP_BARO_UP)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_IAS_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_INC) } els{ (>K:AP_SPD_VAR_INC) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_IAS_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_DEC) } els{ (>K:AP_SPD_VAR_DEC) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_SPD_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Number) ! (>L:XMLVAR_AirSpeedIsInMach, Number)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_SPD_MACH": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_AirSpeedIsInMach, Number)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_SPD_KTS": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_AirSpeedIsInMach, Number)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_MAX_BANK_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_INC)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_MAX_BANK_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK, Radians) 0.5 > if{ (>K:AP_MAX_BANK_INC) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_Heading_Sync": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_HDG_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_PANEL_HEADING_HOLD) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_APR_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_APR_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD_OFF)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_BC_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD_OFF)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_FD_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_FD_TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (L:XMLVAR_APTrim) 0 == if{ (A:AUTOPILOT YAW DAMPER, Bool) ! (A:AUTOPILOT MASTER, Bool) and if{ (>K:YAW_DAMPER_TOGGLE) } } (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_YD_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT YAW DAMPER, Bool) if{ (>K:YAW_DAMPER_TOGGLE) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_ALT_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, Bool) ! if{ (>K:AP_ALT_HOLD) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_VS_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_PANEL_VS_HOLD) }"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_FLC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_FLC_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{(>K:FLIGHT_LEVEL_CHANGE)}"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AUTOPILOT_CRS1_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_DEC)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_CRS2_INC": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_INC)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_CRS2_SYNC": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, Radians) 57.29 * (>K:VOR2_SET)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_LVL_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT WING LEVELER, Bool) if{ (>K:AP_WING_LEVELER) (A:AUTOPILOT MASTER, Bool) if{ (>K:AUTOPILOT_OFF) } (>K:AP_PITCH_LEVELER_OFF) }"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AUTOPILOT_VNV_ON": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_VNV_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_AP_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_BANK_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK, Radians) 0.5 <"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_FD_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_HDG_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.TBM930_AUTOPILOT_SPD_LED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_VS_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_ALT_ALERT_CANCEL": {
		"method": "calcCode",
		"code": " 0 (>L:WT_CJ4_Altitude_Alerter_Active) 1 (>L:WT_CJ4_Altitude_Alerter_Cancel)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_FAST_DEC": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_DEC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_FAST_INC": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_INC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_PRESSED": {
		"method": "calcCode",
		"code": "(>H:WT_CJ4_AP_ALT_PRESSED)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_VAR_DEC": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_DEC)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_VNAV_ON": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_VNAV_ON,Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_HOLD": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_ALT_HOLD,Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_NAV_ON": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_NAV_ON,Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_HDG_ON": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_HDG_ON,Bool)"
	},
	"Working Title.CJ4.Air Condition / Pressurization.Pressurization Dump Switch ON": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION DUMP SWITCH, bool)"
	},
	"Working Title.CJ4.Fuel.Fuel Booster Pump L ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:1, bool)"
	},
	"Working Title.CJ4.Fuel.Fuel Booster Pump R ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:2, bool)"
	},
	"Working Title.CJ4.Engines.Eng L Man Ignition Switch ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:1, enum) 2 =="
	},
	"Working Title.CJ4.Engines.Eng R Man Ignition ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:2, enum) 2 =="
	},
	"Working Title.CJ4.Lights.WT_CJ4_BEACON_LIGHT_TOG": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_BEACON_1) ! d (>L:LIGHTING_BEACON_1) (>K:2:BEACON_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_LOGO_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_LOGO_1) ! d (>L:LIGHTING_LOGO_1) (>K:2:LOGO_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_BEACON_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_BEACON_1) 1 1 (>K:2:BEACON_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_BEACON_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_BEACON_1) 1 0 (>K:2:BEACON_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_NAV_LIGHT_TOG": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_NAV_1) ! d (>L:LIGHTING_NAV_1)  (>K:2:NAV_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_NAV_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_NAV_1) 1 1 (>K:2:NAV_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_NAV_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_NAV_1) 1 0 (>K:2:NAV_LIGHTS_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_STROBE_LIGHT_TOG": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_STROBE_1) ! d (>L:LIGHTING_STROBE_1) (>K:2:STROBES_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_STROBE_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_STROBE_1) 1 1 (>K:2:STROBES_SET)"
	},
	"Working Title.CJ4.Lights.WT_CJ4_STROBE_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_STROBE_1) 1 0 (>K:2:STROBES_SET)"
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV1_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_VOLUME_INC) "
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV1_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_VOLUME_DEC) "
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV2_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:NAV2_VOLUME_INC) "
	},
	"Working Title.CJ4.Radio.WT_CJ4_NAV2_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV2_VOLUME_DEC) "
	},
	"Fly By Wire.A320.Gear.Input.Autobrake Low On": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320.Gear.Autobrake Med On": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320.Gear.Input.Autobrake Max On": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO2_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ \n1 (>K:KOHLSMAN_INC) \n(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } \nels{ (L:XMLVAR_Baro1_SavedPressure, number) 5 + (>L:XMLVAR_Baro1_SavedPressure) }"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO2_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ \n\t\t1 (>K:KOHLSMAN_DEC) \n\t\t(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } \nels{ (L:XMLVAR_Baro1_SavedPressure, number) 5 - (>L:XMLVAR_Baro1_SavedPressure) }"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO2_STD_PUSH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) ! (>L:XMLVAR_Baro1_ForcedToSTD, bool) \n(L:XMLVAR_Baro1_ForcedToSTD, bool) if{ \n\t(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) \n\t1 (>K:BAROMETRIC_STD_PRESSURE) \n} els{ \n\t1 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) \n\t2 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) \n} "
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO3_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ \n\t\t2 (>K:KOHLSMAN_INC) \n\t\t(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } \n	 els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 + (>L:XMLVAR_Baro2_SavedPressure) } "
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_BARO3_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ \n\t\t2 (>K:KOHLSMAN_DEC) \n\t\t(A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } \n	 els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 - (>L:XMLVAR_Baro2_SavedPressure) } "
	},
	"Working Title.CJ4.Warning System.WT_CJ4_MASTER_CAUTION_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:MF_Master_Caution_Test)\n(>K:MASTER_CAUTION_ACKNOWLEDGE)"
	},
	"Fly By Wire.A320.Lights.A32NX_NAV_LIGHT_TOG": {
		"method": "calcCode",
		"code": "(L:LIGHTING_NAV_0)\n if{ \n0 0 (>K:2:NAV_LIGHTS_SET) \n0 0 (>K:2:LOGO_LIGHTS_SET) }\nels{ \n0 1 (>K:2:NAV_LIGHTS_SET) \n0 1 (>K:2:LOGO_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Warning System.WT_CJ4_MASTER_WARNING_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:MF_Master_Warning_Test) \n(>K:MASTER_WARNING_ACKNOWLEDGE)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OVHD BEACON LIGHTS ON": {
		"method": "calcCode",
		"code": "0 1 (>K:2:BEACON_LIGHTS_SET) "
	},
	"Fly By Wire.A320.Lights.Input.A32NX OVHD BEACON LIGHT OFF": {
		"method": "calcCode",
		"code": "0 0 (>K:2:BEACON_LIGHTS_SET)"
	},
	"Fly By Wire.A320.Autopilot.AUTOPILOT SPEED SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_SPEED_SELECTED, Number)"
	},
	"Fly By Wire.A320.Warning System.A32NX_MASTER_WARNING_PRESSED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MASTER_WARNING) \n1 (>L:PUSH_AUTOPILOT_MASTERAWARN_L) \n"
	},
	"Fly By Wire.A320.Warning System.A32NX_MASTER_WARNING_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_AUTOPILOT_MASTERAWARN_L)"
	},
	"Asobo.TBM 930.Lights.Output.TBM930_PANEL_BRIGHTNESS": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent)"
	},
	"Fly By Wire.A320.Autopilot.FCU MACH Value Selected & Pre-Selected Modes": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_SPEED_SELECTED, Number) 100 * near"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN1": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_GEN1, Bool) ! (>L:ASCRJ_ELEC_GEN1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN2": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_GEN2, Bool) ! (>L:ASCRJ_ELEC_GEN2)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_APUGEN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_APUGEN, Bool) ! (>L:ASCRJ_ELEC_APUGEN)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_DCSERVICE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_DCSERVICE, Bool) ! (>L:ASCRJ_ELEC_DCSERVICE)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_ACESSXFER": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_ACESSXFER, Bool) ! (>L:ASCRJ_ELEC_ACESSXFER)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_AUTOXFER1": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_AUTOXFER1, Bool) ! (>L:ASCRJ_ELEC_AUTOXFER1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_AUTOXFER2": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_AUTOXFER2, Bool) ! (>L:ASCRJ_ELEC_AUTOXFER2)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_IDG1": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_IDG1, Bool) ! (>L:ASCRJ_ELEC_IDG1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_IDG2": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ELEC_IDG2, Bool) ! (>L:ASCRJ_ELEC_IDG2)"
	},
	"Asobo.TBM 930.Gear.TBM930_LANDING_GEAR_DOWN": {
		"method": "calcCode",
		"code": "(>K:GEAR_DOWN)"
	},
	"Asobo.TBM 930.Gear.TBM930_LANDING_GEAR_UP": {
		"method": "calcCode",
		"code": "(>K:GEAR_UP)"
	},
	"Asobo.TBM 930.Gear.TBM930_GEAR_DOWN_LEDS": {
		"method": "calcCode",
		"code": "1\u00b70\u00b7(A:GEAR\u00b7LEFT\u00b7POSITION,\u00b7Percent)\u00b7100\u00b7==\u00b7?"
	},
	"Fly By Wire.A320.EFIS.Input.Toggle Flight Director": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Fly By Wire.A320.EFIS.Input.Baro increase": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_INC)"
	},
	"Fly By Wire.A320.EFIS.Input.Baro decrease": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_DEC)"
	},
	"Microsoft.Generic.Avionics.NAV HAS CLOSE DME": {
		"method": "calcCode",
		"code": "(A:NAV HAS CLOSE DME,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV HAS CLOSE LOCALIZER": {
		"method": "calcCode",
		"code": "(A:NAV HAS CLOSE LOCALIZER,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV HAS DME:index": {
		"method": "calcCode",
		"code": "(A:NAV HAS DME:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV HAS GLIDE SLOPE:index": {
		"method": "calcCode",
		"code": "(A:NAV HAS GLIDE SLOPE:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV HAS LOCALIZER:index": {
		"method": "calcCode",
		"code": "(A:NAV HAS LOCALIZER:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV HAS NAV:index": {
		"method": "calcCode",
		"code": "(A:NAV HAS NAV:index,Bool)"
	},
	"Microsoft.Generic.Avionics.NAV IDENT": {
		"method": "calcCode",
		"code": "(A:NAV IDENT,String)"
	},
	"Microsoft.Generic.Avionics.NAV LOCALIZER:index": {
		"method": "calcCode",
		"code": "(A:NAV LOCALIZER:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV MAGVAR:index": {
		"method": "calcCode",
		"code": "(A:NAV MAGVAR:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV NAME": {
		"method": "calcCode",
		"code": "(A:NAV NAME,String)"
	},
	"Microsoft.Generic.Avionics.NAV OBS:index": {
		"method": "calcCode",
		"code": "(A:NAV OBS:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV RADIAL:index": {
		"method": "calcCode",
		"code": "(A:NAV RADIAL:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV RADIAL ERROR:index": {
		"method": "calcCode",
		"code": "(A:NAV RADIAL ERROR:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV RAW GLIDE SLOPE:index": {
		"method": "calcCode",
		"code": "(A:NAV RAW GLIDE SLOPE:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV RELATIVE BEARING TO STATION:index": {
		"method": "calcCode",
		"code": "(A:NAV RELATIVE BEARING TO STATION:index,Degrees)"
	},
	"Microsoft.Generic.Avionics.NAV SIGNAL:index": {
		"method": "calcCode",
		"code": "(A:NAV SIGNAL:index,Number)"
	},
	"Microsoft.Generic.Avionics.NAV SOUND:index": {
		"method": "calcCode",
		"code": "(A:NAV SOUND:index,Bool)"
	},
	"Microsoft.Generic.Avionics.Output.NAV STANDBY FREQUENCY:index": {
		"method": "calcCode",
		"code": "(A:NAV STANDBY FREQUENCY:index,MHz)"
	},
	"Microsoft.Generic.Avionics.NAV TOFROM:index": {
		"method": "calcCode",
		"code": "(A:NAV TOFROM:index,Enum)"
	},
	"Microsoft.Generic.Avionics.NAV VOR DISTANCE": {
		"method": "calcCode",
		"code": "(A:NAV VOR DISTANCE,Meters)"
	},
	"Microsoft.Generic.Avionics.NAV VOR LATLONALT:index": {
		"method": "calcCode",
		"code": "(A:NAV VOR LATLONALT:index,Number)"
	},
	"Microsoft.Generic.Avionics.OUTER MARKER": {
		"method": "calcCode",
		"code": "(A:OUTER MARKER,Bool)"
	},
	"Microsoft.Generic.Avionics.OUTER MARKER LATLONALT": {
		"method": "calcCode",
		"code": "(A:OUTER MARKER LATLONALT,Number)"
	},
	"Microsoft.Generic.Avionics.PILOT TRANSMITTER TYPE": {
		"method": "calcCode",
		"code": "(A:PILOT TRANSMITTER TYPE,Enum)"
	},
	"Microsoft.Generic.Avionics.PILOT TRANSMITTING": {
		"method": "calcCode",
		"code": "(A:PILOT TRANSMITTING,Bool)"
	},
	"Microsoft.Generic.Avionics.SELECTED DME": {
		"method": "calcCode",
		"code": "(A:SELECTED DME,Number)"
	},
	"Microsoft.Generic.Avionics.SPEAKER ACTIVE": {
		"method": "calcCode",
		"code": "(A:SPEAKER ACTIVE,Bool)"
	},
	"Microsoft.Generic.Avionics.TRANSPONDER AVAILABLE": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Avionics.TRANSPONDER CODE": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:index,number)"
	},
	"Microsoft.Generic.Avionics.TRANSPONDER STATE": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER STATE:index,Enum)"
	},
	"Microsoft.Generic.Controls.AILERON AVERAGE DEFLECTION": {
		"method": "calcCode",
		"code": "(A:AILERON AVERAGE DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Controls.AILERON LEFT DEFLECTION": {
		"method": "calcCode",
		"code": "(A:AILERON LEFT DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Controls.AILERON LEFT DEFLECTION PCT": {
		"method": "calcCode",
		"code": "(A:AILERON LEFT DEFLECTION PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.AILERON POSITION": {
		"method": "calcCode",
		"code": "(A:AILERON POSITION,Position)"
	},
	"Microsoft.Generic.Controls.AILERON RIGHT DEFLECTION": {
		"method": "calcCode",
		"code": "(A:AILERON RIGHT DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Controls.AILERON RIGHT DEFLECTION PCT": {
		"method": "calcCode",
		"code": "(A:AILERON RIGHT DEFLECTION PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.AILERON TRIM": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM,Radians)"
	},
	"Microsoft.Generic.Controls.Output.AILERON TRIM PCT": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT, Percent over 100)"
	},
	"Microsoft.Generic.Controls.ALTERNATE STATIC SOURCE OPEN": {
		"method": "calcCode",
		"code": "(A:ALTERNATE STATIC SOURCE OPEN,Bool)"
	},
	"Microsoft.Generic.Controls.BRAKE INDICATOR": {
		"method": "calcCode",
		"code": "(A:BRAKE INDICATOR,Position)"
	},
	"Microsoft.Generic.Controls.BRAKE LEFT POSITION": {
		"method": "calcCode",
		"code": "(A:BRAKE LEFT POSITION,Position)"
	},
	"Microsoft.Generic.Controls.Output.BRAKE LEFT POSITION EX1": {
		"method": "calcCode",
		"code": "(A:BRAKE LEFT POSITION EX1,Position)"
	},
	"Microsoft.Generic.Controls.BRAKE PARKING INDICATOR": {
		"method": "calcCode",
		"code": "(A:BRAKE PARKING INDICATOR,Bool)"
	},
	"Microsoft.Generic.Controls.BRAKE PARKING POSITION": {
		"method": "calcCode",
		"code": "(A:BRAKE PARKING POSITION,Position)"
	},
	"Microsoft.Generic.Controls.BRAKE RIGHT POSITION": {
		"method": "calcCode",
		"code": "(A:BRAKE RIGHT POSITION,Position)"
	},
	"Microsoft.Generic.Controls.BRAKE RIGHT POSITION EX1": {
		"method": "calcCode",
		"code": "(A:BRAKE RIGHT POSITION EX1,Position)"
	},
	"Microsoft.Generic.Controls.ELEVATOR DEFLECTION": {
		"method": "calcCode",
		"code": "(A:ELEVATOR DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Controls.ELEVATOR DEFLECTION PCT": {
		"method": "calcCode",
		"code": "(A:ELEVATOR DEFLECTION PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.ELEVATOR POSITION": {
		"method": "calcCode",
		"code": "(A:ELEVATOR POSITION,Position)"
	},
	"Microsoft.Generic.Controls.Output.ELEVATOR TRIM INDICATOR": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM INDICATOR,Position)"
	},
	"Microsoft.Generic.Controls.Output.ELEVATOR TRIM PCT": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.ELEVATOR TRIM POSITION": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM POSITION,Radians)"
	},
	"Microsoft.Generic.Controls.FLAPS AVAILABLE": {
		"method": "calcCode",
		"code": "(A:FLAPS AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Controls.FLAPS HANDLE INDEX": {
		"method": "calcCode",
		"code": "(A:FLAPS HANDLE INDEX,Number)"
	},
	"Microsoft.Generic.Controls.FLAPS HANDLE PERCENT": {
		"method": "calcCode",
		"code": "(A:FLAPS HANDLE PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.FLAPS NUM HANDLE POSITIONS": {
		"method": "calcCode",
		"code": "(A:FLAPS NUM HANDLE POSITIONS,Number)"
	},
	"Microsoft.Generic.Controls.FLAP DAMAGE BY SPEED": {
		"method": "calcCode",
		"code": "(A:FLAP DAMAGE BY SPEED,Bool)"
	},
	"Microsoft.Generic.Controls.FLAP SPEED EXCEEDED": {
		"method": "calcCode",
		"code": "(A:FLAP SPEED EXCEEDED,Bool)"
	},
	"Microsoft.Generic.Controls.FOLDING WING HANDLE POSITION": {
		"method": "calcCode",
		"code": "(A:FOLDING WING HANDLE POSITION,Bool)"
	},
	"Microsoft.Generic.Controls.FUEL DUMP SWITCH": {
		"method": "calcCode",
		"code": "(A:FUEL DUMP SWITCH,Bool)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS LEFT ANGLE": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS LEFT ANGLE,Radians)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS LEFT INDEX": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS LEFT INDEX,Number)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS LEFT PERCENT": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS LEFT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS RIGHT ANGLE": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS RIGHT ANGLE,Radians)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS RIGHT INDEX": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS RIGHT INDEX,Number)"
	},
	"Microsoft.Generic.Controls.LEADING EDGE FLAPS RIGHT PERCENT": {
		"method": "calcCode",
		"code": "(A:LEADING EDGE FLAPS RIGHT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.RUDDER DEFLECTION": {
		"method": "calcCode",
		"code": "(A:RUDDER DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Controls.RUDDER DEFLECTION PCT": {
		"method": "calcCode",
		"code": "(A:RUDDER DEFLECTION PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.RUDDER PEDAL POSITION": {
		"method": "calcCode",
		"code": "(A:RUDDER PEDAL POSITION,Position)"
	},
	"Microsoft.Generic.Controls.RUDDER POSITION": {
		"method": "calcCode",
		"code": "(A:RUDDER POSITION,Position)"
	},
	"Microsoft.Generic.Controls.RUDDER TRIM": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM,Radians)"
	},
	"Microsoft.Generic.Controls.RUDDER TRIM PCT": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM PCT, Percent over 100)"
	},
	"Microsoft.Generic.Controls.SPOILERS ARMED": {
		"method": "calcCode",
		"code": "(A:SPOILERS ARMED,Bool)"
	},
	"Microsoft.Generic.Controls.Output.SPOILERS HANDLE POSITION": {
		"method": "calcCode",
		"code": "(A:SPOILERS HANDLE POSITION,Position)"
	},
	"Microsoft.Generic.Controls.SPOILERS LEFT POSITION": {
		"method": "calcCode",
		"code": "(A:SPOILERS LEFT POSITION,Position)"
	},
	"Microsoft.Generic.Controls.SPOILERS RIGHT POSITION": {
		"method": "calcCode",
		"code": "(A:SPOILERS RIGHT POSITION,Position)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS LEFT ANGLE": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT ANGLE,Radians)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS LEFT INDEX": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT INDEX,Number)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS LEFT PERCENT": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS RIGHT ANGLE": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS RIGHT ANGLE,Radians)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS RIGHT INDEX": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS RIGHT INDEX,Number)"
	},
	"Microsoft.Generic.Controls.TRAILING EDGE FLAPS RIGHT PERCENT": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS RIGHT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.YOKE X POSITION": {
		"method": "calcCode",
		"code": "(A:YOKE X POSITION,Position)"
	},
	"Microsoft.Generic.Controls.YOKE X POSITION WITH AP": {
		"method": "calcCode",
		"code": "(A:YOKE X POSITION WITH AP,Position)"
	},
	"Microsoft.Generic.Controls.YOKE Y POSITION": {
		"method": "calcCode",
		"code": "(A:YOKE Y POSITION,Position)"
	},
	"Microsoft.Generic.Controls.YOKE Y POSITION WITH AP": {
		"method": "calcCode",
		"code": "(A:YOKE Y POSITION WITH AP,Position)"
	},
	"Microsoft.Generic.Environment.AIRCRAFT WIND X": {
		"method": "calcCode",
		"code": "(A:AIRCRAFT WIND X,Knots)"
	},
	"Microsoft.Generic.Environment.AIRCRAFT WIND Y": {
		"method": "calcCode",
		"code": "(A:AIRCRAFT WIND Y,Knots)"
	},
	"Microsoft.Generic.Environment.AIRCRAFT WIND Z": {
		"method": "calcCode",
		"code": "(A:AIRCRAFT WIND Z,Knots)"
	},
	"Microsoft.Generic.Environment.AMBIENT DENSITY": {
		"method": "calcCode",
		"code": "(A:AMBIENT DENSITY,Slugs per cubic feet)"
	},
	"Microsoft.Generic.Environment.AMBIENT IN CLOUD": {
		"method": "calcCode",
		"code": "(A:AMBIENT IN CLOUD,Bool)"
	},
	"Microsoft.Generic.Environment.AMBIENT PRECIP STATE": {
		"method": "calcCode",
		"code": "(A:AMBIENT PRECIP STATE,mask)"
	},
	"Microsoft.Generic.Environment.AMBIENT PRESSURE": {
		"method": "calcCode",
		"code": "(A:AMBIENT PRESSURE,Inches of mercury, inHg)"
	},
	"Microsoft.Generic.Environment.AMBIENT TEMPERATURE": {
		"method": "calcCode",
		"code": "(A:AMBIENT TEMPERATURE,Celsius)"
	},
	"Microsoft.Generic.Environment.AMBIENT VISIBILITY": {
		"method": "calcCode",
		"code": "(A:AMBIENT VISIBILITY,Meters)"
	},
	"Microsoft.Generic.Environment.AMBIENT WIND DIRECTION": {
		"method": "calcCode",
		"code": "(A:AMBIENT WIND DIRECTION,Degrees)"
	},
	"Microsoft.Generic.Environment.AMBIENT WIND VELOCITY": {
		"method": "calcCode",
		"code": "(A:AMBIENT WIND VELOCITY,Knots)"
	},
	"Microsoft.Generic.Environment.AMBIENT WIND X": {
		"method": "calcCode",
		"code": "(A:AMBIENT WIND X,Meters per second)"
	},
	"Microsoft.Generic.Environment.AMBIENT WIND Y": {
		"method": "calcCode",
		"code": "(A:AMBIENT WIND Y,Meters per second)"
	},
	"Microsoft.Generic.Environment.AMBIENT WIND Z": {
		"method": "calcCode",
		"code": "(A:AMBIENT WIND Z,Meters per second)"
	},
	"Microsoft.Generic.Environment.BAROMETER PRESSURE": {
		"method": "calcCode",
		"code": "(A:BAROMETER PRESSURE,Millibars)"
	},
	"Microsoft.Generic.Environment.SEA LEVEL PRESSURE": {
		"method": "calcCode",
		"code": "(A:SEA LEVEL PRESSURE,Millibars)"
	},
	"Microsoft.Generic.Environment.STANDARD ATM TEMPERATURE": {
		"method": "calcCode",
		"code": "(A:STANDARD ATM TEMPERATURE,Rankine)"
	},
	"Microsoft.Generic.Environment.STRUCT AMBIENT WIND": {
		"method": "calcCode",
		"code": "(A:STRUCT AMBIENT WIND,Feet_per_second)"
	},
	"Microsoft.Generic.Environment.TOTAL AIR TEMPERATURE": {
		"method": "calcCode",
		"code": "(A:TOTAL AIR TEMPERATURE,Celsius)"
	},
	"Microsoft.Generic.Environment.WINDSHIELD RAIN EFFECT AVAILABLE": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD RAIN EFFECT AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Environment.ZULU TIME": {
		"method": "calcCode",
		"code": "(E:ZULU TIME,second)"
	},
	"Microsoft.Generic.Environment.ZULU DAY OF WEEK": {
		"method": "calcCode",
		"code": "(E:ZULU DAY OF WEEK,number)"
	},
	"Microsoft.Generic.Environment.ZULU DAY OF MONTH": {
		"method": "calcCode",
		"code": "(E:ZULU DAY OF MONTH,number)"
	},
	"Microsoft.Generic.Environment.ZULU DAY OF YEAR": {
		"method": "calcCode",
		"code": "(E:ZULU DAY OF YEAR,number)"
	},
	"Microsoft.Generic.Environment.ZULU MONTH OF YEAR": {
		"method": "calcCode",
		"code": "(E:ZULU MONTH OF YEAR,number)"
	},
	"Microsoft.Generic.Environment.ZULU YEAR": {
		"method": "calcCode",
		"code": "(E:ZULU YEAR,number)"
	},
	"Microsoft.Generic.Environment.LOCAL TIME": {
		"method": "calcCode",
		"code": "(E:LOCAL TIME,second)"
	},
	"Microsoft.Generic.Environment.LOCAL DAY OF WEEK": {
		"method": "calcCode",
		"code": "(E:LOCAL DAY OF WEEK,number)"
	},
	"Microsoft.Generic.Environment.LOCAL DAY OF MONTH": {
		"method": "calcCode",
		"code": "(E:LOCAL DAY OF MONTH,number)"
	},
	"Microsoft.Generic.Environment.LOCAL DAY OF YEAR": {
		"method": "calcCode",
		"code": "(E:LOCAL DAY OF YEAR,number)"
	},
	"Microsoft.Generic.Environment.LOCAL MONTH OF YEAR": {
		"method": "calcCode",
		"code": "(E:LOCAL MONTH OF YEAR,number)"
	},
	"Microsoft.Generic.Environment.LOCAL YEAR": {
		"method": "calcCode",
		"code": "(E:LOCAL YEAR,number)"
	},
	"Microsoft.Generic.Environment.TIME ZONE OFFSET": {
		"method": "calcCode",
		"code": "(E:TIME ZONE OFFSET,second)"
	},
	"Microsoft.Generic.Environment.Output.TIME OF DAY": {
		"method": "calcCode",
		"code": "(E:TIME OF DAY,enum)"
	},
	"Microsoft.Generic.Environment.SIMULATION TIME": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second)"
	},
	"Microsoft.Generic.Flight Instrumentation.AIRSPEED BARBER POLE": {
		"method": "calcCode",
		"code": "(A:AIRSPEED BARBER POLE,Knots)"
	},
	"Microsoft.Generic.Flight Instrumentation.AIRSPEED INDICATED": {
		"method": "calcCode",
		"code": "(A:AIRSPEED INDICATED,Knots)"
	},
	"Microsoft.Generic.Flight Instrumentation.AIRSPEED MACH": {
		"method": "calcCode",
		"code": "(A:AIRSPEED MACH,Mach)"
	},
	"Microsoft.Generic.Flight Instrumentation.AIRSPEED TRUE": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE,Knots)"
	},
	"Microsoft.Generic.Flight Instrumentation.AIRSPEED TRUE CALIBRATE": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE CALIBRATE,Degrees)"
	},
	"Microsoft.Generic.Flight Instrumentation.ANGLE OF ATTACK INDICATOR": {
		"method": "calcCode",
		"code": "(A:ANGLE OF ATTACK INDICATOR,Radians)"
	},
	"Microsoft.Generic.Flight Instrumentation.ATTITUDE BARS POSITION": {
		"method": "calcCode",
		"code": "(A:ATTITUDE BARS POSITION,Percent Over 100)"
	},
	"Microsoft.Generic.Flight Instrumentation.ATTITUDE CAGE": {
		"method": "calcCode",
		"code": "(A:ATTITUDE CAGE,Bool)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.ATTITUDE INDICATOR BANK DEGREES": {
		"method": "calcCode",
		"code": "(A:ATTITUDE INDICATOR BANK DEGREES,Degrees)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.ATTITUDE INDICATOR PITCH DEGREES": {
		"method": "calcCode",
		"code": "(A:ATTITUDE INDICATOR PITCH DEGREES,degrees)"
	},
	"Microsoft.Generic.Flight Instrumentation.BARBER POLE MACH": {
		"method": "calcCode",
		"code": "(A:BARBER POLE MACH,Mach)"
	},
	"Microsoft.Generic.Flight Instrumentation.DELTA HEADING RATE": {
		"method": "calcCode",
		"code": "(A:DELTA HEADING RATE,Radians per second)"
	},
	"Microsoft.Generic.Flight Instrumentation.GYRO DRIFT ERROR": {
		"method": "calcCode",
		"code": "(A:GYRO DRIFT ERROR,Radians)"
	},
	"Microsoft.Generic.Flight Instrumentation.HEADING INDICATOR": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR,Degrees)"
	},
	"Microsoft.Generic.Flight Instrumentation.INDICATED ALTITUDE": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE,Feet)"
	},
	"Microsoft.Generic.Flight Instrumentation.INDICATED ALTITUDE EX1": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE EX1,Feet)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.KOHLSMAN SETTING HG": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:index, inHg)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.KOHLSMAN SETTING MB": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING MB:index, Millibars)"
	},
	"Microsoft.Generic.Flight Instrumentation.KOHLSMAN SETTING STD": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING STD:index,Bool)"
	},
	"Microsoft.Generic.Flight Instrumentation.MACH MAX OPERATE": {
		"method": "calcCode",
		"code": "(A:MACH MAX OPERATE,Mach)"
	},
	"Microsoft.Generic.Flight Instrumentation.MAX G FORCE": {
		"method": "calcCode",
		"code": "(A:MAX G FORCE,Gforce)"
	},
	"Microsoft.Generic.Flight Instrumentation.MIN G FORCE": {
		"method": "calcCode",
		"code": "(A:MIN G FORCE,Gforce)"
	},
	"Microsoft.Generic.Flight Instrumentation.OVERSPEED WARNING": {
		"method": "calcCode",
		"code": "(A:OVERSPEED WARNING,Bool)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL ADF": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL ADF,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL AIRSPEED": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL AIRSPEED,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL ALTIMETER": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL ALTIMETER,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL ATTITUDE": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL ATTITUDE,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL AVIONICS": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL AVIONICS,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL COMM": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL COMM,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL COMPASS": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL COMPASS,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL ELECTRICAL": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL ELECTRICAL,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL ENGINE": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL ENGINE,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL FUEL INDICATOR": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL FUEL INDICATOR,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL HEADING": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL HEADING,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL NAV": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL NAV,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL PITOT": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL PITOT,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL TRANSPONDER": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL TRANSPONDER,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL TURN COORDINATOR": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL TURN COORDINATOR,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL VACUUM": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL VACUUM,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.PARTIAL PANEL VERTICAL VELOCITY": {
		"method": "calcCode",
		"code": "(A:PARTIAL PANEL VERTICAL VELOCITY,Enum)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.PLANE HEADING DEGREES GYRO": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES GYRO,Degrees)"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.RADIO HEIGHT": {
		"method": "calcCode",
		"code": "(A:RADIO HEIGHT,Feet)"
	},
	"Microsoft.Generic.Flight Instrumentation.STALL WARNING": {
		"method": "calcCode",
		"code": "(A:STALL WARNING,Bool)"
	},
	"Microsoft.Generic.Flight Instrumentation.SUCTION PRESSURE": {
		"method": "calcCode",
		"code": "(A:SUCTION PRESSURE,Inches of Mercury, inHg)"
	},
	"Microsoft.Generic.Flight Instrumentation.TURN COORDINATOR BALL": {
		"method": "calcCode",
		"code": "(A:TURN COORDINATOR BALL,Position)"
	},
	"Microsoft.Generic.Flight Instrumentation.TURN COORDINATOR BALL INV": {
		"method": "calcCode",
		"code": "(A:TURN COORDINATOR BALL INV,Position)"
	},
	"Microsoft.Generic.Flight Instrumentation.VERTICAL SPEED": {
		"method": "calcCode",
		"code": "(A:VERTICAL SPEED,Feet per minute)"
	},
	"Microsoft.Generic.Flight Instrumentation.WISKEY COMPASS INDICATION DEGREES": {
		"method": "calcCode",
		"code": "(A:WISKEY COMPASS INDICATION DEGREES,Degrees)"
	},
	"Microsoft.Generic.Fuel.ESTIMATED FUEL FLOW": {
		"method": "calcCode",
		"code": "(A:ESTIMATED FUEL FLOW,Pounds per hour)"
	},
	"Microsoft.Generic.Fuel.FUEL CROSS FEED": {
		"method": "calcCode",
		"code": "(A:FUEL CROSS FEED,Enum)"
	},
	"Microsoft.Generic.Fuel.FUEL LEFT CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL LEFT CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL LEFT QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL LEFT QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL RIGHT CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL RIGHT CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL RIGHT QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL RIGHT QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL SELECTED QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL SELECTED QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL SELECTED QUANTITY PERCENT": {
		"method": "calcCode",
		"code": "(A:FUEL SELECTED QUANTITY PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER2 CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER2 CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER2 LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER2 LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER2 QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER2 QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER3 CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER3 CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER3 LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER3 LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER3 QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER3 QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK CENTER QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK CENTER QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL1 CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL1 CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL1 LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL1 LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL1 QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL1 QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL2 CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL2 CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL2 LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL2 LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK EXTERNAL2 QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK EXTERNAL2 QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT AUX CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT AUX CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT AUX LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT AUX LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT AUX QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT AUX QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT MAIN CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT MAIN CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT MAIN LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT MAIN LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT MAIN QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT MAIN QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT TIP CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT TIP CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT TIP LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT TIP LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK LEFT TIP QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK LEFT TIP QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT AUX CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT AUX CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT AUX LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT AUX LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT AUX QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT AUX QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT MAIN CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT MAIN CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT MAIN LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT MAIN LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT MAIN QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT MAIN QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT TIP CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT TIP CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT TIP LEVEL": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT TIP LEVEL,Percent Over 100)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK RIGHT TIP QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TANK RIGHT TIP QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TANK SELECTOR:index": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:index,Enum)"
	},
	"Microsoft.Generic.Fuel.FUEL TOTAL CAPACITY": {
		"method": "calcCode",
		"code": "(A:FUEL TOTAL CAPACITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TOTAL QUANTITY": {
		"method": "calcCode",
		"code": "(A:FUEL TOTAL QUANTITY,Gallons)"
	},
	"Microsoft.Generic.Fuel.FUEL TOTAL QUANTITY WEIGHT": {
		"method": "calcCode",
		"code": "(A:FUEL TOTAL QUANTITY WEIGHT,Pounds)"
	},
	"Microsoft.Generic.Fuel.FUEL WEIGHT PER GALLON": {
		"method": "calcCode",
		"code": "(A:FUEL WEIGHT PER GALLON,Pounds)"
	},
	"Microsoft.Generic.Fuel.NEW FUEL SYSTEM": {
		"method": "calcCode",
		"code": "(A:NEW FUEL SYSTEM,Bool)"
	},
	"Microsoft.Generic.Fuel.NUM FUEL SELECTORS": {
		"method": "calcCode",
		"code": "(A:NUM FUEL SELECTORS,Number)"
	},
	"Microsoft.Generic.Fuel.UNLIMITED FUEL": {
		"method": "calcCode",
		"code": "(A:UNLIMITED FUEL,Bool)"
	},
	"Microsoft.Generic.Interaction.EXIT OPEN:index": {
		"method": "calcCode",
		"code": "(A:EXIT OPEN:index,Percent Over 100)"
	},
	"Microsoft.Generic.Interaction.EXIT POSX": {
		"method": "calcCode",
		"code": "(A:EXIT POSX,Feet)"
	},
	"Microsoft.Generic.Interaction.EXIT POSY": {
		"method": "calcCode",
		"code": "(A:EXIT POSY,Feet)"
	},
	"Microsoft.Generic.Interaction.EXIT POSZ": {
		"method": "calcCode",
		"code": "(A:EXIT POSZ,Feet)"
	},
	"Microsoft.Generic.Interaction.EXIT TYPE": {
		"method": "calcCode",
		"code": "(A:EXIT TYPE,Enum)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT BANK": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT BANK,Degrees)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT HEADING": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT HEADING,Degrees)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY LEFT BEND": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY LEFT BEND,Percent)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY LEFT DEPLOYMENT": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY LEFT DEPLOYMENT,Degrees)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY RIGHT BEND": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY RIGHT BEND,Percent)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT,Degrees)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY TOP HORIZONTAL": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY TOP HORIZONTAL,Percent)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT JETWAY TOP VERTICAL": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT JETWAY TOP VERTICAL,Percent)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT OPEN": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT OPEN,Percent over 100)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT PITCH": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT PITCH,Degrees)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT POSX": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT POSX,Feet)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT POSY": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT POSY,Feet)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT POSZ": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT POSZ,Feet)"
	},
	"Microsoft.Generic.Interaction.INTERACTIVE POINT TYPE": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT TYPE,Enum)"
	},
	"Microsoft.Generic.Controls.ANTISKID BRAKES ACTIVE": {
		"method": "calcCode",
		"code": "(A:ANTISKID BRAKES ACTIVE,Bool)"
	},
	"Microsoft.Generic.Controls.AUTOBRAKES ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOBRAKES ACTIVE,Bool)"
	},
	"Microsoft.Generic.Controls.AUTO BRAKE SWITCH CB": {
		"method": "calcCode",
		"code": "(A:AUTO BRAKE SWITCH CB,Number)"
	},
	"Microsoft.Generic.Gear.AUX WHEEL ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:AUX WHEEL ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Gear.AUX WHEEL RPM": {
		"method": "calcCode",
		"code": "(A:AUX WHEEL RPM,Rpm)"
	},
	"Microsoft.Generic.Gear.CENTER WHEEL ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:CENTER WHEEL ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Gear.CENTER WHEEL RPM": {
		"method": "calcCode",
		"code": "(A:CENTER WHEEL RPM,Rpm)"
	},
	"Microsoft.Generic.Gear.GEAR ANIMATION POSITION:index": {
		"method": "calcCode",
		"code": "(A:GEAR ANIMATION POSITION:index,Number)"
	},
	"Microsoft.Generic.Gear.GEAR AUX POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR AUX POSITION,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR AUX STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:GEAR AUX STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR AUX STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:GEAR AUX STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR CENTER POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER POSITION,Percent)"
	},
	"Microsoft.Generic.Gear.GEAR CENTER STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR CENTER STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR DAMAGE BY SPEED": {
		"method": "calcCode",
		"code": "(A:GEAR DAMAGE BY SPEED,Bool)"
	},
	"Microsoft.Generic.Gear.GEAR EMERGENCY HANDLE POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR EMERGENCY HANDLE POSITION,Bool)"
	},
	"Microsoft.Generic.Gear.GEAR HANDLE POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR HANDLE POSITION,Bool)"
	},
	"Microsoft.Generic.Gear.GEAR HYDRAULIC PRESSURE": {
		"method": "calcCode",
		"code": "(A:GEAR HYDRAULIC PRESSURE,Pound)"
	},
	"Microsoft.Generic.Gear.GEAR LEFT POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT POSITION,Percent)"
	},
	"Microsoft.Generic.Gear.GEAR LEFT STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR LEFT STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR POSITION:index": {
		"method": "calcCode",
		"code": "(A:GEAR POSITION:index,Enum)"
	},
	"Microsoft.Generic.Gear.GEAR RIGHT POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT POSITION,Percent)"
	},
	"Microsoft.Generic.Gear.GEAR RIGHT STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR RIGHT STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR SPEED EXCEEDED": {
		"method": "calcCode",
		"code": "(A:GEAR SPEED EXCEEDED,Bool)"
	},
	"Microsoft.Generic.Gear.GEAR STEER ANGLE:index": {
		"method": "calcCode",
		"code": "(A:GEAR STEER ANGLE:index,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR STEER ANGLE PCT:index": {
		"method": "calcCode",
		"code": "(A:GEAR STEER ANGLE PCT:index,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR TAIL POSITION": {
		"method": "calcCode",
		"code": "(A:GEAR TAIL POSITION,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.GEAR TOTAL PCT EXTENDED": {
		"method": "calcCode",
		"code": "(A:GEAR TOTAL PCT EXTENDED,Percentage)"
	},
	"Microsoft.Generic.Gear.GEAR WARNING": {
		"method": "calcCode",
		"code": "(A:GEAR WARNING,Enum)"
	},
	"Microsoft.Generic.Gear.IS GEAR FLOATS": {
		"method": "calcCode",
		"code": "(A:IS GEAR FLOATS,Bool)"
	},
	"Microsoft.Generic.Gear.IS GEAR RETRACTABLE": {
		"method": "calcCode",
		"code": "(A:IS GEAR RETRACTABLE,Bool)"
	},
	"Microsoft.Generic.Gear.IS GEAR SKIDS": {
		"method": "calcCode",
		"code": "(A:IS GEAR SKIDS,Bool)"
	},
	"Microsoft.Generic.Gear.IS GEAR SKIS": {
		"method": "calcCode",
		"code": "(A:IS GEAR SKIS,Bool)"
	},
	"Microsoft.Generic.Gear.IS GEAR WHEELS": {
		"method": "calcCode",
		"code": "(A:IS GEAR WHEELS,Bool)"
	},
	"Microsoft.Generic.Gear.LEFT WHEEL ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:LEFT WHEEL ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Gear.LEFT WHEEL RPM": {
		"method": "calcCode",
		"code": "(A:LEFT WHEEL RPM,Rpm)"
	},
	"Microsoft.Generic.Gear.NOSEWHEEL LOCK ON": {
		"method": "calcCode",
		"code": "(A:NOSEWHEEL LOCK ON,Bool)"
	},
	"Microsoft.Generic.Controls.REJECTED TAKEOFF BRAKES ACTIVE": {
		"method": "calcCode",
		"code": "(A:REJECTED TAKEOFF BRAKES ACTIVE,Bool)"
	},
	"Microsoft.Generic.Gear.RETRACT FLOAT SWITCH": {
		"method": "calcCode",
		"code": "(A:RETRACT FLOAT SWITCH,Bool)"
	},
	"Microsoft.Generic.Gear.RETRACT LEFT FLOAT EXTENDED": {
		"method": "calcCode",
		"code": "(A:RETRACT LEFT FLOAT EXTENDED,Percent)"
	},
	"Microsoft.Generic.Gear.RETRACT RIGHT FLOAT EXTENDED": {
		"method": "calcCode",
		"code": "(A:RETRACT RIGHT FLOAT EXTENDED,Percent)"
	},
	"Microsoft.Generic.Gear.RIGHT WHEEL ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:RIGHT WHEEL ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Gear.RIGHT WHEEL RPM": {
		"method": "calcCode",
		"code": "(A:RIGHT WHEEL RPM,Rpm)"
	},
	"Microsoft.Generic.Gear.STEER INPUT CONTROL": {
		"method": "calcCode",
		"code": "(A:STEER INPUT CONTROL,Percent over 100)"
	},
	"Microsoft.Generic.Gear.TAILWHEEL LOCK ON": {
		"method": "calcCode",
		"code": "(A:TAILWHEEL LOCK ON,Bool)"
	},
	"Microsoft.Generic.Gear.WATER LEFT RUDDER EXTENDED": {
		"method": "calcCode",
		"code": "(A:WATER LEFT RUDDER EXTENDED,Percentage)"
	},
	"Microsoft.Generic.Gear.WATER LEFT RUDDER STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:WATER LEFT RUDDER STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.WATER LEFT RUDDER STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:WATER LEFT RUDDER STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.WATER RIGHT RUDDER EXTENDED": {
		"method": "calcCode",
		"code": "(A:WATER RIGHT RUDDER EXTENDED,Percentage)"
	},
	"Microsoft.Generic.Gear.WATER RIGHT RUDDER STEER ANGLE": {
		"method": "calcCode",
		"code": "(A:WATER RIGHT RUDDER STEER ANGLE,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.WATER RIGHT RUDDER STEER ANGLE PCT": {
		"method": "calcCode",
		"code": "(A:WATER RIGHT RUDDER STEER ANGLE PCT,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.WATER RUDDER HANDLE POSITION": {
		"method": "calcCode",
		"code": "(A:WATER RUDDER HANDLE POSITION,Percent Over 100)"
	},
	"Microsoft.Generic.Gear.WHEEL ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:WHEEL ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Gear.WHEEL RPM": {
		"method": "calcCode",
		"code": "(A:WHEEL RPM,Rpm)"
	},
	"Microsoft.Generic.Lights.LANDING LIGHT PBH": {
		"method": "calcCode",
		"code": "(A:LANDING LIGHT PBH,Number)"
	},
	"Microsoft.Generic.Lights.LIGHT BACKLIGHT INTENSITY": {
		"method": "calcCode",
		"code": "(A:LIGHT BACKLIGHT INTENSITY,Percent over 100)"
	},
	"Microsoft.Generic.Lights.LIGHT BEACON": {
		"method": "calcCode",
		"code": "(A:LIGHT BEACON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT BEACON ON": {
		"method": "calcCode",
		"code": "(A:LIGHT BEACON ON,Bool)"
	},
	"Microsoft.Generic.Controls.LIGHT BRAKE ON": {
		"method": "calcCode",
		"code": "(A:LIGHT BRAKE ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT CABIN": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT CABIN ON": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT GYROLIGHT INTENSITY": {
		"method": "calcCode",
		"code": "(A:LIGHT GYROLIGHT INTENSITY,Percent over 100)"
	},
	"Microsoft.Generic.Lights.LIGHT HEADLIGHT INTENSITY": {
		"method": "calcCode",
		"code": "(A:LIGHT HEADLIGHT INTENSITY,Percent over 100)"
	},
	"Microsoft.Generic.Lights.LIGHT HEAD ON": {
		"method": "calcCode",
		"code": "(A:LIGHT HEAD ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT LANDING": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT LANDING ON": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT LOGO": {
		"method": "calcCode",
		"code": "(A:LIGHT LOGO,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT LOGO ON": {
		"method": "calcCode",
		"code": "(A:LIGHT LOGO ON,Bool)"
	},
	"Microsoft.Generic.Lights.Output.LIGHT NAV": {
		"method": "calcCode",
		"code": "(A:LIGHT NAV,Bool)"
	},
	"Microsoft.Generic.Lights.Output.LIGHT NAV ON": {
		"method": "calcCode",
		"code": "(A:LIGHT NAV ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT ON STATES": {
		"method": "calcCode",
		"code": "(A:LIGHT ON STATES,Mask)"
	},
	"Microsoft.Generic.Lights.LIGHT PANEL": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT PANEL ON": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT RECOGNITION": {
		"method": "calcCode",
		"code": "(A:LIGHT RECOGNITION,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT RECOGNITION ON": {
		"method": "calcCode",
		"code": "(A:LIGHT RECOGNITION ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT STATES": {
		"method": "calcCode",
		"code": "(A:LIGHT STATES,Mask)"
	},
	"Microsoft.Generic.Lights.LIGHT STROBE": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT STROBE ON": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT TAXI": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT TAXI ON": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI ON,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT WING": {
		"method": "calcCode",
		"code": "(A:LIGHT WING,Bool)"
	},
	"Microsoft.Generic.Lights.LIGHT WING ON": {
		"method": "calcCode",
		"code": "(A:LIGHT WING ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.AIRSPEED SELECT INDICATED OR TRUE": {
		"method": "calcCode",
		"code": "(A:AIRSPEED SELECT INDICATED OR TRUE,Knots)"
	},
	"Microsoft.Generic.Miscellaneous.ANEMOMETER PCT RPM": {
		"method": "calcCode",
		"code": "(A:ANEMOMETER PCT RPM,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.ANIMATION DELTA TIME": {
		"method": "calcCode",
		"code": "(A:ANIMATION DELTA TIME,Seconds)"
	},
	"Microsoft.Generic.Miscellaneous.ANNUNCIATOR SWITCH": {
		"method": "calcCode",
		"code": "(A:ANNUNCIATOR SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.APU GENERATOR ACTIVE": {
		"method": "calcCode",
		"code": "(A:APU GENERATOR ACTIVE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.APU GENERATOR SWITCH": {
		"method": "calcCode",
		"code": "(A:APU GENERATOR SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.APU ON FIRE DETECTED": {
		"method": "calcCode",
		"code": "(A:APU ON FIRE DETECTED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.APU PCT RPM": {
		"method": "calcCode",
		"code": "(A:APU PCT RPM,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.APU PCT STARTER": {
		"method": "calcCode",
		"code": "(A:APU PCT STARTER,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.APU VOLTS": {
		"method": "calcCode",
		"code": "(A:APU VOLTS,Volts)"
	},
	"Microsoft.Generic.Miscellaneous.ARTIFICIAL GROUND ELEVATION": {
		"method": "calcCode",
		"code": "(A:ARTIFICIAL GROUND ELEVATION,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.ATC HEAVY": {
		"method": "calcCode",
		"code": "(A:ATC HEAVY,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.ATC SUGGESTED MIN RWY LANDING": {
		"method": "calcCode",
		"code": "(A:ATC SUGGESTED MIN RWY LANDING,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.ATC SUGGESTED MIN RWY TAKEOFF": {
		"method": "calcCode",
		"code": "(A:ATC SUGGESTED MIN RWY TAKEOFF,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.AUTO COORDINATION": {
		"method": "calcCode",
		"code": "(A:AUTO COORDINATION,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.BETA DOT": {
		"method": "calcCode",
		"code": "(A:BETA DOT,Radians per second)"
	},
	"Microsoft.Generic.Miscellaneous.BLEED AIR SOURCE CONTROL": {
		"method": "calcCode",
		"code": "(A:BLEED AIR SOURCE CONTROL,Enum)"
	},
	"Microsoft.Generic.Controls.Output.BRAKE DEPENDENT HYDRAULIC PRESSURE": {
		"method": "calcCode",
		"code": "(A:BRAKE DEPENDENT HYDRAULIC PRESSURE,psi)"
	},
	"Microsoft.Generic.Miscellaneous.CABIN NO SMOKING ALERT SWITCH": {
		"method": "calcCode",
		"code": "(A:CABIN NO SMOKING ALERT SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CATEGORY": {
		"method": "calcCode",
		"code": "(A:CATEGORY,String)"
	},
	"Microsoft.Generic.Miscellaneous.CG AFT LIMIT": {
		"method": "calcCode",
		"code": "(A:CG AFT LIMIT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CG FWD LIMIT": {
		"method": "calcCode",
		"code": "(A:CG FWD LIMIT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CG MAX MACH": {
		"method": "calcCode",
		"code": "(A:CG MAX MACH,Machs)"
	},
	"Microsoft.Generic.Miscellaneous.CG MIN MACH": {
		"method": "calcCode",
		"code": "(A:CG MIN MACH,Machs)"
	},
	"Microsoft.Generic.Miscellaneous.CG PERCENT": {
		"method": "calcCode",
		"code": "(A:CG PERCENT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CG PERCENT LATERAL": {
		"method": "calcCode",
		"code": "(A:CG PERCENT LATERAL,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CONCORDE NOSE ANGLE": {
		"method": "calcCode",
		"code": "(A:CONCORDE NOSE ANGLE,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.CONCORDE VISOR NOSE HANDLE": {
		"method": "calcCode",
		"code": "(A:CONCORDE VISOR NOSE HANDLE,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.CONCORDE VISOR POSITION PERCENT": {
		"method": "calcCode",
		"code": "(A:CONCORDE VISOR POSITION PERCENT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CRASH FLAG": {
		"method": "calcCode",
		"code": "(A:CRASH FLAG,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.CRASH SEQUENCE": {
		"method": "calcCode",
		"code": "(A:CRASH SEQUENCE,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.DECISION ALTITUDE MSL": {
		"method": "calcCode",
		"code": "(A:DECISION ALTITUDE MSL,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.DECISION HEIGHT": {
		"method": "calcCode",
		"code": "(A:DECISION HEIGHT,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.DESIGN SPEED VC": {
		"method": "calcCode",
		"code": "(A:DESIGN SPEED VC,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.DESIGN SPEED VS0": {
		"method": "calcCode",
		"code": "(A:DESIGN SPEED VS0,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.DESIGN SPEED VS1": {
		"method": "calcCode",
		"code": "(A:DESIGN SPEED VS1,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.Output.DISK BANK ANGLE": {
		"method": "calcCode",
		"code": "(A:DISK BANK ANGLE:index,Degrees)"
	},
	"Microsoft.Generic.Miscellaneous.Output.DISK BANK PCT": {
		"method": "calcCode",
		"code": "(A:DISK BANK PCT:index,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.Output.DISK CONING PCT": {
		"method": "calcCode",
		"code": "(A:DISK CONING PCT:index,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.Output.DISK PITCH ANGLE": {
		"method": "calcCode",
		"code": "(A:DISK PITCH ANGLE:index,Degrees)"
	},
	"Microsoft.Generic.Miscellaneous.Output.DISK PITCH PCT": {
		"method": "calcCode",
		"code": "(A:DISK PITCH PCT:index,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.DROPPABLE OBJECTS UI NAME": {
		"method": "calcCode",
		"code": "(A:DROPPABLE OBJECTS UI NAME,String)"
	},
	"Microsoft.Generic.Miscellaneous.DYNAMIC PRESSURE": {
		"method": "calcCode",
		"code": "(A:DYNAMIC PRESSURE,Pounds)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL OLD CHARGING AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL OLD CHARGING AMPS,Amps)"
	},
	"Microsoft.Generic.Miscellaneous.ELEVON DEFLECTION": {
		"method": "calcCode",
		"code": "(A:ELEVON DEFLECTION,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.EMPTY WEIGHT": {
		"method": "calcCode",
		"code": "(A:EMPTY WEIGHT,Pounds)"
	},
	"Microsoft.Generic.Miscellaneous.EMPTY WEIGHT CROSS COUPLED MOI": {
		"method": "calcCode",
		"code": "(A:EMPTY WEIGHT CROSS COUPLED MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.EMPTY WEIGHT PITCH MOI": {
		"method": "calcCode",
		"code": "(A:EMPTY WEIGHT PITCH MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.EMPTY WEIGHT ROLL MOI": {
		"method": "calcCode",
		"code": "(A:EMPTY WEIGHT ROLL MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.EMPTY WEIGHT YAW MOI": {
		"method": "calcCode",
		"code": "(A:EMPTY WEIGHT YAW MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.ESTIMATED CRUISE SPEED": {
		"method": "calcCode",
		"code": "(A:ESTIMATED CRUISE SPEED,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.FIRE BOTTLE DISCHARGED": {
		"method": "calcCode",
		"code": "(A:FIRE BOTTLE DISCHARGED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.FIRE BOTTLE SWITCH": {
		"method": "calcCode",
		"code": "(A:FIRE BOTTLE SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.FUEL SELECTED TRANSFER MODE": {
		"method": "calcCode",
		"code": "(A:FUEL SELECTED TRANSFER MODE,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.FULL THROTTLE THRUST TO WEIGHT RATIO": {
		"method": "calcCode",
		"code": "(A:FULL THROTTLE THRUST TO WEIGHT RATIO,Number)"
	},
	"Microsoft.Generic.Miscellaneous.GPWS SYSTEM ACTIVE": {
		"method": "calcCode",
		"code": "(A:GPWS SYSTEM ACTIVE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.GPWS WARNING": {
		"method": "calcCode",
		"code": "(A:GPWS WARNING,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.G FORCE": {
		"method": "calcCode",
		"code": "(A:G FORCE,GForce)"
	},
	"Microsoft.Generic.Miscellaneous.HYDRAULIC SWITCH": {
		"method": "calcCode",
		"code": "(A:HYDRAULIC SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.INDUCTOR COMPASS HEADING REF": {
		"method": "calcCode",
		"code": "(A:INDUCTOR COMPASS HEADING REF,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.INDUCTOR COMPASS PERCENT DEVIATION": {
		"method": "calcCode",
		"code": "(A:INDUCTOR COMPASS PERCENT DEVIATION,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.IS ALTITUDE FREEZE ON": {
		"method": "calcCode",
		"code": "(A:IS ALTITUDE FREEZE ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.IS ATTITUDE FREEZE ON": {
		"method": "calcCode",
		"code": "(A:IS ATTITUDE FREEZE ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.IS LATITUDE LONGITUDE FREEZE ON": {
		"method": "calcCode",
		"code": "(A:IS LATITUDE LONGITUDE FREEZE ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.IS SLEW ACTIVE": {
		"method": "calcCode",
		"code": "(A:IS SLEW ACTIVE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.IS SLEW ALLOWED": {
		"method": "calcCode",
		"code": "(A:IS SLEW ALLOWED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.IS USER SIM": {
		"method": "calcCode",
		"code": "(A:IS USER SIM,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.LINEAR CL ALPHA": {
		"method": "calcCode",
		"code": "(A:LINEAR CL ALPHA,Per radian)"
	},
	"Microsoft.Generic.Miscellaneous.MAGNETIC COMPASS": {
		"method": "calcCode",
		"code": "(A:MAGNETIC COMPASS,Degrees)"
	},
	"Microsoft.Generic.Miscellaneous.MANUAL FUEL PUMP HANDLE": {
		"method": "calcCode",
		"code": "(A:MANUAL FUEL PUMP HANDLE,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.MANUAL INSTRUMENT LIGHTS": {
		"method": "calcCode",
		"code": "(A:MANUAL INSTRUMENT LIGHTS,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.MAX GROSS WEIGHT": {
		"method": "calcCode",
		"code": "(A:MAX GROSS WEIGHT,Pounds)"
	},
	"Microsoft.Generic.Miscellaneous.MAX RATED ENGINE RPM": {
		"method": "calcCode",
		"code": "(A:MAX RATED ENGINE RPM,Rpm)"
	},
	"Microsoft.Generic.Miscellaneous.MIN DRAG VELOCITY": {
		"method": "calcCode",
		"code": "(A:MIN DRAG VELOCITY,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.NAV GS LLAF64": {
		"method": "calcCode",
		"code": "(A:NAV GS LLAF64,Number)"
	},
	"Microsoft.Generic.Miscellaneous.NAV VOR LLAF64": {
		"method": "calcCode",
		"code": "(A:NAV VOR LLAF64,Number)"
	},
	"Microsoft.Generic.Miscellaneous.PANEL ANTI ICE SWITCH": {
		"method": "calcCode",
		"code": "(A:PANEL ANTI ICE SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.PAYLOAD STATION COUNT": {
		"method": "calcCode",
		"code": "(A:PAYLOAD STATION COUNT,Number)"
	},
	"Microsoft.Generic.Miscellaneous.PAYLOAD STATION NAME": {
		"method": "calcCode",
		"code": "(A:PAYLOAD STATION NAME,String)"
	},
	"Microsoft.Generic.Miscellaneous.PAYLOAD STATION WEIGHT:index": {
		"method": "calcCode",
		"code": "(A:PAYLOAD STATION WEIGHT:index,Pounds)"
	},
	"Microsoft.Generic.Miscellaneous.PITOT ICE PCT": {
		"method": "calcCode",
		"code": "(A:PITOT ICE PCT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.PRESSURE ALTITUDE": {
		"method": "calcCode",
		"code": "(A:PRESSURE ALTITUDE,Meters)"
	},
	"Microsoft.Generic.Miscellaneous.PRESSURIZATION CABIN ALTITUDE": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION CABIN ALTITUDE,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.PRESSURIZATION CABIN ALTITUDE GOAL": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION CABIN ALTITUDE GOAL,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.PRESSURIZATION CABIN ALTITUDE RATE": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION CABIN ALTITUDE RATE,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.PRESSURIZATION DUMP SWITCH": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION DUMP SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.Output.PRESSURIZATION PRESSURE DIFFERENTIAL": {
		"method": "calcCode",
		"code": "(A:PRESSURIZATION PRESSURE DIFFERENTIAL,psi)"
	},
	"Microsoft.Generic.Miscellaneous.PROP AUTO CRUISE ACTIVE": {
		"method": "calcCode",
		"code": "(A:PROP AUTO CRUISE ACTIVE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.PROP BETA MAX": {
		"method": "calcCode",
		"code": "(A:PROP BETA MAX,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.PROP BETA MIN": {
		"method": "calcCode",
		"code": "(A:PROP BETA MIN,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.PROP BETA MIN REVERSE": {
		"method": "calcCode",
		"code": "(A:PROP BETA MIN REVERSE,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.PROP ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:PROP ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.Output.PUSHBACK ANGLE": {
		"method": "calcCode",
		"code": "(A:PUSHBACK ANGLE,Degrees)"
	},
	"Microsoft.Generic.Miscellaneous.PUSHBACK CONTACTX": {
		"method": "calcCode",
		"code": "(A:PUSHBACK CONTACTX,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.PUSHBACK CONTACTY": {
		"method": "calcCode",
		"code": "(A:PUSHBACK CONTACTY,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.PUSHBACK CONTACTZ": {
		"method": "calcCode",
		"code": "(A:PUSHBACK CONTACTZ,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.PUSHBACK WAIT": {
		"method": "calcCode",
		"code": "(A:PUSHBACK WAIT,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.RAD INS SWITCH": {
		"method": "calcCode",
		"code": "(A:RAD INS SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.REALISM": {
		"method": "calcCode",
		"code": "(A:REALISM,Number)"
	},
	"Microsoft.Generic.Miscellaneous.REALISM CRASH DETECTION": {
		"method": "calcCode",
		"code": "(A:REALISM CRASH DETECTION,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.REALISM CRASH WITH OTHERS": {
		"method": "calcCode",
		"code": "(A:REALISM CRASH WITH OTHERS,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.ROTOR ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:ROTOR ROTATION ANGLE,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.RUDDER PEDAL INDICATOR": {
		"method": "calcCode",
		"code": "(A:RUDDER PEDAL INDICATOR,Position)"
	},
	"Microsoft.Generic.Miscellaneous.SEMIBODY LOADFACTOR Y": {
		"method": "calcCode",
		"code": "(A:SEMIBODY LOADFACTOR Y,Number)"
	},
	"Microsoft.Generic.Miscellaneous.SEMIBODY LOADFACTOR YDOT": {
		"method": "calcCode",
		"code": "(A:SEMIBODY LOADFACTOR YDOT,Per second)"
	},
	"Microsoft.Generic.Miscellaneous.SIGMA SQRT": {
		"method": "calcCode",
		"code": "(A:SIGMA SQRT,Number)"
	},
	"Microsoft.Generic.Miscellaneous.SIMULATED RADIUS": {
		"method": "calcCode",
		"code": "(A:SIMULATED RADIUS,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.SIM DISABLED": {
		"method": "calcCode",
		"code": "(A:SIM DISABLED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.STALL ALPHA": {
		"method": "calcCode",
		"code": "(A:STALL ALPHA,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.STATIC CG TO GROUND": {
		"method": "calcCode",
		"code": "(A:STATIC CG TO GROUND,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.STATIC PITCH": {
		"method": "calcCode",
		"code": "(A:STATIC PITCH,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.STRUCTURAL ICE PCT": {
		"method": "calcCode",
		"code": "(A:STRUCTURAL ICE PCT,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.SURFACE CONDITION": {
		"method": "calcCode",
		"code": "(A:SURFACE CONDITION,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.SURFACE INFO VALID": {
		"method": "calcCode",
		"code": "(A:SURFACE INFO VALID,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL VELOCITY": {
		"method": "calcCode",
		"code": "(A:TOTAL VELOCITY,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL WEIGHT": {
		"method": "calcCode",
		"code": "(A:TOTAL WEIGHT,Pounds)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL WEIGHT CROSS COUPLED MOI": {
		"method": "calcCode",
		"code": "(A:TOTAL WEIGHT CROSS COUPLED MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL WEIGHT PITCH MOI": {
		"method": "calcCode",
		"code": "(A:TOTAL WEIGHT PITCH MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL WEIGHT ROLL MOI": {
		"method": "calcCode",
		"code": "(A:TOTAL WEIGHT ROLL MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.TOTAL WEIGHT YAW MOI": {
		"method": "calcCode",
		"code": "(A:TOTAL WEIGHT YAW MOI,Slugs per feet squared)"
	},
	"Microsoft.Generic.Miscellaneous.TOW CONNECTION": {
		"method": "calcCode",
		"code": "(A:TOW CONNECTION,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.TOW RELEASE HANDLE": {
		"method": "calcCode",
		"code": "(A:TOW RELEASE HANDLE,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.TRUE AIRSPEED SELECTED": {
		"method": "calcCode",
		"code": "(A:TRUE AIRSPEED SELECTED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.Output.TURN INDICATOR RATE": {
		"method": "calcCode",
		"code": "(A:TURN INDICATOR RATE,Radians per second)"
	},
	"Microsoft.Generic.Miscellaneous.TURN INDICATOR SWITCH": {
		"method": "calcCode",
		"code": "(A:TURN INDICATOR SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.TYPICAL DESCENT RATE": {
		"method": "calcCode",
		"code": "(A:TYPICAL DESCENT RATE,Feet per minute)"
	},
	"Microsoft.Generic.Miscellaneous.USER INPUT ENABLED": {
		"method": "calcCode",
		"code": "(A:USER INPUT ENABLED,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.VARIOMETER RATE": {
		"method": "calcCode",
		"code": "(A:VARIOMETER RATE,Feet per second)"
	},
	"Microsoft.Generic.Miscellaneous.VARIOMETER SWITCH": {
		"method": "calcCode",
		"code": "(A:VARIOMETER SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.VISUAL MODEL RADIUS": {
		"method": "calcCode",
		"code": "(A:VISUAL MODEL RADIUS,Meters)"
	},
	"Microsoft.Generic.Miscellaneous.WATER BALLAST VALVE": {
		"method": "calcCode",
		"code": "(A:WATER BALLAST VALVE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.WING AREA": {
		"method": "calcCode",
		"code": "(A:WING AREA,Square feet)"
	},
	"Microsoft.Generic.Miscellaneous.WING SPAN": {
		"method": "calcCode",
		"code": "(A:WING SPAN,Feet)"
	},
	"Microsoft.Generic.Miscellaneous.YAW STRING ANGLE": {
		"method": "calcCode",
		"code": "(A:YAW STRING ANGLE,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.YAW STRING PCT EXTENDED": {
		"method": "calcCode",
		"code": "(A:YAW STRING PCT EXTENDED,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.YOKE X INDICATOR": {
		"method": "calcCode",
		"code": "(A:YOKE X INDICATOR,Position)"
	},
	"Microsoft.Generic.Miscellaneous.YOKE Y INDICATOR": {
		"method": "calcCode",
		"code": "(A:YOKE Y INDICATOR,Position)"
	},
	"Microsoft.Generic.Miscellaneous.ZERO LIFT ALPHA": {
		"method": "calcCode",
		"code": "(A:ZERO LIFT ALPHA,Radians)"
	},
	"Microsoft.Generic.Miscellaneous.APPLY HEAT TO SYSTEMS": {
		"method": "calcCode",
		"code": "(A:APPLY HEAT TO SYSTEMS,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CANOPY OPEN": {
		"method": "calcCode",
		"code": "(A:CANOPY OPEN,Percent Over 100)"
	},
	"Microsoft.Generic.Miscellaneous.CARB HEAT AVAILABLE": {
		"method": "calcCode",
		"code": "(A:CARB HEAT AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT AUTOPILOT ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT AUTOPILOT ON,Bool)"
	},
	"Microsoft.Generic.Controls.CIRCUIT AUTO BRAKES ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT AUTO BRAKES ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT AUTO FEATHER ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT AUTO FEATHER ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT AVIONICS ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT AVIONICS ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT FLAP MOTOR ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT FLAP MOTOR ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT GEAR MOTOR ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT GEAR MOTOR ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT GEAR WARNING ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT GEAR WARNING ON,Bool)"
	},
	"Microsoft.Generic.Electrical.Output.CIRCUIT GENERAL PANEL ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT GENERAL PANEL ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT HYDRAULIC PUMP ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT HYDRAULIC PUMP ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT MARKER BEACON ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT MARKER BEACON ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT PITOT HEAT ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT PITOT HEAT ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT PROP SYNC ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT PROP SYNC ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.CIRCUIT STANDY VACUUM ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT STANDY VACUUM ON,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.DROPPABLE OBJECTS COUNT:index": {
		"method": "calcCode",
		"code": "(A:DROPPABLE OBJECTS COUNT:index,Number)"
	},
	"Microsoft.Generic.Miscellaneous.DROPPABLE OBJECTS TYPE:index": {
		"method": "calcCode",
		"code": "(A:DROPPABLE OBJECTS TYPE:index,String)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL AVIONICS BUS AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL AVIONICS BUS AMPS,Amperes)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL AVIONICS BUS VOLTAGE": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL AVIONICS BUS VOLTAGE,Volts)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL BATTERY BUS AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY BUS AMPS,Amperes)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL BATTERY BUS VOLTAGE": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY BUS VOLTAGE,Volts)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL BATTERY LOAD": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY LOAD,Amperes)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL BATTERY VOLTAGE": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY VOLTAGE,Volts)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL GENALT BUS AMPS:index": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL GENALT BUS AMPS:index,Amperes)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL GENALT BUS VOLTAGE:index": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL GENALT BUS VOLTAGE:index,Volts)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL HOT BATTERY BUS AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL HOT BATTERY BUS AMPS,Amperes)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL HOT BATTERY BUS VOLTAGE": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL HOT BATTERY BUS VOLTAGE,Volts)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL MAIN BUS AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MAIN BUS AMPS,Amperes)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL MAIN BUS VOLTAGE": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MAIN BUS VOLTAGE,Volts)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL MASTER BATTERY": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.ELECTRICAL TOTAL LOAD AMPS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL TOTAL LOAD AMPS,Amperes)"
	},
	"Microsoft.Generic.Miscellaneous.ENGINE MIXURE AVAILABLE": {
		"method": "calcCode",
		"code": "(A:ENGINE MIXURE AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.FOLDING WING LEFT PERCENT": {
		"method": "calcCode",
		"code": "(A:FOLDING WING LEFT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Miscellaneous.FOLDING WING RIGHT PERCENT": {
		"method": "calcCode",
		"code": "(A:FOLDING WING RIGHT PERCENT,Percent Over 100)"
	},
	"Microsoft.Generic.Miscellaneous.Output.HYDRAULIC PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:HYDRAULIC PRESSURE:index,psi)"
	},
	"Microsoft.Generic.Miscellaneous.HYDRAULIC RESERVOIR PERCENT:index": {
		"method": "calcCode",
		"code": "(A:HYDRAULIC RESERVOIR PERCENT:index,Percent Over 100)"
	},
	"Microsoft.Generic.Miscellaneous.HYDRAULIC SYSTEM INTEGRITY": {
		"method": "calcCode",
		"code": "(A:HYDRAULIC SYSTEM INTEGRITY,Percent Over 100)"
	},
	"Microsoft.Generic.Miscellaneous.IS TAIL DRAGGER": {
		"method": "calcCode",
		"code": "(A:IS TAIL DRAGGER,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.PITOT HEAT": {
		"method": "calcCode",
		"code": "(A:PITOT HEAT,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.PITOT HEAT SWITCH": {
		"method": "calcCode",
		"code": "(A:PITOT HEAT SWITCH,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.Output.PUSHBACK STATE": {
		"method": "calcCode",
		"code": "(A:PUSHBACK STATE,Enum)"
	},
	"Microsoft.Generic.Miscellaneous.SMOKESYSTEM AVAILABLE": {
		"method": "calcCode",
		"code": "(A:SMOKESYSTEM AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.SMOKE ENABLE": {
		"method": "calcCode",
		"code": "(A:SMOKE ENABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.SPOILER AVAILABLE": {
		"method": "calcCode",
		"code": "(A:SPOILER AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.STALL HORN AVAILABLE": {
		"method": "calcCode",
		"code": "(A:STALL HORN AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.STROBES AVAILABLE": {
		"method": "calcCode",
		"code": "(A:STROBES AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.STRUCTURAL DEICE SWITCH": {
		"method": "calcCode",
		"code": "(A:STRUCTURAL DEICE SWITCH,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.TAILHOOK POSITION": {
		"method": "calcCode",
		"code": "(A:TAILHOOK POSITION,Percent Over 100)"
	},
	"Microsoft.Generic.Controls.TOE BRAKES AVAILABLE": {
		"method": "calcCode",
		"code": "(A:TOE BRAKES AVAILABLE,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.WINDSHIELD DEICE SWITCH": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD DEICE SWITCH,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION BODY X": {
		"method": "calcCode",
		"code": "(A:ACCELERATION BODY X,Feet per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION BODY Y": {
		"method": "calcCode",
		"code": "(A:ACCELERATION BODY Y,Feet per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION BODY Z": {
		"method": "calcCode",
		"code": "(A:ACCELERATION BODY Z,Feet per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION WORLD X": {
		"method": "calcCode",
		"code": "(A:ACCELERATION WORLD X,Feet per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION WORLD Y": {
		"method": "calcCode",
		"code": "(A:ACCELERATION WORLD Y,Feet per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ACCELERATION WORLD Z": {
		"method": "calcCode",
		"code": "(A:ACCELERATION WORLD Z,Feet per second squared)"
	},
	"Microsoft.Generic.Controls.AILERON TRIM DISABLED": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM DISABLED,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC AIRPORT IS TOWERED": {
		"method": "calcCode",
		"code": "(A:ATC AIRPORT IS TOWERED,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC CLEARED LANDING": {
		"method": "calcCode",
		"code": "(A:ATC CLEARED LANDING,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC CLEARED TAKEOFF": {
		"method": "calcCode",
		"code": "(A:ATC CLEARED TAKEOFF,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC CLEARED TAXI": {
		"method": "calcCode",
		"code": "(A:ATC CLEARED TAXI,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY AIRPORT NAME": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY AIRPORT NAME,String)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY DISTANCE": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY DISTANCE,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY END DISTANCE": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY END DISTANCE,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY HEADING DEGREES TRUE": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY HEADING DEGREES TRUE,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY LENGTH": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY LENGTH,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY RELATIVE POSITION X": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY RELATIVE POSITION X,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY RELATIVE POSITION Y": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY RELATIVE POSITION Y,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY RELATIVE POSITION Z": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY RELATIVE POSITION Z,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY SELECTED": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY SELECTED,Bool)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY START DISTANCE": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY START DISTANCE,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY TDPOINT RELATIVE POSITION X": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY TDPOINT RELATIVE POSITION X,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY TDPOINT RELATIVE POSITION Y": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY TDPOINT RELATIVE POSITION Y,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY TDPOINT RELATIVE POSITION Z": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY TDPOINT RELATIVE POSITION Z,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ATC RUNWAY WIDTH": {
		"method": "calcCode",
		"code": "(A:ATC RUNWAY WIDTH,Meters)"
	},
	"Microsoft.Generic.Position and Speed.ELEVATOR TRIM DISABLED": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM DISABLED,Bool)"
	},
	"Microsoft.Generic.Position and Speed.EYEPOINT POSITION": {
		"method": "calcCode",
		"code": "(A:EYEPOINT POSITION,Number)"
	},
	"Microsoft.Generic.Position and Speed.GROUND ALTITUDE": {
		"method": "calcCode",
		"code": "(A:GROUND ALTITUDE,Meters)"
	},
	"Microsoft.Generic.Position and Speed.GROUND VELOCITY": {
		"method": "calcCode",
		"code": "(A:GROUND VELOCITY,Knots)"
	},
	"Microsoft.Generic.Position and Speed.INCIDENCE ALPHA": {
		"method": "calcCode",
		"code": "(A:INCIDENCE ALPHA,Radians)"
	},
	"Microsoft.Generic.Position and Speed.INCIDENCE BETA": {
		"method": "calcCode",
		"code": "(A:INCIDENCE BETA,Radians)"
	},
	"Microsoft.Generic.Position and Speed.MAGVAR": {
		"method": "calcCode",
		"code": "(A:MAGVAR,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.ON ANY RUNWAY": {
		"method": "calcCode",
		"code": "(A:ON ANY RUNWAY,Bool)"
	},
	"Microsoft.Generic.Position and Speed.PLANE ALTITUDE": {
		"method": "calcCode",
		"code": "(A:PLANE ALTITUDE,Feet)"
	},
	"Microsoft.Generic.Position and Speed.PLANE ALT ABOVE GROUND": {
		"method": "calcCode",
		"code": "(A:PLANE ALT ABOVE GROUND,Feet)"
	},
	"Microsoft.Generic.Position and Speed.PLANE ALT ABOVE GROUND MINUS CG": {
		"method": "calcCode",
		"code": "(A:PLANE ALT ABOVE GROUND MINUS CG,Feet)"
	},
	"Microsoft.Generic.Position and Speed.Output.PLANE BANK DEGREES": {
		"method": "calcCode",
		"code": "(A:PLANE BANK DEGREES,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.Output.PLANE HEADING DEGREES MAGNETIC": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES MAGNETIC,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.Output.PLANE HEADING DEGREES TRUE": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES TRUE,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.PLANE LATITUDE": {
		"method": "calcCode",
		"code": "(A:PLANE LATITUDE,Radians)"
	},
	"Microsoft.Generic.Position and Speed.PLANE LONGITUDE": {
		"method": "calcCode",
		"code": "(A:PLANE LONGITUDE,Radians)"
	},
	"Microsoft.Generic.Position and Speed.PLANE PITCH DEGREES": {
		"method": "calcCode",
		"code": "(A:PLANE PITCH DEGREES,Radians)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN BANK DEGREES": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN BANK DEGREES,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN HEADING DEGREES MAGNETIC": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN HEADING DEGREES MAGNETIC,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN HEADING DEGREES TRUE": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN HEADING DEGREES TRUE,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN LATITUDE": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN LATITUDE,Radians)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN LONGITUDE": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN LONGITUDE,Radians)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN NORMAL VELOCITY": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN NORMAL VELOCITY,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.PLANE TOUCHDOWN PITCH DEGREES": {
		"method": "calcCode",
		"code": "(A:PLANE TOUCHDOWN PITCH DEGREES,Degrees)"
	},
	"Microsoft.Generic.Position and Speed.RELATIVE WIND VELOCITY BODY X": {
		"method": "calcCode",
		"code": "(A:RELATIVE WIND VELOCITY BODY X,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.RELATIVE WIND VELOCITY BODY Y": {
		"method": "calcCode",
		"code": "(A:RELATIVE WIND VELOCITY BODY Y,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.RELATIVE WIND VELOCITY BODY Z": {
		"method": "calcCode",
		"code": "(A:RELATIVE WIND VELOCITY BODY Z,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION ACCELERATION BODY X": {
		"method": "calcCode",
		"code": "(A:ROTATION ACCELERATION BODY X,Radians per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION ACCELERATION BODY Y": {
		"method": "calcCode",
		"code": "(A:ROTATION ACCELERATION BODY Y,Radians per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION ACCELERATION BODY Z": {
		"method": "calcCode",
		"code": "(A:ROTATION ACCELERATION BODY Z,Radians per second squared)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION VELOCITY BODY X": {
		"method": "calcCode",
		"code": "(A:ROTATION VELOCITY BODY X,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION VELOCITY BODY Y": {
		"method": "calcCode",
		"code": "(A:ROTATION VELOCITY BODY Y,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.ROTATION VELOCITY BODY Z": {
		"method": "calcCode",
		"code": "(A:ROTATION VELOCITY BODY Z,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.RUDDER TRIM DISABLED": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM DISABLED,Bool)"
	},
	"Microsoft.Generic.Position and Speed.SIM ON GROUND": {
		"method": "calcCode",
		"code": "(A:SIM ON GROUND,Bool)"
	},
	"Microsoft.Generic.Position and Speed.SLOPE TO ATC RUNWAY": {
		"method": "calcCode",
		"code": "(A:SLOPE TO ATC RUNWAY,Radians)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT BODY ROTATION VELOCITY": {
		"method": "calcCode",
		"code": "(A:STRUCT BODY ROTATION VELOCITY,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT BODY VELOCITY": {
		"method": "calcCode",
		"code": "(A:STRUCT BODY VELOCITY,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT ENGINE POSITION:index": {
		"method": "calcCode",
		"code": "(A:STRUCT ENGINE POSITION:index,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT EYEPOINT DYNAMIC ANGLE": {
		"method": "calcCode",
		"code": "(A:STRUCT EYEPOINT DYNAMIC ANGLE,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT EYEPOINT DYNAMIC OFFSET": {
		"method": "calcCode",
		"code": "(A:STRUCT EYEPOINT DYNAMIC OFFSET,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT LATLONALT": {
		"method": "calcCode",
		"code": "(A:STRUCT LATLONALT,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT LATLONALTPBH": {
		"method": "calcCode",
		"code": "(A:STRUCT LATLONALTPBH,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT SURFACE RELATIVE VELOCITY": {
		"method": "calcCode",
		"code": "(A:STRUCT SURFACE RELATIVE VELOCITY,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT WORLDVELOCITY": {
		"method": "calcCode",
		"code": "(A:STRUCT WORLDVELOCITY,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT WORLD ACCELERATION": {
		"method": "calcCode",
		"code": "(A:STRUCT WORLD ACCELERATION,Number)"
	},
	"Microsoft.Generic.Position and Speed.STRUCT WORLD ROTATION VELOCITY": {
		"method": "calcCode",
		"code": "(A:STRUCT WORLD ROTATION VELOCITY,Number)"
	},
	"Microsoft.Generic.Position and Speed.SURFACE TYPE": {
		"method": "calcCode",
		"code": "(A:SURFACE TYPE,Enum)"
	},
	"Microsoft.Generic.Position and Speed.TOTAL WORLD VELOCITY": {
		"method": "calcCode",
		"code": "(A:TOTAL WORLD VELOCITY,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY BODY X": {
		"method": "calcCode",
		"code": "(A:VELOCITY BODY X,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY BODY Y": {
		"method": "calcCode",
		"code": "(A:VELOCITY BODY Y,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY BODY Z": {
		"method": "calcCode",
		"code": "(A:VELOCITY BODY Z,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY WORLD X": {
		"method": "calcCode",
		"code": "(A:VELOCITY WORLD X,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY WORLD Y": {
		"method": "calcCode",
		"code": "(A:VELOCITY WORLD Y,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.VELOCITY WORLD Z": {
		"method": "calcCode",
		"code": "(A:VELOCITY WORLD Z,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.WINDSHIELD WIND VELOCITY": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD WIND VELOCITY,Feet per second)"
	},
	"Microsoft.Generic.Position and Speed.WING FLEX PCT:index": {
		"method": "calcCode",
		"code": "(A:WING FLEX PCT:index,Percent over 100)"
	},
	"Microsoft.Generic.Miscellaneous.ATC AIRLINE": {
		"method": "calcCode",
		"code": "(A:ATC AIRLINE,String)"
	},
	"Microsoft.Generic.Miscellaneous.ATC FLIGHT NUMBER": {
		"method": "calcCode",
		"code": "(A:ATC FLIGHT NUMBER,String)"
	},
	"Microsoft.Generic.Miscellaneous.ATC ID": {
		"method": "calcCode",
		"code": "(A:ATC ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.ATC MODEL": {
		"method": "calcCode",
		"code": "(A:ATC MODEL,String)"
	},
	"Microsoft.Generic.Miscellaneous.ATC ON PARKING SPOT": {
		"method": "calcCode",
		"code": "(A:ATC ON PARKING SPOT,Bool)"
	},
	"Microsoft.Generic.Miscellaneous.ATC TYPE": {
		"method": "calcCode",
		"code": "(A:ATC TYPE,String)"
	},
	"Microsoft.Generic.Miscellaneous.GPS APPROACH AIRPORT ID": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH AIRPORT ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.GPS APPROACH APPROACH ID": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH APPROACH ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.GPS APPROACH TRANSITION ID": {
		"method": "calcCode",
		"code": "(A:GPS APPROACH TRANSITION ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.GPS WP NEXT ID": {
		"method": "calcCode",
		"code": "(A:GPS WP NEXT ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.GPS WP PREV ID": {
		"method": "calcCode",
		"code": "(A:GPS WP PREV ID,String)"
	},
	"Microsoft.Generic.Miscellaneous.HSI STATION IDENT": {
		"method": "calcCode",
		"code": "(A:HSI STATION IDENT,String)"
	},
	"Microsoft.Generic.Miscellaneous.TITLE": {
		"method": "calcCode",
		"code": "(A:TITLE,String)"
	},
	"Microsoft.Generic.Engines.ELEVATOR TRIM NEUTRAL": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM NEUTRAL,Radians)"
	},
	"Microsoft.Generic.Engines.ENGINE CONTROL SELECT": {
		"method": "calcCode",
		"code": "(A:ENGINE CONTROL SELECT,Mask)"
	},
	"Microsoft.Generic.Engines.ENGINE TYPE": {
		"method": "calcCode",
		"code": "(A:ENGINE TYPE,Enum)"
	},
	"Microsoft.Generic.Engines.ENG ANTI ICE:index": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:index,Bool)"
	},
	"Microsoft.Generic.Engines.ENG COMBUSTION": {
		"method": "calcCode",
		"code": "(A:ENG COMBUSTION,Bool)"
	},
	"Microsoft.Generic.Engines.ENG CYLINDER HEAD TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:ENG CYLINDER HEAD TEMPERATURE:index,Rankine)"
	},
	"Microsoft.Generic.Engines.ENG EXHAUST GAS TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:ENG EXHAUST GAS TEMPERATURE:index,Rankine)"
	},
	"Microsoft.Generic.Engines.ENG EXHAUST GAS TEMPERATURE GES:index": {
		"method": "calcCode",
		"code": "(A:ENG EXHAUST GAS TEMPERATURE GES:index,Percent over 100)"
	},
	"Microsoft.Generic.Engines.ENG FAILED:index": {
		"method": "calcCode",
		"code": "(A:ENG FAILED:index,Number)"
	},
	"Microsoft.Generic.Engines.ENG FUEL FLOW BUG POSITION:index": {
		"method": "calcCode",
		"code": "(A:ENG FUEL FLOW BUG POSITION:index,Pounds per hour)"
	},
	"Microsoft.Generic.Engines.ENG FUEL FLOW GPH:index": {
		"method": "calcCode",
		"code": "(A:ENG FUEL FLOW GPH:index,Gallons per hour)"
	},
	"Microsoft.Generic.Engines.ENG FUEL FLOW PPH:index": {
		"method": "calcCode",
		"code": "(A:ENG FUEL FLOW PPH:index,Pounds per hour)"
	},
	"Microsoft.Generic.Engines.Output.ENG HYDRAULIC PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:ENG HYDRAULIC PRESSURE:index,psi)"
	},
	"Microsoft.Generic.Engines.ENG HYDRAULIC QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:ENG HYDRAULIC QUANTITY:index,Percent over 100)"
	},
	"Microsoft.Generic.Engines.ENG MANIFOLD PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:ENG MANIFOLD PRESSURE:index,inHG)"
	},
	"Microsoft.Generic.Engines.ENG MAX RPM": {
		"method": "calcCode",
		"code": "(A:ENG MAX RPM,Rpm)"
	},
	"Microsoft.Generic.Engines.ENG N1 RPM:index": {
		"method": "calcCode",
		"code": "(A:ENG N1 RPM:index,Rpm)"
	},
	"Microsoft.Generic.Engines.ENG N2 RPM:index": {
		"method": "calcCode",
		"code": "(A:ENG N2 RPM:index,Rpm)"
	},
	"Microsoft.Generic.Engines.Output.ENG OIL PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:ENG OIL PRESSURE:index,psi)"
	},
	"Microsoft.Generic.Engines.ENG OIL QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:ENG OIL QUANTITY:index,Percent over 100)"
	},
	"Microsoft.Generic.Engines.ENG OIL TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:ENG OIL TEMPERATURE:index,Rankine)"
	},
	"Microsoft.Generic.Engines.ENG ON FIRE:index": {
		"method": "calcCode",
		"code": "(A:ENG ON FIRE:index,Bool)"
	},
	"Microsoft.Generic.Engines.ENG PRESSURE RATIO:index": {
		"method": "calcCode",
		"code": "(A:ENG PRESSURE RATIO:index,Ratio)"
	},
	"Microsoft.Generic.Engines.ENG RPM ANIMATION PERCENT:index": {
		"method": "calcCode",
		"code": "(A:ENG RPM ANIMATION PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.ENG RPM SCALER:index": {
		"method": "calcCode",
		"code": "(A:ENG RPM SCALER:index,Scalar)"
	},
	"Microsoft.Generic.Engines.ENG TORQUE:index": {
		"method": "calcCode",
		"code": "(A:ENG TORQUE:index,Foot pounds)"
	},
	"Microsoft.Generic.Engines.ENG VIBRATION:index": {
		"method": "calcCode",
		"code": "(A:ENG VIBRATION:index,Number)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG ANTI ICE POSITION:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG ANTI ICE POSITION:index,Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG COMBUSTION:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG COMBUSTION:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG COMBUSTION SOUND PERCENT:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG COMBUSTION SOUND PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG DAMAGE PERCENT:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG DAMAGE PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG ELAPSED TIME:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG ELAPSED TIME:index,Hours)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG EXHAUST GAS TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG EXHAUST GAS TEMPERATURE:index,Rankine)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG FAILED:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FAILED:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG FUEL PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PRESSURE:index,Psi)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG FUEL PUMP ON:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP ON:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG FUEL PUMP SWITCH:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:index,Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG FUEL USED SINCE START:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL USED SINCE START:index,Pounds)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG FUEL VALVE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG GENERATOR ACTIVE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG GENERATOR ACTIVE:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG GENERATOR SWITCH:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG GENERATOR SWITCH:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG MASTER ALTERNATOR:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG MAX REACHED RPM:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MAX REACHED RPM:index,Rpm)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG MIXTURE LEVER POSITION:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:index,Percent)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG OIL LEAKED PERCENT:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL LEAKED PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG OIL PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL PRESSURE:index,Psi)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG OIL TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL TEMPERATURE:index,Rankine)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG PCT MAX RPM:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG PCT MAX RPM:index,Percent)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG PROPELLER LEVER POSITION:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG PROPELLER LEVER POSITION:index,Percent)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG RPM:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG RPM:index,Rpm)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG STARTER:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:index,Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG STARTER ACTIVE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER ACTIVE:index,Bool)"
	},
	"Microsoft.Generic.Engines.GENERAL ENG THROTTLE LEVER POSITION:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG THROTTLE LEVER POSITION:index,Percent)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG THROTTLE MANAGED MODE:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG THROTTLE MANAGED MODE:index,Number)"
	},
	"Microsoft.Generic.Engines.MASTER IGNITION SWITCH": {
		"method": "calcCode",
		"code": "(A:MASTER IGNITION SWITCH,Bool)"
	},
	"Microsoft.Generic.Engines.NUMBER OF ENGINES": {
		"method": "calcCode",
		"code": "(A:NUMBER OF ENGINES,Number)"
	},
	"Microsoft.Generic.Engines.PANEL AUTO FEATHER SWITCH:index": {
		"method": "calcCode",
		"code": "(A:PANEL AUTO FEATHER SWITCH:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP AUTO FEATHER ARMED:index": {
		"method": "calcCode",
		"code": "(A:PROP AUTO FEATHER ARMED:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP BETA:index": {
		"method": "calcCode",
		"code": "(A:PROP BETA:index,Radians)"
	},
	"Microsoft.Generic.Engines.PROP DEICE SWITCH:index": {
		"method": "calcCode",
		"code": "(A:PROP DEICE SWITCH:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP FEATHERED:index": {
		"method": "calcCode",
		"code": "(A:PROP FEATHERED:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP FEATHERING INHIBIT:index": {
		"method": "calcCode",
		"code": "(A:PROP FEATHERING INHIBIT:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP FEATHER SWITCH:index": {
		"method": "calcCode",
		"code": "(A:PROP FEATHER SWITCH:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP MAX RPM PERCENT:index": {
		"method": "calcCode",
		"code": "(A:PROP MAX RPM PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.PROP RPM:index": {
		"method": "calcCode",
		"code": "(A:PROP RPM:index,Rpm)"
	},
	"Microsoft.Generic.Engines.PROP SYNC ACTIVE:index": {
		"method": "calcCode",
		"code": "(A:PROP SYNC ACTIVE:index,Bool)"
	},
	"Microsoft.Generic.Engines.PROP SYNC DELTA LEVER:index": {
		"method": "calcCode",
		"code": "(A:PROP SYNC DELTA LEVER:index,Position)"
	},
	"Microsoft.Generic.Engines.PROP THRUST:index": {
		"method": "calcCode",
		"code": "(A:PROP THRUST:index,Pounds)"
	},
	"Microsoft.Generic.Engines.RECIP CARBURETOR TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:RECIP CARBURETOR TEMPERATURE:index,Celsius)"
	},
	"Microsoft.Generic.Engines.RECIP ENG ALTERNATE AIR POSITION:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ALTERNATE AIR POSITION:index,Position)"
	},
	"Microsoft.Generic.Engines.RECIP ENG BRAKE POWER:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG BRAKE POWER:index,Number)"
	},
	"Microsoft.Generic.Engines.RECIP ENG COOLANT RESERVOIR PERCENT:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG COOLANT RESERVOIR PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.RECIP ENG COWL FLAP POSITION:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG COWL FLAP POSITION:index,Percent)"
	},
	"Microsoft.Generic.Engines.RECIP ENG CYLINDER HEAD TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG CYLINDER HEAD TEMPERATURE:index,Celsius)"
	},
	"Microsoft.Generic.Engines.RECIP ENG EMERGENCY BOOST ACTIVE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG EMERGENCY BOOST ACTIVE:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG EMERGENCY BOOST ELAPSED TIME:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG EMERGENCY BOOST ELAPSED TIME:index,Hours)"
	},
	"Microsoft.Generic.Engines.RECIP ENG FUEL AVAILABLE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG FUEL AVAILABLE:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG FUEL FLOW:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG FUEL FLOW:index,Pounds per hour)"
	},
	"Microsoft.Generic.Engines.RECIP ENG FUEL NUMBER TANKS USED:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG FUEL NUMBER TANKS USED:index,Number)"
	},
	"Microsoft.Generic.Engines.RECIP ENG FUEL TANKS USED:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG FUEL TANKS USED:index,Mask)"
	},
	"Microsoft.Generic.Engines.RECIP ENG FUEL TANK SELECTOR:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG FUEL TANK SELECTOR:index,Enum)"
	},
	"Microsoft.Generic.Engines.RECIP ENG LEFT MAGNETO:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG LEFT MAGNETO:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG MANIFOLD PRESSURE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG MANIFOLD PRESSURE:index,Psi)"
	},
	"Microsoft.Generic.Engines.RECIP ENG PRIMER:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG PRIMER:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG RADIATOR TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG RADIATOR TEMPERATURE:index,Celsius)"
	},
	"Microsoft.Generic.Engines.RECIP ENG RIGHT MAGNETO:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG RIGHT MAGNETO:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG STARTER TORQUE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG STARTER TORQUE:index,Foot pound)"
	},
	"Microsoft.Generic.Engines.RECIP ENG TURBINE INLET TEMPERATURE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG TURBINE INLET TEMPERATURE:index,Celsius)"
	},
	"Microsoft.Generic.Engines.RECIP ENG TURBOCHARGER FAILED:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG TURBOCHARGER FAILED:index,Bool)"
	},
	"Microsoft.Generic.Engines.RECIP ENG WASTEGATE POSITION:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG WASTEGATE POSITION:index,Percent)"
	},
	"Microsoft.Generic.Engines.RECIP MIXTURE RATIO:index": {
		"method": "calcCode",
		"code": "(A:RECIP MIXTURE RATIO:index,Ratio)"
	},
	"Microsoft.Generic.Engines.THROTTLE LOWER LIMIT": {
		"method": "calcCode",
		"code": "(A:THROTTLE LOWER LIMIT,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG AFTERBURNER:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG AFTERBURNER:index,Bool)"
	},
	"Microsoft.Generic.Engines.TURB ENG AFTERBURNER PCT ACTIVE": {
		"method": "calcCode",
		"code": "(A:TURB ENG AFTERBURNER PCT ACTIVE,Percent over 100)"
	},
	"Microsoft.Generic.Engines.TURB ENG AFTERBURNER STAGE ACTIVE": {
		"method": "calcCode",
		"code": "(A:TURB ENG AFTERBURNER STAGE ACTIVE,Number)"
	},
	"Microsoft.Generic.Engines.TURB ENG BLEED AIR:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG BLEED AIR:index,Psi)"
	},
	"Microsoft.Generic.Engines.TURB ENG COMMANDED N1": {
		"method": "calcCode",
		"code": "(A:TURB ENG COMMANDED N1,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG CORRECTED FF:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG CORRECTED FF:index,Pounds per hour)"
	},
	"Microsoft.Generic.Engines.TURB ENG CORRECTED N1:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG CORRECTED N1:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG CORRECTED N2:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG CORRECTED N2:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG FREE TURBINE TORQUE": {
		"method": "calcCode",
		"code": "(A:TURB ENG FREE TURBINE TORQUE,Foot Pound)"
	},
	"Microsoft.Generic.Engines.TURB ENG FUEL AVAILABLE:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG FUEL AVAILABLE:index,Bool)"
	},
	"Microsoft.Generic.Engines.TURB ENG FUEL FLOW PPH:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG FUEL FLOW PPH:index,Pounds per hour)"
	},
	"Microsoft.Generic.Engines.TURB ENG IGNITION SWITCH": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH,Bool)"
	},
	"Microsoft.Generic.Engines.TURB ENG ITT:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG ITT:index,Rankine)"
	},
	"Microsoft.Generic.Engines.TURB ENG JET THRUST:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG JET THRUST:index,Pounds)"
	},
	"Microsoft.Generic.Engines.TURB ENG MASTER STARTER SWITCH": {
		"method": "calcCode",
		"code": "(A:TURB ENG MASTER STARTER SWITCH,Bool)"
	},
	"Microsoft.Generic.Engines.TURB ENG MAX TORQUE PERCENT:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG MAX TORQUE PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG N1:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG N1:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG N2:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG N2:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG NUM TANKS USED:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG NUM TANKS USED:index,Number)"
	},
	"Microsoft.Generic.Engines.TURB ENG PRESSURE RATIO:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG PRESSURE RATIO:index,Ratio)"
	},
	"Microsoft.Generic.Engines.TURB ENG PRIMARY NOZZLE PERCENT:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG PRIMARY NOZZLE PERCENT:index,Percent over 100)"
	},
	"Microsoft.Generic.Engines.TURB ENG REVERSE NOZZLE PERCENT:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG REVERSE NOZZLE PERCENT:index,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG TANKS USED:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG TANKS USED:index,Mask)"
	},
	"Microsoft.Generic.Engines.TURB ENG TANK SELECTOR:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG TANK SELECTOR:index,Enum)"
	},
	"Microsoft.Generic.Engines.TURB ENG THROTTLE COMMANDED N1": {
		"method": "calcCode",
		"code": "(A:TURB ENG THROTTLE COMMANDED N1,Percent)"
	},
	"Microsoft.Generic.Engines.TURB ENG VIBRATION:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG VIBRATION:index,Number)"
	},
	"Microsoft.Generic.Controls.AILERON_TRIM_LEFT": {
		"method": "calcCode",
		"code": "(>K:AILERON_TRIM_LEFT)"
	},
	"Microsoft.Generic.Controls.AILERON_TRIM_RIGHT": {
		"method": "calcCode",
		"code": "(>K:AILERON_TRIM_RIGHT)"
	},
	"Microsoft.Generic.Controls.AILERONS_LEFT": {
		"method": "calcCode",
		"code": "(>K:AILERONS_LEFT)"
	},
	"Microsoft.Generic.Controls.AILERONS_RIGHT": {
		"method": "calcCode",
		"code": "(>K:AILERONS_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.AIRSPEED_BUG_SELECT": {
		"method": "calcCode",
		"code": "(>K:AIRSPEED_BUG_SELECT)"
	},
	"Microsoft.Generic.Lights.Input.ALL_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ALL_LIGHTS_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.ALTITUDE_BUG_SELECT": {
		"method": "calcCode",
		"code": "(>K:ALTITUDE_BUG_SELECT)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_ON": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_ON)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_TOGGLE_ENG1": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_TOGGLE_ENG2": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG2)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_TOGGLE_ENG3": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG3)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_TOGGLE_ENG4": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG4)"
	},
	"Microsoft.Generic.Autopilot.AP_AIRSPEED_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_AIRSPEED_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_AIRSPEED_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_AIRSPEED_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_AIRSPEED_ON": {
		"method": "calcCode",
		"code": "(>K:AP_AIRSPEED_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_ALT_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_ALT_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_ALT_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_ALT_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_DEC)"
	},
	"Microsoft.Generic.Autopilot.AP_ALT_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_APR_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_APR_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_APR_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_ATT_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_ATT_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_ATT_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_ATT_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_ATT_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_ATT_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_BC_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_BC_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_BC_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_HDG_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_HDG_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_HDG_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_LOC_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_LOC_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_LOC_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_MACH_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_MACH_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_MACH_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_MACH_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_MACH_ON": {
		"method": "calcCode",
		"code": "(>K:AP_MACH_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_MACH_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_MACH_VAR_DEC)"
	},
	"Microsoft.Generic.Autopilot.AP_MACH_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_MACH_VAR_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_MASTER": {
		"method": "calcCode",
		"code": "(>K:AP_MASTER)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_MAX_BANK_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_DEC)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_MAX_BANK_INC": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_N1_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_N1_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_N1_REF_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_N1_REF_DEC)"
	},
	"Microsoft.Generic.Autopilot.AP_N1_REF_INC": {
		"method": "calcCode",
		"code": "(>K:AP_N1_REF_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_NAV1_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_NAV1_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD_OFF)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_7": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_7)"
	},
	"Microsoft.Generic.Unsorted.ATTITUDE_BARS_POSITION_DOWN": {
		"method": "calcCode",
		"code": "(>K:ATTITUDE_BARS_POSITION_DOWN)"
	},
	"Microsoft.Generic.Unsorted.ATTITUDE_BARS_POSITION_UP": {
		"method": "calcCode",
		"code": "(>K:ATTITUDE_BARS_POSITION_UP)"
	},
	"Microsoft.Generic.Unsorted.AUTO_THROTTLE_ARM": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_ARM)"
	},
	"Microsoft.Generic.Unsorted.AUTO_THROTTLE_TO_GA": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_TO_GA)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT_ON": {
		"method": "calcCode",
		"code": "(>K:AUTOPILOT_ON)"
	},
	"Microsoft.Generic.Unsorted.AUTORUDDER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AUTORUDDER_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.AXIS_PAN_PITCH": {
		"method": "calcCode",
		"code": "(>K:AXIS_PAN_PITCH)"
	},
	"Microsoft.Generic.Unsorted.AXIS_PAN_TILT": {
		"method": "calcCode",
		"code": "(>K:AXIS_PAN_TILT)"
	},
	"Microsoft.Generic.Unsorted.BLEED_AIR_SOURCE_CONTROL_DEC": {
		"method": "calcCode",
		"code": "(>K:BLEED_AIR_SOURCE_CONTROL_DEC)"
	},
	"Microsoft.Generic.Unsorted.BLEED_AIR_SOURCE_CONTROL_INC": {
		"method": "calcCode",
		"code": "(>K:BLEED_AIR_SOURCE_CONTROL_INC)"
	},
	"Microsoft.Generic.Controls.Input.BRAKES": {
		"method": "calcCode",
		"code": "(>K:BRAKES)"
	},
	"Microsoft.Generic.Controls.Input.BRAKES_LEFT": {
		"method": "calcCode",
		"code": "(>K:BRAKES_LEFT)"
	},
	"Microsoft.Generic.Controls.Input.BRAKES_RIGHT": {
		"method": "calcCode",
		"code": "(>K:BRAKES_RIGHT)"
	},
	"Microsoft.Generic.Warning System.CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Warning System.CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Camera.CAPTURE_SCREENSHOT": {
		"method": "calcCode",
		"code": "(>K:CAPTURE_SCREENSHOT)"
	},
	"Microsoft.Generic.Controls.CENTER_AILER_RUDDER": {
		"method": "calcCode",
		"code": "(>K:CENTER_AILER_RUDDER)"
	},
	"Microsoft.Generic.Camera.CHASE_VIEW_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CHASE_VIEW_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.CLOCK_HOURS_DEC": {
		"method": "calcCode",
		"code": "(>K:CLOCK_HOURS_DEC)"
	},
	"Microsoft.Generic.Unsorted.CLOCK_HOURS_INC": {
		"method": "calcCode",
		"code": "(>K:CLOCK_HOURS_INC)"
	},
	"Microsoft.Generic.Unsorted.CLOCK_MINUTES_DEC": {
		"method": "calcCode",
		"code": "(>K:CLOCK_MINUTES_DEC)"
	},
	"Microsoft.Generic.Unsorted.CLOCK_MINUTES_INC": {
		"method": "calcCode",
		"code": "(>K:CLOCK_MINUTES_INC)"
	},
	"Microsoft.Generic.Unsorted.CLOCK_SECONDS_ZERO": {
		"method": "calcCode",
		"code": "(>K:CLOCK_SECONDS_ZERO)"
	},
	"Microsoft.Generic.Camera.CLOSE_VIEW": {
		"method": "calcCode",
		"code": "(>K:CLOSE_VIEW)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_DEC)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_FRACT_DEC_CARRY": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_DEC_CARRY)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_INC)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_FRACT_INC_CARRY": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_INC_CARRY)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_DEC)"
	},
	"Microsoft.Generic.Radio.Input.COM_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_INC)"
	},
	"Microsoft.Generic.Radio.COM_RECEIVE_ALL_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:COM_RECEIVE_ALL_TOGGLE)"
	},
	"Microsoft.Generic.Radio.COM_STBY_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:COM_STBY_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.Input.COM1_TRANSMIT_SELECT": {
		"method": "calcCode",
		"code": "(>K:COM1_TRANSMIT_SELECT)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_FRACT_DEC)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_FRACT_DEC_CARRY": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_FRACT_DEC_CARRY)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_FRACT_INC)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_FRACT_INC_CARRY": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_FRACT_INC_CARRY)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_WHOLE_DEC)"
	},
	"Microsoft.Generic.Radio.COM2_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:COM2_RADIO_WHOLE_INC)"
	},
	"Microsoft.Generic.Radio.Input.COM2_TRANSMIT_SELECT": {
		"method": "calcCode",
		"code": "(>K:COM2_TRANSMIT_SELECT)"
	},
	"Microsoft.Generic.Unsorted.CROSS_FEED_OFF": {
		"method": "calcCode",
		"code": "(>K:CROSS_FEED_OFF)"
	},
	"Microsoft.Generic.Unsorted.CROSS_FEED_OPEN": {
		"method": "calcCode",
		"code": "(>K:CROSS_FEED_OPEN)"
	},
	"Microsoft.Generic.Unsorted.CROSS_FEED_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CROSS_FEED_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.DEC_COWL_FLAPS": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS)"
	},
	"Microsoft.Generic.Unsorted.DEC_COWL_FLAPS1": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS1)"
	},
	"Microsoft.Generic.Unsorted.DEC_COWL_FLAPS2": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS2)"
	},
	"Microsoft.Generic.Unsorted.DEC_COWL_FLAPS3": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS3)"
	},
	"Microsoft.Generic.Unsorted.DEC_COWL_FLAPS4": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS4)"
	},
	"Microsoft.Generic.Controls.DEC_AUTOBRAKE_CONTROL": {
		"method": "calcCode",
		"code": "(>K:DEC_AUTOBRAKE_CONTROL)"
	},
	"Microsoft.Generic.Unsorted.DEC_DECISION_HEIGHT": {
		"method": "calcCode",
		"code": "(>K:DEC_DECISION_HEIGHT)"
	},
	"Microsoft.Generic.Engines.DEC_THROTTLE": {
		"method": "calcCode",
		"code": "(>K:DEC_THROTTLE)"
	},
	"Microsoft.Generic.Unsorted.DEMO_STOP": {
		"method": "calcCode",
		"code": "(>K:DEMO_STOP)"
	},
	"Microsoft.Generic.Radio.DME": {
		"method": "calcCode",
		"code": "(>K:DME)"
	},
	"Microsoft.Generic.Radio.DME_SELECT": {
		"method": "calcCode",
		"code": "(>K:DME_SELECT)"
	},
	"Microsoft.Generic.Radio.DME1_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:DME1_TOGGLE)"
	},
	"Microsoft.Generic.Radio.DME2_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:DME2_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.EGT": {
		"method": "calcCode",
		"code": "(>K:EGT)"
	},
	"Microsoft.Generic.Unsorted.EGT_DEC": {
		"method": "calcCode",
		"code": "(>K:EGT_DEC)"
	},
	"Microsoft.Generic.Unsorted.EGT_INC": {
		"method": "calcCode",
		"code": "(>K:EGT_INC)"
	},
	"Microsoft.Generic.Unsorted.EGT1_DEC": {
		"method": "calcCode",
		"code": "(>K:EGT1_DEC)"
	},
	"Microsoft.Generic.Unsorted.EGT1_INC": {
		"method": "calcCode",
		"code": "(>K:EGT1_INC)"
	},
	"Microsoft.Generic.Unsorted.EGT2_DEC": {
		"method": "calcCode",
		"code": "(>K:EGT2_DEC)"
	},
	"Microsoft.Generic.Unsorted.EGT2_INC": {
		"method": "calcCode",
		"code": "(>K:EGT2_INC)"
	},
	"Microsoft.Generic.Unsorted.EGT3_DEC": {
		"method": "calcCode",
		"code": "(>K:EGT3_DEC)"
	},
	"Microsoft.Generic.Unsorted.EGT3_INC": {
		"method": "calcCode",
		"code": "(>K:EGT3_INC)"
	},
	"Microsoft.Generic.Unsorted.EGT4_DEC": {
		"method": "calcCode",
		"code": "(>K:EGT4_DEC)"
	},
	"Microsoft.Generic.Unsorted.EGT4_INC": {
		"method": "calcCode",
		"code": "(>K:EGT4_INC)"
	},
	"Microsoft.Generic.Controls.ELEV_DOWN": {
		"method": "calcCode",
		"code": "(>K:ELEV_DOWN)"
	},
	"Microsoft.Generic.Controls.ELEV_TRIM_DN": {
		"method": "calcCode",
		"code": "(>K:ELEV_TRIM_DN)"
	},
	"Microsoft.Generic.Controls.ELEV_TRIM_UP": {
		"method": "calcCode",
		"code": "(>K:ELEV_TRIM_UP)"
	},
	"Microsoft.Generic.Controls.ELEV_UP": {
		"method": "calcCode",
		"code": "(>K:ELEV_UP)"
	},
	"Microsoft.Generic.Engines.ENGINE": {
		"method": "calcCode",
		"code": "(>K:ENGINE)"
	},
	"Microsoft.Generic.Engines.ENGINE_AUTO_SHUTDOWN": {
		"method": "calcCode",
		"code": "(>K:ENGINE_AUTO_SHUTDOWN)"
	},
	"Microsoft.Generic.Engines.Input.ENGINE_AUTO_START": {
		"method": "calcCode",
		"code": "(>K:ENGINE_AUTO_START)"
	},
	"Microsoft.Generic.Engines.ENGINE_PRIMER": {
		"method": "calcCode",
		"code": "(>K:ENGINE_PRIMER)"
	},
	"Microsoft.Generic.Warning System.EXTINGUISH_ENGINE_FIRE": {
		"method": "calcCode",
		"code": "(>K:EXTINGUISH_ENGINE_FIRE)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_BACK": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_BACK)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_DOWN": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_DOWN)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_FORWARD": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_FORWARD)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_LEFT": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_LEFT)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_RIGHT": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_RIGHT)"
	},
	"Microsoft.Generic.Camera.EYEPOINT_UP": {
		"method": "calcCode",
		"code": "(>K:EYEPOINT_UP)"
	},
	"Microsoft.Generic.Controls.FLAPS_1": {
		"method": "calcCode",
		"code": "(>K:FLAPS_1)"
	},
	"Microsoft.Generic.Controls.FLAPS_2": {
		"method": "calcCode",
		"code": "(>K:FLAPS_2)"
	},
	"Microsoft.Generic.Controls.FLAPS_3": {
		"method": "calcCode",
		"code": "(>K:FLAPS_3)"
	},
	"Microsoft.Generic.Controls.Input.FLAPS_DECR": {
		"method": "calcCode",
		"code": "(>K:FLAPS_DECR)"
	},
	"Microsoft.Generic.Controls.FLAPS_DOWN": {
		"method": "calcCode",
		"code": "(>K:FLAPS_DOWN)"
	},
	"Microsoft.Generic.Controls.FLAPS_INCR": {
		"method": "calcCode",
		"code": "(>K:FLAPS_INCR)"
	},
	"Microsoft.Generic.Controls.Input.FLAPS_UP": {
		"method": "calcCode",
		"code": "(>K:FLAPS_UP)"
	},
	"Microsoft.Generic.Unsorted.FLIGHT_MAP": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_MAP)"
	},
	"Microsoft.Generic.Unsorted.FLY_BY_WIRE_ELAC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLY_BY_WIRE_ELAC_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.FLY_BY_WIRE_FAC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLY_BY_WIRE_FAC_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.FLY_BY_WIRE_SEC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLY_BY_WIRE_SEC_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.FREEZE_ALTITUDE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FREEZE_ALTITUDE_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.FREEZE_ATTITUDE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FREEZE_ATTITUDE_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.FREEZE_LATITUDE_LONGITUDE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FREEZE_LATITUDE_LONGITUDE_TOGGLE)"
	},
	"Microsoft.Generic.Radio.FREQUENCY_SWAP": {
		"method": "calcCode",
		"code": "(>K:FREQUENCY_SWAP)"
	},
	"Microsoft.Generic.Fuel.FUEL_DUMP_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FUEL_DUMP_TOGGLE)"
	},
	"Microsoft.Generic.Fuel.FUEL_PUMP": {
		"method": "calcCode",
		"code": "(>K:FUEL_PUMP)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_ALL": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_ALL)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_CENTER": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_CENTER)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_LEFT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_LEFT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_LEFT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_LEFT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_LEFT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_LEFT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_OFF": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_OFF)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_RIGHT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_RIGHT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_RIGHT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_RIGHT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_2_RIGHT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_2_RIGHT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_ALL": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_ALL)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_CENTER": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_CENTER)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_LEFT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_LEFT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_LEFT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_LEFT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_LEFT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_LEFT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_OFF": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_OFF)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_RIGHT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_RIGHT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_RIGHT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_RIGHT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_3_RIGHT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_3_RIGHT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_ALL": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_ALL)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_CENTER": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_CENTER)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_LEFT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_LEFT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_LEFT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_LEFT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_LEFT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_LEFT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_OFF": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_OFF)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_RIGHT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_RIGHT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_RIGHT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_RIGHT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_4_RIGHT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_4_RIGHT_MAIN)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL_SELECTOR_ALL": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_ALL)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_CENTER": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_CENTER)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_LEFT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_LEFT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_LEFT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_LEFT_AUX)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_LEFT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_LEFT_MAIN)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_OFF": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_OFF)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_RIGHT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_RIGHT)"
	},
	"Microsoft.Generic.Fuel.FUEL_SELECTOR_RIGHT_AUX": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_RIGHT_AUX)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL_SELECTOR_RIGHT_MAIN": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_RIGHT_MAIN)"
	},
	"Microsoft.Generic.Unsorted.GAUGE_KEYSTROKE": {
		"method": "calcCode",
		"code": "(>K:GAUGE_KEYSTROKE)"
	},
	"Microsoft.Generic.Gear.GEAR_DOWN": {
		"method": "calcCode",
		"code": "(>K:GEAR_DOWN)"
	},
	"Microsoft.Generic.Unsorted.GEAR_PUMP": {
		"method": "calcCode",
		"code": "(>K:GEAR_PUMP)"
	},
	"Microsoft.Generic.Gear.GEAR_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:GEAR_TOGGLE)"
	},
	"Microsoft.Generic.Gear.GEAR_UP": {
		"method": "calcCode",
		"code": "(>K:GEAR_UP)"
	},
	"Microsoft.Generic.Unsorted.GPWS_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:GPWS_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Flight Instrumentation.GYRO_DRIFT_DEC": {
		"method": "calcCode",
		"code": "(>K:GYRO_DRIFT_DEC)"
	},
	"Microsoft.Generic.Flight Instrumentation.GYRO_DRIFT_INC": {
		"method": "calcCode",
		"code": "(>K:GYRO_DRIFT_INC)"
	},
	"Microsoft.Generic.Flight Instrumentation.HEADING_BUG_DEC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_DEC)"
	},
	"Microsoft.Generic.Flight Instrumentation.HEADING_BUG_INC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_INC)"
	},
	"Microsoft.Generic.Flight Instrumentation.HEADING_BUG_SELECT": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_SELECT)"
	},
	"Microsoft.Generic.Unsorted.HOIST_DEPLOY_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:HOIST_DEPLOY_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.HOIST_SWITCH_EXTEND": {
		"method": "calcCode",
		"code": "(>K:HOIST_SWITCH_EXTEND)"
	},
	"Microsoft.Generic.Unsorted.HOIST_SWITCH_RETRACT": {
		"method": "calcCode",
		"code": "(>K:HOIST_SWITCH_RETRACT)"
	},
	"Microsoft.Generic.Unsorted.HYDRAULIC_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:HYDRAULIC_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.INC_COWL_FLAPS": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS)"
	},
	"Microsoft.Generic.Unsorted.INC_COWL_FLAPS1": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS1)"
	},
	"Microsoft.Generic.Unsorted.INC_COWL_FLAPS2": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS2)"
	},
	"Microsoft.Generic.Unsorted.INC_COWL_FLAPS3": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS3)"
	},
	"Microsoft.Generic.Unsorted.INC_COWL_FLAPS4": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS4)"
	},
	"Microsoft.Generic.Controls.INC_AUTOBRAKE_CONTROL": {
		"method": "calcCode",
		"code": "(>K:INC_AUTOBRAKE_CONTROL)"
	},
	"Microsoft.Generic.Unsorted.INC_DECISION_HEIGHT": {
		"method": "calcCode",
		"code": "(>K:INC_DECISION_HEIGHT)"
	},
	"Microsoft.Generic.Engines.INC_THROTTLE": {
		"method": "calcCode",
		"code": "(>K:INC_THROTTLE)"
	},
	"Microsoft.Generic.Unsorted.INVOKE_HELP": {
		"method": "calcCode",
		"code": "(>K:INVOKE_HELP)"
	},
	"Microsoft.Generic.Engines.JET_STARTER": {
		"method": "calcCode",
		"code": "(>K:JET_STARTER)"
	},
	"Microsoft.Generic.Unsorted.JOYSTICK_CALIBRATE": {
		"method": "calcCode",
		"code": "(>K:JOYSTICK_CALIBRATE)"
	},
	"Microsoft.Generic.Camera.CHASE_VIEW_NEXT": {
		"method": "calcCode",
		"code": "(>K:CHASE_VIEW_NEXT)"
	},
	"Microsoft.Generic.Camera.CHASE_VIEW_PREV": {
		"method": "calcCode",
		"code": "(>K:CHASE_VIEW_PREV)"
	},
	"Microsoft.Generic.Interaction.Input.TUG_HEADING": {
		"method": "calcCode",
		"code": "(>K:TUG_HEADING)"
	},
	"Microsoft.Generic.Interaction.Input.TUG_SPEED": {
		"method": "calcCode",
		"code": "(>K:TUG_SPEED)"
	},
	"Microsoft.Generic.Camera.KNEEBOARD_VIEW": {
		"method": "calcCode",
		"code": "(>K:KNEEBOARD_VIEW)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.KOHLSMAN_DEC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_DEC)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.KOHLSMAN_INC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_INC)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHT DOWN": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHT_DOWN)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHT HOME": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHT_HOME)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHT LEFT": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHT_LEFT)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHT RIGHT": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHT_RIGHT)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHT UP": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHT_UP)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHTS OFF": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_OFF)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHTS ON": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_TOGGLE)"
	},
	"Microsoft.Generic.Electrical.Input.MAGNETO": {
		"method": "calcCode",
		"code": "(>K:MAGNETO)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_BOTH)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_DECR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_DECR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_INCR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_INCR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_LEFT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_OFF)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO_START": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_START)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_BOTH)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_DECR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_DECR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_INCR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_INCR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_LEFT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_OFF)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO1_START": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_START)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_BOTH)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_DECR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_DECR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_INCR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_INCR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_LEFT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_OFF)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO2_START": {
		"method": "calcCode",
		"code": "(>K:MAGNETO2_START)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_BOTH)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_DECR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_DECR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_INCR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_INCR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_LEFT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_OFF)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO3_START": {
		"method": "calcCode",
		"code": "(>K:MAGNETO3_START)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_BOTH)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_DECR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_DECR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_INCR": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_INCR)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_LEFT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_OFF)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.MAGNETO4_START": {
		"method": "calcCode",
		"code": "(>K:MAGNETO4_START)"
	},
	"Microsoft.Generic.Fuel.MANUAL_FUEL_PRESSURE_PUMP": {
		"method": "calcCode",
		"code": "(>K:MANUAL_FUEL_PRESSURE_PUMP)"
	},
	"Microsoft.Generic.Unsorted.MAP_ZOOM_FINE_IN": {
		"method": "calcCode",
		"code": "(>K:MAP_ZOOM_FINE_IN)"
	},
	"Microsoft.Generic.Unsorted.MAP_ZOOM_FINE_OUT": {
		"method": "calcCode",
		"code": "(>K:MAP_ZOOM_FINE_OUT)"
	},
	"Microsoft.Generic.Radio.MARKER_SOUND_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:MARKER_SOUND_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.MINUS": {
		"method": "calcCode",
		"code": "(>K:MINUS)"
	},
	"Microsoft.Generic.Unsorted.MINUS_SHIFT": {
		"method": "calcCode",
		"code": "(>K:MINUS_SHIFT)"
	},
	"Microsoft.Generic.Engines.MIXTURE_DECR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_DECR)"
	},
	"Microsoft.Generic.Engines.MIXTURE_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE_INCR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_INCR)"
	},
	"Microsoft.Generic.Engines.MIXTURE_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE_LEAN": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_LEAN)"
	},
	"Microsoft.Generic.Engines.MIXTURE_RICH": {
		"method": "calcCode",
		"code": "(>K:MIXTURE_RICH)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_DECR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_DECR)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_INCR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_INCR)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_LEAN": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_LEAN)"
	},
	"Microsoft.Generic.Engines.MIXTURE1_RICH": {
		"method": "calcCode",
		"code": "(>K:MIXTURE1_RICH)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_DECR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_DECR)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_INCR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_INCR)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_LEAN": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_LEAN)"
	},
	"Microsoft.Generic.Engines.MIXTURE2_RICH": {
		"method": "calcCode",
		"code": "(>K:MIXTURE2_RICH)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_DECR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_DECR)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_INCR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_INCR)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_LEAN": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_LEAN)"
	},
	"Microsoft.Generic.Engines.MIXTURE3_RICH": {
		"method": "calcCode",
		"code": "(>K:MIXTURE3_RICH)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_DECR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_DECR)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_INCR": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_INCR)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_LEAN": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_LEAN)"
	},
	"Microsoft.Generic.Engines.MIXTURE4_RICH": {
		"method": "calcCode",
		"code": "(>K:MIXTURE4_RICH)"
	},
	"Microsoft.Generic.Unsorted.MOUSE_LOOK_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:MOUSE_LOOK_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.MP_ACTIVATE_CHAT": {
		"method": "calcCode",
		"code": "(>K:MP_ACTIVATE_CHAT)"
	},
	"Microsoft.Generic.Unsorted.MP_BROADCAST_VOICE_CAPTURE_START": {
		"method": "calcCode",
		"code": "(>K:MP_BROADCAST_VOICE_CAPTURE_START)"
	},
	"Microsoft.Generic.Unsorted.MP_BROADCAST_VOICE_CAPTURE_STOP": {
		"method": "calcCode",
		"code": "(>K:MP_BROADCAST_VOICE_CAPTURE_STOP)"
	},
	"Microsoft.Generic.Unsorted.MP_CHAT": {
		"method": "calcCode",
		"code": "(>K:MP_CHAT)"
	},
	"Microsoft.Generic.Unsorted.MP_PLAYER_CYCLE": {
		"method": "calcCode",
		"code": "(>K:MP_PLAYER_CYCLE)"
	},
	"Microsoft.Generic.Unsorted.MP_PLAYER_FOLLOW": {
		"method": "calcCode",
		"code": "(>K:MP_PLAYER_FOLLOW)"
	},
	"Microsoft.Generic.Unsorted.MP_TRANSFER_CONTROL": {
		"method": "calcCode",
		"code": "(>K:MP_TRANSFER_CONTROL)"
	},
	"Microsoft.Generic.Unsorted.MP_VOICE_CAPTURE_START": {
		"method": "calcCode",
		"code": "(>K:MP_VOICE_CAPTURE_START)"
	},
	"Microsoft.Generic.Unsorted.MP_VOICE_CAPTURE_STOP": {
		"method": "calcCode",
		"code": "(>K:MP_VOICE_CAPTURE_STOP)"
	},
	"Microsoft.Generic.Radio.NAV_RADIO": {
		"method": "calcCode",
		"code": "(>K:NAV_RADIO)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_DEC)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_FRACT_DEC_CARRY": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_DEC_CARRY)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_INC)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_FRACT_INC_CARRY": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_INC_CARRY)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_DEC)"
	},
	"Microsoft.Generic.Radio.NAV1_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_INC)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_FRACT_DEC)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_FRACT_DEC_CARRY": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_FRACT_DEC_CARRY)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_FRACT_INC)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_FRACT_INC_CARRY": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_FRACT_INC_CARRY)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_WHOLE_DEC)"
	},
	"Microsoft.Generic.Radio.NAV2_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:NAV2_RADIO_WHOLE_INC)"
	},
	"Microsoft.Generic.Unsorted.NEW_MAP": {
		"method": "calcCode",
		"code": "(>K:NEW_MAP)"
	},
	"Microsoft.Generic.Camera.NEW_VIEW": {
		"method": "calcCode",
		"code": "(>K:NEW_VIEW)"
	},
	"Microsoft.Generic.Camera.NEXT_SUB_VIEW": {
		"method": "calcCode",
		"code": "(>K:NEXT_SUB_VIEW)"
	},
	"Microsoft.Generic.Camera.NEXT_VIEW": {
		"method": "calcCode",
		"code": "(>K:NEXT_VIEW)"
	},
	"Microsoft.Generic.Unsorted.NITROUS_TANK_VALVE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:NITROUS_TANK_VALVE_TOGGLE)"
	},
	"Microsoft.Generic.Camera.PAN_DOWN": {
		"method": "calcCode",
		"code": "(>K:PAN_DOWN)"
	},
	"Microsoft.Generic.Camera.PAN_LEFT": {
		"method": "calcCode",
		"code": "(>K:PAN_LEFT)"
	},
	"Microsoft.Generic.Camera.PAN_LEFT_DOWN": {
		"method": "calcCode",
		"code": "(>K:PAN_LEFT_DOWN)"
	},
	"Microsoft.Generic.Camera.PAN_LEFT_UP": {
		"method": "calcCode",
		"code": "(>K:PAN_LEFT_UP)"
	},
	"Microsoft.Generic.Camera.PAN_RIGHT": {
		"method": "calcCode",
		"code": "(>K:PAN_RIGHT)"
	},
	"Microsoft.Generic.Camera.PAN_RIGHT_DOWN": {
		"method": "calcCode",
		"code": "(>K:PAN_RIGHT_DOWN)"
	},
	"Microsoft.Generic.Camera.PAN_RIGHT_UP": {
		"method": "calcCode",
		"code": "(>K:PAN_RIGHT_UP)"
	},
	"Microsoft.Generic.Camera.PAN_TILT_LEFT": {
		"method": "calcCode",
		"code": "(>K:PAN_TILT_LEFT)"
	},
	"Microsoft.Generic.Camera.PAN_TILT_RIGHT": {
		"method": "calcCode",
		"code": "(>K:PAN_TILT_RIGHT)"
	},
	"Microsoft.Generic.Camera.PAN_UP": {
		"method": "calcCode",
		"code": "(>K:PAN_UP)"
	},
	"Microsoft.Generic.Unsorted.PANEL_1": {
		"method": "calcCode",
		"code": "(>K:PANEL_1)"
	},
	"Microsoft.Generic.Unsorted.PANEL_2": {
		"method": "calcCode",
		"code": "(>K:PANEL_2)"
	},
	"Microsoft.Generic.Unsorted.PANEL_3": {
		"method": "calcCode",
		"code": "(>K:PANEL_3)"
	},
	"Microsoft.Generic.Unsorted.PANEL_4": {
		"method": "calcCode",
		"code": "(>K:PANEL_4)"
	},
	"Microsoft.Generic.Unsorted.PANEL_5": {
		"method": "calcCode",
		"code": "(>K:PANEL_5)"
	},
	"Microsoft.Generic.Unsorted.PANEL_6": {
		"method": "calcCode",
		"code": "(>K:PANEL_6)"
	},
	"Microsoft.Generic.Unsorted.PANEL_7": {
		"method": "calcCode",
		"code": "(>K:PANEL_7)"
	},
	"Microsoft.Generic.Unsorted.PANEL_8": {
		"method": "calcCode",
		"code": "(>K:PANEL_8)"
	},
	"Microsoft.Generic.Unsorted.PANEL_9": {
		"method": "calcCode",
		"code": "(>K:PANEL_9)"
	},
	"Microsoft.Generic.Unsorted.PANEL_HUD_NEXT": {
		"method": "calcCode",
		"code": "(>K:PANEL_HUD_NEXT)"
	},
	"Microsoft.Generic.Unsorted.PANEL_HUD_PREVIOUS": {
		"method": "calcCode",
		"code": "(>K:PANEL_HUD_PREVIOUS)"
	},
	"Microsoft.Generic.Unsorted.PANEL_ID_CLOSE": {
		"method": "calcCode",
		"code": "(>K:PANEL_ID_CLOSE)"
	},
	"Microsoft.Generic.Unsorted.PANEL_ID_OPEN": {
		"method": "calcCode",
		"code": "(>K:PANEL_ID_OPEN)"
	},
	"Microsoft.Generic.Unsorted.PANEL_ID_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PANEL_ID_TOGGLE)"
	},
	"Microsoft.Generic.Lights.PANEL_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(>K:PANEL_LIGHTS_OFF)"
	},
	"Microsoft.Generic.Lights.PANEL_LIGHTS_ON": {
		"method": "calcCode",
		"code": "(>K:PANEL_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.PANEL LIGHTS SET  ": {
		"method": "calcCode",
		"code": "(>K:2:PANEL_LIGHTS_SET )"
	},
	"Microsoft.Generic.Controls.PARKING BRAKES TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PARKING_BRAKES)"
	},
	"Microsoft.Generic.Unsorted.PAUSE_OFF": {
		"method": "calcCode",
		"code": "(>K:PAUSE_OFF)"
	},
	"Microsoft.Generic.Unsorted.PAUSE_ON": {
		"method": "calcCode",
		"code": "(>K:PAUSE_ON)"
	},
	"Microsoft.Generic.Unsorted.PAUSE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PAUSE_TOGGLE)"
	},
	"Microsoft.Generic.Anti-Ice.PITOT_HEAT_OFF": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_OFF)"
	},
	"Microsoft.Generic.Anti-Ice.PITOT_HEAT_ON": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_ON)"
	},
	"Microsoft.Generic.Anti-Ice.PITOT_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.PLUS": {
		"method": "calcCode",
		"code": "(>K:PLUS)"
	},
	"Microsoft.Generic.Unsorted.PLUS_SHIFT": {
		"method": "calcCode",
		"code": "(>K:PLUS_SHIFT)"
	},
	"Microsoft.Generic.Unsorted.POINT_OF_INTEREST_CYCLE_NEXT": {
		"method": "calcCode",
		"code": "(>K:POINT_OF_INTEREST_CYCLE_NEXT)"
	},
	"Microsoft.Generic.Unsorted.POINT_OF_INTEREST_CYCLE_PREVIOUS": {
		"method": "calcCode",
		"code": "(>K:POINT_OF_INTEREST_CYCLE_PREVIOUS)"
	},
	"Microsoft.Generic.Unsorted.POINT_OF_INTEREST_TOGGLE_POINTER": {
		"method": "calcCode",
		"code": "(>K:POINT_OF_INTEREST_TOGGLE_POINTER)"
	},
	"Microsoft.Generic.Unsorted.PRESSURIZATION_CLIMB_RATE_DEC": {
		"method": "calcCode",
		"code": "(>K:PRESSURIZATION_CLIMB_RATE_DEC)"
	},
	"Microsoft.Generic.Unsorted.PRESSURIZATION_CLIMB_RATE_INC": {
		"method": "calcCode",
		"code": "(>K:PRESSURIZATION_CLIMB_RATE_INC)"
	},
	"Microsoft.Generic.Unsorted.PRESSURIZATIPRESSURE_ALT_DEC": {
		"method": "calcCode",
		"code": "(>K:PRESSURIZATIPRESSURE_ALT_DEC)"
	},
	"Microsoft.Generic.Unsorted.PRESSURIZATIPRESSURE_ALT_INC": {
		"method": "calcCode",
		"code": "(>K:PRESSURIZATIPRESSURE_ALT_INC)"
	},
	"Microsoft.Generic.Camera.PREV_SUB_VIEW": {
		"method": "calcCode",
		"code": "(>K:PREV_SUB_VIEW)"
	},
	"Microsoft.Generic.Camera.PREV_VIEW": {
		"method": "calcCode",
		"code": "(>K:PREV_VIEW)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_DECR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_DECR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_DECR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_HI": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_HI)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_INCR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_INCR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH_LO": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH_LO)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_DECR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_DECR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_DECR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_HI": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_HI)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_INCR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_INCR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH1_LO": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH1_LO)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_DECR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_DECR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_DECR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_HI": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_HI)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_INCR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_INCR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH2_LO": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH2_LO)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_DECR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_DECR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_DECR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_HI": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_HI)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_INCR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_INCR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH3_LO": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH3_LO)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_DECR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_DECR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_DECR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_HI": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_HI)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_INCR": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_INCR)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.PROP_PITCH4_LO": {
		"method": "calcCode",
		"code": "(>K:PROP_PITCH4_LO)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF2_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF2_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF2_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF2_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_ADF2_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF2_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME1_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME1_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME1_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME2_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME2_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME2_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME2_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_DME2_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME2_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_SELECTED_DME_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_SELECTED_DME_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_SELECTED_DME_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_SELECTED_DME_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_SELECTED_DME_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_SELECTED_DME_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR1_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR1_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR1_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR1_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR1_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR1_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR2_IDENT_DISABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR2_IDENT_DISABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR2_IDENT_ENABLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR2_IDENT_ENABLE)"
	},
	"Microsoft.Generic.Radio.RADIO_VOR2_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR2_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.READOUTS_FLIGHT": {
		"method": "calcCode",
		"code": "(>K:READOUTS_FLIGHT)"
	},
	"Microsoft.Generic.Unsorted.READOUTS_SLEW": {
		"method": "calcCode",
		"code": "(>K:READOUTS_SLEW)"
	},
	"Microsoft.Generic.Unsorted.REFRESH_SCENERY": {
		"method": "calcCode",
		"code": "(>K:REFRESH_SCENERY)"
	},
	"Microsoft.Generic.Unsorted.RELEASE_DROPPABLE_OBJECTS": {
		"method": "calcCode",
		"code": "(>K:RELEASE_DROPPABLE_OBJECTS)"
	},
	"Microsoft.Generic.Unsorted.RELOAD_PANELS": {
		"method": "calcCode",
		"code": "(>K:RELOAD_PANELS)"
	},
	"Microsoft.Generic.Unsorted.RELOAD_USER_AIRCRAFT": {
		"method": "calcCode",
		"code": "(>K:RELOAD_USER_AIRCRAFT)"
	},
	"Microsoft.Generic.Unsorted.REPAIR_AND_REFUEL": {
		"method": "calcCode",
		"code": "(>K:REPAIR_AND_REFUEL)"
	},
	"Microsoft.Generic.Fuel.REQUEST_FUEL_KEY": {
		"method": "calcCode",
		"code": "(>K:REQUEST_FUEL_KEY)"
	},
	"Microsoft.Generic.Unsorted.RETRACT_FLOAT_SWITCH_DEC": {
		"method": "calcCode",
		"code": "(>K:RETRACT_FLOAT_SWITCH_DEC)"
	},
	"Microsoft.Generic.Unsorted.RETRACT_FLOAT_SWITCH_INC": {
		"method": "calcCode",
		"code": "(>K:RETRACT_FLOAT_SWITCH_INC)"
	},
	"Microsoft.Generic.Controls.ROTOR_BRAKE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Unsorted.ROTOR_CLUTCH_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.ROTOR_GOV_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_GOV_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.ROTOR_LATERAL_TRIM_DEC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LATERAL_TRIM_DEC)"
	},
	"Microsoft.Generic.Unsorted.ROTOR_LATERAL_TRIM_INC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LATERAL_TRIM_INC)"
	},
	"Microsoft.Generic.Controls.Input.RUDDER_CENTER": {
		"method": "calcCode",
		"code": "(>K:RUDDER_CENTER)"
	},
	"Microsoft.Generic.Controls.Input.RUDDER_LEFT": {
		"method": "calcCode",
		"code": "(>K:RUDDER_LEFT)"
	},
	"Microsoft.Generic.Controls.Input.RUDDER_RIGHT": {
		"method": "calcCode",
		"code": "(>K:RUDDER_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.SELECT_1": {
		"method": "calcCode",
		"code": "(>K:SELECT_1)"
	},
	"Microsoft.Generic.Unsorted.SELECT_2": {
		"method": "calcCode",
		"code": "(>K:SELECT_2)"
	},
	"Microsoft.Generic.Unsorted.SELECT_3": {
		"method": "calcCode",
		"code": "(>K:SELECT_3)"
	},
	"Microsoft.Generic.Unsorted.SELECT_4": {
		"method": "calcCode",
		"code": "(>K:SELECT_4)"
	},
	"Microsoft.Generic.Environment.Input.SIM_RATE": {
		"method": "calcCode",
		"code": "(>K:SIM_RATE)"
	},
	"Microsoft.Generic.Environment.Input.SIM_RATE_DECR": {
		"method": "calcCode",
		"code": "(>K:SIM_RATE_DECR)"
	},
	"Microsoft.Generic.Environment.Input.SIM_RATE_INCR": {
		"method": "calcCode",
		"code": "(>K:SIM_RATE_INCR)"
	},
	"Microsoft.Generic.Environment.SIMUI_WINDOW_HIDESHOW": {
		"method": "calcCode",
		"code": "(>K:SIMUI_WINDOW_HIDESHOW)"
	},
	"Microsoft.Generic.Unsorted.SITUATION_SAVE": {
		"method": "calcCode",
		"code": "(>K:SITUATION_SAVE)"
	},
	"Microsoft.Generic.Unsorted.SLEW_AHEAD_MINUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_AHEAD_MINUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_AHEAD_PLUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_AHEAD_PLUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_DN_FAST": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_DN_FAST)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_DN_SLOW": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_DN_SLOW)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_FREEZE": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_FREEZE)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_MINUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_MINUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_PLUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_PLUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_UP_FAST": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_UP_FAST)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ALTIT_UP_SLOW": {
		"method": "calcCode",
		"code": "(>K:SLEW_ALTIT_UP_SLOW)"
	},
	"Microsoft.Generic.Unsorted.SLEW_BANK_MINUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_BANK_MINUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_BANK_PLUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_BANK_PLUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_FREEZE": {
		"method": "calcCode",
		"code": "(>K:SLEW_FREEZE)"
	},
	"Microsoft.Generic.Unsorted.SLEW_HEADING_MINUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_HEADING_MINUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_HEADING_PLUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_HEADING_PLUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_LEFT": {
		"method": "calcCode",
		"code": "(>K:SLEW_LEFT)"
	},
	"Microsoft.Generic.Unsorted.SLEW_OFF": {
		"method": "calcCode",
		"code": "(>K:SLEW_OFF)"
	},
	"Microsoft.Generic.Unsorted.SLEW_ON": {
		"method": "calcCode",
		"code": "(>K:SLEW_ON)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_DN_FAST": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_DN_FAST)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_DN_SLOW": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_DN_SLOW)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_FREEZE": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_FREEZE)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_MINUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_MINUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_PLUS": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_PLUS)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_UP_FAST": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_UP_FAST)"
	},
	"Microsoft.Generic.Unsorted.SLEW_PITCH_UP_SLOW": {
		"method": "calcCode",
		"code": "(>K:SLEW_PITCH_UP_SLOW)"
	},
	"Microsoft.Generic.Unsorted.SLEW_RIGHT": {
		"method": "calcCode",
		"code": "(>K:SLEW_RIGHT)"
	},
	"Microsoft.Generic.Unsorted.SLEW_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:SLEW_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.SLING_PICKUP_RELEASE": {
		"method": "calcCode",
		"code": "(>K:SLING_PICKUP_RELEASE)"
	},
	"Microsoft.Generic.Unsorted.SMOKE_OFF": {
		"method": "calcCode",
		"code": "(>K:SMOKE_OFF)"
	},
	"Microsoft.Generic.Unsorted.SMOKE_ON": {
		"method": "calcCode",
		"code": "(>K:SMOKE_ON)"
	},
	"Microsoft.Generic.Unsorted.SMOKE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:SMOKE_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.SOUND_OFF": {
		"method": "calcCode",
		"code": "(>K:SOUND_OFF)"
	},
	"Microsoft.Generic.Unsorted.SOUND_ON": {
		"method": "calcCode",
		"code": "(>K:SOUND_ON)"
	},
	"Microsoft.Generic.Unsorted.SOUND_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:SOUND_TOGGLE)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_ARM_OFF": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_ARM_OFF)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_ARM_ON": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_ARM_ON)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_ARM_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_ARM_TOGGLE)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_OFF": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_OFF)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_ON": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_ON)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.Input.STEERING_DEC": {
		"method": "calcCode",
		"code": "(>K:STEERING_DEC)"
	},
	"Microsoft.Generic.Unsorted.Input.STEERING_INC": {
		"method": "calcCode",
		"code": "(>K:STEERING_INC)"
	},
	"Microsoft.Generic.Lights.Input.STROBES_OFF": {
		"method": "calcCode",
		"code": "(>K:STROBES_OFF)"
	},
	"Microsoft.Generic.Lights.Input.STROBES_ON": {
		"method": "calcCode",
		"code": "(>K:STROBES_ON)"
	},
	"Microsoft.Generic.Lights.Input.STROBES_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:STROBES_TOGGLE)"
	},
	"Microsoft.Generic.Autopilot.SYNC_FLIGHT_DIRECTOR_PITCH": {
		"method": "calcCode",
		"code": "(>K:SYNC_FLIGHT_DIRECTOR_PITCH)"
	},
	"Microsoft.Generic.Unsorted.TAKEOFF_ASSIST_ARM_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TAKEOFF_ASSIST_ARM_TOGGLE)"
	},
	"Microsoft.Generic.Unsorted.TAKEOFF_ASSIST_FIRE": {
		"method": "calcCode",
		"code": "(>K:TAKEOFF_ASSIST_FIRE)"
	},
	"Microsoft.Generic.Engines.THROTTLE_10": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_10)"
	},
	"Microsoft.Generic.Engines.THROTTLE_20": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_20)"
	},
	"Microsoft.Generic.Engines.THROTTLE_30": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_30)"
	},
	"Microsoft.Generic.Engines.THROTTLE_40": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_40)"
	},
	"Microsoft.Generic.Engines.THROTTLE_50": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_50)"
	},
	"Microsoft.Generic.Engines.THROTTLE_60": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_60)"
	},
	"Microsoft.Generic.Engines.THROTTLE_70": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_70)"
	},
	"Microsoft.Generic.Engines.THROTTLE_80": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_80)"
	},
	"Microsoft.Generic.Engines.THROTTLE_90": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_90)"
	},
	"Microsoft.Generic.Engines.THROTTLE_CUT": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_CUT)"
	},
	"Microsoft.Generic.Engines.Input.THROTTLE_DECR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_DECR)"
	},
	"Microsoft.Generic.Engines.THROTTLE_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE_FULL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_FULL)"
	},
	"Microsoft.Generic.Engines.THROTTLE_INCR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_INCR)"
	},
	"Microsoft.Generic.Engines.THROTTLE_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_CUT": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_CUT)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_DECR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_DECR)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_FULL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_FULL)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_INCR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_INCR)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE1_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_CUT": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_CUT)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_DECR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_DECR)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_FULL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_FULL)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_INCR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_INCR)"
	},
	"Microsoft.Generic.Engines.THROTTLE2_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE2_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_CUT": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_CUT)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_DECR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_DECR)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_FULL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_FULL)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_INCR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_INCR)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE3_INCR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_CUT": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_CUT)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_DECR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_DECR)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_DECR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_DECR_SMALL)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_FULL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_FULL)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_INCR": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_INCR)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_INCR_SMALL": {
		"method": "calcCode",
		"code": "(>K:THROTTLE4_INCR_SMALL)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AFTERBURNER": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AFTERBURNER1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER1)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AFTERBURNER2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER2)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AFTERBURNER3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER3)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AFTERBURNER4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER4)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AIRCRAFT_EXIT": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AIRCRAFT_EXIT)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AIRCRAFT_LABELS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AIRCRAFT_LABELS)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AIRPORT_NAME_DISPLAY": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AIRPORT_NAME_DISPLAY)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_ALL_STARTERS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALL_STARTERS)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_ALTERNATE_STATIC": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATE_STATIC)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_ALTERNATOR1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR1)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_ALTERNATOR2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR2)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_ALTERNATOR3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR3)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_ALTERNATOR4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR4)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_AUTOFEATHER_ARM": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AUTOFEATHER_ARM)"
	},
	"Microsoft.Generic.Avionics.TOGGLE_AVIONICS_MASTER": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AVIONICS_MASTER)"
	},
	"Microsoft.Generic.Lights.TOGGLE_BEACON_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_BEACON_LIGHTS)"
	},
	"Microsoft.Generic.Lights.TOGGLE_CABIN_LIGHTS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_CABIN_LIGHTS)"
	},
	"Microsoft.Generic.Radio.TOGGLE_DME": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_DME)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_ELECT_FUEL_PUMP": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_ELECT_FUEL_PUMP1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP1)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_ELECT_FUEL_PUMP2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP2)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_ELECT_FUEL_PUMP3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP3)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_ELECT_FUEL_PUMP4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECT_FUEL_PUMP4)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_ELECTRIC_VACUUM_PUMP": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECTRIC_VACUUM_PUMP)"
	},
	"Microsoft.Generic.Electrical.TOGGLE_ELECTRICAL_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ELECTRICAL_FAILURE)"
	},
	"Microsoft.Generic.Engines.TOGGLE_ENGINE1_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ENGINE1_FAILURE)"
	},
	"Microsoft.Generic.Engines.TOGGLE_ENGINE2_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ENGINE2_FAILURE)"
	},
	"Microsoft.Generic.Engines.TOGGLE_ENGINE3_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ENGINE3_FAILURE)"
	},
	"Microsoft.Generic.Engines.TOGGLE_ENGINE4_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ENGINE4_FAILURE)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_FEATHER_SWITCH_1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FEATHER_SWITCH_1)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_FEATHER_SWITCH_2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FEATHER_SWITCH_2)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_FEATHER_SWITCH_3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FEATHER_SWITCH_3)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_FEATHER_SWITCH_4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FEATHER_SWITCH_4)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_FEATHER_SWITCHES": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FEATHER_SWITCHES)"
	},
	"Microsoft.Generic.Autopilot.TOGGLE_FLIGHT_DIRECTOR": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_FUEL_VALVE_ALL": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ALL)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_FUEL_VALVE_ENG1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ENG1)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_FUEL_VALVE_ENG2": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ENG2)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_FUEL_VALVE_ENG3": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ENG3)"
	},
	"Microsoft.Generic.Fuel.TOGGLE_FUEL_VALVE_ENG4": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ENG4)"
	},
	"Microsoft.Generic.Unsorted.Input.TOGGLE_GPS_DRIVES_NAV1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_GPS_DRIVES_NAV1)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_HYDRAULIC_FAILURE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_HYDRAULIC_FAILURE)"
	},
	"Microsoft.Generic.Interaction.TOGGLE_JETWAY": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_JETWAY)"
	},
	"Microsoft.Generic.Unsorted.TOGGLE_LAUNCH_BAR_SWITCH": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_LAUNCH_BAR_SWITCH)"
	},
	"Microsoft.Generic.Autopilot.AP_NAV1_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_ALTITUDE_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_ALTITUDE_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_ALTITUDE_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_ALTITUDE_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_ALTITUDE_ON": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_ALTITUDE_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_HEADING_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_HEADING_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_HEADING_ON": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_MACH_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_MACH_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_MACH_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_MACH_HOLD_TOGGLE)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_MACH_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_MACH_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_MACH_ON": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_MACH_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_SPEED_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_SPEED_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_SPEED_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_SPEED_HOLD_TOGGLE)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_SPEED_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_SPEED_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_SPEED_ON": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_SPEED_ON)"
	},
	"Microsoft.Generic.Autopilot.AP_PANEL_VS_HOLD": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Microsoft.Generic.Autopilot.AP_PITCH_REF_INC_DN": {
		"method": "calcCode",
		"code": "(>K:AP_PITCH_REF_INC_DN)"
	},
	"Microsoft.Generic.Autopilot.AP_PITCH_REF_INC_UP": {
		"method": "calcCode",
		"code": "(>K:AP_PITCH_REF_INC_UP)"
	},
	"Microsoft.Generic.Autopilot.AP_PITCH_REF_SELECT": {
		"method": "calcCode",
		"code": "(>K:AP_PITCH_REF_SELECT)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_SPD_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_DEC)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_SPD_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_VS_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_DEC)"
	},
	"Microsoft.Generic.Autopilot.AP_VS_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"Microsoft.Generic.Autopilot.AP_WING_LEVELER": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER)"
	},
	"Microsoft.Generic.Autopilot.AP_WING_LEVELER_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER_OFF)"
	},
	"Microsoft.Generic.Autopilot.AP_WING_LEVELER_ON": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER_ON)"
	},
	"Microsoft.Generic.Electrical.APU_GENERATOR_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:APU_GENERATOR_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Electrical.Input.APU_OFF_SWITCH": {
		"method": "calcCode",
		"code": "(>K:APU_OFF_SWITCH)"
	},
	"Microsoft.Generic.Electrical.Input.APU_STARTER": {
		"method": "calcCode",
		"code": "(>K:APU_STARTER)"
	},
	"Microsoft.Generic.Radio.Input.ATC": {
		"method": "calcCode",
		"code": "(>K:ATC)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_0": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_0)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_1": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_1)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_2": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_2)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_3": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_3)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_4": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_4)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_5": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_5)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_6": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_6)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_8": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_8)"
	},
	"Microsoft.Generic.Radio.Input.ATC_MENU_9": {
		"method": "calcCode",
		"code": "(>K:ATC_MENU_9)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.ATTITUDE_CAGE_BUTTON": {
		"method": "calcCode",
		"code": "(>K:ATTITUDE_CAGE_BUTTON)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT_OFF": {
		"method": "calcCode",
		"code": "(>K:AUTOPILOT_OFF)"
	},
	"Microsoft.Generic.Unsorted.AXIS_PAN_HEADING": {
		"method": "calcCode",
		"code": "(>K:AXIS_PAN_HEADING)"
	},
	"Microsoft.Generic.Unsorted.Input.BAROMETRIC": {
		"method": "calcCode",
		"code": "(>K:BAROMETRIC)"
	},
	"Microsoft.Generic.Avionics.AS1000_AP_ALT_SYNC": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_FCU_LOC_MODE_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_LOC_MODE_ACTIVE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_FMA_EXPEDITE_MODE)": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_EXPEDITE_MODE)"
	},
	"Fly By Wire.A320.Autopilot.(L:A32NX_FCU_APPR_MODE_ACTIVE)": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_MODE_ACTIVE)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_FLC_ON": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_FLC_ON,Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_VS_ON": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_VS_ON,Bool)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_ALT_LOCK_VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:1,Feet)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_HDG_LOCK_DIR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1,Degrees)"
	},
	"Working Title.CJ4.Autopilot.Output.WT_CJ4_AP_VS_LOCK_DIR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR,Feet/minute)"
	},
	"Working Title.CJ4.Autopilot.Output.WT_CJ4_AP_FLC_LOCK_DIR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR,Knots) near"
	},
	"Asobo.Cessna 172.Environment.TOGGLE_ALTERNATE_AIR": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATE_STATIC)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AUTOPILOT_CRS1_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_INC)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AP_CRS1_SYNC": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_PUSH)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AP_CRS2_DEC": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_DEC)"
	},
	"Working Title.CJ4.Lights.WT CJ4 Taxi Lights ON": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI, Bool)"
	},
	"Working Title.CJ4.Lights.WT CJ4 Landing Lights ON": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING, Bool)"
	},
	"Working Title.CJ4.Lights.Output.WT CJ4 Beacon Lights ON": {
		"method": "calcCode",
		"code": "(L:LIGHTING_BEACON_1)"
	},
	"Working Title.CJ4.Lights.WT CJ4 Strobe Lights ON": {
		"method": "calcCode",
		"code": "(L:LIGHTING_STROBE_1)"
	},
	"Asobo.Cessna 172.Anti-Ice.C_172 Pitot Heat Toggle ": {
		"method": "calcCode",
		"code": "1 (L:DEICE_Pitot_1) ! (>K:2:PITOT_HEAT_SET)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_PITCH_DOWN": {
		"method": "calcCode",
		"code": "44007 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.AUTOBRAKE LOW HARD-TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE) 1 == if{ 0 } els{ 1 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.AUTOBRAKE MED HARD-TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE) 2 == if{ 0 } els{ 2 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.AUTOBRAKE MAX HARD-TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE) 3 == if{ 0 } els{ 3 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_elec": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_elec)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_eng": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_eng)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_stat": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_stat)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_fuel": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_fuel)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_ecs": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_ecs)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_ftcl": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_fctl)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_hyd": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_hyd)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_drs": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_drs)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_gear": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_gear)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_info": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_info)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_chkl": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_chkl)"
	},
	"Asobo.747-8i.EICAS.Input.B747_8_EICAS_CHANGE_PAGE_nav": {
		"method": "calcCode",
		"code": "(>H:B747_8_EICAS_2_EICAS_PUSH_nav)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L1": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L1)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L2": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L2)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L3": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L3)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L4": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L4)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L5": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L5)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L6": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L6)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R1": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R1)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R2": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R2)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R3": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R3)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R4": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R4)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R5": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R5)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R6": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R6)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_A": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_A)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_B": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_B)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_C": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_C)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_D": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_D)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_E": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_E)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_F": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_F)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_G": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_G)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_H": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_H)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_I": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_I)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_J": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_J)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_K": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_K)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_L": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_L)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_M": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_M)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_N": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_N)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_O": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_O)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_P": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_P)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_Q": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_Q)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_R": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_R)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_S": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_S)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_T": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_T)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_U": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_U)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_V": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_V)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_W": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_W)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_X": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_X)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_Y": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_Y)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_Z": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_Z)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_0": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_0)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_1": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_1)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_2": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_2)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_3": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_3)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_4": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_4)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_5": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_5)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_6": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_6)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_7": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_7)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_8": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_8)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_9": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_9)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_PLUSMINUS)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_DOT": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_DOT)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_INIT": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_INIT)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_RTE": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_RTE)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_DEPARR": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_DEPARR)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_ATC": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_ATC)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_VNAV": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_VNAV)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_BRT_DIM": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_BRT_DIM)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_FIX": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_FIX)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_LEGS": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_LEGS)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_HOLD": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_HOLD)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_FMCCOMM": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_FMCCOMM)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_PROG": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_PROG)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_MENU": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_MENU)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_EXEC": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_EXEC)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_NAVRAD": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_NAVRAD)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_PREVPAGE": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_PREVPAGE)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_NEXTPAGE": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_NEXTPAGE)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_SP": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_SP)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_DEL": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_DEL)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_CLR": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_CLR)"
	},
	"Asobo.747-8i.Navigation.B747_8_FMC_1_BTN_DIV": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_BTN_DIV)"
	},
	"Asobo.Cessna 172.Avionics.C_172_XPNDR_VFR": {
		"method": "calcCode",
		"code": "1200 (>L:my xpndr code, number) (L:my xpndr code, bco16) (>K:XPNDR_SET)"
	},
	"Fly By Wire.A320.Gear.A32NX_BRAKE_FAN_BTN_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_FAN_BTN_PRESSED) ! (>L:A32NX_BRAKE_FAN_BTN_PRESSED)"
	},
	"Fly By Wire.A320.Gear.A32NX_BRAKE_FAN_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_FAN, Bool)"
	},
	"Asobo.TBM 930.Air Condition / Pressurization.TBM930_BLEED_AIR_OFF": {
		"method": "calcCode",
		"code": "1 (>K:BLEED_AIR_SOURCE_CONTROL_SET)"
	},
	"Asobo.TBM 930.Air Condition / Pressurization.TBM930_BLEED_AIR_MAX": {
		"method": "calcCode",
		"code": "3 (>K:BLEED_AIR_SOURCE_CONTROL_SET)"
	},
	"Asobo.TBM 930.Air Condition / Pressurization.Input.TBM930_BLEED_AIR_AUTO": {
		"method": "calcCode",
		"code": "0 (>K:BLEED_AIR_SOURCE_CONTROL_SET)"
	},
	"Microsoft.Generic.Anti-Ice.TOGGLE WINDSHIELD De-Ice": {
		"method": "calcCode",
		"code": "(>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERY 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) "
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERY 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) "
	},
	"Microsoft.Generic.Radio.ADF_100_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_100_INC)"
	},
	"Microsoft.Generic.Radio.ADF_10_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_10_INC)"
	},
	"Microsoft.Generic.Radio.ADF_1_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_1_INC)"
	},
	"Microsoft.Generic.Radio.ADF_100_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_100_DEC)"
	},
	"Microsoft.Generic.Radio.ADF_10_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_10_DEC)"
	},
	"Microsoft.Generic.Radio.ADF_1_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_1_DEC)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AP_VNV_OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_VNAVButtonValue)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Inner_L_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_L_INC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Inner_L_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_L_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Inner_R_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_R_INC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Inner_R_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_R_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Outer_L_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Outer_L_INC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Outer_L_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Outer_L_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Outer_R_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Outer_R_INC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Knob_Outer_R_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Outer_R_DEC)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_NRST_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_NRST_Push)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_DirectTo_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_DirectTo_Push)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Menu_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Menu_Push)"
	},
	"Microsoft.Generic.Avionics.AS3X_Touch_1_Back_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Back_Push)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD BEACON LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD BEACON LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>K:BEACON_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD STROBE LIGHTS ON": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD STROBE LIGHTS AUTO": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_STROBE_0)\n1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)"
	},
	"Asobo.Cessna 172.Safety.C172_SAFETY_Light_Test_On": {
		"method": "calcCode",
		"code": "(>K:ANNUNCIATOR_SWITCH_ON) 0 (>L:XMLVAR_WarningsAttenuated)"
	},
	"Asobo.Cessna 172.Safety.C172_SAFETY_Lights_Test_Off": {
		"method": "calcCode",
		"code": "(>K:ANNUNCIATOR_SWITCH_OFF) 0 (>L:XMLVAR_WarningsAttenuated)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD RUNWAY TURNOFF LIGHTS ON": {
		"method": "calcCode",
		"code": "1 sp0 \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD RUNWAY TURNOFF LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 sp0 \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD STROBE LIGHTS OFF": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)"
	},
	"Working Title.G1000 NXi.Avionics.Input.AS1000_VNAV_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:AS1000_VNAV_TOGGLE)"
	},
	"Asobo.Cessna 172.Engines.Input (Potentiometer).C172_THROTTLE_SET": {
		"method": "calcCode",
		"code": "@ 16383 1023 / * 0 max 16383 min (>K:THROTTLE1_SET) "
	},
	"Working Title.CJ4.Engines.Input (Potentiometer).WT_CJ4_THROTTLE_SET": {
		"method": "calcCode",
		"code": "@ 16383 1023 / * 0 max 16383 min (>K:THROTTLE_SET)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_THROTTLE1_SET": {
		"method": "calcCode",
		"code": "@ 16383 1023 / * 0 max 16383 min (>K:THROTTLE1_SET)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_THROTTLE2_SET": {
		"method": "calcCode",
		"code": "@ 16383 1023 / * 0 max 16383 min (>K:THROTTLE2_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD WING LIGHTS ON": {
		"method": "calcCode",
		"code": "0 1 (>K:2:WING_LIGHTS_SET) \n1 1 (>K:2:WING_LIGHTS_SET) "
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD WING LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 0 (>K:2:WING_LIGHTS_SET) \n1 0 (>K:2:WING_LIGHTS_SET) "
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD WING LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT WING:0,Bool) ! s0 \n0 l0 (>K:2:WING_LIGHTS_SET) \n1 l0 (>K:2:WING_LIGHTS_SET) "
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD NAV LOGO LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 0 (>K:2:NAV_LIGHTS_SET) \n0 0 (>K:2:LOGO_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD NAV LOGO LIGHTS ON": {
		"method": "calcCode",
		"code": "0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD NAV LOGO LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_NAV_0) ! s0 (>L:LIGHTING_NAV_0)\n0 l0 (>K:2:NAV_LIGHTS_SET) 0 l0 (>K:2:LOGO_LIGHTS_SET)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_SUPERCHARGER_1_TOGGLE": {
		"method": "calcCode",
		"code": "128101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.PMDGDC6_SUPERCHARGER_2_TOGGLE": {
		"method": "calcCode",
		"code": "128201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.PMDGDC6_SUPERCHARGER_3_TOGGLE": {
		"method": "calcCode",
		"code": "128301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.PMDGDC6_SUPERCHARGER_4_TOGGLE": {
		"method": "calcCode",
		"code": "128401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_BEFORE_START": {
		"method": "calcCode",
		"code": "0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeStart, bool) ! (>L:AfeBeforeStart, bool) (L:AfeBeforeStart, bool) ! if{ 7 (>K:ROTOR_BRAKE) } els{ 8 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_AFTER_START": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeAfterStart, bool) ! (>L:AfeAfterStart, bool) (L:AfeAfterStart, bool) ! if{ 9 (>K:ROTOR_BRAKE) } els{ 10 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_BEFORE_TAKEOFF": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeTakeoff, bool) ! (>L:AfeBeforeTakeoff, bool) (L:AfeBeforeTakeoff, bool) ! if{ 11 (>K:ROTOR_BRAKE) } els{ 12 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_DESCENT": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeDescent, bool) ! (>L:AfeDescent, bool) (L:AfeDescent, bool) ! if{ 19 (>K:ROTOR_BRAKE) } els{ 20 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_CRUISE": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeCruise, bool) ! (>L:AfeCruise, bool) (L:AfeCruise, bool) ! if{ 17 (>K:ROTOR_BRAKE) } els{ 18 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_IN_RANGE": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeInRange, bool) ! (>L:AfeInRange, bool) (L:AfeInRange, bool) ! if{ 21 (>K:ROTOR_BRAKE) } els{ 22 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_BEFORE_LANDING": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeLanding, bool) ! (>L:AfeBeforeLanding, bool) (L:AfeBeforeLanding, bool) ! if{ 23 (>K:ROTOR_BRAKE) } els{ 24 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_AFTER_LANDING": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeParking, bool) (L:AfeAfterLanding, bool) ! (>L:AfeAfterLanding, bool) (L:AfeAfterLanding, bool) ! if{ 25 (>K:ROTOR_BRAKE) } els{ 26 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_PARKING": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) (L:AfeParking, bool) ! (>L:AfeParking, bool) (L:AfeParking, bool) ! if{ 27 (>K:ROTOR_BRAKE) } els{ 28 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.PMDGDC6_TABLET_ABORT": {
		"method": "calcCode",
		"code": ">0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 29 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_TAKEOFF_DRY": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeTakeoffDry, bool) ! (>L:AfeTakeoffDry, bool) (L:AfeTakeoffDry, bool) ! if{ 13 (>K:ROTOR_BRAKE) } els{ 14 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Miscellaneous.Input.PMDGDC6_TABLET_TAKEOFF_WET": {
		"method": "calcCode",
		"code": "0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeTakeoffWet, bool) ! (>L:AfeTakeoffWet, bool) (L:AfeTakeoffWet, bool) ! if{ 15 (>K:ROTOR_BRAKE) } els{ 16 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_ALT_FUEL_BOOST_1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:dc6_073_dir) s1 (L:dc6_073_obj, enum) 2 == if{ 07308 s1 } (L:dc6_073_obj, enum) 0 == if{ 07307 s1 } (L:dc6_073_obj, enum) 1 == (L:dc6_073_dir) 0 == and if{ 07307 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_073_dir)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_ALT_FUEL_BOOST_2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:dc6_074_dir) s1 (L:dc6_074_obj, enum) 2 == if{ 07408 s1 } (L:dc6_074_obj, enum) 0 == if{ 07407 s1 } (L:dc6_074_obj, enum) 1 == (L:dc6_074_dir) 0 == and if{ 07407 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_074_dir)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_ALT_FUEL_BOOST_3_TOGGLE": {
		"method": "calcCode",
		"code": "(L:dc6_075_dir) s1 (L:dc6_075_obj, enum) 2 == if{ 07508 s1 } (L:dc6_075_obj, enum) 0 == if{ 07507 s1 } (L:dc6_075_obj, enum) 1 == (L:dc6_075_dir) 0 == and if{ 07507 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_075_dir)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_ALT_FUEL_BOOST_4_TOGGLE": {
		"method": "calcCode",
		"code": "(L:dc6_076_dir) s1 (L:dc6_076_obj, enum) 2 == if{ 07608 s1 } (L:dc6_076_obj, enum) 0 == if{ 07607 s1 } (L:dc6_076_obj, enum) 1 == (L:dc6_076_dir) 0 == and if{ 07607 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_076_dir)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_AIRFOIL_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "21601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_CABIN_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "21401 (>K:ROTOR_BRAKE"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_CARB_1_TOGGLE": {
		"method": "calcCode",
		"code": "21801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_CARB_2_TOGGLE": {
		"method": "calcCode",
		"code": "21901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_CARB_3_TOGGLE": {
		"method": "calcCode",
		"code": "22001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_CARB_4_TOGGLE": {
		"method": "calcCode",
		"code": "22101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_PITOT_TOGGLE": {
		"method": "calcCode",
		"code": "09601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_PROP_DEICE_TOGGLE": {
		"method": "calcCode",
		"code": "21701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_ALT_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "43607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_MODE_DEC": {
		"method": "calcCode",
		"code": "44508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_MODE_INC": {
		"method": "calcCode",
		"code": "44507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_LEVER_TOGGLE": {
		"method": "calcCode",
		"code": "40401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_TOGGLE": {
		"method": "calcCode",
		"code": "43407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_MODE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:dc6_445_dir) s1 (L:dc6_445_obj, enum) 2 == if{ 44508 s1 } (L:dc6_445_obj, enum) 0 == if{ 44507 s1 } (L:dc6_445_obj, enum) 1 == (L:dc6_445_dir) 0 == and if{ 44507 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_445_dir)"
	},
	"PMDG.DC-6.Autopilot.PMDGDC6_AP_GYROPILOT": {
		"method": "calcCode",
		"code": "(L:dc6_445_obj, enum) 1 == if{ 44508 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.DC-6.Autopilot.Input.PMDGDC6_AP_LOC": {
		"method": "calcCode",
		"code": "44508 (>K:ROTOR_BRAKE) 44508 (>K:ROTOR_BRAKE) 44507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.Input.PMDGDC6_AP_APPR": {
		"method": "calcCode",
		"code": "44508 (>K:ROTOR_BRAKE) 44508 (>K:ROTOR_BRAKE)  44507 (>K:ROTOR_BRAKE) 44507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_1_COWL_DEC": {
		"method": "calcCode",
		"code": "12408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_1_COWL_INC": {
		"method": "calcCode",
		"code": "12407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_2_COWL_DEC": {
		"method": "calcCode",
		"code": "12508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_2_COWL_INC": {
		"method": "calcCode",
		"code": "12507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_3_COWL_DEC": {
		"method": "calcCode",
		"code": "12608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_3_COWL_INC": {
		"method": "calcCode",
		"code": "12607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_4_COWL_DEC": {
		"method": "calcCode",
		"code": "12708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Anti-Ice.PMDGDC6_ENG_4_COWL_INC": {
		"method": "calcCode",
		"code": "12707 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB1_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB1_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB2_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB2_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB3_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB3_NAV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_KNOB3_ATT": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_IR_1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_1_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_1_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_IR_2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_2_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_2_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_IR_3_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_3_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_3_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_ADR_1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_ADR_2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Navigation.OVHD_ADIRS_ADR_3_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON)"
	},
	"Asobo.Cessna 172.Warning System.C172 Standby Battery Switch Test ": {
		"method": "calcCode",
		"code": "(L:XMLVAR_STBYBattery_Test, bool)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS L ON": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_2)\n0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS L OFF": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_2)\n0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS L RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS R ON": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_3) \n0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS R OFF": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_3) \n0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LANDING LIGHTS R RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_3) \n1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH NOSE LIGHTS TO": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_1) \n1 1 r (>K:2:LANDING_LIGHTS_SET) \n0 1 r (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH NOSE LIGHTS TAXI": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_1) \n0 1 r (>K:2:LANDING_LIGHTS_SET) \n1 1 r (>K:2:TAXI_LIGHTS_SET)\n"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH NOSE LIGHTS OFF": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_1) \n0 1 r (>K:2:LANDING_LIGHTS_SET) \n0 1 r (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.ANTIICE ENG1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)\n(>K:ANTI_ICE_TOGGLE_ENG1)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.ANTIICE ENG2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)\n(>K:ANTI_ICE_TOGGLE_ENG2)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.ANTIICE WING TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed)\n(>K:TOGGLE_STRUCTURAL_DEICE)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.ANTIICE PROBE WINDOW TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_MAN_PITOT_HEAT) ! (>L:A32NX_MAN_PITOT_HEAT)\n(L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) !  \n(>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST ENG1 ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_FIRE_TEST_ENG1) "
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST ENG1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_FIRE_TEST_ENG1)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST ENG2 ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_FIRE_TEST_ENG2) "
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST ENG2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_FIRE_TEST_ENG2)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST APU ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_FIRE_TEST_APU) "
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST APU OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_FIRE_TEST_APU)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE GUARD ENG1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG1) ! if{ \n(L:A32NX_FIRE_GUARD_ENG1) ! (>L:A32NX_FIRE_GUARD_ENG1) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE GUARD ENG2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG2) ! if{ \n(L:A32NX_FIRE_GUARD_ENG2) ! (>L:A32NX_FIRE_GUARD_ENG2) }"
	},
	"Fly By Wire.A320-Dev.Fire.FIRE_GUARD_APU_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_APU) ! if{ \n(L:A32NX_FIRE_GUARD_APU) ! (>L:A32NX_FIRE_GUARD_APU) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE BUTTON ENG1 ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_GUARD_ENG1) if{ (L:A32NX_FIRE_BUTTON_ENG1) ! (>L:A32NX_FIRE_BUTTON_ENG1) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE BUTTON ENG2 ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_GUARD_ENG2) if{ (L:A32NX_FIRE_BUTTON_ENG2) ! (>L:A32NX_FIRE_BUTTON_ENG2) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.FIRE_BUTTON_APU_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_GUARD_APU) if{ (>L:A32NX_FIRE_BUTTON_APU) ! (>L:A32NX_FIRE_BUTTON_APU) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE ENG1 AGENT1 DISCHARGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG1) if{ 1 (>L:A32NX_FIRE_ENG1_AGENT1_Discharge) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE ENG1 AGENT2 DISCHARGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG1) if{ 1 (>L:A32NX_FIRE_ENG1_AGENT2_Discharge) }"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE ENG2 AGENT1 DISCHARGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG2) if{ 1 (>L:A32NX_FIRE_ENG2_AGENT1_Discharge) }"
	},
	"Fly By Wire.A320-Dev.Fire.FIRE_ENG2_AGENT2_DISCHARGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_ENG2) if{ 1 (>L:A32NX_FIRE_ENG2_AGENT2_Discharge) }"
	},
	"Fly By Wire.A320-Dev.Fire.FIRE_APU_AGENT1_DISCHARGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_APU) if{ 1 (>L:A32NX_FIRE_APU_AGENT1_Discharge) }"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL CTK L XFR Button Press": {
		"method": "calcCode",
		"code": "9 (>K:FUELSYSTEM_VALVE_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL CTK R XFR Button Press": {
		"method": "calcCode",
		"code": "10 (>K:FUELSYSTEM_VALVE_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL LTK PUMP1 PRESS": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL LTK PUMP2 PRESS": {
		"method": "calcCode",
		"code": "5 (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL RTK PUMP1 PRESS": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL RTK PUMP2 PRESS": {
		"method": "calcCode",
		"code": "6 (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL XFEED PRESS": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_TOGGLE) \n(L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed)\n"
	},
	"Fly By Wire.A320-Dev.Controls.A32NX THROTTLE SET": {
		"method": "calcCode",
		"code": "@ 32.0303 * 16383 - -16383 max 16383 min (>K:THROTTLE_SET)"
	},
	"Fly By Wire.A320-Dev.Controls.A32NX THROTTLE1 SET": {
		"method": "calcCode",
		"code": "@ 32.0303 * 16383 - -16383 max 16383 min (>K:THROTTLE1_SET)"
	},
	"Fly By Wire.A320-Dev.Controls.A32NX THROTTLE2 SET": {
		"method": "calcCode",
		"code": "@ 32.0303 * 16383 - -16383 max 16383 min (>K:THROTTLE2_SET)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD ENG1 PUMP TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD ENG2 PUMP TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO, bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_Heading": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, degrees)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD HYD RAT MAN ON BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD HYD RAT MAN ON BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD EPUMP BLUE LOCK TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO_LOCK) ! (>L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO_LOCK)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD EPUMP BLUE AUTO BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD PTU AUTO BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Hydraulic.Input.A32NX OVHD HYD EPUMP YELLOW AUTO BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND PACK1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool) ! (>L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND PACK2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool) ! (>L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.AIRCOND HOT AIR TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON) !  (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND RAMAIR LOCK TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_RAMAIR_TOGGLE_LOCK) ! (>L:A32NX_AIRCOND_RAMAIR_TOGGLE_LOCK)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND RAMAIR TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_RAMAIR_TOGGLE, bool) ! (>L:A32NX_AIRCOND_RAMAIR_TOGGLE, bool)"
	},
	"Asobo..Autopilot.Output.AP_Heading": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR, degrees)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND COCKPIT KNOB INC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB,percent) 5 + 300 min  (>L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND COCKPIT KNOB DEC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND FWD CABIN KNOB INC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB,percent) 5 + 300 min  (>L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND FWD CABIN KNOB DEC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND AFT CABIN KNOB INC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB,percent) 5 + 300 min (>L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX AIRCOND AFT CABIN KNOB DEC": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND PACK FLOW KNOB LO": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND PACK FLOW KNOB NORM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND PACK FLOW KNOB HI": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC COMMERCIAL TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON, bool) ! (>L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC GEN1 TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR1)\n(L:XMLVAR_Momentary_PUSH_OVHD_ELEC_GEN1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ELEC_GEN1_Pressed)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC GEN2 TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR2)\n(L:XMLVAR_Momentary_PUSH_OVHD_ELEC_GEN2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ELEC_GEN2_Pressed)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC APU GEN TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:APU_GENERATOR_SWITCH_TOGGLE)\n(L:XMLVAR_Momentary_PUSH_OVHD_ELEC_APUGEN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ELEC_APUGEN_Pressed)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC EXT PWR TOGGLE": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1,bool) (A:EXTERNAL POWER ON:1,bool) ! and \nif{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ \n(A:EXTERNAL POWER ON:1,bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND ENG1 BLEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD AIRCOND ENG2 BLEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.AIRCOND APU BLEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, bool) ! (>L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, bool)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_ALT_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, Bool)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC GALY AND CAB TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO, bool)"
	},
	"Fly By Wire.A320-Dev.Electrical.OVHD ELEC AC ESS FEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL, bool) ! (>L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD CABIN PRESS MODE SEL MAN": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO) ! (>L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.CABIN PRESS LDGELEV AUTO INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, Percent) 4 +  100 min (>L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, percent)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.CABIN PRESS LDGELEV AUTO DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, Percent) 4 - 0 max (>L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, percent)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD CABIN PRESS MAN VS CTL UP": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD CABIN PRESS MAN VS CTL MID": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.A32NX OVHD CABIN PRESS MAN VS CTL DN": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.CABIN PRESS DITCHING LOCK TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_DITCHING_LOCK) ! (>L:A32NX_DITCHING_LOCK)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input.CABIN PRESS DITCHING TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_DITCHING) ! (>L:A32NX_DITCHING)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN SEATBELTS ALERT TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN NO SMOKING ON": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN NO SMOKING AUTO": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN NO SMOKING OFF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN EMERGENCY LIGHT ON": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN EMERGENCY LIGHT ARM": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.CABIN EMERGENCY LIGHT OFF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Working Title.CJ4.Controls.RUDDER TRIM NOSE RIGHT": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, bool) ! if{ \n(A:RUDDER TRIM PCT, percent) 0.6250 + 163.83 * -16383 max 16383 min \n(>K:RUDDER_TRIM_SET_EX1) }"
	},
	"Working Title.CJ4.Controls.RUDDER TRIM NOSE LEFT": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, bool) ! if{ \n(A:RUDDER TRIM PCT, percent) 0.6250 - 163.83 * -16383 max 16383 min \n(>K:RUDDER_TRIM_SET_EX1) }"
	},
	"Working Title.CJ4.Controls.Input.AILERON TRIM RIGHT WING DN": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT, percent) 1 + 163.83 * -16383 max 16383 min \n(>K:AILERON_TRIM_SET_EX1) "
	},
	"Working Title.CJ4.Controls.Input.AILERON TRIM LEFT WING DN": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT, percent) 1 - 163.83 * -16383 max 16383 min \n(>K:AILERON_TRIM_SET_EX1) "
	},
	"Working Title.CJ4.Controls.Input.SECONDARY ELEV TRIM NOSE DOWN": {
		"method": "calcCode",
		"code": "(L:SEC_ELEV_TRIM_ENABLE) if{ \n(A:ELEVATOR TRIM PCT, percent) 0.666667 - 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) "
	},
	"Working Title.CJ4.Controls.Input.SECONDARY ELEV TRIM NOSE UP": {
		"method": "calcCode",
		"code": "(L:SEC_ELEV_TRIM_ENABLE) if{ \n(A:ELEVATOR TRIM PCT, percent) 0.666667 + 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) "
	},
	"Working Title.CJ4.Controls.Input.SEC ELEV TRIM ENABLE TOGGLE": {
		"method": "calcCode",
		"code": "(L:SEC_ELEV_TRIM_ENABLE) ! (>L:SEC_ELEV_TRIM_ENABLE)"
	},
	"Fly By Wire.A320.Autopilot.Autopilot_Altitude_Increment TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_Altitude_Increment) 100 == if{ 1000 } els{ 100 } (>L:XMLVAR_Autopilot_Altitude_Increment)"
	},
	"Fly By Wire.A320.Autopilot.Autopilot Disconnect Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_AP_DISCONNECT_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.ATHR Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ATHR_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.ATHR Disconnect Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ATHR_DISCONNECT_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.SPD Increase": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_INC)"
	},
	"Fly By Wire.A320.Autopilot.SPD Decrease": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_DEC)"
	},
	"Fly By Wire.A320.Autopilot.SPD Set": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_SET)"
	},
	"Fly By Wire.A320.Autopilot.SPD Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.SPD Pull": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_PULL)"
	},
	"Fly By Wire.A320.Autopilot.SPD MACH Toggle": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.HDG Increase": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_INC)"
	},
	"Fly By Wire.A320.Autopilot.HDG Decrease": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_DEC)"
	},
	"Fly By Wire.A320.Autopilot.HDG Set": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_SET)"
	},
	"Fly By Wire.A320.Autopilot.HDG Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.HDG Pull": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_PULL)"
	},
	"Fly By Wire.A320.Autopilot.TRK FPA Mode Toggle": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_TRK_FPA_TOGGLE_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX FCU ALT INC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_INC)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_DEC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_DEC)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_INCREMENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_INCREMENT_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_INCREMENT_SET": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_INCREMENT_SET)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_SET": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_SET)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_PUSH": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_ALT_PULL": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_ALT_PULL)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_VS_INC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_INC)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_VS_DEC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_DEC)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_VS_SET": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_SET)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_VS_PUSH": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX.FCU_VS_PULL": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_PULL)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX_FCU_LOC_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_LOC_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX FCU APPR PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_APPR_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX_FCU_EXPED_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_EXPED_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOPILOT_1_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_1_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOPILOT_2_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_2_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOTHRUST_STATUS": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_STATUS)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_LOC_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_LOC_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_APPR_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_TRK_FPA_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOPILOT_SPEED_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_SPEED_SELECTED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX AUTOPILOT AIRSPEED HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.A32NX_FCU_SPD_MANAGED_DASHES": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_SPD_MANAGED_DASHES)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_SPD_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_SPD_MANAGED_DOT)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOPILOT_HEADING_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_HEADING_SELECTED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_HDG_MANAGED_DASHES": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_HDG_MANAGED_DASHES)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_HDG_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_HDG_MANAGED_DOT)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX AUTOPILOT ALTITUDE LOCK VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:3,feet)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_ALT_MANAGED": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_ALT_MANAGED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_AUTOPILOT_FPA_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_FPA_SELECTED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.A32NX_AUTOPILOT_VS_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_VS_SELECTED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_VS_MANAGED": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_VS_MANAGED)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FMA_EXPEDITE_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_EXPEDITE_MODE)"
	},
	"Asobo..Anti-Ice.G58 PROP DEICE ON": {
		"method": "calcCode",
		"code": "1 s0 (A:PROP DEICE SWITCH:1, Bool) != if{(>K:TOGGLE_PROPELLER_DEICE) } l0 (>L:DEICE_Propeller_1)"
	},
	"Asobo..Anti-Ice.G58 PROP DEICE OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:PROP DEICE SWITCH:1, Bool) != if{(>K:TOGGLE_PROPELLER_DEICE) } l0 (>L:DEICE_Propeller_1)"
	},
	"Asobo..Electrical.G58 MAGNETO1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo..Electrical.G58 MAGNETO1 RIGHT": {
		"method": "calcCode",
		"code": "1 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo..Electrical.G58 MAGNETO1 LEFT": {
		"method": "calcCode",
		"code": "2 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo..Electrical.G58 MAGNETO1 BOTH": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo..Electrical.G58 MAGNETO1 START": {
		"method": "calcCode",
		"code": "4 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 1 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.Baron G58.Controls.G58 COWL FLAP CLOSE": {
		"method": "calcCode",
		"code": "0 (>K:COWLFLAP1_SET)"
	},
	"Asobo.Baron G58.Controls.G58 COWL FLAP OPEN": {
		"method": "calcCode",
		"code": "16383 (>K:COWLFLAP1_SET)"
	},
	"Asobo.Baron G58.Controls.G58 FLAPS RED INDICATOR": {
		"method": "calcCode",
		"code": "(A:CIRCUIT FLAP MOTOR ON, bool)"
	},
	"Asobo.Baron G58.Controls.G58 FLAPS BLUE INDICATOR": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) 10 - abs 0.1 <"
	},
	"Asobo.Baron G58.Controls.G58 FLAPS YELLOW INDICATOR": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) 30 - abs 0.1 <"
	},
	"Asobo.Baron G58.Electrical.G58 MAGNETO2 OFF": {
		"method": "calcCode",
		"code": "0 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }"
	},
	"Asobo.Baron G58.Electrical.G58 MAGNETO2 RIGHT": {
		"method": "calcCode",
		"code": "1 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }"
	},
	"Asobo.Baron G58.Electrical.G58 MAGNETO2 LEFT": {
		"method": "calcCode",
		"code": "2 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }"
	},
	"Asobo.Baron G58.Electrical.G58 MAGNETO2 BOTH": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }"
	},
	"Asobo.Baron G58.Electrical.G58 MAGNETO2 START": {
		"method": "calcCode",
		"code": "4 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 1 (>K:SET_STARTER2_HELD) }"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_FORMAT_CHANGE_ENCOD_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_FORMAT, Number) 10 - dnor (>L:ASCRJ_LSP_FORMAT) (L:ASCRJ_LSP_FORMAT_CHANGE, Number) -- (>L:ASCRJ_LSP_FORMAT_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.ASCRJ_LSP_FORMAT_CHANGE_ENCOD_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_FORMAT, Number) 10 + dnor (>L:ASCRJ_LSP_FORMAT) (L:ASCRJ_LSP_FORMAT_CHANGE, Number) ++ (>L:ASCRJ_LSP_FORMAT_CHANGE)"
	},
	"Asobo.King Air 350i.Engines.Input.KA Eng1 Starter Toggle": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER ACTIVE:1, Bool) ! if{ \n   1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:SET_STARTER1_HELD) } \n   els{ 0 (>K:SET_STARTER1_HELD) 0 (>K:TURBINE_IGNITION_SWITCH_SET1) }"
	},
	"Asobo.King Air 350i.Engines.Input.KA Eng2 Starter Toggle": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER ACTIVE:2, Bool) 0 == if{ \n   1 (>K:TURBINE_IGNITION_SWITCH_SET2) 1 (>K:SET_STARTER2_HELD) } \n   els{ 0 (>K:SET_STARTER2_HELD) 0 (>K:TURBINE_IGNITION_SWITCH_SET2) }"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_DIR": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_DIR)"
	},
	"Just Flight.Piper Arrow III.Electrical.Input.Center_Lower_Alternator_OFF": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_alt)"
	},
	"Just Flight.Piper Arrow III.Electrical.Center_Lower_Alternator_ON": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_alt)"
	},
	"Fly By Wire.A320.ECAM.Output.A32NX ECAM Current Page Index": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ATT_HDG_SWITCHING_CAPT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ATT_HDG_SWITCHING_NORM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ATT_HDG_SWITCHING_F/O": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_AIR_DATA_SWITCHING_CAPT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_AIR_DATA_SWITCHING_NORM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_AIR_DATA_SWITCHING_F/O": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_EIS_DMC_SWITCHING_CAPT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EIS_DMC_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_EIS_DMC_SWITCHING_NORM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EIS_DMC_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_EIS_DMC_SWITCHING_F/O": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EIS_DMC_SWITCHING_KNOB)\n"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ECAM_ND_XFR_SWITCHING_CAPT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320.ECAM.A32NX_ECAM_BTN_TOCONFIG_Push": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ECAM_ND_XFR_SWITCHING_NORM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_ECAM_ND_XFR_SWITCHING_F/O": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.AUTOPILOT BARO INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  \n(L:XMLVAR_Baro_Selector_HPA_1) if{\n1 (A:KOHLSMAN SETTING MB:1, mbars) ++ 16 * (>K:2:KOHLSMAN_SET) \n} els{ 1 (>K:KOHLSMAN_INC) } }"
	},
	"Fly By Wire.A320-Dev.EFIS.AUTOPILOT BARO DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  \n(L:XMLVAR_Baro_Selector_HPA_1) if{\n1 (A:KOHLSMAN SETTING MB:1, mbars) -- 16 * (>K:2:KOHLSMAN_SET) \n} els{ 1 (>K:KOHLSMAN_DEC) } }"
	},
	"Just Flight.Piper Arrow III.Engines.Eng Oil Temp": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL TEMPERATURE:1,Rankine)"
	},
	"Just Flight.Piper Arrow III.Engines.Eng Oil psi": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL PRESSURE:1,Psi)"
	},
	"Just Flight.Piper Arrow III.Electrical.Alternator amps": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_alt_amp, number)"
	},
	"Just Flight.Piper Arrow III.Fuel.Fuel quantity left tank": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_fuel_left, number)"
	},
	"Just Flight.Piper Arrow III.Fuel.Fuel quantity right tank": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_fuel_right, number)"
	},
	"Just Flight.Piper Arrow III.Fuel.Fuel Pressure": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_fuel_press, number)"
	},
	"Just Flight.Piper Arrow III.Engines.Output.Manifold pressure": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_manifold, number)"
	},
	"Just Flight.Piper Arrow III.Fuel.Fuel flow": {
		"method": "calcCode",
		"code": "(L:LEFT_LOWER_fuelflow, number)"
	},
	"Microsoft.Generic.Navigation.Input.ADF_CARD_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_CARD_DEC)"
	},
	"Microsoft.Generic.Navigation.Input.ADF_CARD_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_CARD_INC)"
	},
	"Fly By Wire.A320.Warning System.A32NX MASTER CAUTION PRESSED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MASTER_CAUTION) \n1 (>L:PUSH_AUTOPILOT_MASTERCAUT_L) "
	},
	"Fly By Wire.A320.Warning System.A32NX MASTER CAUTION RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_AUTOPILOT_MASTERCAUT_L) "
	},
	"Working Title.CJ4.Warning System.WT_CJ4_MASTER_CAUTION_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MF_Master_Caution_Test)"
	},
	"Working Title.CJ4.Warning System.WT_CJ4_MASTER_WARNING_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MF_Master_Warning_Test) "
	},
	"Working Title.CJ4.Warning System.Output.WT_CJ4_MASTER_CAUTION_ON": {
		"method": "calcCode",
		"code": "(A:MASTER CAUTION ACTIVE, bool) (A:MASTER CAUTION ACKNOWLEDGED, bool) ! and (L:MF_Master_Caution_Test) or"
	},
	"Working Title.CJ4.Warning System.Output.WT_CJ4_MASTER_WARNING_ON": {
		"method": "calcCode",
		"code": "(A:MASTER WARNING ACTIVE, bool) (A:MASTER WARNING ACKNOWLEDGED, bool) ! and  (L:MF_Master_Warning_Test) or"
	},
	"Asobo.TBM 930.Safety.Output.TBM930_ELT_LED - DUPLICATE (OLD)": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED, Bool) (E:SIMULATION TIME, second) 3 * 2 % and (L:XMLVAR_ELT_STATE) 3 =="
	},
	"Asobo.Baron G58.Safety.G58 ELT ON": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED, Bool) ! if{ (>K:ELT_ON) }"
	},
	"Asobo.Baron G58.Safety.G58 ELT ARM": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED, Bool) if{ (>K:ELT_OFF) }"
	},
	"Asobo.Baron G58.Safety.G58 ELT LED ON": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED, Bool)"
	},
	"Asobo.Baron G58.Electrical.G58 MASTER BATTERY 1 ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Baron G58.Electrical.G58 MASTER BATTERY 1 OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Baron G58.Electrical.G58 MASTER BATTERY 2 ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:2, bool) ! if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Baron G58.Electrical.G58 MASTER BATTERY 2 OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:2, bool) if{ 2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Just Flight.Piper Arrow III.Electrical. Circuit Breaker -ON": {
		"method": "calcCode",
		"code": "1 (>L:CIRCUIT_BREAKERS_autopilot, bool) "
	},
	"Fly By Wire.A320.Engines.A32NX THROTTLE FULL REVERSE BUTTON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG THROTTLE LEVER POSITION:1,percent) -0.1 < if{ -9830 } \nels{ -16383 } (>K:THROTTLE_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).THROTTLE_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE_SET)"
	},
	"Microsoft.Generic.Engines.THROTTLE1_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE1_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).THROTTLE2_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE2_SET)"
	},
	"Microsoft.Generic.Engines.THROTTLE3_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE3_SET)"
	},
	"Microsoft.Generic.Engines.THROTTLE4_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE4_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).FLAPS_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:FLAPS_SET)"
	},
	"Microsoft.Generic.Controls.SPOILERS_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:SPOILERS_SET)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GEN_L_RESET": {
		"method": "calcCode",
		"code": "1 (>L:MF_WTCJ4_Alternator_1_Reset,bool)"
	},
	"Working Title.CJ4.Electrical.WT_CJ4_GEN_R_RESET": {
		"method": "calcCode",
		"code": "1 (>L:MF_WTCJ4_Alternator_2_Reset,bool)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.Pedestal Flood Light": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:76, Percent)"
	},
	"Fly By Wire.A320-Dev.Lights.Input (Potentiometer).A32NX LIGHTING_KNOB_PEDESTAL_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 76 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.LIGHTING_KNOB_PANEL_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 85 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Main panel and pedestal backlight": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:85, Percent)"
	},
	"Microsoft.Generic.Radio.COM1_VOLUME_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / (>K:COM1_VOLUME_SET)"
	},
	"Microsoft.Generic.Radio.COM2_VOLUME_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / (>K:COM2_VOLUME_SET)"
	},
	"Microsoft.Generic.Controls.RUDDER_SET": {
		"method": "calcCode",
		"code": "@ 32.0303 * 16383 - -16383 max 16383 min (>K:RUDDER_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).MIXTURE_SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:MIXTURE_SET)"
	},
	"Microsoft.Generic.Engines.PROPELLER PITCH SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:PROP_PITCH_SET)"
	},
	"Microsoft.Generic.Engines.PROPELLER 1 PITCH SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:PROP_PITCH1_SET)"
	},
	"Microsoft.Generic.Engines.PROPELLER 2 PITCH SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:PROP_PITCH2_SET)"
	},
	"Microsoft.Generic.Engines. PROPELLER 3 PITCH SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:PROP_PITCH3_SET)"
	},
	"Microsoft.Generic.Engines.PROPELLER 4 PITCH SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:PROP_PITCH4_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).MIXTURE 1 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:MIXTURE1_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).MIXTURE 2 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:MIXTURE2_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).MIXTURE 3 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:MIXTURE3_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).MIXTURE 4 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:MIXTURE4_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).ELEVATOR_TRIM_SET": {
		"method": "calcCode",
		"code": "@ 2.0001 / 16383 - -16383 max 16383 min (>K:ELEVATOR_TRIM_SET)"
	},
	"Just Flight.Piper Arrow III.Environment.Electronic Flight Board": {
		"method": "calcCode",
		"code": "1 (>L:EFB_On_Switch)\n(L:EFB_On, bool) ! (>L:EFB_On, bool)"
	},
	"Fly By Wire.A320-Dev.Electrical.Battery 1 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_HAS_FAULT, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * 0 > (A:CIRCUIT GENERAL PANEL ON, Bool) and"
	},
	"Fly By Wire.A320-Dev.Electrical.Battery 1 Off": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) ! (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_BAT_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.Battery 2 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_HAS_FAULT, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_BAT_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.Battery 2 Off": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) ! (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_BAT_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.External Power Avail": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.External Power On": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1, Bool) (A:EXTERNAL POWER ON:1, Bool) and (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_BAT_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.L TK Pump 1 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL L TK Pump 1 Off": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:2, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.L TK Pump 2 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * 0 > (A:CIRCUIT GENERAL PANEL ON, Bool) and"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL L TK Pump 2 Off": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:5, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Fuel.Pump 1 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL CTK L XFR OFF Annunciator": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:9, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Fuel.Pump 2 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL CTK R XFR OFF Annunciator": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:10, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Fuel.R TK Pump 1 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL R TK Pump 1 Off": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:3, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Fuel.R TK Pump 2 Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL R TK Pump 2 Off": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:6, Enum) 0 == (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Crew Oxygen Off": {
		"method": "calcCode",
		"code": "(L:PUSH_OVHD_OXYGEN_CREW, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.FD 1 Active": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * 0 + (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.LS 1 Active": {
		"method": "calcCode",
		"code": "(L:BTN_LS_1_FILTER_ACTIVE) (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.RCDR (GND CTL)": {
		"method": "calcCode",
		"code": "(L:A32NX_RCDR_GROUND_CONTROL_ON, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Autopilot 1 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_1_ACTIVE, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Autopilot 2 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_2_ACTIVE, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Auto Thrust Active": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_STATUS, enum) 0 > (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Expedite Mode Active": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_EXPEDITE_MODE, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Localizer Mode Active": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_LOC_MODE_ACTIVE, bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Autopilot.Approach Mode Active": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_MODE_ACTIVE, bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.CSTR 1 Active": {
		"method": "calcCode",
		"code": "1 (L:A32NX_EFIS_L_OPTION, enum) == "
	},
	"Fly By Wire.A320-Dev.EFIS.Output.WPT 1 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 4 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.VOR D 1 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 2 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.NDB 1 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 8 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.ARPT 1 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 16 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Wing Ice Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and ((L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Wing Ice On": {
		"method": "calcCode",
		"code": "(A:STRUCTURAL DEICE SWITCH, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Engine 1 Ice Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Engine 1 Ice On": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Engine 2 Ice Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN) 0 == 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Engine 2 Ice On": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:2, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Probe Window Heat": {
		"method": "calcCode",
		"code": "(L:A32NX_MAN_PITOT_HEAT) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.APU Bleed Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_HAS_FAULT, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.APU Bleed On": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.APU Master Fault": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_HAS_FAULT, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.APU Master On": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.APU Start Avail": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_AVAILABLE, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX OVHD APU Start Button On": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_ON, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) (L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Low Decel": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_DECEL_LIGHT, Bool) (L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 1 == and (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Low On": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 1 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Med Decel": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_DECEL_LIGHT, Bool) (L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 2 == and (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Med On": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 2 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Max Decel": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_DECEL_LIGHT, Bool) (L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 3 == and (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * 0 > (A:CIRCUIT GENERAL PANEL ON, Bool) and"
	},
	"Fly By Wire.A320-Dev.Gear.Autobrakes Max On": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE, Number) 3 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Brake Fan Hot": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKES_HOT, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Gear.Brakes Fan On": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_FAN, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Warning System.Output.Terr On ND Active": {
		"method": "calcCode",
		"code": "(L:BTN_TERRONND_1_ACTIVE) (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Warning System.Output.Master Caution Active": {
		"method": "calcCode",
		"code": "(L:A32NX_MASTER_CAUTION) (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED) and \n(L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Fly By Wire.A320-Dev.Warning System.Output.Master Warning Active": {
		"method": "calcCode",
		"code": "(L:A32NX_MASTER_WARNING) (L:A32NX_OVHD_INTLT_ANN) 0 == or (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED) and \n(L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * "
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_LSP_HEIGHT_SEL_INC": {
		"method": "calcCode",
		"code": "(L_ASCRJ_LSP_HEIGHT_SEL, Number) 10 + DNOR (>L:ASCRJ_LSP_HEIGHT_SEL)\n(L:ASCRJ_LSP_HEIGHT_SEL_CHANGE, Number) ++ \n(>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_LSP_HEIGHT_SEL_DEC": {
		"method": "calcCode",
		"code": "(L_ASCRJ_LSP_HEIGHT_SEL, Number) 10 - DNOR (>L:ASCRJ_LSP_HEIGHT_SEL)\n(L:ASCRJ_LSP_HEIGHT_SEL_CHANGE, Number) -- \n(>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_BRG1_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_BRG1)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_BRG1_RELEASE": {
		"method": "calcCode",
		"code": "0  (>L:ASCRJ_LSP_BRG1)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_BRG2_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_BRG2)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_BRG2_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_BRG2)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SEL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SEL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SPEED_MODE_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_SPEED_MODE, Number) -- 0 max (>L:ASCRJ_LSP_SPEED_MODE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SPEED_MODE_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_SPEED_MODE, Number) ++ 2 min (>L:ASCRJ_LSP_SPEED_MODE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SPEED_SEL_INC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_SPEED_SEL, Number) 10 + dnor (>L:ASCRJ_LSP_SPEED_SEL)\n(L:ASCRJ_LSP_SPEED_SEL_CHANGE, Number) ++ \n(>L:ASCRJ_LSP_SPEED_SEL_CHANGE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SPEED_SEL_DEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_SPEED_SEL, Number) 10 - dnor (>L:ASCRJ_LSP_SPEED_SEL)\n(L:ASCRJ_LSP_SPEED_SEL_CHANGE_, Number) -- \n(>L:ASCRJ_LSP_SPEED_SEL_CHANGE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_RDR_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_RDR)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_RDR_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_RDR)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_HEIGHT_MODE_MDA": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_HEIGHT_MODE, Number) 0 > if{ \n(L:ASCRJ_LSP_HEIGHT_MODE, Number) -- \n(>L:ASCRJ_LSP_HEIGHT_MODE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_HEIGHT_MODE_DA": {
		"method": "calcCode",
		"code": "(L:ASCRJ_LSP_HEIGHT_MODE, Number) 2 -- < if{ \n(L:ASCRJ_LSP_HEIGHT_MODE, Number) ++ \n(>L:ASCRJ_LSP_HEIGHT_MODE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_LSP_SPEED_SEL": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_SPEED_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_LSP_SPEED_SEL - DUPLICATE (OLD)": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_SPEED_SEL) \n0 (>L:ASCRJ_LSP_SPEED_SEL) \n1 (>L:ASCRJ_LSP_SPEED_SET)\n"
	},
	"Microsoft.Generic.Radio.COM1_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_INC)"
	},
	"Microsoft.Generic.Radio.COM1_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_DEC)"
	},
	"FlyInside.Bell 47 G.Electrical.BATTERY_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Electric.Battery.On) ! (>L:Aircraft.Electric.Battery.On)"
	},
	"FlyInside.Bell 47 G.Electrical.ALTERNATOR_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Engine.1.Alternator.Enabled) ! (>L:Aircraft.Engine.1.Alternator.Enabled)"
	},
	"FlyInside.Bell 47 G.Fuel.FUEL_PRIMER_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Systems.Fuel.Primer.Switch) ! (>L:Aircraft.Systems.Fuel.Primer.Switch)"
	},
	"FlyInside.Bell 47 G.Miscellaneous.OIL_TEMP_TRANS_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Gauges.DisplayOilTemp) ! (>L:Aircraft.Gauges.DisplayOilTemp)"
	},
	"FlyInside.Bell 47 G.Electrical.INSTRUMENTS_POWER_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Systems.Instruments.Enabled) ! (>L:Aircraft.Systems.Instruments.Enabled)"
	},
	"FlyInside.Bell 47 G.Electrical.INSTRUMENTS_POWER_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Systems.Instruments.Enabled)"
	},
	"FlyInside.Bell 47 G.Lights.Input.STROBE_LIGHT_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:STROBES_TOGGLE)"
	},
	"FlyInside.Bell 47 G.Lights.Input.NAVIGATION_LIGHTS_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_NAV_LIGHTS)"
	},
	"FlyInside.Bell 47 G.Lights.Input.BEACON_LIGHT_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_BEACON_LIGHTS)"
	},
	"FlyInside.Bell 47 G.Lights.LANDING_LIGHT_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(K:LANDING_LIGHTS_TOGGLE) ! (>K:LANDING_LIGHTS_TOGGLE)"
	},
	"FlyInside.Bell 47 G.Lights.STROBE_LIGHT_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Lights.Strobe.On)"
	},
	"FlyInside.Bell 47 G.Lights.NAVIGATION_LIGHTS_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Lights.Nav.On)"
	},
	"FlyInside.Bell 47 G.Lights.TAIL_BEACON_LIGHT_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Lights.Beacon.On)"
	},
	"FlyInside.Bell 47 G.Lights.LANDING_LIGHT_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Lights.Landing.On)"
	},
	"FlyInside.Bell 47 G.Electrical.Input.IGNITION_KEY_SWITCH": {
		"method": "calcCode",
		"code": "(L:Aircraft.Engine.1.Input.MagnetosPosition, Number) 3 + 4 % (>L:Aircraft.Engine.1.Input.MagnetosPosition, Number)"
	},
	"FlyInside.Bell 47 G.Electrical.STARTER_COLLECTIVE_SWITCH": {
		"method": "calcCode",
		"code": "(L:Aircraft.Systems.Starter.Switch) ! (>L:Aircraft.Systems.Starter.Switch)"
	},
	"FlyInside.Bell 47 G.Electrical.STARTER_COLLECTIVE_SWITCH_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Systems.Starter.Switch)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_SWITCH_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Radios.Com.1.On) ! (>L:Aircraft.Radios.Com.1.On)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_ACTIVE_FREQUENCY": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQUENCY:1,KHz)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_STBY_FREQUENCY": {
		"method": "calcCode",
		"code": "(A:COM STANDBY FREQUENCY:1,KHz)"
	},
	"FlyInside.Bell 47 G.Radio.TRANSPONDER_CODE": {
		"method": "calcCode",
		"code": "(L:Aircraft.Radios.Transpoder.1.Code)"
	},
	"FlyInside.Bell 47 G.Radio.TRANSPONDER_MODE_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Radios.Transponder.State)"
	},
	"FlyInside.Bell 47 G.Radio.Input.TRANSPONDER_MODE_CHANGE_ENCODER": {
		"method": "calcCode",
		"code": "(L:Aircraft.Radios.Transponder.State, Number) 4 + 5 % (>L:Aircraft.Radios.Transponder.State, Number) }"
	},
	"FlyInside.Bell 47 G.Radio.Input.TRANSPONDER_CODE_1000_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_INC)"
	},
	"FlyInside.Bell 47 G.Radio.Input.TRANSPONDER_CODE_100_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_INC)"
	},
	"FlyInside.Bell 47 G.Radio.Input.TRANSPONDER_CODE_10_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_INC)"
	},
	"FlyInside.Bell 47 G.Radio.Input.TRANSPONDER_CODE_1_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_INC)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_MHZ_DEC_ENCODER": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_DEC)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_MHZ_INC_ENCODER": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_INC)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_KHZ_DEC_ENCODER": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_DEC)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_KHZ_INC_ENCODER": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_INC)"
	},
	"FlyInside.Bell 47 G.Radio.COM_RADIO_STBY_ACTIVE_SWAP_SW": {
		"method": "calcCode",
		"code": "(>K:COM_STBY_RADIO_SWAP)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_1_ON": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_ON)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_1_OFF": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_OFF)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_2_ON": {
		"method": "calcCode",
		"code": "2 (>K:PITOT_HEAT_ON)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_PITOT_2_OFF": {
		"method": "calcCode",
		"code": "2 (>K:PITOT_HEAT_OFF)"
	},
	"Microsoft.Generic.Controls.PARKING_BRAKES_ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Microsoft.Generic.Controls.PARKING_BRAKES_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"FlyInside.Bell 47 G.Radio.TRANSPONDER_IDENT_LED_ON_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Transponder.Flash)"
	},
	"FlyInside.Bell 47 G.Environment.Output.LOCAL_AIR_PRESSURE_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Instruments.Altimeter.Kohlsman.HG) 100 *"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.AIRSPEED_INDICATED_MPH_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Position.Airspeed.Indicated, Mph)"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.HEADING_MAGNETIC_DEGREES_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Position.Heading.Magnetic.Value) 57.2957795131 * flr"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.ALTITUDE_INDICATED_FEET_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Position.Altitude.Indicated)"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.VERTICAL_SPEED_FEET_MINUTE_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Position.VerticalSpeed.value, Feet/Minute) 100 /"
	},
	"FlyInside.Bell 47 G.Fuel.FUEL_TOTAL_QUANTITY_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Fuel.Total.Quantity) 10 *"
	},
	"FlyInside.Bell 47 G.Electrical.BATTERY_VOLTAGE_DISPLAY": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY VOLTAGE, Volts)"
	},
	"FlyInside.Bell 47 G.Engines.CYLINDERS_TEMPERATURE_DEGREES_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Gauges.CylTemp)"
	},
	"FlyInside.Bell 47 G.Engines.ENGINE_RPM_PERC_DISPLAY": {
		"method": "calcCode",
		"code": "(L:Aircraft.Engine.1.Turbine.N2)"
	},
	"FlyInside.Bell 47 G.Engines.MANIF_PRESS_DISPLAY": {
		"method": "calcCode",
		"code": "(A:RECIP ENG MANIFOLD PRESSURE:1, inHg)"
	},
	"FlyInside.Bell 47 G.Environment.OUTSIDE_TEMP_DISPLAY": {
		"method": "calcCode",
		"code": "(A:AMBIENT TEMPERATURE,Celsius) 10 *"
	},
	"FlyInside.Bell 47 G.Engines.CARBURATOR_HEAT_LEVER_CONTROL_JOYSTICK_SLIDER": {
		"method": "calcCode",
		"code": "@ 100 65535 / * 0 max 100 min (>L:Aircraft.Engine.1.Input.CarbHeatPosition, number)"
	},
	"FlyInside.Bell 47 G.Interaction.CABIN_DOORS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Doors.Hidden) ! (>L:Doors.Hidden)"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.Input.BAROMETRIC_PRESSURE_ENCODER_DEC": {
		"method": "calcCode",
		"code": "(L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number) 0.01 - 30.8 min (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.Input.BAROMETRIC_PRESSURE_ENCODER_INC": {
		"method": "calcCode",
		"code": "(L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number) 0.01 + 30.8 min  (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)"
	},
	"FlyInside.Bell 47 G.Flight Instrumentation.Input.STD_PRESSURE_SW": {
		"method": "calcCode",
		"code": "29.92 (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)"
	},
	"FlyInside.Bell 47 G.Lights.CABIN_LIGHTS_ON_OFF": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_CABIN_LIGHTS)"
	},
	"FlyInside.Bell 47 G.Lights.CABIN_LIGHTS_LED": {
		"method": "calcCode",
		"code": "(L:Aircraft.Lights.Strobe.On)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_FADEC_EMER_1)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_FADEC_EMER_2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_MAIN_1)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_MAIN_2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_MAIN_LATCH_1)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ECP_MAIN_LATCH_2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ENG_1_N2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ENG_1_N2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ENG_1_TRQ": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ENG_1_TRQ)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ENG_2_N2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ENG_2_N2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ENG_2_TRQ": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ENG_2_TRQ)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_EQUIP_EMERGENCY_EXITS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_EQUIP_EMERGENCY_EXITS)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_EQUIP_EMERGENCY_FLOATS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_EQUIP_EMERGENCY_FLOATS)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_EQUIP_SEARCHLIGHT_ON": {
		"method": "calcCode",
		"code": "(L:H145_SDK_EQUIP_SEARCHLIGHT_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_EQUIP_SEARCHLIGHT_X_POS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_EQUIP_SEARCHLIGHT_X_POS)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_EQUIP_SEARCHLIGHT_Y_POS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_EQUIP_SEARCHLIGHT_Y_POS)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_HYD_1_PRESSURE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_HYD_1_PRESSURE)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_HYD_2_PRESSURE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_HYD_2_PRESSURE)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_IBF_1_CLOGGED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_IBF_1_CLOGGED)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_IBF_2_CLOGGED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_IBF_2_CLOGGED)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_MGB_PRESSURE1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MGB_PRESSURE1)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_MGB_PRESSURE2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MGB_PRESSURE2)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_MGB_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MGB_TEMPERATURE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_CRHT_BUG": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_CRHT_BUG)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_GTCH_ALT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_GTCH_ALT)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_GTCH_LAT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_GTCH_LAT)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_GTCH_LON": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_GTCH_LON)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_MASTER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_MASTER)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_MODE_COLLECTIVE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_MODE_COLLECTIVE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_MODE_PITCH": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_MODE_PITCH)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_AFCS_MODE_ROL": {
		"method": "calcCode",
		"code": "(L:H145_SDK_AFCS_MODE_ROL)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ALT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_ALT)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_AP1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_AP1)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_AP2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_AP2)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ATRIM": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_ATRIM)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_BKUP": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_BKUP)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_CRHT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_APCP_CRHT)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_AIR_CONDITIONING": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_AIR_CONDITIONING)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_ACAS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_AUDIO_ACAS)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_HTAWS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_AUDIO_HTAWS)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_BATTERY_MASTER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_BATTERY_MASTER)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_BLEED_HEATING_POT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_BLEED_HEATING_POT)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_COCKPIT_VENT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_COCKPIT_VENT)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_COCKPIT_VENT_POT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_COCKPIT_VENT_POT)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_DC_POWER_RECEPTACLES": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_DC_POWER_RECEPTACLES)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_EMERGENCY_FLOATS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_EMERGENCY_FLOATS)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_ENG1_FIRE_TEST": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_ENG1_FIRE_TEST)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_ENG2_FIRE_TEST": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_ENG2_FIRE_TEST)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG1_PRIME": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_FUEL_ENG1_PRIME)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG2_PRIME": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_FUEL_ENG2_PRIME)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_AFT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_FUEL_TRANSFER_AFT)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_FWD": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_FUEL_TRANSFER_FWD)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FUZZ_CHIP_BURNER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_FUZZ_CHIP_BURNER)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_HYD_TEST": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_HYD_TEST)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_IBF_1)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_IBF_2)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_RECAL": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_IBF_RECAL)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_CARGO_PAX": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_INT_LIGHT_CARGO_PAX)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS)"
	},
	"Hype Performance Group.H145.Lights.Output.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_LAMP_AND_PREFLIGHT_TEST": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_LAMP_AND_PREFLIGHT_TEST)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAVCS_SYSTEM": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_LAVCS_SYSTEM)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_OH_WINDSHIELD_WIPER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_OH_WINDSHIELD_WIPER)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ROTOR_RPM": {
		"method": "calcCode",
		"code": "(L:H145_SDK_ROTOR_RPM)"
	},
	"Hype Performance Group.H145.Avionics.H145_SDK_SYSTEM_COLLECTIVE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_SYSTEM_COLLECTIVE)"
	},
	"Hype Performance Group.H145.Avionics.H145_SDK_SYSTEM_FLIGHTMODE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_SYSTEM_FLIGHTMODE)"
	},
	"Hype Performance Group.H145.Avionics.H145_SDK_SYSTEM_ISACTIVATED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_SYSTEM_ISACTIVATED)"
	},
	"Hype Performance Group.H145.Avionics.H145_SDK_SYSTEM_LOADED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_SYSTEM_LOADED)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_TEST_POWERUP": {
		"method": "calcCode",
		"code": "(L:H145_SDK_TEST_POWERUP)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_TEST_PREFLIGHT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_TEST_PREFLIGHT)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_TEST_STARTUP": {
		"method": "calcCode",
		"code": "(L:H145_SDK_TEST_STARTUP)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_MISC_DOWNLOAD": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MISC_DOWNLOAD)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_MISC_RADIOHEIGHT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MISC_RADIOHEIGHT)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_COCKPIT_L": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_COCKPIT_L)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_COCKPIT_R": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_COCKPIT_R)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_PAX_L": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_PAX_L)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_PAX_R": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_PAX_R)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_CARGO_L": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_CARGO_L)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_CARGO_R": {
		"method": "calcCode",
		"code": "(L:H145_SDK_DOOR_CARGO_R)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_BAT_MASTER_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_BAT_MASTER_OFF)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_BAT_MASTER_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_BAT_MASTER_ON)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_BAT_MASTER_ENGAGE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_BAT_MASTER_ENGAGE)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_HYD_TEST_SYS1": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_HYD_TEST_SYS1)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_HYD_TEST_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_HYD_TEST_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_HYD_TEST_SYS2": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_HYD_TEST_SYS2)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG1_TEST_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG1_TEST_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG1_TEST_EXT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG1_TEST_EXT)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG1_TEST_EXT_WARN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG1_TEST_EXT_WARN)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG2_TEST_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG2_TEST_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG2_TEST_EXT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG2_TEST_EXT)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FIRE_ENG2_TEST_EXT_WARN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FIRE_ENG2_TEST_EXT_WARN)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAMP_TEST_PREFLIGHT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAMP_TEST_PREFLIGHT)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAMP_TEST_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAMP_TEST_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAMP_TEST_LAMP": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAMP_TEST_LAMP)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_DC_RECEPT_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_DC_RECEPT_OFF)"
	},
	"Hype Performance Group.H145.Electrical.H145_SDK_OH_DC_RECEPT_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_DC_RECEPT_ON)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_EMER_FLOATS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_EMER_FLOATS_ARM": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_ARM)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_EMER_FLOATS_TEST": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_TEST)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FUZZ_CHIP_BURNER_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_OFF)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_FUZZ_CHIP_BURNER_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_ON)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAVCS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_OFF)"
	},
	"Hype Performance Group.H145.Safety.Input.H145_SDK_OH_LAVCS_PIL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_PIL)"
	},
	"Hype Performance Group.H145.Safety.H145_SDK_OH_LAVCS_PAX": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_PAX)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_WINDSHIELD_WIPER_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_WINDSHIELD_WIPER_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_OH_WINDSHIELD_WIPER_SLOW": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_WINDSHIELD_WIPER_SLOW)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_WINDSHIELD_WIPER_FAST": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_WINDSHIELD_WIPER_FAST)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_AIR_CONDITIONING_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AIR_CONDITIONING_OFF)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_AIR_CONDITIONING_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AIR_CONDITIONING_ON)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_COCKPIT_VENT_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_COCKPIT_VENT_OFF)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_COCKPIT_VENT_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_COCKPIT_VENT_ON)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_1_CLOSED": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_1_CLOSED)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_1_OPEN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_1_OPEN)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_1_NORMAL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_1_NORMAL)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_2_CLOSED": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_2_CLOSED)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_2_OPEN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_2_OPEN)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_2_NORMAL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_2_NORMAL)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_RECALL_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_RECALL_OFF)"
	},
	"Hype Performance Group.H145.Air Condition / Pressurization.H145_SDK_OH_IBF_RECALL_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_IBF_RECALL_ON)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG1_PRIME_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_ENG1_PRIME_OFF)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG1_PRIME_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_ENG1_PRIME_ON)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG2_PRIME_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_ENG2_PRIME_OFF)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_ENG2_PRIME_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_ENG2_PRIME_ON)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_FWD_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_TRANSFER_FWD_OFF)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_FWD_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_TRANSFER_FWD_ON)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_AFT_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_TRANSFER_AFT_OFF)"
	},
	"Hype Performance Group.H145.Fuel.H145_SDK_OH_FUEL_TRANSFER_AFT_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUEL_TRANSFER_AFT_ON)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_ACAS_MUTE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_ACAS_MUTE)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_ACAS_NORMAL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_ACAS_NORMAL)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_ACAS_TEST": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_ACAS_TEST)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_HTAWS_MUTE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_HTAWS_MUTE)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_HTAWS_NORMAL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_HTAWS_NORMAL)"
	},
	"Hype Performance Group.H145.Radio.H145_SDK_OH_AUDIO_HTAWS_STANDBY": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_AUDIO_HTAWS_STANDBY)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_CARGO_PAX_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_OFF)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_CARGO_PAX_PAX": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_PAX)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_CARGO_PAX_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_ON)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_OFF)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ARM": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ARM)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ON)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_OFF)"
	},
	"Hype Performance Group.H145.Lights.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_COCKPIT_L_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_COCKPIT_L_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_COCKPIT_R_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_COCKPIT_R_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_PAX_L_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_PAX_L_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_PAX_R_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_PAX_R_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_CARGO_L_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_CARGO_L_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.H145_SDK_DOOR_CARGO_R_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_DOOR_CARGO_R_TOGGLE)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_1_FLIGHT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_1_FLIGHT)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_1_IDLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_1_IDLE)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_1_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_1_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_2_FLIGHT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_2_FLIGHT)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_2_IDLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_2_IDLE)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_2_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_2_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_1_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_LATCH_1_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_1_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_LATCH_1_ON)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_2_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_LATCH_2_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_MAIN_LATCH_2_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_LATCH_2_ON)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_1_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_FADEC_EMER_1_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_1_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_FADEC_EMER_1_ON)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_2_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_FADEC_EMER_2_OFF)"
	},
	"Hype Performance Group.H145.Engines.H145_SDK_ECP_FADEC_EMER_2_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_FADEC_EMER_2_ON)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ATRIM_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_ATRIM_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_AP1_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_AP1_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_AP2_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_AP2_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_BKUP_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_BKUP_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_ALT_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_CRHT_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_CRHT_TOGGLE)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ALTA_Clockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_ALTA_Clockwise)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_ALTA_AntiClockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_ALTA_AntiClockwise)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_CRHT_Clockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_CRHT_Clockwise)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_CRHT_AntiClockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_CRHT_AntiClockwise)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_HDG_Clockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_HDG_Clockwise)"
	},
	"Hype Performance Group.H145.Autopilot.H145_SDK_APCP_HDG_AntiClockwise": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_HDG_AntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T1": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T2": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T3": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T4": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T5": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_T6": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_T6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B1": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B2": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B3": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B4": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B5": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_B6": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_B6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L1": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L2": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L3": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L4": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L5": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_L6": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_L6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R1": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R2": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R3": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R4": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R5": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_R6": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_R6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobInnerClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobInnerClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobInnerAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobInnerAntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobInnerPush": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobInnerPush)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobInnerPushLong": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobInnerPushLong)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobOuterClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobOuterClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD1_SoftKey_KnobOuterAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD1_SoftKey_KnobOuterAntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T1": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T2": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T3": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T4": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T5": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_T6": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_T6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B1": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B2": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B3": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B4": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B5": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_B6": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_B6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L1": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L2": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L3": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L4": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L5": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_L6": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_L6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R1": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R2": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R3": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R4": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R5": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_R6": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_R6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobInnerClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobInnerClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobInnerAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobInnerAntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobInnerPush": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobInnerPush)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobInnerPushLong": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobInnerPushLong)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobOuterClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobOuterClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD2_SoftKey_KnobOuterAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD2_SoftKey_KnobOuterAntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T1": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T2": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T3": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T4": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T5": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_T6": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_T6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B1": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B2": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B3": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B4": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B5": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_B6": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_B6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L1": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L2": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L3": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L4": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L5": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_L6": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_L6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R1": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R1)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R2": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R2)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R3": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R3)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R4": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R4)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R5": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R5)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_R6": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_R6)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobInnerClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobInnerClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobInnerAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobInnerAntiClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobInnerPush": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobInnerPush)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobInnerPushLong": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobInnerPushLong)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobOuterClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobOuterClockwise)"
	},
	"Hype Performance Group.H145.Avionics.H145_MFD4_SoftKey_KnobOuterAntiClockwise": {
		"method": "calcCode",
		"code": "(>H:MFD4_SoftKey_KnobOuterAntiClockwise)"
	},
	"FlyInside.Bell 47 G.Electrical.BATTERY_STATUS_ON_OR_OFF": {
		"method": "calcCode",
		"code": "(L:Aircraft.Electric.Battery.On)"
	},
	"FlyInside.Bell 47 G.Engines.OIL_TRANS_TEMP_SWAP": {
		"method": "calcCode",
		"code": "1.0 (L:Aircraft.Gauges.DisplayOilTemp, number) - (>L:Aircraft.Gauges.DisplayOilTemp, number)"
	},
	"Just Flight.Piper Arrow III.Environment.Lower Door latch unlock": {
		"method": "calcCode",
		"code": "1 (>L:DOOR_lower_latch) "
	},
	"Just Flight.Piper Arrow III.Environment.Upper Door latch unlatch": {
		"method": "calcCode",
		"code": "1 (>L:DOOR_upper_latch)"
	},
	"Just Flight.Piper Arrow III.Environment.Open the Right hand door": {
		"method": "calcCode",
		"code": "(>L:DOOR_door,bool)"
	},
	"Just Flight.Piper Arrow III.Environment.Left hand window latch": {
		"method": "calcCode",
		"code": "(>L:LEFT_MISC_window_latch,bool) "
	},
	"Just Flight.Piper Arrow III.Environment.Open the left hand window": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_window_LC,bool) "
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_OVHD_ADIRS_KNOB1_MODES_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, number) ++ 3 %  (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, number)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_OVHD_ADIRS_KNOB2_MODES_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB) ++ 3 % (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_OVHD_ADIRS_KNOB3_MODES_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB) ++ 3 % (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_1_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON,bool)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_2_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON,bool)"
	},
	"Fly By Wire.A320.Navigation.A32NX_ADIRS_3_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON,bool)"
	},
	"Fly By Wire.A320-Dev.Safety.A32NX_CABIN_SEATBELTS_ALERT_ON": {
		"method": "calcCode",
		"code": "(A:CABIN SEATBELTS ALERT SWITCH, bool) ! if{ (>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.Safety.A32NX_CABIN_SEATBELTS_ALERT_OFF": {
		"method": "calcCode",
		"code": "(A:CABIN SEATBELTS ALERT SWITCH, bool) if{ (>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE) }"
	},
	"Microsoft.Generic.Warning System.CABIN_SEATBELTS_ALERT_SWITCH": {
		"method": "calcCode",
		"code": "(A:CABIN SEATBELTS ALERT SWITCH, bool)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).Adjust PFD brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 88  (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).Adjust MFD brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 89 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Adjust upper EICAS brightness": {
		"method": "calcCode",
		"code": "@ 10.2300 / 0 max 100 min 92 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Adjust lower EICAS brightness": {
		"method": "calcCode",
		"code": "@ 10.2300 / 0 max 100 min 93 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.EFIS.A32NX_EFIS_FD_PUSH": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_PERF": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_PERF)"
	},
	"Fly By Wire.A320.Navigation.A320_Neo_CDU_1_BTN_DATA": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_DATA)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_STAT_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_STAT)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_STAT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_STAT)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_HYD_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_HYD)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_HYD_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_HYD)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_ELEC_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_ELEC)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_ELEC_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_ELEC)  "
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_FUEL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_FUEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_FUEL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_FUEL)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_FCTL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_FCTL)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_FCTL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_FCTL)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_AICE_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_AICE)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_AICE_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_AICE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_DOORS_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_DOORS)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_DOORS_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_DOORS)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_SEL_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_SEL)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_SEL_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_SEL)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_CAS_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_CAS)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_CAS_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_CAS)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_MENU_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_MENU)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_MENU_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_MENU)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_UP_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_UP)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_UP_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_UP)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_DOWN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_DOWN)"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_DOWN_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ECAM_DOWN)"
	},
	"Just Flight.Piper Arrow III.Gear.PARKING_BRAKE_SWITCH": {
		"method": "calcCode",
		"code": "(>K:PARKING_BRAKES)"
	},
	"Just Flight.Piper Arrow III.Gear.PARKING_BRAKE_LED": {
		"method": "calcCode",
		"code": "(L:ParkingBrake_Position)"
	},
	"Just Flight.Piper Arrow III.Gear.LANDING_GEAR_SWITCH": {
		"method": "calcCode",
		"code": "(L:LDG_GEAR_lever) ! (>L:LDG_GEAR_lever)"
	},
	"Just Flight.Piper Arrow III.Gear.LAND_GEAR_NOSE_LED": {
		"method": "calcCode",
		"code": "(L:LDG_GEAR_nose_gear)"
	},
	"Just Flight.Piper Arrow III.Gear.LAND_GEAR_LEFT_LED": {
		"method": "calcCode",
		"code": "(L:LDG_GEAR_left_gear)"
	},
	"Just Flight.Piper Arrow III.Gear.LAND_GEAR_RIGHT_LED": {
		"method": "calcCode",
		"code": "(L:LDG_GEAR_right_gear)"
	},
	"Just Flight.Piper Arrow III.Lights.LANDING_LIGHT_SWITCH": {
		"method": "calcCode",
		"code": "(L:CENTRE_LOWER_ldg_light) ! (>L:CENTRE_LOWER_ldg_light)"
	},
	"Just Flight.Piper Arrow III.Lights.ROT_BCN_LIGHT_SWITCH": {
		"method": "calcCode",
		"code": "(L:CENTRE_LOWER_bcn_light) ! (>L:CENTRE_LOWER_bcn_light)"
	},
	"Just Flight.Piper Arrow III.Lights.ANT_COL_LIGHT_SWITCH": {
		"method": "calcCode",
		"code": "(L:CENTRE_LOWER_anticol_light) ! (>L:CENTRE_LOWER_anticol_light)"
	},
	"Just Flight.Piper Arrow III.Anti-Ice.PITOT_HEAT_SWITCH": {
		"method": "calcCode",
		"code": "(L:CENTRE_LOWER_pitotheat) ! (>L:CENTRE_LOWER_pitotheat)"
	},
	"Just Flight.Piper Arrow III.Fuel.Input.FUEL_PUMP_SELECTOR_SWITCH": {
		"method": "calcCode",
		"code": "(L:CENTRE_LOWER_fuelpump) 0 == if{ 1 (>L:CENTRE_LOWER_fuelpump) } els{ (L:CENTRE_LOWER_fuelpump) 1 == if{ 2 (>L:CENTRE_LOWER_fuelpump) } els{ (L:CENTRE_LOWER_fuelpump) 2 == if{ 0 (>L:CENTRE_LOWER_fuelpump) }"
	},
	"Just Flight.Piper Arrow III.Fuel.FUEL_PRIMER_SWITCH": {
		"method": "calcCode",
		"code": "(L:LEFT_MISC_prime_IsDown) ! (>L:LEFT_MISC_prime_IsDown)"
	},
	"Just Flight.Piper Arrow III.Fuel.FUEL_TANK_SELECTOR_SWITCH": {
		"method": "calcCode",
		"code": "(L:LEFT_MISC_fuel_sel) ++ 3 % (>L:LEFT_MISC_fuel_sel) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input (Potentiometer).WT_CJ4_CABIN1_LIGHT_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min \ns0 (>L:LIGHTING_CABIN_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) s2 \n(L:LIGHTING_CABIN_1) 0 > != if{ \n\tl2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input (Potentiometer).WT_CJ4_CABIN2_LIGHT_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min \ns0 (>L:LIGHTING_CABIN_2) \nl0 6 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) s2 \n(L:LIGHTING_CABIN_2) 0 > != if{ \n\tl2 ! 2 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Working Title.CJ4.Lights.WT_CJ4_FLOOD_LIGHT_SET": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:3, Bool) ! if <{ 3 1 (>K:2:CABIN_LIGHTS_SET) @ 10.23 / 4 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 4 (>K:2:LIGHT_POTENTIOMETER_SET) 3 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_ENGAGED_LED": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_onoff)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_HDG_LED": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_hdg)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_ALT_LOCK_LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, Bool)"
	},
	"Just Flight.Piper Arrow III.Autopilot.AUTOPILOT_NAV_MODE_LED": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_mode)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_GLD_MODE_SWITCH3_PRESS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_TQ_SPLR_MODE, Number) -- (>L:ASCRJ_TQ_SPLR_MODE) \n(L:ASCRJ_TQ_SPLR_MODE, Number) 0 == if{ 2 (>L:ASCRJ_TQ_SPLR_MODE_TIMER_0) } \n\n"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_GLD_MODE_SWITCH3_RELEASE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_TQ_SPLR_MODE, Number) ++ (>L:ASCRJ_TQ_SPLR_MODE) \n(L:ASCRJ_TQ_SPLR_MODE, Number) 2 == if{ 2 (>L:ASCRJ_TQ_SPLR_MODE_TIMER_2) } \n\n"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX LIGHTS GLARESHIELD2 INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:84, percent) 5 + 100 min 84 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX LIGHTS GLARESHIELD2 DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:84, percent) 5 - 0 max 84 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_LIGHTS_GLARESHIELD3_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:87, percent) 5 + 100 min 87 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_LIGHTS_GLARESHIELD3_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:87, percent) 5 - 0 max 87 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input (Potentiometer).A32NX LIGHTS GLARESHIELD2 SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 84 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input (Potentiometer).A32NX_LIGHTS_GLARESHIELD3_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 87 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.A32NX LIGHTS GLARESHIELD2 PERCENT": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:84, percent)"
	},
	"Fly By Wire.A320-Dev.Lights.A32NX_LIGHTS_GLARESHIELD3_PERCENT": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:87, percent)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_HomePush": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_HomePush)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_HomePushLong": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_HomePushLong)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_DirectToPush": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_DirectToPush)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_KnobSmallInc": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_KnobSmallInc)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_KnobSmallDec": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_KnobSmallDec)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_KnobLargeInc": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_KnobLargeInc)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_KnobLargeDec": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_KnobLargeDec)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_KnobPush": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_KnobPush)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_VolInc": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_VolInc)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_VolDec": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_VolDec)"
	},
	"PMS50.GTN750.Navigation.GTN750_PANEL_VolPush": {
		"method": "calcCode",
		"code": "1 (>L:GTN750_PANEL_VolPush)"
	},
	"Just Flight.Piper Arrow III.Autopilot.NAV_GPS_SELECTOR_SW": {
		"method": "calcCode",
		"code": "(L:LEFT_MISC_navgps) ! (>L:LEFT_MISC_navgps)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_LAMP_TEST_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ENG_LAMPTEST, Number) ++ 3 % (>L:ASCRJ_ENG_LAMPTEST, Number)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_LS": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_VOR": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_NAV": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_ARC": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_10": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_20": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_40": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_80": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_160": {
		"method": "calcCode",
		"code": "4 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_320": {
		"method": "calcCode",
		"code": "5 (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_CSTR_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 1 == if{ 0 } els{ 1 } (>L:A32NX_EFIS_L_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_WPT_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 4 == if{ 0 } els{ 4 } (>L:A32NX_EFIS_L_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_VORD_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 2 == if{ 0 } els{ 2 } (>L:A32NX_EFIS_L_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_NDB_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 8 == if{ 0 } els{ 8 } (>L:A32NX_EFIS_L_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_ARPT_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION, enum) 16 == if{ 0 } els{ 16 } (>L:A32NX_EFIS_L_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_1_MODE_ADF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_L_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_1_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_L_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_1_MODE_VOR": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_L_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_2_MODE_ADF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_L_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_2_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_L_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_NAVAID_2_MODE_VOR": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_L_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_MODE_LS": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_MODE_VOR": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_MODE_NAV": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_MODE_ARC": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_MODE_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_10": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_20": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_40": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_80": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_160": {
		"method": "calcCode",
		"code": "4 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_320": {
		"method": "calcCode",
		"code": "5 (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_CSTR_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 1 == if{ 0 } els{ 1 } (>L:A32NX_EFIS_R_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_WPT_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 4 == if{ 0 } els{ 4 } (>L:A32NX_EFIS_R_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_VORD_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 2 == if{ 0 } els{ 2 } (>L:A32NX_EFIS_R_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_NDB_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 8 == if{ 0 } els{ 8 } (>L:A32NX_EFIS_R_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_ARPT_PUSH": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 16 == if{ 0 } els{ 16 } (>L:A32NX_EFIS_R_OPTION, enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_1_MODE_ADF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_R_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_1_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_R_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_1_MODE_VOR": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_R_NAVAID_1_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_2_MODE_ADF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_EFIS_R_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_2_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_EFIS_R_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_NAVAID_2_MODE_VOR": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_EFIS_R_NAVAID_2_MODE)"
	},
	"Fly By Wire.A320-Dev.Gear.ANTISKID ON": {
		"method": "calcCode",
		"code": "(A:ANTISKID BRAKES ACTIVE,Bool) ! if{ (>K:ANTISKID_BRAKES_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.Gear.ANTISKID OFF": {
		"method": "calcCode",
		"code": "(A:ANTISKID BRAKES ACTIVE,Bool) if{ (>K:ANTISKID_BRAKES_TOGGLE) }"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.BARO Hpa/In": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_HPA_IN)\n1 (>L:ASCRJ_RSP_HPA_IN)"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Lights.Input.Landing Light Position UP": {
		"method": "calcCode",
		"code": "(L:LandingLight_Position) 0 == if{(>L:LandingLight_Position,Number) 1 (>L:LandingLight_SwitchPosition, Number)}\n"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Lights.Input.Landing Light Position DOWN": {
		"method": "calcCode",
		"code": "(L:LandingLight_Position) 0 == if{(>L:LandingLight_Position,Number) 0 (>L:LandingLight_SwitchPosition, Number)}\n"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Gear.Input.Tailwheel Unlock": {
		"method": "calcCode",
		"code": "(A:TAILWHEEL LOCK ON, Bool) 1 == if{(>K:TOGGLE_TAILWHEEL_LOCK)}\n"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Gear.Input.TailWheel Lock": {
		"method": "calcCode",
		"code": "(A:TAILWHEEL LOCK ON, Bool) 0 == if{(>K:TOGGLE_TAILWHEEL_LOCK)}\n"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Avionics.Input.Avionics_BUS_1 On": {
		"method": "calcCode",
		"code": "3 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Avionics.Input.Avionics_BUS_2": {
		"method": "calcCode",
		"code": "3 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Fuel.Input.Right Transfer Tank Pump Toggle": {
		"method": "calcCode",
		"code": "4 (>K:ELECTRICAL_CIRCUIT_TOGGLE)\n"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Fuel.Input.Left Transfer Tank Pump Toggle": {
		"method": "calcCode",
		"code": "3 (>K:ELECTRICAL_CIRCUIT_TOGGLE)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_APU_STARTSTOP_TOGGLE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_APU_STARTSTOP) ! (>L:ASCRJ_APU_STARTSTOP)"
	},
	"Just Flight.Piper Arrow III.Miscellaneous.PA28_GLARESHIELD_VISOR_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min  (>L:JF_Visor_Position_1)"
	},
	"Just Flight.Piper Arrow III.Miscellaneous.PA28_GLARESHIELD_VISOR_TOGGLE": {
		"method": "calcCode",
		"code": "(L:JF_Visor_Position_1) 0 == if{ 100 } els{ 0 } (>L:JF_Visor_Position_1)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_CHRONO_PUSH": {
		"method": "calcCode",
		"code": "0 (>H:A32NX_EFIS_L_CHRONO_PUSHED)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX CHRONO TOGGLE": {
		"method": "calcCode",
		"code": "(>H:A32NX_CHRONO_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX CHRONO RST": {
		"method": "calcCode",
		"code": "(>H:A32NX_CHRONO_RST)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_L_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:77,bool) if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_L_SLOW": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:77,bool) ! if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 75 77 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_L_FAST": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:77,bool) ! if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 100 77 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_R_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:80,bool) if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_R_SLOW": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:80,bool) ! if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 75 80 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_WIPER_R_FAST": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:80,bool) ! if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 100 80 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)"
	},
	"Fly By Wire.A320.Navigation.TCAS SWITCH_POSITION_TA/RA": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_SWITCH_TCAS_Position)"
	},
	"Fly By Wire.A320.Navigation.TCAS SWITCH_POSITION_TA": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_SWITCH_TCAS_Position)"
	},
	"Fly By Wire.A320.Navigation.Input.TCAS SWITCH_POSITION_STBY": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_SWITCH_TCAS_Position)"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_EngStart_Start": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_EngStart)"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_EngStart_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_EngStart)"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_EngStart_Off": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_EngStart)"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_Batt1_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Batt1)"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_Batt1_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Batt1)"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_Batt2_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Batt2)"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_Batt2_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Batt2)"
	},
	"Just Flight.Hawk T1.Fuel.HT1_FWD_LEFT_FuelFlow_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_FuelFlow)"
	},
	"Just Flight.Hawk T1.Fuel.HT1_FWD_LEFT_FuelFlow_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_FuelFlow)"
	},
	"Just Flight.Hawk T1.Fuel.HT1_FWD_LEFT_FuelPump_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_FuelPump)"
	},
	"Just Flight.Hawk T1.Fuel.HT1_FWD_LEFT_FuelPump_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_FuelPump)"
	},
	"Just Flight.Hawk T1.Anti-Ice.HT1_FWD_LEFT_PitotHeat_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_PitotHeat)"
	},
	"Just Flight.Hawk T1.Anti-Ice.HT1_FWD_LEFT_PitotHeat_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_PitotHeat)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_RudderTrim_Left": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_RudderTrim)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_RudderTrim_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_RudderTrim)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_RudderTrim_Right": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_RudderTrim)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_TailTrim_Cover_Close": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_TailTrim_Cover)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_TailTrim_Cover_Open": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_TailTrim_Cover)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_TailTrim_Switch_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_TailTrim_Switch)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_TailTrim_Switch_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_TailTrim_Switch)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_TailTrim_Switch_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_TailTrim_Switch)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_1_Left": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AileronTrim_1)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_1_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AileronTrim_1)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_1_Right": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_AileronTrim_1)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_2_Left": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AileronTrim_2)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_2_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AileronTrim_2)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_AileronTrim_2_Right": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_AileronTrim_2)"
	},
	"Just Flight.Hawk T1.Gear.HT1_FWD_LEFT_AntiSkid_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AntiSkid)"
	},
	"Just Flight.Hawk T1.Gear.HT1_FWD_LEFT_AntiSkid_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AntiSkid)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_AltPTT_Push": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AltPTT_IsDown) (E:SIMULATION TIME,seconds) 1 + (>L:FWD_LEFT_AltPTT_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_AltPTT_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AltPTT_IsDown) (L:FWD_LEFT_AltPTT_MinReleaseTime) (E:SIMULATION TIME,seconds) < if{ } els{ 1 (>L:FWD_LEFT_AltPTT_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_RadioMute_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_RadioMute)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_RadioMute_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_RadioMute)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_UHF_Stby": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_UHF)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_UHF_Main": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_UHF)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_UHF_A": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_UHF)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_Airbrake_Inc": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AirBrake)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_Airbrake_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AirBrake)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_Airbrake_Dec": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_AirBrake)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_ThrottleTransmit_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_ThrottleTransmit_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_ThrottleTransmit_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_LEFT_ThrottleTransmit_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_ThrottleTransmit_IsDown) (L:FWD_LEFT_ThrottleTransmit_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_ThrottleTransmit_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_ThrottleRelight_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_ThrottleRelight_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_ThrottleRelight_MinReleaseTime) 1 (>L:FWD_LEFT_ThrottleRelight_LC,bool)"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_ThrottleRelight_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_ThrottleRelight_IsDown) (L:FWD_LEFT_ThrottleRelight_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_ThrottleRelight_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_Ignition_off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Ignition)"
	},
	"Just Flight.Hawk T1.Engines.HT1_FWD_LEFT_Ignition_on": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Ignition)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_LEFT_Altimeter_Test": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Altimeter_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_Altimeter_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_LEFT_Altimeter_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Altimeter_IsDown) (L:FWD_LEFT_Altimeter_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_Altimeter_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_AC3Reset_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_AC3Reset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_AC3Reset_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Electrical.HT1_FWD_LEFT_AC3Reset_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_AC3Reset_IsDown) (L:FWD_LEFT_AC3Reset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_AC3Reset_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Hydraulic.HT1_FWD_LEFT_HydReset_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_HydReset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_HydReset_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Hydraulic.HT1_FWD_LEFT_HydReset_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_HydReset_IsDown) (L:FWD_LEFT_HydReset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_HydReset_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Gear.HT1_FWD_LEFT_Gear_Up_Press": {
		"method": "calcCode",
		"code": "(L:FWD_LEFT_Gear_Up) ! (>L:FWD_LEFT_Gear_Up)"
	},
	"Just Flight.Hawk T1.Gear.HT1_FWD_LEFT_Gear_Down_Press": {
		"method": "calcCode",
		"code": "(L:FWD_LEFT_Gear_Down) ! (>L:FWD_LEFT_Gear_Down)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_FlapSel_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_FlapSel)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_FlapSel_Mid": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_FlapSel)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_LEFT_FlapSel_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_LEFT_FlapSel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Mode_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_UHF_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Mode_Main": {
		"method": "calcCode",
		"code": "1 (>L:FWD_UHF_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Mode_Both": {
		"method": "calcCode",
		"code": "2 (>L:FWD_UHF_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Mode_ADF": {
		"method": "calcCode",
		"code": "3 (>L:FWD_UHF_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Vol_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Vol,enum) ++ 10 min (>L:FWD_UHF_Vol,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Vol_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Vol,enum) -- 0 max (>L:FWD_UHF_Vol,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Tone_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_UHF_Tone_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_UHF_Tone_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Tone_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_UHF_Tone_IsDown) (L:FWD_UHF_Tone_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_UHF_Tone_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Squelch_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_UHF_Squelch)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Squelch_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_UHF_Squelch)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Trans_Manual": {
		"method": "calcCode",
		"code": "0 (>L:FWD_UHF_Trans)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Trans_Preset": {
		"method": "calcCode",
		"code": "1 (>L:FWD_UHF_Trans)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Trans_Guard": {
		"method": "calcCode",
		"code": "2 (>L:FWD_UHF_Trans)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig1_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig1, enum) ++ 9 min (>L:FWD_UHF_Dig1, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig1_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig1, enum) -- 0 max (>L:FWD_UHF_Dig1, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig2_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig2, enum) ++ 9 min (>L:FWD_UHF_Dig2, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig2_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig2, enum) -- 0 max (>L:FWD_UHF_Dig2, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig3_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig3, enum) ++ 9 min (>L:FWD_UHF_Dig3, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig3_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig3, enum) -- 0 max (>L:FWD_UHF_Dig3, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig4_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig4, enum) ++ 9 min (>L:FWD_UHF_Dig4, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig4_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig4, enum) -- 0 max (>L:FWD_UHF_Dig4, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig5_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig5, enum) ++ 3 min (>L:FWD_UHF_Dig5, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Dig5_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Dig5, enum) -- 0 max (>L:FWD_UHF_Dig5, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Preset_Sel_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Preset_Sel, enum) ++ 20 min (>L:FWD_UHF_Preset_Sel, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Preset_Sel_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_UHF_Preset_Sel, enum) -- 1 max (>L:FWD_UHF_Preset_Sel, enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_UHF_Store": {
		"method": "calcCode",
		"code": "1 (>L:FWD_UHF_Store,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_Stopwatch_Click": {
		"method": "calcCode",
		"code": "(L:FWD_LEFT_Stopwatch,bool) ! (>L:FWD_LEFT_Stopwatch,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_Stopwatch_Knob_Push": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Stopwatch_push,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_Stopwatch_Knob_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Stopwatch_push,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_Stopwatch_Reset_Push": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_Stopwatch_Reset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_Stopwatch_Reset_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_Stopwatch_Reset_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_LEFT_Stopwatch_Reset_IsDown) (L:FWD_LEFT_Stopwatch_Reset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_Stopwatch_Reset_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_LEFT_FreqCard_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_LEFT_FreqCard) ! (>L:FWD_LEFT_FreqCard)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_L_Smoke_Red_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_red_LC,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_L_Smoke_White_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_white_LC,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_L_Smoke_Blue_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_blue_LC,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_Smoke_Switch_On": {
		"method": "calcCode",
		"code": "1 (L:FWD_RA_Smoke,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_Smoke_Switch_Off": {
		"method": "calcCode",
		"code": "0 (L:FWD_RA_Smoke,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_MISC_MapLight_Left_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_MISC_MapLight_Left,bool) ! (>L:FWD_MISC_MapLight_Left,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_MISC_MapLight_Right_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_MISC_MapLight_Right,bool) ! (>L:FWD_MISC_MapLight_Right,bool)"
	},
	"Fly By Wire.A320-Dev.Lights.Input. CPT TABLE LT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:10, percent) 5 - 0 max 10 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.CPT TABLE LT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:10, percent) 5 + 100 min 10 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input. F/O TABLE LT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:11, percent) 5 - 0 max 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input. F/O TABLE LT_DEC": {
		"method": "calcCode",
		"code": " (A:LIGHT POTENTIOMETER:11, percent) 5 + 100 min 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input. PEDESTAL FLOOD LT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:76, percent) 5 - 0 max 76 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.PEDESTAL FLOOD LT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:76, percent) 5 + 100 min 76 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_INC": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_RANGE) ++ 5 min (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_RANGE_DEC": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_RANGE) -- 0 max (>L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_START_L_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ENGS_START_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_START_L_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ENGS_START_L_ANIM) 1 (>L:ASCRJ_ENGS_START_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_START_R_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ENGS_START_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_START_R_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ENGS_START_R_ANIM) 1 (>L:ASCRJ_ENGS_START_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_STOP_L_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ENGS_STOP_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_STOP_L_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ENGS_STOP_L_ANIM) 1 (>L:ASCRJ_ENGS_STOP_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_STOP_R_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ENGS_STOP_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_STOP_R_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ENGS_STOP_R_ANIM) 1 (>L:ASCRJ_ENGS_STOP_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_L_HYD_SOV_SW": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV1) ! (>L:ASCRJ_HYDR_SOV1)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_R_HYD_SOV_SW": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV2) ! (>L:ASCRJ_HYDR_SOV2)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_L_HYD_SOV_GUARD_SW": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV1_GUARD) ! (>L:ASCRJ_HYDR_SOV1_GUARD)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_R_HYD_SOV_GUARD_SW": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV2_GUARD) ! (>L:ASCRJ_HYDR_SOV2_GUARD)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_L_HYD_SOV_GUARD_COUNT_TIMER": {
		"method": "calcCode",
		"code": "50 (>L:ASCRJ_HYDR_SOV1_GUARD_COUNT)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDRAULIC_R_HYD_SOV_GUARD_COUNT_TIMER": {
		"method": "calcCode",
		"code": "50 (>L:ASCRJ_HYDR_SOV2_GUARD_COUNT)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.L_HYD_SOV_BUTTON_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV1_CLOSED)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.R_HYD_SOV_BUTTON_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV2_CLOSED)"
	},
	"Aerosoft.CRJ 550-700-1000.Warning System.FIRE_DETECTION_FIREX_MONITOR_TEST_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FIRE_TEST) ! (>L:ASCRJ_FIRE_TEST)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_INC": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) ++ 4 min (>L:A32NX_EFIS_L_ND_MODE) \n"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_L_ND_MODE_DEC": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) -- 0 max (>L:A32NX_EFIS_L_ND_MODE) "
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_FIRE_TEST_BTN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_FIRE_TEST_BTN_ANIM) \n1 (>L:ASCRJ_FIRE_TEST)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_FIRE_TEST_BTN_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_FIRE_TEST_BTN_ANIM) \n0 (>L:ASCRJ_FIRE_TEST)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_HYDRO_SOV_L_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_HYDR_SOV1_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_HYDRO_SOV_L_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV1_ANIM, Number) 2 == if{ \n(L:ASCRJ_HYDR_SOV1, Bool) ! (>L:ASCRJ_HYDR_SOV1) \n(L:ASCRJ_HYDR_SOV1) if{ \n1 (>L:ASCRJ_HYDR_SOV1_ANIM) \n} els{ \n0 (>L:ASCRJ_HYDR_SOV1_ANIM) \n} \n}"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_HYDRO_SOV_R_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_HYDR_SOV2_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_HYDRO_SOV_R_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_SOV2_ANIM, Number) 2 == if{ \n(L:ASCRJ_HYDR_SOV2, Bool) ! (>L:ASCRJ_HYDR_SOV2) \n(L:ASCRJ_HYDR_SOV2) if{ \n1 (>L:ASCRJ_HYDR_SOV2_ANIM) \n} els{ \n0 (>L:ASCRJ_HYDR_SOV2_ANIM) \n} \n}"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_1_ON_SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HYDR_PUMP_1, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_1_OFF_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HYDR_PUMP_1, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_1_AUTO_SWITCH": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_HYDR_PUMP_1, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_2_ON_SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HYDR_PUMP_2, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_2_OFF_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HYDR_PUMP_2, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_2_AUTO_SWITCH": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_HYDR_PUMP_2, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3A_ON-OFF_SWITCH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_HYDR_PUMP_3A, Bool) ! (>L:ASCRJ_HYDR_PUMP_3A)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3B_ON_SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HYDR_PUMP_3B, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3B_OFF_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HYDR_PUMP_3B, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3B_AUTO_SWITCH": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_HYDR_PUMP_3B, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_CONT_IGN_BTN_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_ENGS_CONT_IGN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_CONT_IGN_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ENGS_CONT_IGN)"
	},
	"Asobo.XCub.Lights.XCUB_PULSE_STANDBY": {
		"method": "calcCode",
		"code": "0 s0 7 (>K:2:LIGHT_POTENTIOMETER_SET) l0 (>L:LIGHTING_POTENTIOMETER_7)"
	},
	"Asobo.XCub.Lights.XCUB_PULSE_ON": {
		"method": "calcCode",
		"code": "100 s0 7 (>K:2:LIGHT_POTENTIOMETER_SET) l0 (>L:LIGHTING_POTENTIOMETER_7)"
	},
	"Asobo.XCub.Lights.XCUB_NAV_ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)"
	},
	"Asobo.XCub.Lights.XCUB_NAV_OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)"
	},
	"Asobo.XCub.Lights.XCUB_STROBE_ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)   "
	},
	"Asobo.XCub.Lights.XCUB_STROBE_OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)   "
	},
	"Aerosoft.CRJ 550-700-1000.Air Conditioning and Pressurization.Input.ASCRJ_OVHD_OXY_BUTTON_ON_PRESS": {
		"method": "calcCode",
		"code": "1 d (>L:ASCRJ_OVHD_OXY)\n(>L:ASCRJ_OVHD_OXY_ANIM)\n1 (>L:ASCRJ_OVHD_OXY_GUARD)\n15 (>L:ASCRJ_OVHD_OXY_GUARD_COUNT)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Conditioning and Pressurization.Input.ASCRJ_OVHD_OXY_BUTTON_ON_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_OXY_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Conditioning and Pressurization.Output.ASCRJ_OVHD_OXY_ON": {
		"method": "calcCode",
		"code": "(L:ASCRJ_OVHD_OXY_ON)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_ENGS_CONT_IGN_LED": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ENGS_CONT_IGN_ON)"
	},
	"Just Flight.Hawk T1.Warning System.HT1_FWD_MAIN_CWS_Reset_L_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_CWS_Reset_L_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_MAIN_CWS_Reset_L_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Warning System.HT1_FWD_MAIN_CWS_Reset_L_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_CWS_Reset_L_IsDown) (L:FWD_MAIN_CWS_Reset_L_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWS_Reset_L_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Warning System.HT1_FWD_MAIN_CWS_Reset_R_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_CWS_Reset_R_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_MAIN_CWS_Reset_R_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Warning System.HT1_FWD_MAIN_CWS_Reset_R_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_CWS_Reset_R_IsDown) (L:FWD_MAIN_CWS_Reset_R_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWS_Reset_R_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_Gmeter_Push_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Gmeter_Push_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_Gmeter_Push_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_Gmeter_Push_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Gmeter_Push_IsDown) (L:FWD_Gmeter_Push_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_Gmeter_Push_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_MAIN_Weapons_Safe_Lock": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_Weapons_Safe,bool)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_MAIN_Weapons_Safe_Unlock": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_Weapons_Safe,bool)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_Stby_Inst_Pwr_Normal": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Stby_Inst_Pwr, bool)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_Stby_Inst_Pwr_Batt": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Stby_Inst_Pwr, bool)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.Input.HT1_FWD_STBY_ALT_Baro_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_STBY_ALT_Baro,enum) -- 0 max (>L:FWD_STBY_ALT_Baro,enum) 2 (>K:KOHLSMAN_DEC) (L:FWD_STBY_ALT_Baro,enum) 0 == if{ 100 (>L:FWD_STBY_ALT_Baro,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.Input.HT1_FWD_STBY_ALT_Baro_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_STBY_ALT_Baro,enum) ++ 100 min (>L:FWD_STBY_ALT_Baro,enum) 2 (>K:KOHLSMAN_INC) (L:FWD_STBY_ALT_Baro,enum) 100 == if{ 0 (>L:FWD_STBY_ALT_Baro,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.Input.HT1_FWD_ALT_Baro_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_ALT_Baro,enum) -- 0 max (>L:FWD_ALT_Baro,enum) (>K:KOHLSMAN_DEC) (L:FWD_ALT_Baro,enum) 0 == if{ 100 (>L:FWD_ALT_Baro,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.Input.HT1_FWD_ALT_Baro_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_ALT_Baro,enum) ++ 100 min (>L:FWD_ALT_Baro,enum) (>K:KOHLSMAN_INC) (L:FWD_ALT_Baro,enum) 100 == if{ 0 (>L:FWD_ALT_Baro,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_DGI_Knob_Set_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_DGI_Knob_Set,enum) -- (>L:FWD_DGI_Knob_Set,enum) (L:FWD_DGI_Knob_Set,enum) 0 < if{ 99 (>L:FWD_DGI_Knob_Set,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_DGI_Knob_Set_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_DGI_Knob_Set,enum) ++ 100 % (>L:FWD_DGI_Knob_Set,enum)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_DGI_Knob_Push": {
		"method": "calcCode",
		"code": "1 (>L:FWD_DGI_Knob_Push,bool)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_DGI_Knob_Pull": {
		"method": "calcCode",
		"code": "1 (>L:FWD_DGI_Knob_Pull,bool)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_HSI_Hdg_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_HSI_Hdg_Knob,enum) -- 0 max (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_DEC) (L:FWD_HSI_Hdg_Knob,enum) 0 == if{ 100  (>L:FWD_HSI_Hdg_Knob,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_HSI_Hdg_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_HSI_Hdg_Knob,enum) ++ 100 min (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_INC) (L:FWD_HSI_Hdg_Knob,enum) 100 == if{ 0  (>L:FWD_HSI_Hdg_Knob,enum) }"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_HSI_Crs_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_HSI_Crs_Knob,enum) ++ 100 % (>L:FWD_HSI_Crs_Knob,enum)"
	},
	"Just Flight.Hawk T1.Flight Instrumentation.HT1_FWD_HSI_Crs_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_HSI_Crs_Knob,enum) -- (>L:FWD_HSI_Crs_Knob,enum) (L:FWD_HSI_Crs_Knob,enum) 0 < if{ 99 (>L:FWD_HSI_Crs_Knob,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_MAIN_UHF_Pwr_Normal": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_UHF_Pwr)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_MAIN_UHF_Pwr_Batt": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_UHF_Pwr)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_Land_Taxi_Down": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_LdgTaxi)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_Land_Taxi_Up": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_LdgTaxi)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_MAIN_CWP_FireExt_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_CWP_FireExt_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_MAIN_CWP_FireExt_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_MAIN_CWP_FireExt_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_CWP_FireExt_IsDown) (L:FWD_MAIN_CWP_FireExt_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWP_FireExt_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_MAIN_CWP_Test_Cover_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_MAIN_CWP_Test_Cover) ! (>L:FWD_MAIN_CWP_Test_Cover)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_MAIN_CWP_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_CWP_Test_Switch_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_MAIN_CWP_Test_Switch_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_MAIN_CWP_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_CWP_Test_Switch_IsDown) (L:FWD_MAIN_CWP_Test_Switch_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWP_Test_Switch_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_FreqCard_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_FreqCard) ! (>L:FWD_RIGHT_FreqCard)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_R_Smoke_Red_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_red_LC,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_R_Smoke_White_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_white_LC,bool)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_RA_R_Smoke_Blue_Select": {
		"method": "calcCode",
		"code": "1 (>L:RA_smoke_blue_LC,bool)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_MAIN_ILS_Marker_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_MAIN_ILS_Marker_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_MAIN_ILS_Marker_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_MAIN_ILS_Marker_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_MAIN_ILS_Marker_IsDown) (L:FWD_MAIN_ILS_Marker_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_ILS_Marker_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Nav_Down": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_Nav,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Nav_Up": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_Nav,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Lower_White": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_AntiCol_Lower)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Lower_Off": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_AntiCol_Lower)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Lower_Red": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_Lights_AntiCol_Lower)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Upper_White": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_AntiCol_Upper)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Upper_Off": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_AntiCol_Upper)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Anticol_Upper_Red": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_Lights_AntiCol_Upper)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Panel_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_Panel,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Panel_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_Panel,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Emer_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_Emer,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Emer_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_Emer,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Compass_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Lights_Compass,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Compass_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Lights_Compass,bool)"
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Port_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Port, enum) -- 0 max (>L:FWD_RIGHT_Lights_Port, enum) "
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Port_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Port, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Port, enum) "
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Centre_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Centre, enum) -- 0 max (>L:FWD_RIGHT_Lights_Centre, enum) "
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Centre_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Centre, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Centre, enum) "
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Stbd_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Stbd, enum) -- 0 max (>L:FWD_RIGHT_Lights_Stbd, enum) "
	},
	"Just Flight.Hawk T1.Lights.HT1_FWD_RIGHT_Lights_Stbd_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Lights_Stbd, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Stbd, enum) "
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Vhf_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Vhf)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Vhf_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Vhf)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Uhf_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Uhf)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Uhf_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Uhf)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ils_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Ils)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ils_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Ils)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Tacan_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Tacan)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Tacan_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Tacan)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ptt_Norm": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Ptt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ptt_Alt": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Ptt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Norm": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_NormFail)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Fail": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_NormFail)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Rx_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_CCS_Rx,enum) ++ 0 max (>L:FWD_RIGHT_CCS_Rx,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Rx_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_CCS_Rx,enum) -- 10 min (>L:FWD_RIGHT_CCS_Rx,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Sel_Vhf": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_CCS_Sel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Sel_Uhf": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_CCS_Sel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ic_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_CCS_Ic,enum) ++ 0 max (>L:FWD_RIGHT_CCS_Ic,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_CCS_Ic_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_CCS_Ic,enum) -- 10 min (>L:FWD_RIGHT_CCS_Ic,enum)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Gun_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Gun)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Gun_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Gun)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Select_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Select)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Select_RP": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Select)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Select_PB": {
		"method": "calcCode",
		"code": "2 (>L:FWD_Weapons_Select)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Select_B": {
		"method": "calcCode",
		"code": "3 (>L:FWD_Weapons_Select)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Select_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_Weapons_Select) ++ 4 % (>L:FWD_Weapons_Select)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Fuzing_N": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Fuzing)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Fuzing_NT": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Fuzing)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Fuzing_T": {
		"method": "calcCode",
		"code": "2 (>L:FWD_Weapons_Fuzing)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Pylon_port_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Pylon_port)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Pylon_port_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Pylon_port)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Pylon_stbd_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Pylon_stbd)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Pylon_stbd_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Pylon_stbd)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Jettison_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Weapons_Jettison_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_Weapons_Jettison_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Weapons_Jettison_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Weapons_Jettison_IsDown) (L:FWD_Weapons_Jettison_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_Weapons_Jettison_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_AAM_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_AAM_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_AAM_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_AAM_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_AAM_IsDown) (L:FWD_AIM9_AAM_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_AAM_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_Test_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Test_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_Test_IsDown) (L:FWD_AIM9_Test_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Test_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Jet_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_AIM9_Jettison_Cover) ! (>L:FWD_AIM9_Jettison_Cover)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Jettison_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_Jettison_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Jettison_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Jettison_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_Jettison_IsDown) (L:FWD_AIM9_Jettison_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Jettison_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Reject_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_Reject_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Reject_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Reject_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_Reject_IsDown) (L:FWD_AIM9_Reject_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Reject_LeftLeaveToRun) }"
	},
	"Fly By Wire.A320-Dev.Controls.Input (Potentiometer).A32NX SPOILERS SET": {
		"method": "calcCode",
		"code": "@ 15 - 16.253 * 0 max 16383 min s0  (>K:SPOILERS_SET) \nl0 0 == if{ (>K:SPOILERS_ARM_ON) 1 (>L:A32NX_SPOILERS_ARMED) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Coolant_On": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_Coolant)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Coolant_Off": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_Coolant)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Coolant_Test": {
		"method": "calcCode",
		"code": "2 (>L:FWD_AIM9_Coolant)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Mode_Scan": {
		"method": "calcCode",
		"code": "1 (>L:FWD_AIM9_Mode)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Mode_BS": {
		"method": "calcCode",
		"code": "0 (>L:FWD_AIM9_Mode)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Vol_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_AIM9_Vol,enum) ++ 20 min (>L:FWD_AIM9_Vol,enum)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_AIM9_Vol_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_AIM9_Vol,enum) -- 0 max (>L:FWD_AIM9_Vol,enum)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Sight_Brt_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_brt,enum) ++ 20 min (>L:FWD_Sight_brt,enum)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_Sight_Brt_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_brt,enum) -- 0 max (>L:FWD_Sight_brt,enum)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_SHARED_Canopy_Handle_Toggle": {
		"method": "calcCode",
		"code": "(L:SHARED_Canopy_Handle) ! (>L:SHARED_Canopy_Handle)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_LEFT_FlapStby_Button": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_FlapStby_Button_LC,bool)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_LEFT_FlapStby_Handle": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_FlapStby_Handle_LC,bool)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_LEFT_GearStby_Button": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_GearStby_Button_LC,bool)"
	},
	"Just Flight.Hawk T1.Safety.HT1_FWD_LEFT_GearStby_Handle": {
		"method": "calcCode",
		"code": "1 (>L:FWD_LEFT_GearStby_Handle_LC,bool)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Hdg_Set_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_KNEE_Hdg_Set,enum) ++ 100 % (>L:FWD_KNEE_Hdg_Set,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Hdg_Set_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_KNEE_Hdg_Set,enum) -- (>L:FWD_KNEE_Hdg_Set,enum) (L:FWD_KNEE_Hdg_Set,enum) 0 < if{ (99 (>L:FWD_KNEE_Hdg_Set) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Hdg_Push": {
		"method": "calcCode",
		"code": "1 (L:FWD_KNEE_Hdg_Push,bool)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_HSI_Mode_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_KNEE_HSI_Mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_HSI_Mode_DG": {
		"method": "calcCode",
		"code": "1 (>L:FWD_KNEE_HSI_Mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_HSI_Mode_SLV": {
		"method": "calcCode",
		"code": "2 (>L:FWD_KNEE_HSI_Mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Lat_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_KNEE_Lat,enum) ++ 90 min (>L:FWD_KNEE_Lat,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Lat_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_KNEE_Lat,enum) -- 0 max (>L:FWD_KNEE_Lat,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Erect_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_KNEE_Erect_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_KNEE_Erect_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_KNEE_Erect_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_KNEE_Erect_IsDown) (L:FWD_KNEE_Erect_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_KNEE_Erect_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_drift_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_drift,enum) ++ 100 min (>L:FWD_Sight_drift,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_drift_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_drift,enum) -- 0 max (>L:FWD_Sight_drift,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_GA": {
		"method": "calcCode",
		"code": "1 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_M": {
		"method": "calcCode",
		"code": "2 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_G": {
		"method": "calcCode",
		"code": "3 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_R": {
		"method": "calcCode",
		"code": "4 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_B": {
		"method": "calcCode",
		"code": "5 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_S": {
		"method": "calcCode",
		"code": "6 (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_mode) ++ 6 min (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_mode_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_mode) -- 0 max (>L:FWD_Sight_mode)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_depression_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_depression,enum) ++ 100 min (>L:FWD_Sight_depression,enum) "
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_Sight_depression_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_Sight_depression,enum) -- 0 max (>L:FWD_Sight_depression,enum) "
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_KNEE_RudderLock_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_KNEE_RudderLock,bool) ! (>L:FWD_KNEE_RudderLock,bool)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_STICK_BombRel_Cover_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_STICK_BombRel_Cover,bool) ! (>L:FWD_STICK_BombRel_Cover,bool)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_STICK_BombRel_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_STICK_BombRel_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_BombRel_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_STICK_BombRel_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_STICK_BombRel_IsDown) (L:FWD_STICK_BombRel_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_BombRel_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_STICK_Trim_Inc": {
		"method": "calcCode",
		"code": "0 (L:FWD_STICK_Trim)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_STICK_Trim_Release": {
		"method": "calcCode",
		"code": "1 (L:FWD_STICK_Trim)"
	},
	"Just Flight.Hawk T1.Controls.HT1_FWD_STICK_Trim_Dec": {
		"method": "calcCode",
		"code": "2 (L:FWD_STICK_Trim)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_STICK_Camera_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_STICK_Camera_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_Camera_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_STICK_Camera_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_STICK_Camera_IsDown) (L:FWD_STICK_Camera_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_Camera_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_STICK_MuteButton_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_STICK_MuteButton_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_MuteButton_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_STICK_MuteButton_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_STICK_MuteButton_IsDown) (L:FWD_STICK_MuteButton_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_MuteButton_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_STICK_Trigger_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_STICK_Trigger_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_Trigger_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Weapons.HT1_FWD_STICK_Trigger_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_STICK_Trigger_IsDown) (L:FWD_STICK_Trigger_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_Trigger_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Ant_Upper": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Ant)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Ant_Lower": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Ant)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Brt_Inc": {
		"method": "calcCode",
		"code": "0 (L:FWD_RIGHT_VHF_Brt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Brt_Release": {
		"method": "calcCode",
		"code": "1 (L:FWD_RIGHT_VHF_Brt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Brt_Dec": {
		"method": "calcCode",
		"code": "2 (L:FWD_RIGHT_VHF_Brt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Enter_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Enter_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Enter_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Enter_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Enter_IsDown) (L:FWD_RIGHT_VHF_Enter_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Enter_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Menu_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Menu_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Menu_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Menu_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Menu_IsDown) (L:FWD_RIGHT_VHF_Menu_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Menu_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Squelch_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Squelch_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Squelch_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Squelch_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Squelch_IsDown) (L:FWD_RIGHT_VHF_Squelch_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Squelch_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Vol_Up": {
		"method": "calcCode",
		"code": "0 (L:FWD_RIGHT_VHF_Vol)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Vol_Release": {
		"method": "calcCode",
		"code": "1 (L:FWD_RIGHT_VHF_Vol)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Vol_Down": {
		"method": "calcCode",
		"code": "2 (L:FWD_RIGHT_VHF_Vol)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_NavSel_Up": {
		"method": "calcCode",
		"code": "0 (L:FWD_RIGHT_VHF_NavSel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_NavSel_Release": {
		"method": "calcCode",
		"code": "1 (L:FWD_RIGHT_VHF_NavSel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_NavSel_Down": {
		"method": "calcCode",
		"code": "2 (L:FWD_RIGHT_VHF_NavSel)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_1_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_1,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_1,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_1_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_1,enum) -- (>L:FWD_RIGHT_VHF_Sel_1,enum) (L:FWD_RIGHT_VHF_Sel_1,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_1,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_2_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_2,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_2,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_2_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_2,enum) -- (>L:FWD_RIGHT_VHF_Sel_2,enum) (L:FWD_RIGHT_VHF_Sel_2,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_2,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_3_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_3,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_3,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_3_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_3,enum) -- (>L:FWD_RIGHT_VHF_Sel_3,enum) (L:FWD_RIGHT_VHF_Sel_3,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_3,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_4_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_4,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_4,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_4_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_4,enum) -- (>L:FWD_RIGHT_VHF_Sel_4,enum) (L:FWD_RIGHT_VHF_Sel_4,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_4,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_5_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_5,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_5,enum)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Sel_5_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_VHF_Sel_5,enum) -- (>L:FWD_RIGHT_VHF_Sel_5,enum) (L:FWD_RIGHT_VHF_Sel_5,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_5,enum) }"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_TRG": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_TR": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_ARF": {
		"method": "calcCode",
		"code": "3 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_TEST": {
		"method": "calcCode",
		"code": "4 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_OP_Mode_ZERO": {
		"method": "calcCode",
		"code": "5 (>L:FWD_RIGHT_VHF_OP_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_PRST": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_MAN": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_ECCM": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_MAR": {
		"method": "calcCode",
		"code": "3 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_121": {
		"method": "calcCode",
		"code": "4 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Frq_Mode_243": {
		"method": "calcCode",
		"code": "5 (>L:FWD_RIGHT_VHF_Frq_Mode)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Ptt_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_VHF_Ptt)"
	},
	"Just Flight.Hawk T1.Radio.HT1_FWD_RIGHT_VHF_Ptt_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_VHF_Ptt)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Func_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Func)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Func_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Func)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Func_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Func)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig1_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Dig1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig1_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Dig1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig1_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Dig1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig2_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Dig2)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig2_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Dig2)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig2_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Dig2)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig3_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Dig3)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig3_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Dig3)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig3_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Dig3)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig4_Up": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Dig4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig4_Release": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Dig4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Dig4_Down": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Dig4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Mode4_Hold": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Mode4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Mode4_PullOut": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Mode4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Mode4_4A": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Mode4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Mode4_4B": {
		"method": "calcCode",
		"code": "3 (>L:FWD_RIGHT_IFF_Mode4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Mode4_PullErase": {
		"method": "calcCode",
		"code": "4 (>L:FWD_RIGHT_IFF_Mode4)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Ident_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Ident_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_IFF_Ident_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Ident_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Ident_IsDown) (L:FWD_RIGHT_IFF_Ident_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_IFF_Ident_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_LR_L": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_LR)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_LR_Center": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_LR)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_LR_R": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_LR)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Test_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_IFF_Test_MinReleaseTime)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Test_IsDown) (L:FWD_RIGHT_IFF_Test_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_IFF_Test_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_PullOff": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_Stby": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_Norm": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_TA": {
		"method": "calcCode",
		"code": "3 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_TARA": {
		"method": "calcCode",
		"code": "4 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_Master_PullEmer": {
		"method": "calcCode",
		"code": "5 (>L:FWD_RIGHT_IFF_Master)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M1_M1": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_M1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M1_Auto": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_M1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M1_Out": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_M1)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M2_M2": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_M2)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M2_Out": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_M2)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M3A_M3A": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_M3A)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M3A_Auto": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_M3A)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M3A_Out": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_M3A)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_MC_MC": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_MC)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_MC_MCS": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_MC)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_MC_Out": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_IFF_MC)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_MS_MS": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_MS)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_MS_Out": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_MS)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M5_M5": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_IFF_M5)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_IFF_M5_Out": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_IFF_M5)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Mode_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Mode,enum) ++ 2 min (>L:FWD_RIGHT_TACAN_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Mode_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Mode,enum) -- 0 max (>L:FWD_RIGHT_TACAN_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Mode_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_TACAN_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Mode_RX": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_TACAN_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Mode_TXRX": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_TACAN_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Left_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Left,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_Left,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Left_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Left,enum) -- (>L:FWD_RIGHT_TACAN_Left,enum) (L:FWD_RIGHT_TACAN_Left,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_Left,enum) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Right_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Right,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_Right,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_Right_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_Right,enum) -- (>L:FWD_RIGHT_TACAN_Right,enum) (L:FWD_RIGHT_TACAN_Right,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_Right,enum) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_XY_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_XY,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_XY,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_XY_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_XY,enum) -- (>L:FWD_RIGHT_TACAN_XY,enum) (L:FWD_RIGHT_TACAN_XY,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_XY,enum) }"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_TACAN_XY_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_TACAN_XY) ! (>L:FWD_RIGHT_TACAN_XY,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Mode_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Mode,enum) ++ 2 min (>L:FWD_RIGHT_ILS_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Mode_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Mode,enum) -- 0 max (>L:FWD_RIGHT_ILS_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Mode_VOR": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_ILS_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Mode_Off": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_ILS_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Mode_ILS": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_ILS_Mode,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig1_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig1,enum) ++ 1 min (>L:FWD_RIGHT_ILS_Dig1,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig1_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig1,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig1,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig2_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig2,enum) ++ 9 min (>L:FWD_RIGHT_ILS_Dig2,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig2_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig2,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig2,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig3_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig3,enum) ++ 9 min (>L:FWD_RIGHT_ILS_Dig3,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig3_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig3,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig3,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig4_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig4,enum) ++ 1 min (>L:FWD_RIGHT_ILS_Dig4,enum)"
	},
	"Just Flight.Hawk T1.Avionics.HT1_FWD_RIGHT_ILS_Dig4_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_ILS_Dig4,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig4,enum)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Oxygen_Toggle": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Oxygen) ! (>L:FWD_RIGHT_Oxygen)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Seat_Lower": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Seat)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Seat_Raise": {
		"method": "calcCode",
		"code": "2 (>L:FWD_RIGHT_Seat)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Airbrake_Test_Off": {
		"method": "calcCode",
		"code": "0 (>L:FWD_RIGHT_Airbrake_Test)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Airbrake_Test_On": {
		"method": "calcCode",
		"code": "1 (>L:FWD_RIGHT_Airbrake_Test)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Air_Mode_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Air_Mode,enum) ++ 3 min (>L:FWD_RIGHT_Air_Mode,enum)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Air_Mode_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Air_Mode,enum) -- 0 max (>L:FWD_RIGHT_Air_Mode,enum)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Air_Temp_Inc": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Air_Temp,enum) ++ 100 % (>L:FWD_RIGHT_Air_Temp,enum)"
	},
	"Just Flight.Hawk T1.Miscellaneous.HT1_FWD_RIGHT_Air_Temp_Dec": {
		"method": "calcCode",
		"code": "(L:FWD_RIGHT_Air_Temp,enum) -- (>L:FWD_RIGHT_Air_Temp,enum) (L:FWD_RIGHT_Air_Temp,enum) 0 < if{ 99 (>L:FWD_RIGHT_Air_Temp,enum) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Power_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Power_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Power_MinReleaseTime) 1 (>L:GPS_Pwr_LC,bool)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Power_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Power_IsDown) (L:FWD_GPS_Power_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Power_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_5_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Func_5_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_5_MinReleaseTime) (>H:INSTRUMENT_PUSH_RETURN_LONG)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_5_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Func_5_IsDown) (L:FWD_GPS_Func_5_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_5_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_4_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Func_4_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_4_MinReleaseTime) (>H:INSTRUMENT_PUSH_RETURN)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_4_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Func_4_IsDown) (L:FWD_GPS_Func_4_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_4_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_3_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Func_3_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_3_MinReleaseTime) (>H:INSTRUMENT_PUSH_MENU)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_3_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Func_3_IsDown) (L:FWD_GPS_Func_3_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_3_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_2_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Func_2_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_2_MinReleaseTime) (>H:INSTRUMENT_PUSH_DIRECTION)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_2_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Func_2_IsDown) (L:FWD_GPS_Func_2_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_2_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_1_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Func_1_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_1_MinReleaseTime) (>H:INSTRUMENT_PUSH_NRST)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Func_1_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Func_1_IsDown) (L:FWD_GPS_Func_1_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_1_LeftLeaveToRun) }"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Brt_Press": {
		"method": "calcCode",
		"code": "1 (>L:FWD_GPS_Brt_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Brt_MinReleaseTime) 1 (>L:GPS_Brt_LC,bool)"
	},
	"Just Flight.Hawk T1.Navigation.HT1_FWD_GPS_Brt_Release": {
		"method": "calcCode",
		"code": "0 (>L:FWD_GPS_Brt_IsDown) (L:FWD_GPS_Brt_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Brt_LeftLeaveToRun) }"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_L_FUEL_PUMP_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_PUMP_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_L_FUEL_PUMP_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_PUMP_L, Bool) ! (>L:ASCRJ_FUEL_PUMP_L) \n0 (>L:ASCRJ_FUEL_PUMP_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_R_FUEL_PUMP_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_PUMP_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_R_FUEL_PUMP_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_PUMP_R, Bool) ! (>L:ASCRJ_FUEL_PUMP_R) \n0 (>L:ASCRJ_FUEL_PUMP_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_GRAVITY_FLOW_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_GRAVITY_FLOW_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_GRAVITY_FLOW_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_GRAVITY_FLOW, Bool) ! (>L:ASCRJ_FUEL_GRAVITY_FLOW) \n0 (>L:ASCRJ_FUEL_GRAVITY_FLOW_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_R_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_XFLOW_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_R_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_XFLOW_R, Bool) ! (>L:ASCRJ_FUEL_XFLOW_R) \n0 (>L:ASCRJ_FUEL_XFLOW_R_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_L_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_XFLOW_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_L_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_XFLOW_L, Bool) ! (>L:ASCRJ_FUEL_XFLOW_L) \n0 (>L:ASCRJ_FUEL_XFLOW_L_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_OVRD_PRESS": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_FUEL_XFLOW_OVRD_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Fuel.ASCRJ_FUEL_XFLOW_OVRD_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FUEL_XFLOW_OVRD, Bool) ! (>L:ASCRJ_FUEL_XFLOW_OVRD) \n0 (>L:ASCRJ_FUEL_XFLOW_OVRD_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.ASCRJ_CONT_IGN_BTN_REL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_ENGS_CONT_IGN, Bool) ! (>L:ASCRJ_ENGS_CONT_IGN) \n0 (>L:ASCRJ_ENGS_CONT_IGN_ANIM)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT FLIGHT LEVEL CHANGE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE,bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT GLIDESLOPE ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT GLIDESLOPE ACTIVE,bool)"
	},
	"Microsoft.Generic.Autopilot.AUTOPILOT GLIDESLOPE ARM": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT GLIDESLOPE ARM,bool)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_VS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_HDG_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_NAV_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_APR_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Asobo.XCub.Electrical.XCUB_MASTER_BATTERY_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.XCub.Electrical.XCUB_MASTER_BATTERY_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.XCub.Electrical.XCUB_ALT_FIELD_ON": {
		"method": "calcCode",
		"code": "1 (>K:2:ALTERNATOR_SET)"
	},
	"Asobo.XCub.Electrical.XCUB_ALT_FIELD_OFF": {
		"method": "calcCode",
		"code": "0 (>K:2:ALTERNATOR_SET) "
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_IGN_LH_ON": {
		"method": "calcCode",
		"code": "(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) }"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_IGN_LH_OFF": {
		"method": "calcCode",
		"code": "(A:RECIP ENG LEFT MAGNETO:1, Bool) if{ (>K:MAGNETO1_LEFT) }"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_IGN_RH_ON": {
		"method": "calcCode",
		"code": "(A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) }"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_IGN_RH_OFF": {
		"method": "calcCode",
		"code": "(A:RECIP ENG RIGHT MAGNETO:1, Bool) if{ (>K:MAGNETO1_RIGHT) }"
	},
	"Asobo.XCub.Electrical.XCUB_ELECTRICAL_AVIONICS_ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_SET)"
	},
	"Asobo.XCub.Electrical.XCUB_ELECTRICAL_AVIONICS_OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_SET)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_ALT_INC_100": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_INC)"
	},
	"Asobo.XCub.Autopilot.XCUB_ALT_INC_1000": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_INC)"
	},
	"Asobo.XCub.Autopilot.XCUB_ALT_DEC_1000": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_ALT_DEC_100": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_VS_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_VS_INC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_HDG_DEC_1": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_HDG_DEC_5": {
		"method": "calcCode",
		"code": "5 (>K:HEADING_BUG_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_HDG_INC_1": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_HDG_INC_5": {
		"method": "calcCode",
		"code": "5 (>K:HEADING_BUG_INC)"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_LH_ON_RH_OFF": {
		"method": "calcCode",
		"code": "(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) }\n(A:RECIP ENG RIGHT MAGNETO:1, Bool) if{ (>K:MAGNETO1_RIGHT) }"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_LH_OFF_RH_ON": {
		"method": "calcCode",
		"code": "(A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) }\n(A:RECIP ENG LEFT MAGNETO:1, Bool) if{ (>K:MAGNETO1_LEFT) }"
	},
	"Asobo.XCub.Engine.XCUB_ENGINE_LH_ON_RH_ON": {
		"method": "calcCode",
		"code": "(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) }\n(A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) }"
	},
	"Asobo.XCub.Electrical.XCUB_ELECTRICAL_STARTER_ON": {
		"method": "calcCode",
		"code": "1 (>K:SET_STARTER1_HELD)"
	},
	"Asobo.XCub.Electrical.XCUB_ELECTRICAL_STARTER_OFF": {
		"method": "calcCode",
		"code": "0 (>K:SET_STARTER1_HELD)"
	},
	"Asobo.XCub.Gear.XCUB_PARKING_BRAKE_ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Asobo.XCub.Gear.XCUB_PARKING_BRAKE_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_SELECTOR_LEFT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_LEFT)"
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_SELECTOR_RIGHT": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_RIGHT)"
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_SELECTOR_OFF": {
		"method": "calcCode",
		"code": "(>K:FUEL_SELECTOR_OFF)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FLC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AUTOPILOT FLIGHT LEVEL CHANGE, bool) if { (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET) }"
	},
	"Asobo.XCub.Lights.Output.XCUB_AUX_DIMMER_VALUE": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, Percent)"
	},
	"Asobo.XCub.Lights.Input.XCUB_AUX_DIMMER": {
		"method": "calcCode",
		"code": "@ s0 (>L:LIGHTING_PANEL_1) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FLC_DEC_1": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_DEC)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FLC_INC_1": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_INC)"
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_PUMP_ON": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET) "
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_PUMP_OFF": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET) "
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FD_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_EMER_DEPRESS_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_PRESS_EMER_DEPRESS_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_EMER_DEPRESS_BTN_REL": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_PRESS_EMER_DEPRESS_ANIM) \n1 (>L:ASCRJ_PRESS_EMER_DEPRESS)"
	},
	"Asobo.XCub.Controls.XCUB_FLAPS_ACTUAL_POSITION_DISPLAY": {
		"method": "calcCode",
		"code": "(A:FLAPS HANDLE INDEX, Number)"
	},
	"Asobo.XCub.Navigation.XCUB_AIRSPEED_INDICATED_DISPLAY": {
		"method": "calcCode",
		"code": "(A:AIRSPEED INDICATED, Mph)"
	},
	"Asobo.XCub.Controls.XCUB_TRIM_ACTUAL_POSITION_DISPLAY": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM INDICATOR, Percent) 10 /"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX OVHD ELEC GEN 1 OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1,Bool) !"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX OVHD ELEC GEN 2 OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2,Bool) !"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX OVHD ELEC APUGEN OFF": {
		"method": "calcCode",
		"code": "(A:APU GENERATOR SWITCH:1, Bool) !"
	},
	"Asobo.XCub.Fuel.XCUB_FUEL_SELECTOR_TOGGLE": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) 2 == if{ (>K:FUEL_SELECTOR_RIGHT) } els{ (>K:FUEL_SELECTOR_LEFT) }"
	},
	"Asobo.XCub.Anti-Ice.XCUB_CARB_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1)"
	},
	"Just Flight.Piper Arrow III.Radio.KT76_XPNDR_MODE_ON-LEFT": {
		"method": "calcCode",
		"code": "(L:KT76_mode_knob) -- 0 max (>L:KT76_mode_knob)"
	},
	"Just Flight.Piper Arrow III.Radio.KT76_XPNDR_MODE_ON-RIGHT": {
		"method": "calcCode",
		"code": "(L:KT76_mode_knob) ++ 4 min (>L:KT76_mode_knob)"
	},
	"Asobo..Gear.DA40NG_PARKING_BRAKE_ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Asobo..Gear.DA40NG_PARKING_BRAKE_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"Asobo..Lights.DA40NG_TAXI_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:TAXI_LIGHTS_SET) 1 (>L:LIGHTING_TAXI_1)"
	},
	"Asobo..Lights.DA40NG_TAXI_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:TAXI_LIGHTS_SET) 1 (>L:LIGHTING_TAXI_1)"
	},
	"Asobo..Lights.DA40NG_LANDING_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo..Lights.DA40NG_LANDING_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo..Lights.DA40NG_POSITION_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:NAV_LIGHTS_SET) 1 (>L:LIGHTING_NAV_1)   "
	},
	"Asobo..Lights.DA40NG_POSITION_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:NAV_LIGHTS_SET) 0 (>L:LIGHTING_NAV_1)   "
	},
	"Asobo..Lights.DA40NG_STROBE_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1)   "
	},
	"Asobo..Lights.DA40NG_STROBE_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)   "
	},
	"Asobo..Anti-Ice.DA40NG_PITOT_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)"
	},
	"Asobo..Anti-Ice.DA40NG_PITOT_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)"
	},
	"Asobo..Fuel.DA40NG_FUEL_TRANSFER_ON": {
		"method": "calcCode",
		"code": "(A:FUEL TRANSFER PUMP ON:1, Bool)  ! if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }"
	},
	"Asobo.DA40NG.Fuel.Input.DA40NG_FUEL_TRANSFER_OFF": {
		"method": "calcCode",
		"code": "(A:FUEL TRANSFER PUMP ON:1, Bool)  if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }"
	},
	"Asobo.DA40NG.Controls.DA40NG_FLAPS_INCR": {
		"method": "calcCode",
		"code": "(>K:FLAPS_INCR)"
	},
	"Asobo..Controls.DA40NG_FLAPS_DECR": {
		"method": "calcCode",
		"code": "(>K:FLAPS_DECR)"
	},
	"Just Flight.Piper Arrow III.Radio.KR85_ADF_MODE_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:KR85_mode_knob) 0 > if{ 1 if{ (L:KR85_mode_knob) 1 - (>L:KR85_mode_knob) } }"
	},
	"Just Flight.Piper Arrow III.Radio.KR85_ADF_MODE_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:KR85_mode_knob) 3 < if{ 1 if{ (L:KR85_mode_knob) 1 + (>L:KR85_mode_knob) } }"
	},
	"Just Flight.Piper Arrow III.Radio.GNS530_COM_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(K:COM1_VOLUME_SET) ++ (>K:COM1_VOLUME_SET)"
	},
	"Just Flight.Piper Arrow III.Radio.GNS530_COM_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(K:COM1_VOLUME_SET) -- (>K:COM1_VOLUME_SET)"
	},
	"Just Flight.Piper Arrow III.Radio.GNS530_NAV_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(K:NAV1_VOLUME_SET_EX1) ++ (>K:NAV1_VOLUME_SET_EX1)"
	},
	"Just Flight.Piper Arrow III.Radio.GNS530_NAV_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(K:NAV1_VOLUME_SET_EX1) -- (>K:NAV1_VOLUME_SET_EX1)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170B_COM1_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_vol_knob) 0 > if{ (L:KX170_COMM1_vol_knob) -- (>L:KX170_COMM1_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170B_COM1_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_vol_knob) 10 < if{ (L:KX170_COMM1_vol_knob) ++ (>L:KX170_COMM1_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170B_NAV1_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_vol_knob) 0 > if{ (L:KX170_NAV1_vol_knob) -- (>L:KX170_NAV1_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170B_NAV1_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_vol_knob) 10 < if{ (L:KX170_NAV1_vol_knob) ++ (>L:KX170_NAV1_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175B_COM2_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_vol_knob) 0 > if{ (L:KX175_COMM2_vol_knob) -- (>L:KX175_COMM2_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175B_COM2_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_vol_knob) 10 < if{ (L:KX175_COMM2_vol_knob) ++ (>L:KX175_COMM2_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175B_NAV2_RADIO_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_vol_knob) 0 > if{ (L:KX175_NAV2_vol_knob) -- (>L:KX175_NAV2_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX175B_NAV2_RADIO_VOLUME_INC": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_vol_knob) 10 < if{ (L:KX175_NAV2_vol_knob) ++ (>L:KX175_NAV2_vol_knob) }"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_COM1_OFF_ON_SWITCH": {
		"method": "calcCode",
		"code": "(L:KX170_COMM1_offon) ! (>L:KX170_COMM1_offon)"
	},
	"Just Flight.Piper Arrow III.Radio.KX170_NAV1_OFF_ON_SWITCH": {
		"method": "calcCode",
		"code": "(L:KX170_NAV1_offon) ! (>L:KX170_NAV1_offon)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_COM2_OFF_ON_SWITCH": {
		"method": "calcCode",
		"code": "(L:KX175_COMM2_offon) ! (>L:KX175_COMM2_offon)"
	},
	"Just Flight.Piper Arrow III.Radio.KX175_NAV2_OFF_ON_SWITCH": {
		"method": "calcCode",
		"code": "(L:KX175_NAV2_offon) ! (>L:KX175_NAV2_offon)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FLC_INC_10": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 10 + (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.XCub.Autopilot.XCUB_AP_FLC_DEC_10": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 10 - (>K:AP_SPD_VAR_SET)"
	},
	"Microsoft.Generic.Radio.TOGGLE_SPEAKER": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_SPEAKER)"
	},
	"Microsoft.Generic.Avionics.TRANSPONDER IDENT": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER IDENT:index, Bool)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_0": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_0)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_1)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_2)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_3)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_4)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_5)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_6)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_7": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_7)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_8": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_8)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_9": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_9)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_CLR_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:MF_Btn_time)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_CLR_Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:MF_Btn_time) > if{ (>H:A320_Neo_CDU_BTN_CLR) } 0 (>L:MF_Btn_time)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_DATA": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_FPLN)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_MCDUL_OVFR": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_1_BTN_OVFY)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_NAV": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_RAD)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_MENU": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_DIR)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_SHF": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_INIT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_IP": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_DATA)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_MARK": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_PROG)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_PREV": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_PREVPAGE)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_NEXT": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_NEXTPAGE)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_GAIN_SWITCH_Up": {
		"method": "calcCode",
		"code": "0 (>L:GAIN)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_GAIN_SWITCH_Mid": {
		"method": "calcCode",
		"code": "1 (>L:GAIN)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_GAIN_SWITCH_Down": {
		"method": "calcCode",
		"code": "2 (>L:GAIN)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_RTN_SEQ_SWITCH_Up": {
		"method": "calcCode",
		"code": "0 (>L:RTN_SEQ) (>H:A320_Neo_CDU_BTN_DOWN)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_RTN_SEQ_SWITCH_Down": {
		"method": "calcCode",
		"code": "2 (>L:RTN_SEQ) (>H:A320_Neo_CDU_BTN_UP)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_DRIFT_SWITCH_Up": {
		"method": "calcCode",
		"code": "0 (>L:DRIFT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_DRIFT_SWITCH_Down": {
		"method": "calcCode",
		"code": "2 (>L:DRIFT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_SYM_KNOB_Up": {
		"method": "calcCode",
		"code": "0 (>L:SYM)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_SYM_KNOB_Down": {
		"method": "calcCode",
		"code": "1 (>L:SYM)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_RET_DEPR_KNOB_Up": {
		"method": "calcCode",
		"code": "1 (>RET_DEPR)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_RET_DEPR_KNOB_Down": {
		"method": "calcCode",
		"code": "0 (>RET_DEPR)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_CONT_KNOB_Up": {
		"method": "calcCode",
		"code": "1 (>L:CONT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_CONT_KNOB_Down": {
		"method": "calcCode",
		"code": "0 (>L:CONT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_BRT_KNOB_Up": {
		"method": "calcCode",
		"code": "1 (>L:BRT)"
	},
	"SC Designs.F16C.MCDU.F16C_KEYPAD_BRT_KNOB_Down": {
		"method": "calcCode",
		"code": "0 (>L:BRT)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_1": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L1)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_2": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L2)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_3": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L3)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_4": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L4)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_5": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L5)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_6": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_L6)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_7": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R1)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_8": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R2)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_9": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R3)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_10": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R4)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_11": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R5)"
	},
	"SC Designs.F16C.MCDU.F16C_DED_12": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_R6)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_UPPER_BUTTON_LEFT_Down_RangeInc": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range) ++ 5 min (>L:A320_Neo_MFD_Range)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_UPPER_BUTTON_LEFT_Up_RangeDec": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_Range) -- 0 max (>L:A320_Neo_MFD_Range)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_L1_MinsInc": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_Mins_INC) (>H:B787_10_HUD_Mins_INC)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_L2_MinsDec": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_Mins_DEC) (>H:B787_10_HUD_Mins_DEC)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_L3_NavaidOff": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_L4_RDF1": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_L5_VOR1": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)"
	},
	"SC Designs.F16C.Lights.F16C_MFD_1_CORNER1_Down_BrtInc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_11) 10 +  100 min s0 (>L:LIGHTING_POTENTIOMETER_11) l0 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_MFD_1_CORNER1_Up_BrtDec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_11) 10 -  0 max s0 (>L:LIGHTING_POTENTIOMETER_11) l0 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_1_HdgMode": {
		"method": "calcCode",
		"code": "(L:MODE_HEADING,bool) ! (>L:MODE_HEADING,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_1_BUTTON_2_HdgHold": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_3_CurHdgSet": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_4_HdgVOR1": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_5_YD": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_6_TerronND": {
		"method": "calcCode",
		"code": "(L:BTN_TERRONND_ACTIVE,bool) ! (>L:BTN_TERRONND_ACTIVE,bool)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_7_WX": {
		"method": "calcCode",
		"code": "(L:BTN_WX_ACTIVE,bool) ! (>L:BTN_WX_ACTIVE,bool)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_8_VORD": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_MFD_BTN_VORD) (>H:A320_Neo_PFD_BTN_VORD) and"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_1_BUTTON_9_Nav1Hold": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_1_BUTTON_10_GpsNav1": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_GPS_DRIVES_NAV1)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_UPPER_BUTTON_RIGHT_Down_NavModeInc": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE) ++ 4 min (>L:A320_Neo_MFD_NAV_MODE)"
	},
	"SC Designs.F16C.Avionics.Input.F16C_MFD_1_UPPER_BUTTON_RIGHT_Up_NavModeDec": {
		"method": "calcCode",
		"code": "(L:A320_Neo_MFD_NAV_MODE) -- 0 max (>L:A320_Neo_MFD_NAV_MODE)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_R1_BaroMinSel": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Mins_Selector_Baro) ! (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_R2_HpaHgSel": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_R3_NavaidOff": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_R4_RDF2": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_BUTTON_R5_VOR2": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_CORNER2_Down_RadModInc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WeatherRadar_Mode) ++ 3 min (>L:XMLVAR_A320_WeatherRadar_Mode)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_1_CORNER2_Up_RadModDec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WeatherRadar_Mode) -- 0 max (>L:XMLVAR_A320_WeatherRadar_Mode)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_2_UPPER_BUTTON_LEFT_Down_SVTerr": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_SVTTerrain_Toggle)"
	},
	"SC Designs.F16C.Avionics.F16C_MFD_2_UPPER_BUTTON_LEFT_Up_SVTerr": {
		"method": "calcCode",
		"code": "(>H:B747_8_PFD_SVTTerrain_Toggle)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_L1_ApSpdInc": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_INC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_L2_ApSpdHld": {
		"method": "calcCode",
		"code": "(>K:AP_AIRSPEED_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_L3_ApSpdDec": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_DEC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_L4_ApThrArm": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_ARM)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_L5_SpdMach": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) ! (>L:XMLVAR_AirSpeedIsInMach)"
	},
	"SC Designs.F16C.Lights.F16C_MFD_2_CORNER1_Down_BrtInc": {
		"method": "calcCode",
		"code": " (L:LIGHTING_POTENTIOMETER_12) 10 + 100 min s0  (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_MFD_2_CORNER1_Up_BrtDec": {
		"method": "calcCode",
		"code": " (L:LIGHTING_POTENTIOMETER_12) 10 - 0 max s0  (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_1_ApSpdMod": {
		"method": "calcCode",
		"code": "(L:MODE_SPEED,bool) ! (>L:MODE_SPEED,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_2_ApAltMod": {
		"method": "calcCode",
		"code": "(L:MODE_ALTITUDE,bool) ! (>L:MODE_ALTITUDE,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_3_ApAltDec": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_DEC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_4_ApAltHld": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_5_ApAltInc": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_INC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_6_ApLocHld": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD) "
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_7_ApAprHld": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_8_ApBcHld": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD) "
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_9_ApTrkFpa": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TRK_FPA_MODE_ACTIVE,bool) ! (>L:XMLVAR_TRK_FPA_MODE_ACTIVE,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_10_FD": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_R1_ApVsInc": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_R2_ApVsHld": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_R3_ApVsDec": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_DEC)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_R4_ApFlc": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE)"
	},
	"SC Designs.F16C.Autopilot.F16C_MFD_2_BUTTON_R5_Gcas": {
		"method": "calcCode",
		"code": "(L:GCAS) ! (>L:GCAS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_NO_SMOKING_MEMO": {
		"method": "calcCode",
		"code": "(L:A32NX_NO_SMOKING_MEMO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_TEMPERATURE_1": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_TEMPERATURE_1)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_TEMPERATURE_2": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_TEMPERATURE_2)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_TEMPERATURE_3": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_TEMPERATURE_3)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_TEMPERATURE_4": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_TEMPERATURE_4)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_REPORTED_BRAKE_TEMPERATURE_1": {
		"method": "calcCode",
		"code": "(L:A32NX_REPORTED_BRAKE_TEMPERATURE_1)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_REPORTED_BRAKE_TEMPERATURE_2": {
		"method": "calcCode",
		"code": "(L:A32NX_REPORTED_BRAKE_TEMPERATURE_2)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_REPORTED_BRAKE_TEMPERATURE_3": {
		"method": "calcCode",
		"code": "(L:A32NX_REPORTED_BRAKE_TEMPERATURE_3)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_REPORTED_BRAKE_TEMPERATURE_4": {
		"method": "calcCode",
		"code": "(L:A32NX_REPORTED_BRAKE_TEMPERATURE_4)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_FAN": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_FAN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKE_FAN_BTN_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKE_FAN_BTN_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_BRAKES_HOT": {
		"method": "calcCode",
		"code": "(L:A32NX_BRAKES_HOT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.XMLVAR_Auto": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Auto)"
	},
	"Fly By Wire.A320-SDK.Unsorted.XMLVAR_ALT_MODE_REQUESTED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_ALT_MODE_REQUESTED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position": {
		"method": "calcCode",
		"code": "(L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position": {
		"method": "calcCode",
		"code": "(L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_AIRCOND_PACK1_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_PACK1_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AIRCOND_PACK1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_PACK1_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_AIRCOND_PACK2_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_PACK2_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AIRCOND_PACK2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_PACK2_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX AIRCOND HOT AIR FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_HOT_AIR_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX AIRCOND HOT AIR IS ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AIRCOND_RAMAIR_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AIRCOND_RAMAIR_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_CALLS_EMER_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_CALLS_EMER_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.PUSH_DOORPANEL_VIDEO": {
		"method": "calcCode",
		"code": "(L:PUSH_DOORPANEL_VIDEO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_ENG_1_PUMP_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_ENG_2_PUMP_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_EPUMPB_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPB_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_EPUMPY_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPY_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_PTU_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_PTU_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_HYD_PTU_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ENGMANSTART1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGMANSTART1_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ENGMANSTART2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGMANSTART2_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VENTILATION_BLOWER_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_VENTILATION_BLOWER_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VENTILATION_BLOWER_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_VENTILATION_BLOWER_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VENTILATION_EXTRACT_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_VENTILATION_EXTRACT_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VENTILATION_EXTRACT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_VENTILATION_EXTRACT_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VENTILATION_CABFANS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_VENTILATION_CABFANS_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_PITOT_HEAT_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_PITOT_HEAT_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_EVAC_COMMAND_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_EVAC_COMMAND_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_EVAC_COMMAND_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_EVAC_COMMAND_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.PUSH_OVHD_EVAC_HORN": {
		"method": "calcCode",
		"code": "(L:PUSH_OVHD_EVAC_HORN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_EVAC_CAPT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_EVAC_CAPT_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_EIS_DMC_SWITCHING_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_EIS_DMC_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ECAM_ND_XFR_SWITCHING_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_METRIC_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_METRIC_ALT_TOGGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_EPUMPY_OVRD_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_EPUMPY_OVRD_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_G": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_G)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_G_LOCK": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_G_LOCK)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_B": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_B)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_B_LOCK": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_B_LOCK)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_Y": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_Y)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_LEAK_MEASUREMENT_Y_LOCK": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_LEAK_MEASUREMENT_Y_LOCK)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_DESTINATION_QNH": {
		"method": "calcCode",
		"code": "(L:A32NX_DESTINATION_QNH)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_DEPARTURE_ELEVATION": {
		"method": "calcCode",
		"code": "(L:A32NX_DEPARTURE_ELEVATION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWC_FLIGHT_PHASE": {
		"method": "calcCode",
		"code": "(L:A32NX_FWC_FLIGHT_PHASE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWC_SKIP_STARTUP": {
		"method": "calcCode",
		"code": "(L:A32NX_FWC_SKIP_STARTUP)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWC_TOMEMO": {
		"method": "calcCode",
		"code": "(L:A32NX_FWC_TOMEMO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWC_LDGMEMO": {
		"method": "calcCode",
		"code": "(L:A32NX_FWC_LDGMEMO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWC_INHIBOVRD": {
		"method": "calcCode",
		"code": "(L:A32NX_FWC_INHIBOVRD)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_VS": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_VS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_VLS": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_VLS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_F": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_F)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_S": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_S)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_GD": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_GD)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_LANDING_CONF3": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_LANDING_CONF3)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_TO_CONF": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_TO_CONF)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_V2": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_V2)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_VLS_APP": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_VLS_APP)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_VSPEEDS_VAPP": {
		"method": "calcCode",
		"code": "(L:A32NX_VSPEEDS_VAPP)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SPEEDS_ALPHA_PROTECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_SPEEDS_ALPHA_PROTECTION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SPEEDS_ALPHA_MAX": {
		"method": "calcCode",
		"code": "(L:A32NX_SPEEDS_ALPHA_MAX)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_TRK_FPA_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AUTOPILOT_TRACK_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_TRACK_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_AUTOPILOT_FPA_SELECTED - DUPLICATE (OLD)": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_FPA_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_EGT_CAUTION": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_EGT_CAUTION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_EGT_WARNING": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_EGT_WARNING)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_EGT": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_EGT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_N": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_N)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_N_RAW": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_N_RAW)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_BLEED_AIR_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_BLEED_AIR_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_LOW_FUEL_PRESSURE_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_LOW_FUEL_PRESSURE_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_IS_AUTO_SHUTDOWN": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_IS_AUTO_SHUTDOWN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_IS_EMERGENCY_SHUTDOWN": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_IS_EMERGENCY_SHUTDOWN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ECAM_INOP_SYS_APU": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_INOP_SYS_APU)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_FLAP_OPEN_PERCENTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_FLAP_OPEN_PERCENTAGE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_FLAP_FULLY_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_FLAP_FULLY_OPEN)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FIRE_BUTTON_APU": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_BUTTON_APU)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX RMP L TOGGLE SWITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_R_TOGGLE_SWITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_R_TOGGLE_SWITCH)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_L_SELECTED_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_R_SELECTED_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_R_SELECTED_MODE)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_L_VHF2_STANDBY_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_VHF2_STANDBY_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_L_VHF3_STANDBY_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_VHF3_STANDBY_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_R_VHF1_STANDBY_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_R_VHF1_STANDBY_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Radio.Output.A32NX_RMP_R_VHF3_STANDBY_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_R_VHF3_STANDBY_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_TO_CONFIG_FLAPS_ENTERED": {
		"method": "calcCode",
		"code": "(L:A32NX_TO_CONFIG_FLAPS_ENTERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_TO_CONFIG_FLAPS": {
		"method": "calcCode",
		"code": "(L:A32NX_TO_CONFIG_FLAPS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_TO_CONFIG_THS_ENTERED": {
		"method": "calcCode",
		"code": "(L:A32NX_TO_CONFIG_THS_ENTERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_TO_CONFIG_THS": {
		"method": "calcCode",
		"code": "(L:A32NX_TO_CONFIG_THS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ENG_OUT_ACC_ALT": {
		"method": "calcCode",
		"code": "(L:A32NX_ENG_OUT_ACC_ALT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SLIDES_ARMED": {
		"method": "calcCode",
		"code": "(L:A32NX_SLIDES_ARMED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RAIN_REPELLENT_RIGHT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_RAIN_REPELLENT_RIGHT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RAIN_REPELLENT_LEFT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_RAIN_REPELLENT_LEFT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RCDR_TEST": {
		"method": "calcCode",
		"code": "(L:A32NX_RCDR_TEST)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RADAR_MULTISCAN_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_RADAR_MULTISCAN_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RADAR_GCS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_RADAR_GCS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OXYGEN_MASKS_DEPLOYED": {
		"method": "calcCode",
		"code": "(L:A32NX_OXYGEN_MASKS_DEPLOYED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RCDR_GROUND_CONTROL_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_RCDR_GROUND_CONTROL_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_EMERELECPWR_GEN_TEST": {
		"method": "calcCode",
		"code": "(L:A32NX_EMERELECPWR_GEN_TEST)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OXYGEN_PASSENGER_LIGHT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OXYGEN_PASSENGER_LIGHT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OXYGEN_TMR_RESET": {
		"method": "calcCode",
		"code": "(L:A32NX_OXYGEN_TMR_RESET)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OXYGEN_TMR_RESET_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OXYGEN_TMR_RESET_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_AUTOEXITING_RESET": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_AUTOEXITING_RESET)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELT_TEST_RESET": {
		"method": "calcCode",
		"code": "(L:A32NX_ELT_TEST_RESET)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_ELT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_DLS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_DLS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_CREW_HEAD_SET": {
		"method": "calcCode",
		"code": "(L:A32NX_CREW_HEAD_SET)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SVGEINT_OVRD_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_SVGEINT_OVRD_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AVIONICS_COMPLT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_AVIONICS_COMPLT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_CARGOSMOKE_FWD_DISCHARGED": {
		"method": "calcCode",
		"code": "(L:A32NX_CARGOSMOKE_FWD_DISCHARGED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_CARGOSMOKE_AFT_DISCHARGED": {
		"method": "calcCode",
		"code": "(L:A32NX_CARGOSMOKE_AFT_DISCHARGED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AIDS_PRINT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_AIDS_PRINT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_DFDR_EVENT_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_DFDR_EVENT_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_AUTOEXITING_TEST_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_AUTOEXITING_TEST_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_APU_AUTOEXITING_TEST_OK": {
		"method": "calcCode",
		"code": "(L:A32NX_APU_AUTOEXITING_TEST_OK)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_APU_START_PB_IS_AVAILABLE": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_AVAILABLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_APU_MASTER_SW_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_BAT_1_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_BAT_2_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_IDG_1_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_IDG_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_IDG_2_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_IDG_2_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_ENG_GEN_1_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_ENG_GEN_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_ENG_GEN_2_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_ENG_GEN_2_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_AC_ESS_FEED_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_GALY_AND_CAB_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_PNEU_APU_BLEED_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_GEN_2_LINE_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_2_LINE_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_RAT_AND_EMER_GEN_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_RAT_AND_EMER_GEN_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_RAT_AND_EMER_GEN_IS_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_RAT_AND_EMER_GEN_IS_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.Output.A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_IDG_1_PB_IS_RELEASED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_IDG_1_PB_IS_RELEASED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_IDG_2_PB_IS_RELEASED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_IDG_2_PB_IS_RELEASED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_APU_START_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_START_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_APU_MASTER_SW_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_EMER_ELEC_GEN_2_LINE_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_2_LINE_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_1PC1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_1PC1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_1PC2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_1PC2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_2XB1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_2XB1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_2XB2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_2XB2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3XC1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3XC1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3XC2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3XC2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3PE_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3PE_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_2XE_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_2XE_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3XG_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3XG_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3XS_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3XS_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_4PC_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_4PC_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_5PU1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_5PU1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_5PU2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_5PU2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_6PB1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_6PB1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_6PB2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_6PB2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_8PH_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_8PH_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_8XH_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_8XH_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_9XU1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_9XU1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_9XU2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_9XU2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_11XU1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_11XU1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_11XU2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_11XU2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_15XE1_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_15XE1_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_15XE2_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_15XE2_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_10KA_AND_5KA_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_10KA_AND_5KA_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_14PU_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_14PU_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_12XN_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_12XN_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_3PX_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_3PX_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_8PN_IS_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_8PN_IS_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_6PB1_SHOW_ARROW_WHEN_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_6PB1_SHOW_ARROW_WHEN_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_CONTACTOR_6PB2_SHOW_ARROW_WHEN_CLOSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_CONTACTOR_6PB2_SHOW_ARROW_WHEN_CLOSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_1_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_1_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_2_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_2_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_ESS_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_ESS_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_AC_GND_FLT_SVC_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_AC_GND_FLT_SVC_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_1_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_1_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_2_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_2_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_ESS_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_ESS_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_ESS_SHED_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_ESS_SHED_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_BAT_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_BAT_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_HOT_1_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_HOT_1_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_HOT_2_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_HOT_2_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_DC_GND_FLT_SVC_BUS_IS_POWERED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_GND_FLT_SVC_BUS_IS_POWERED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EXT_PWR_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EXT_PWR_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_STAT_INV_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_STAT_INV_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EMER_GEN_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EMER_GEN_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_1_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_1_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_2_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_2_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_3_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_3_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_ESS_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_ESS_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_1_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_1_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_2_POTENTIAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_2_POTENTIAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EXT_PWR_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EXT_PWR_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_STAT_INV_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_STAT_INV_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EMER_GEN_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EMER_GEN_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_1_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_1_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_2_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_2_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_3: TR ESS_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_3: TR ESS_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_1_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_1_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_2_POTENTIAL_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_2_POTENTIAL_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EXT_PWR_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EXT_PWR_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_STAT_INV_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_STAT_INV_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EMER_GEN_FREQUENCY": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EMER_GEN_FREQUENCY)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EXT_PWR_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EXT_PWR_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_STAT_INV_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_STAT_INV_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_EMER_GEN_FREQUENCY_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_EMER_GEN_FREQUENCY_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_LOAD": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_LOAD)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_LOAD": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_LOAD)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_LOAD": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_LOAD)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_APU_GEN_1_LOAD_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_APU_GEN_1_LOAD_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_LOAD_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_LOAD_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_LOAD_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_LOAD_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_1_CURRENT": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_1_CURRENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_2_CURRENT": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_2_CURRENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_3_CURRENT": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_3_CURRENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_1_CURRENT": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_1_CURRENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_2_CURRENT": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_2_CURRENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_1_CURRENT_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_1_CURRENT_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_2_CURRENT_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_2_CURRENT_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_TR_3_CURRENT_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_TR_3_CURRENT_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_1_CURRENT_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_1_CURRENT_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_BAT_2_CURRENT_NORMAL": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_2_CURRENT_NORMAL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_IDG_OIL_OUTLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_IDG_OIL_OUTLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_IDG_OIL_OUTLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_IDG_OIL_OUTLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_1_IDG_IS_CONNECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_1_IDG_IS_CONNECTED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_ELEC_ENG_GEN_2_IDG_IS_CONNECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_ENG_GEN_2_IDG_IS_CONNECTED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_GREEN_SYSTEM_1_SECTION_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_GREEN_SYSTEM_1_SECTION_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BLUE_SYSTEM_1_SECTION_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BLUE_SYSTEM_1_SECTION_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_SYSTEM_1_SECTION_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_SYSTEM_1_SECTION_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_GREEN_RESERVOIR_LEVEL": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_GREEN_RESERVOIR_LEVEL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BLUE_RESERVOIR_LEVEL": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BLUE_RESERVOIR_LEVEL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_RESERVOIR_LEVEL": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_RESERVOIR_LEVEL)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_GREEN_EDPUMP_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_GREEN_EDPUMP_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_EDPUMP_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_EDPUMP_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_GREEN_EDPUMP_LOW_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_GREEN_EDPUMP_LOW_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_EDPUMP_LOW_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_EDPUMP_LOW_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BLUE_EPUMP_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BLUE_EPUMP_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_EPUMP_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_EPUMP_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BLUE_EPUMP_RPM": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BLUE_EPUMP_RPM)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_EPUMP_RPM": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_EPUMP_RPM)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_PTU_ON_ECAM_MEMO": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_PTU_ON_ECAM_MEMO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_NW_STRG_DISC_ECAM_MEMO": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_NW_STRG_DISC_ECAM_MEMO)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BLUE_EPUMP_LOW_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BLUE_EPUMP_LOW_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_EPUMP_LOW_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_EPUMP_LOW_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_GREEN_PUMP_1_FIRE_VALVE_OPENED": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_GREEN_PUMP_1_FIRE_VALVE_OPENED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_YELLOW_PUMP_1_FIRE_VALVE_OPENED": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_YELLOW_PUMP_1_FIRE_VALVE_OPENED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_PTU_VALVE_OPENED": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_PTU_VALVE_OPENED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_PTU_ACTIVE_L2R": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_PTU_ACTIVE_L2R)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_PTU_ACTIVE_R2L": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_PTU_ACTIVE_R2L)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_PTU_MOTOR_FLOW": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_PTU_MOTOR_FLOW)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_RAT_STOW_POSITION": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_RAT_STOW_POSITION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_RAT_RPM": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_RAT_RPM)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BRAKE_NORM_LEFT_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BRAKE_NORM_LEFT_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BRAKE_NORM_RIGHT_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BRAKE_NORM_RIGHT_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BRAKE_ALTN_LEFT_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BRAKE_ALTN_LEFT_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BRAKE_ALTN_RIGHT_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BRAKE_ALTN_RIGHT_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_HYD_BRAKE_ALTN_ACC_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_BRAKE_ALTN_ACC_PRESS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWD_DOOR_CARGO_POSITION": {
		"method": "calcCode",
		"code": "(L:A32NX_FWD_DOOR_CARGO_POSITION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FWD_DOOR_CARGO_LOCKED": {
		"method": "calcCode",
		"code": "(L:A32NX_FWD_DOOR_CARGO_LOCKED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_PARK_BRAKE_LEVER_POS": {
		"method": "calcCode",
		"code": "(L:A32NX_PARK_BRAKE_LEVER_POS)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_BRAKE_PEDAL_INPUT": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_BRAKE_PEDAL_INPUT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_BRAKE_PEDAL_INPUT": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_BRAKE_PEDAL_INPUT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AUTOBRAKES_ARMED_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_ARMED_MODE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_AUTOBRAKES_DECEL_LIGHT": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOBRAKES_DECEL_LIGHT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FM_LS_COURSE": {
		"method": "calcCode",
		"code": "(L:A32NX_FM_LS_COURSE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FMGC_FLIGHT_PHASE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMGC_FLIGHT_PHASE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FLAPS_HANDLE_INDEX": {
		"method": "calcCode",
		"code": "(L:A32NX_FLAPS_HANDLE_INDEX)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FLAPS_HANDLE_PERCENT": {
		"method": "calcCode",
		"code": "(L:A32NX_FLAPS_HANDLE_PERCENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_FLAPS_POSITION_PERCENT": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_FLAPS_POSITION_PERCENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_FLAPS_POSITION_PERCENT": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_FLAPS_POSITION_PERCENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_SLATS_POSITION_PERCENT": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_SLATS_POSITION_PERCENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_SLATS_POSITION_PERCENT": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_SLATS_POSITION_PERCENT)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_FLAPS_TARGET_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_FLAPS_TARGET_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_FLAPS_TARGET_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_FLAPS_TARGET_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_SLATS_TARGET_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_SLATS_TARGET_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_SLATS_TARGET_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_SLATS_TARGET_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_FLAPS_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_FLAPS_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_FLAPS_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_FLAPS_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_LEFT_SLATS_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_LEFT_SLATS_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_RIGHT_SLATS_ANGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RIGHT_SLATS_ANGLE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_FLAPS_CONF_INDEX": {
		"method": "calcCode",
		"code": "(L:A32NX_FLAPS_CONF_INDEX)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SPOILERS_ARMED": {
		"method": "calcCode",
		"code": "(L:A32NX_SPOILERS_ARMED)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SPOILERS_HANDLE_POSITION": {
		"method": "calcCode",
		"code": "(L:A32NX_SPOILERS_HANDLE_POSITION)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_SPOILERS_GROUND_SPOILERS_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_SPOILERS_GROUND_SPOILERS_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Unsorted.A32NX_PERFORMANCE_WARNING_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_PERFORMANCE_WARNING_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_L_NAVAID_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_NAVAID_MODE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_R_NAVAID_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_NAVAID_MODE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_L_ND_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_R_ND_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_ND_MODE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_L_ND_RANGE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_RANGE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_R_ND_RANGE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_L_OPTION": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_R_OPTION": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_L_ND_FM_MESSAGE_FLAGS": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_FM_MESSAGE_FLAGS)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_EFIS_R_ND_FM_MESSAGE_FLAGS": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_ND_FM_MESSAGE_FLAGS)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_LS_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_LS_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_ALT_VALUE:0": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ALT_VALUE:0)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_ALT_VALUE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ALT_VALUE:1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_ALT_ACTIVE:0": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ALT_ACTIVE:0)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_ALT_ACTIVE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ALT_ACTIVE:1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_VALUE:0": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_VALUE:0)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_VALUE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_VALUE:1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_VALUE:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_VALUE:2)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_VALUE:3": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_VALUE:3)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_ACTIVE:0": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_ACTIVE:0)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_ACTIVE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_ACTIVE:1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_ACTIVE:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_ACTIVE:2)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_ISIS_BUGS_SPD_ACTIVE:3": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_SPD_ACTIVE:3)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_1_6": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_1_6)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_7_13": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_7_13)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_14_21": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_14_21)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_22_27": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_22_27)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_1_6_DESIRED": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_1_6_DESIRED)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_7_13_DESIRED": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_7_13_DESIRED)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_14_21_DESIRED": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_14_21_DESIRED)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_PAX_TOTAL_ROWS_22_27_DESIRED": {
		"method": "calcCode",
		"code": "(L:A32NX_PAX_TOTAL_ROWS_22_27_DESIRED)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.PAYLOAD STATION WEIGHT:5": {
		"method": "calcCode",
		"code": "(L:PAYLOAD STATION WEIGHT:5)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.PAYLOAD STATION WEIGHT:6": {
		"method": "calcCode",
		"code": "(L:PAYLOAD STATION WEIGHT:6)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.PAYLOAD STATION WEIGHT:7": {
		"method": "calcCode",
		"code": "(L:PAYLOAD STATION WEIGHT:7)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.PAYLOAD STATION WEIGHT:8": {
		"method": "calcCode",
		"code": "(L:PAYLOAD STATION WEIGHT:8)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_FAIL": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_FAIL)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_FMGC": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_FMGC)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_MCDU_MENU": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_MCDU_MENU)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_FM1": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_FM1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_IND": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_IND)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_RDY": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_RDY)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_L_ANNUNC_FM2": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_ANNUNC_FM2)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_FAIL": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_FAIL)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_FMGC": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_FMGC)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_MCDU_MENU": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_MCDU_MENU)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_FM1": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_FM1)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_IND": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_IND)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_RDY": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_RDY)"
	},
	"Fly By Wire.A320-SDK.EIS Display System.A32NX_MCDU_R_ANNUNC_FM2": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_ANNUNC_FM2)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_LOGGING_FLIGHT_CONTROLS_ENABLED": {
		"method": "calcCode",
		"code": "(L:A32NX_LOGGING_FLIGHT_CONTROLS_ENABLED)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_SIDESTICK_POSITION_X": {
		"method": "calcCode",
		"code": "(L:A32NX_SIDESTICK_POSITION_X)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_SIDESTICK_POSITION_Y": {
		"method": "calcCode",
		"code": "(L:A32NX_SIDESTICK_POSITION_Y)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_RUDDER_PEDAL_POSITION": {
		"method": "calcCode",
		"code": "(L:A32NX_RUDDER_PEDAL_POSITION)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_ALPHA_MAX_PERCENTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_ALPHA_MAX_PERCENTAGE)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_BETA_TARGET": {
		"method": "calcCode",
		"code": "(L:A32NX_BETA_TARGET)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_3D_AILERON_LEFT_DEFLECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_3D_AILERON_LEFT_DEFLECTION)"
	},
	"Fly By Wire.A320-SDK.Fly-By-Wire System.A32NX_3D_AILERON_RIGHT_DEFLECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_3D_AILERON_RIGHT_DEFLECTION)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_CONFIG_ADIRS_IR_ALIGN_TIME": {
		"method": "calcCode",
		"code": "(L:A32NX_CONFIG_ADIRS_IR_ALIGN_TIME)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ON_BAT_IS_ILLUMINATED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ON_BAT_IS_ILLUMINATED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_1_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_2_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_2_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_3_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_3_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_1_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_1_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_2_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_2_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_IR_3_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_IR_3_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_1_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_2_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_2_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_3_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_3_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ATT_HDG_SWITCHING_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_ATT_HDG_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_AIR_DATA_SWITCHING_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_AIR_DATA_SWITCHING_KNOB)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADIRU_1_STATE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADIRU_1_STATE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADIRU_2_STATE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADIRU_2_STATE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADIRU_3_STATE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADIRU_3_STATE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_REMAINING_IR_ALIGNMENT_TIME": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_REMAINING_IR_ALIGNMENT_TIME)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_ALTITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_ALTITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_ALTITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_ALTITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_ALTITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_ALTITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_COMPUTED_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_COMPUTED_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_COMPUTED_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_COMPUTED_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_COMPUTED_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_COMPUTED_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_MACH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_MACH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_MACH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_MACH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_MACH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_MACH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_BAROMETRIC_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_BAROMETRIC_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_BAROMETRIC_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_BAROMETRIC_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_BAROMETRIC_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_BAROMETRIC_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_TRUE_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_TRUE_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_TRUE_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_TRUE_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_TRUE_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_TRUE_AIRSPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_STATIC_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_STATIC_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_STATIC_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_STATIC_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_STATIC_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_STATIC_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_TOTAL_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_TOTAL_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_TOTAL_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_TOTAL_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_TOTAL_AIR_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_TOTAL_AIR_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_1_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_1_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_2_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_2_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_ADR_3_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_ADR_3_INTERNATIONAL_STANDARD_ATMOSPHERE_DELTA)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_PITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_PITCH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_PITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_PITCH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_PITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_PITCH)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_ROLL": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_ROLL)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_ROLL": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_ROLL)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_ROLL": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_ROLL)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_HEADING": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_HEADING)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_HEADING": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_HEADING)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_HEADING": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_HEADING)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_TRACK": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_TRACK)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_TRACK": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_TRACK)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_TRACK": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_TRACK)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_GROUND_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_GROUND_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_GROUND_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_GROUND_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_GROUND_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_GROUND_SPEED)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_WIND_DIRECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_WIND_DIRECTION)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_WIND_DIRECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_WIND_DIRECTION)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_WIND_DIRECTION": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_WIND_DIRECTION)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_WIND_VELOCITY": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_WIND_VELOCITY)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_WIND_VELOCITY": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_WIND_VELOCITY)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_WIND_VELOCITY": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_WIND_VELOCITY)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_LATITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_LATITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_LATITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_LATITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_LATITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_LATITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_1_LONGITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_1_LONGITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_2_LONGITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_2_LONGITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_IR_3_LONGITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_IR_3_LONGITUDE)"
	},
	"Fly By Wire.A320-SDK.ADIRS.A32NX_ADIRS_USES_GPS_AS_PRIMARY": {
		"method": "calcCode",
		"code": "(L:A32NX_ADIRS_USES_GPS_AS_PRIMARY)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.Output.A32NX_FMA_LATERAL_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_LATERAL_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_LATERAL_ARMED": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_LATERAL_ARMED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_VERTICAL_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_VERTICAL_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_VERTICAL_ARMED": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_VERTICAL_ARMED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_EXPEDITE_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_EXPEDITE_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_SPEED_PROTECTION_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_SPEED_PROTECTION_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_CRUISE_ALT_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_CRUISE_ALT_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FMA_SOFT_ALT_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FMA_SOFT_ALT_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_ApproachCapability": {
		"method": "calcCode",
		"code": "(L:A32NX_ApproachCapability)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FLIGHT_DIRECTOR_BANK": {
		"method": "calcCode",
		"code": "(L:A32NX_FLIGHT_DIRECTOR_BANK)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FLIGHT_DIRECTOR_PITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_FLIGHT_DIRECTOR_PITCH)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FLIGHT_DIRECTOR_YAW": {
		"method": "calcCode",
		"code": "(L:A32NX_FLIGHT_DIRECTOR_YAW)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_AUTOLAND_WARNING": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_AUTOLAND_WARNING)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_1_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_1_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_2_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_2_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_AUTOTHRUST_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_AUTOTHRUST_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_SPEED_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_SPEED_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_FPA_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_FPA_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.Output.A32NX_AUTOPILOT_VS_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_VS_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_AUTOPILOT_HEADING_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_HEADING_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_SPD_MANAGED_DASHES": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_SPD_MANAGED_DASHES)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_SPD_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_SPD_MANAGED_DOT)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_HDG_MANAGED_DASHES": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_HDG_MANAGED_DASHES)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_HDG_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_HDG_MANAGED_DOT)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_ALT_MANAGED": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_ALT_MANAGED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_VS_MANAGED": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_VS_MANAGED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_LOC_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_LOC_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_APPR_MODE_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_MODE_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_MODE_REVERSION_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_MODE_REVERSION_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FCU_MODE_REVERSION_TRK_FPA_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_MODE_REVERSION_TRK_FPA_ACTIVE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A320_Neo_FCU_SPEED_SET_DATA": {
		"method": "calcCode",
		"code": "(L:A320_Neo_FCU_SPEED_SET_DATA)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A320_Neo_FCU_HDG_SET_DATA": {
		"method": "calcCode",
		"code": "(L:A320_Neo_FCU_HDG_SET_DATA)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A320_Neo_FCU_VS_SET_DATA": {
		"method": "calcCode",
		"code": "(L:A320_Neo_FCU_VS_SET_DATA)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_CROSS_TRACK_ERROR": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_CROSS_TRACK_ERROR)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_TRACK_ANGLE_ERROR": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_TRACK_ANGLE_ERROR)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_PHI_COMMAND": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_PHI_COMMAND)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_REQUESTED_VERTICAL_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_REQUESTED_VERTICAL_MODE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_ALTITUDE_CONSTRAINT": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_ALTITUDE_CONSTRAINT)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_TARGET_ALTITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_TARGET_ALTITUDE)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_TARGET_VERTICAL_SPEED": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_TARGET_VERTICAL_SPEED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_RNAV_APP_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_RNAV_APP_SELECTED)"
	},
	"Fly By Wire.A320-SDK.Autopilot System.A32NX_FG_FINAL_CAN_ENGAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_FG_FINAL_CAN_ENGAGE)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_3D_THROTTLE_LEVER_POSITION_1": {
		"method": "calcCode",
		"code": "(L:A32NX_3D_THROTTLE_LEVER_POSITION_1)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_3D_THROTTLE_LEVER_POSITION_2": {
		"method": "calcCode",
		"code": "(L:A32NX_3D_THROTTLE_LEVER_POSITION_2)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_STATUS": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_STATUS)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_MODE)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_MODE_MESSAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_MODE_MESSAGE)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_DISABLED": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_DISABLED)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_TYPE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_TYPE)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_IDLE": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_IDLE)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_CLB": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_CLB)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_MCT": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_MCT)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_FLX": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_FLX)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LIMIT_TOGA": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LIMIT_TOGA)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_TLA_N1:1": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_TLA_N1:1)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_TLA_N1:2": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_TLA_N1:2)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_REVERSE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_REVERSE:1)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_REVERSE:2": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_REVERSE:2)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_N1_COMMANDED:1": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_N1_COMMANDED:1)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_N1_COMMANDED:2": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_N1_COMMANDED:2)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_DISCONNECT": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_DISCONNECT)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LEVER_WARNING_FLEX": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LEVER_WARNING_FLEX)"
	},
	"Fly By Wire.A320-SDK.Autothrust System.A32NX_AUTOTHRUST_THRUST_LEVER_WARNING_TOGA": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_THRUST_LEVER_WARNING_TOGA)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_LOGGING_THROTTLES_ENABLED": {
		"method": "calcCode",
		"code": "(L:A32NX_LOGGING_THROTTLES_ENABLED)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_LOADED_CONFIG:1": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_LOADED_CONFIG:1)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_LOADED_CONFIG:2": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_LOADED_CONFIG:2)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_INPUT:1": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_INPUT:1)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_INPUT:2": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_INPUT:2)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_AUTOTHRUST_TLA:1": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_TLA:1)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_AUTOTHRUST_TLA:2": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_TLA:2)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_USE_REVERSE_ON_AXIS:1": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_USE_REVERSE_ON_AXIS:1)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_USE_REVERSE_ON_AXIS:2": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_USE_REVERSE_ON_AXIS:2)"
	},
	"Fly By Wire.A320-SDK.Throttle Mapping System.A32NX_THROTTLE_MAPPING_{REVERSE|REVERSE_IDLE|IDLE|CLIMB|FLEXMCT|TOGA}_{LOW|HIGH}:{index}": {
		"method": "calcCode",
		"code": "(L:A32NX_THROTTLE_MAPPING_{REVERSE|REVERSE_IDLE|IDLE|CLIMB|FLEXMCT|TOGA}_{LOW|HIGH}:{index})"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_CYCLE_TIME": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_CYCLE_TIME)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_STATE:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_STATE:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_STATE:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_STATE:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TIMER:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TIMER:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TIMER:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TIMER:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_IMBALANCE": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_IMBALANCE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_N1:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_N1:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_N1:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_N1:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_N2:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_N2:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_N2:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_N2:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_EGT:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_EGT:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_EGT:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_EGT:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_FF:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_FF:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_FF:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_FF:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_PRE_FF:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_PRE_FF:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_PRE_FF:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_PRE_FF:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_IDLE_N1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_IDLE_N1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_IDLE_N2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_IDLE_N2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_IDLE_EGT": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_IDLE_EGT)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_IDLE_FF": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_IDLE_FF)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_USED:1": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_USED:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_USED:2": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_USED:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_LEFT_PRE": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_LEFT_PRE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_RIGHT_PRE": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_RIGHT_PRE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_AUX_LEFT_PRE": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_AUX_LEFT_PRE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_AUX_RIGHT_PRE": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_AUX_RIGHT_PRE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_FUEL_CENTER_PRE": {
		"method": "calcCode",
		"code": "(L:A32NX_FUEL_CENTER_PRE)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TOTAL_OIL:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TOTAL_OIL:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TOTAL_OIL:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TOTAL_OIL:2)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TANK_OIL:1": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TANK_OIL:1)"
	},
	"Fly By Wire.A320-SDK.Engine and FADEC System.A32NX_ENGINE_TANK_OIL:2": {
		"method": "calcCode",
		"code": "(L:A32NX_ENGINE_TANK_OIL:2)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_CABIN_ALTITUDE": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_CABIN_ALTITUDE)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_CABIN_DELTA_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_CABIN_DELTA_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_CABIN_VS": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_CABIN_VS)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_ACTIVE_CPC_SYS": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_ACTIVE_CPC_SYS)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_OUTFLOW_VALVE_OPEN_PERCENTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_OUTFLOW_VALVE_OPEN_PERCENTAGE)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_SAFETY_VALVE_OPEN_PERCENTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_SAFETY_VALVE_OPEN_PERCENTAGE)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_AUTO_LANDING_ELEVATION": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_AUTO_LANDING_ELEVATION)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_EXCESS_CAB_ALT": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_EXCESS_CAB_ALT)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_EXCESS_RESIDUAL_PR": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_EXCESS_RESIDUAL_PR)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PRESS_LOW_DIFF_PR": {
		"method": "calcCode",
		"code": "(L:A32NX_PRESS_LOW_DIFF_PR)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_OVHD_PRESS_LDG_ELEV_KNOB": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_LDG_ELEV_KNOB)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_OVHD_PRESS_MODE_SEL_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MODE_SEL_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_OVHD_PRESS_DITCHING_PB_IS_ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_DITCHING_PB_IS_ON)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PACKS_1_IS_SUPPLYING": {
		"method": "calcCode",
		"code": "(L:A32NX_PACKS_1_IS_SUPPLYING)"
	},
	"Fly By Wire.A320-SDK.Air Conditioning / Pressurisation / Ventilation.A32NX_PACKS_2_IS_SUPPLYING": {
		"method": "calcCode",
		"code": "(L:A32NX_PACKS_2_IS_SUPPLYING)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_IP_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_IP_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_IP_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_IP_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_HP_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_HP_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_HP_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_HP_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_TRANSFER_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_TRANSFER_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_TRANSFER_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_TRANSFER_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_PRECOOLER_INLET_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_PRECOOLER_INLET_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_PRECOOLER_INLET_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_PRECOOLER_INLET_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_PRECOOLER_OUTLET_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_PRECOOLER_OUTLET_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_PRECOOLER_OUTLET_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_PRECOOLER_OUTLET_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_STARTER_CONTAINER_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_STARTER_CONTAINER_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_STARTER_CONTAINER_PRESSURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_STARTER_CONTAINER_PRESSURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_IP_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_IP_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_IP_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_IP_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_HP_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_HP_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_HP_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_HP_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_TRANSFER_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_TRANSFER_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_TRANSFER_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_TRANSFER_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_PRECOOLER_INLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_PRECOOLER_INLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_PRECOOLER_INLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_PRECOOLER_INLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_PRECOOLER_OUTLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_PRECOOLER_OUTLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_PRECOOLER_OUTLET_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_PRECOOLER_OUTLET_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_STARTER_CONTAINER_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_STARTER_CONTAINER_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_STARTER_CONTAINER_TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_STARTER_CONTAINER_TEMPERATURE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_IP_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_IP_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_IP_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_IP_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_HP_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_HP_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_HP_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_HP_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_PR_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_PR_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_PR_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_PR_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_1_STARTER_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_1_STARTER_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_ENG_2_STARTER_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_ENG_2_STARTER_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_XBLEED_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_XBLEED_VALVE_OPEN)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_PACK_1_FLOW_VALVE_FLOW_RATE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_PACK_1_FLOW_VALVE_FLOW_RATE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_PNEU_PACK_2_FLOW_VALVE_FLOW_RATE": {
		"method": "calcCode",
		"code": "(L:A32NX_PNEU_PACK_2_FLOW_VALVE_FLOW_RATE)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_OVHD_PNEU_ENG_1_BLEED_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-SDK.Pneumatic.A32NX_OVHD_PNEU_ENG_2_BLEED_PB_HAS_FAULT": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_HAS_FAULT)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AP_BARO_3_INC": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AP_BARO_3_DEC": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_NAV_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_EXTL_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_NAV_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_EXTL_NAV)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_BEACON_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_EXTL_BEACON)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_BEACON_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_EXTL_BEACON)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_STROBE_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_EXTL_STROBE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_STROBE_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_EXTL_STROBE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_LOGO_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_EXTL_LOGO)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.Input.ASCRJ_EXTL_LOGO_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_EXTL_LOGO)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_WING_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_EXTL_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_EXTL_WING_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_EXTL_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_DCSERVICE_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ELEC_DCSERVICE)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_DCSERVICE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ELEC_DCSERVICE)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_BATTMASTER_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ELEC_BATTMASTER)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_BATTMASTER_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ELEC_BATTMASTER)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN1_RESET": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ELEC_GEN1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ELEC_GEN1)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN2_RESET": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ELEC_GEN2)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_GEN2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ELEC_GEN2)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_APUGEN_RESET": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ELEC_APUGEN)"
	},
	"Aerosoft.CRJ 550-700-1000.Electrical.ASCRJ_ELEC_APUGEN_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_ELEC_APUGEN)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3A_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HYDR_PUMP_3A)"
	},
	"Aerosoft.CRJ 550-700-1000.Hydraulic.ASCRJ_HYDR_PUMP_3A_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HYDR_PUMP_3A)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_DOME_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_INTL_DOME)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_DOME_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_INTL_DOME)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_COMP_SWITCH_DIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_INTL_COMP)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_INTL_COMP_SWITCH ON": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_INTL_COMP)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.Input.ASCRJ_INTL_COMP_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_INTL_COMP)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIRC_FAN_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIRC_FAN_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WING_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WING_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_WING)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_R_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_COWL_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_R_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_COWL_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_L_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_COWL_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_COWL_L_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_COWL_L)"
	},
	"Microsoft.Generic.Radio.Output.COM RECEIVE:index": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE:index,bool)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_L_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_PHEAT_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_L_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_PHEAT_L)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_R_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_PHEAT_R)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_PHEAT_R_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_PHEAT_R)"
	},
	"Microsoft.Generic.Radio.COM RECEIVE EX1:index": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE EX1:index,bool)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_L_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_WSHLD_L, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_L_SWITCH_LOW": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_WSHLD_L, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_L_SWITCH_HIGH": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_AICE_WSHLD_L, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_R_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_WSHLD_R, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_R_SWITCH_LOW": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_WSHLD_R, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_R_SWITCH_HIGH": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_AICE_WSHLD_R, Number)"
	},
	"Fly By Wire.A320-Dev.Radio.A32NX_RMP_L_VHF2_BUTTON_PRESSED": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_VHF2_BUTTON_PRESSED)"
	},
	"Just Flight.Piper Arrow III.Lights.PA28_LIGHTS_CABIN_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_0) 5 + 100 min s0 (>L:LIGHTING_CABIN_0) l0 10 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.Piper Arrow III.Lights.PA28_LIGHTS_CABIN_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_0) 5 - 0 max s0 (>L:LIGHTING_CABIN_0) l0 10 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"Just Flight.Piper Arrow III.Lights.PA28_LIGHTS_CABIN_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min s0 (>L:LIGHTING_CABIN_0) l0 10 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Bottom Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_INC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Bottom Knob DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Bottom Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Push)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_TEST_BTN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AICE_WSHLD_TEST_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Anti-Ice.ASCRJ_AICE_WSHLD_TEST_BTN_REL": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AICE_WSHLD_TEST_ANIM)"
	},
	"Asobo.TBM 930.Avionics.TSC 1 Softkey 3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_3) \n1 (>O:_ButtonAnimVar) "
	},
	"Asobo.TBM 930.Avionics.TSC 1 Softkey 2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_2) \n1 (>O:_ButtonAnimVar) "
	},
	"Asobo.TBM 930.Avionics.TSC 1 Softkey 1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_1) \n1 (>O:_ButtonAnimVar) "
	},
	"Asobo.DA62.Lights.Input (Potentiometer).DA62_INSTRUMENT_LIGHTS_DIMMER_SET": {
		"method": "calcCode",
		"code": "@ 13 - 10.1000 / 0 max 100 min \ns0 (>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT PANEL:1, Bool) \n(L:LIGHTING_PANEL_1) 0 > != if{ 1 l0 0 > (>K:2:PANEL_LIGHTS_SET) }"
	},
	"Asobo.DA62.Lights.Input (Potentiometer).DA62_FLOOD_LIGHTS_DIMMER_SET": {
		"method": "calcCode",
		"code": "@ 13 - 10.1000 / 0 max 100 min \ns0 (>L:LIGHTING_GLARESHIELD_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT GLARESHIELD:1, Bool) \n(L:LIGHTING_GLARESHIELD_1) 0 > != if{ 1 l0 0 > (>K:2:GLARESHIELD_LIGHTS_SET) }"
	},
	"Asobo.DA62.Engine.Input.DA62_LEFT_ENGINE_MASTER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ENGINE_MASTER_1_TOGGLE) "
	},
	"Asobo.DA62.Engine.Input.DA62_RIGHT_ENGINE_MASTER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ENGINE_MASTER_2_TOGGLE) "
	},
	"Microsoft.Generic.Engines.THROTTLE_REVERSE_THRUST_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_REVERSE_THRUST_TOGGLE)"
	},
	"Microsoft.Generic.Engines.THROTTLE_REVERSE_THRUST_HOLD": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_REVERSE_THRUST_HOLD)"
	},
	"Asobo.DA62.Fuel.DA62_LH_AUX_FUEL_PUMP_TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE)"
	},
	"Asobo.DA62.Fuel.DA62_RH_AUX_FUEL_PUMP_TOGGLE": {
		"method": "calcCode",
		"code": "2 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE)"
	},
	"Asobo.DA62.Flight Controls.DA62_RUDDER_TRIM_SET": {
		"method": "calcCode",
		"code": "@ 13 - 32.5060 * 16383 - -16383 max 16383 min (>K:RUDDER_TRIM_SET_EX1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_SHORT_LONG_PRESS": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 0.25 + (>L:MF_timer)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_DATA_SHORT_LONG_RELEASE": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:MF_timer) < if{ (>H:Generic_Lwr_DATA_PUSH) }\nels{ (>H:Generic_Lwr_DATA_PUSH_LONG) } \n"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Short Press": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Push)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.KODIAK_100_AUX_BUS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AUX_Bus_ON, Bool) ! (>L:XMLVAR_AUX_Bus_ON, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Fuel Tank Selectors (overhead)": {
		"method": "calcCode",
		"code": "(>L:SWS_Kodiak_TankSelector_x, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.KODIAK_100_Starter_Switch_Low": {
		"method": "calcCode",
		"code": "0 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak 100 Fuel Pump Switch Off": {
		"method": "calcCode",
		"code": "0 (>L:SWS_FUEL_Switch_Pump_1, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Landing Lights Off": {
		"method": "calcCode",
		"code": "0 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Landing Lights Pulse": {
		"method": "calcCode",
		"code": "1 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Landing Lights On": {
		"method": "calcCode",
		"code": "2 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)"
	},
	"Microsoft.Generic.Radio.XPNDR_SET": {
		"method": "calcCode",
		"code": "(>K:XPNDR_SET)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 CABIN LIGHT ON": {
		"method": "calcCode",
		"code": "1 s0\n16 (A:1:BUS CONNECTION ON:15, Bool) l0 != if{  \n   16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n19 (A:1:BUS CONNECTION ON:17, Bool) l0 != if{ \n   19 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 ACCESS LIGHT ON": {
		"method": "calcCode",
		"code": "18 (A:1:BUS CONNECTION ON:17, Bool) ! if{ \n\t18 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } "
	},
	"Fly By Wire.A320.Lights.Input.A32NX OVHD ANN LT TEST": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OVHD ANN LT DIM": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OVHD ANN LT BRT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_CANOPY_LEVER": {
		"method": "calcCode",
		"code": "(L:Canopy Lever) ! (>L:Canopy Lever)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_ALT_FLAPS_NORM": {
		"method": "calcCode",
		"code": "0 (>L:ALT_FLAPS)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_ALT_FLAPS_EXTEND": {
		"method": "calcCode",
		"code": "1 (>L:ALT_FLAPS)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_EFLAPS_LOCK": {
		"method": "calcCode",
		"code": "0 (>L:LE_FLAPS)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_EFLAPS_ENABLE": {
		"method": "calcCode",
		"code": "1 (>L:LE_FLAPS)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_FLCS_RESET_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FLCS_RESET) (A:FLY BY WIRE ELAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } (A:FLY BY WIRE SEC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_SEC_TOGGLE) } (A:FLY BY WIRE FAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_FAC_TOGGLE) } (L:FLCS_BRT, bool) if{ 0 (>L:FLCS_BRT) }"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_FLCS_RESET_ON": {
		"method": "calcCode",
		"code": "1 (>L:FLCS_RESET) (A:FLY BY WIRE ELAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } (A:FLY BY WIRE SEC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_SEC_TOGGLE) } (A:FLY BY WIRE FAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_FAC_TOGGLE) } (L:FLCS_BRT, bool) ! if{ 1 (>L:FLCS_BRT) }"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_FLCS_BRT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FLCS_BRT) (L:FLCS_RESET,bool) if{ } els{ (A:FLY BY WIRE ELAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } }"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_FLCS_BRT_ON": {
		"method": "calcCode",
		"code": "1 (>L:FLCS_BRT) (L:FLCS_RESET,bool) if{ } els{ (A:FLY BY WIRE ELAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_FUEL_MASTER_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:1, Bool) ! if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_FUEL_MASTER_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:1, Bool) if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_ROLL_TRIM_L": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT,position 16k) 16 - -16384 max s0 (>K:AILERON_TRIM_SET_EX1) l0 (>L:HANDLING_AileronsTrim)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_ROLL_TRIM_R": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT,position 16k) 16 + 16384 min s0 (>K:AILERON_TRIM_SET_EX1) l0 (>L:HANDLING_AileronsTrim)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_YAW_TRIM_L": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM PCT, position 16k) 16 - -16384 max s0 (>K:RUDDER_TRIM_SET_EX1) l0 (>L:HANDLING_RudderTrim)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_YAW_TRIM_R": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM PCT, position 16k) 16 + 16384 min s0 (>K:RUDDER_TRIM_SET_EX1) l0 (>L:HANDLING_RudderTrim)"
	},
	"SC Designs.F16C.Controls.Input.F16C_LEFT_PITCH_TRIM_UP": {
		"method": "calcCode",
		"code": "(L:HANDLING_ElevatorTrim) 16 - -16384 max s0 (>K:ELEVATOR_TRIM_SET) l0 (>L:HANDLING_ElevatorTrim)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_PITCH_TRIM_DOWN": {
		"method": "calcCode",
		"code": "(L:HANDLING_ElevatorTrim) 16 + 16384 min s0 (>K:ELEVATOR_TRIM_SET) l0 (>L:HANDLING_ElevatorTrim)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_AP_TRIM_Off": {
		"method": "calcCode",
		"code": "1 (>L:AP_TRIM,bool) 0  (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_AP_TRIM_On": {
		"method": "calcCode",
		"code": "0 (>L:AP_TRIM,bool) 1  (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"SC Designs.F16C.Controls.F16C_LEFT_AP_TRIM_Toggle": {
		"method": "calcCode",
		"code": "(L:AP_TRIM,bool) s0 !  (>L:AP_TRIM) l0 (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_TANK_INERTING_Off": {
		"method": "calcCode",
		"code": "0 (>L:Fuel_Dump_Switch,bool) (A:FUEL DUMP SWITCH,bool) If{ (>K:FUEL_DUMP_TOGGLE) }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_TANK_INERTING_On": {
		"method": "calcCode",
		"code": "1 (>L:Fuel_Dump_Switch,bool) (A:FUEL DUMP SWITCH,bool) ! If{ (>K:FUEL_DUMP_TOGGLE) }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_TANK_INERTING_Toggle": {
		"method": "calcCode",
		"code": "(L:Fuel_Dump_Switch,bool) ! (>L:Fuel_Dump_Switch,bool) (>K:FUEL_DUMP_TOGGLE)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_OFF)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_NORM": {
		"method": "calcCode",
		"code": "1 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_AUTO)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_AFT": {
		"method": "calcCode",
		"code": "2 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_AFT)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_FWD": {
		"method": "calcCode",
		"code": "3 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_FORWARD)"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_INC": {
		"method": "calcCode",
		"code": "(L:ENG_FEED) ++ 3 min (>L:ENG_FEED) l0 0 == if{ (>K:SET_FUEL_TRANSFER_OFF) } els{ l0 1 == if{ (>K:SET_FUEL_TRANSFER_AUTO) } els{ l0 2 == if{ (>K:SET_FUEL_TRANSFER_AFT) } els{ (>K:SET_FUEL_TRANSFER_FORWARD) } } }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_ENG_FEED_DEC": {
		"method": "calcCode",
		"code": "(L:ENG_FEED) -- 0 max (>L:ENG_FEED) l0 0 == if{ (>K:SET_FUEL_TRANSFER_OFF) } els{ l0 1 == if{ (>K:SET_FUEL_TRANSFER_AUTO) } els{ l0 2 == if{ (>K:SET_FUEL_TRANSFER_AFT) } els{ (>K:SET_FUEL_TRANSFER_FORWARD) } } }"
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_AIR_REFUEL_CLOSE": {
		"method": "calcCode",
		"code": "0 (>L:Refuel_Switch,bool) "
	},
	"SC Designs.F16C.Fuel.F16C_LEFT_AIR_REFUEL_OPEN": {
		"method": "calcCode",
		"code": "1 (>L:Refuel_Switch,bool) (>K:ADD_FUEL_QUANTITY)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_OFF": {
		"method": "calcCode",
		"code": "0 (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_STBY": {
		"method": "calcCode",
		"code": "1 (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_LOW": {
		"method": "calcCode",
		"code": "2 (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_NORM": {
		"method": "calcCode",
		"code": "3 (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_EMER": {
		"method": "calcCode",
		"code": "4 (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_INC": {
		"method": "calcCode",
		"code": "(L:IFF_Selector) ++ 4 min (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_IFF_SELECTOR_DEC": {
		"method": "calcCode",
		"code": "(L:IFF_Selector) -- 0 max (>L:IFF_Selector)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_CNI_MODE_AB": {
		"method": "calcCode",
		"code": "0 (>L:CNI_MODE)"
	},
	"SC Designs.F16C.Avionics.F16C_LEFT_CNI_MODE_BACKUP": {
		"method": "calcCode",
		"code": "1 (>L:CNI_MODE)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_ANTICOL_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_ANTICOL_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_POSITION_FLASH": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LOGO_LIGHTS_SET) 1 (>L:LIGHTING_LOGO_1)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_POSITION_STEADY": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LOGO_LIGHTS_SET) 0 (>L:LIGHTING_LOGO_1)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_NAV_ON": {
		"method": "calcCode",
		"code": "1 s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_NAV_OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_NAV_Knob_Inc": {
		"method": "calcCode",
		"code": " (L:LIGHTING_NAV_1) 5 + 100 min s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_NAV_Knob_Dec": {
		"method": "calcCode",
		"code": " (L:LIGHTING_NAV_1) 5 - 0 max s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_FORMATION_ON": {
		"method": "calcCode",
		"code": "1 (>L:Formation Lights)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_FORMATION_OFF": {
		"method": "calcCode",
		"code": "0 (>L:Formation Lights)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_FORMATION_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Formation Lights) ! (>L:Formation Lights)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_REFUEL_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_RECOGNITION_1) 5 + 100 min s0 (>L:LIGHTING_RECOGNITION_1) l0 7 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT RECOGNITION:1, Bool) s2 (L:LIGHTING_RECOGNITION_1) 0 > != if{ l2 ! 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_EXTLT_REFUEL_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_RECOGNITION_1) 5 - 0 max s0 (>L:LIGHTING_RECOGNITION_1) l0 7 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT RECOGNITION:1, Bool) s2 (L:LIGHTING_RECOGNITION_1) 0 > != if{ l2 ! 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_ENG_STARTER_ON": {
		"method": "calcCode",
		"code": "1 sp5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) l5 != if{ l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:STARTER1_SET) } "
	},
	"SC Designs.F16C.Engines.F16C_LEFT_ENG_STARTER_OFF": {
		"method": "calcCode",
		"code": "0 sp5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) l5 != if{ l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:STARTER1_SET) (>K:TOGGLE_STARTER1)(* Force disable starter *) }"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_1_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_1_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_2_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_2_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_3_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_3_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_4_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_KNOB_4_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>A:TRANSPONDER STATE:1, enum)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_MODE_STBY": {
		"method": "calcCode",
		"code": "1 (>A:TRANSPONDER STATE:1, enum)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_MODE_XPNDR": {
		"method": "calcCode",
		"code": "2 (>A:TRANSPONDER STATE:1, enum)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_MODE_TA": {
		"method": "calcCode",
		"code": "3 (>A:TRANSPONDER STATE:1, enum)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_XPNDR_MODE_TARA": {
		"method": "calcCode",
		"code": "4 (>A:TRANSPONDER STATE:1, enum)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_NAV1_MHZ_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_NAV1_MHZ_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_NAV1_KHZ_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_NAV1_KHZ_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_NAV1_SWAP_PUSH": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_COM1_MHZ_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_COM1_MHZ_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_COM1_KHZ_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_COM1_KHZ_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_COM1_SWAP_PUSH": {
		"method": "calcCode",
		"code": "(>K:COM1_RADIO_SWAP)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_MSL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSL_INC,bool) ! (>L:MSL_INC,bool)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_THREAT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:THREAT,bool) ! (>L:THREAT,bool)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_100_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_100_INC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_100_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_100_DEC)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_1_10_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_ADF_Frequency_10_Khz) if{ (>K:ADF_10_INC) } els{ (>K:ADF_1_INC) } "
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_1_10_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_ADF_Frequency_10_Khz) if{ (>K:ADF_10_DEC) } els{ (>K:ADF_1_DEC) } "
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_1_10_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_ADF_Frequency_10_Khz) ! (>L:XMLVAR_ADF_Frequency_10_Khz)"
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_VOL_INC": {
		"method": "calcCode",
		"code": "(>K:ADF_VOLUME_INC) "
	},
	"SC Designs.F16C.Radio.F16C_LEFT_ADF_VOL_DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_VOLUME_DEC) "
	},
	"SC Designs.F16C.Navigation.F16C_LEFT_GPS_NAV_PUSH": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_GPS_DRIVES_NAV1) (L:NAVGPS,bool) ! (>L:NAVGPS,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_IAS_HOLD_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM,bool) ! If{ (>K:AUTO_THROTTLE_ARM) 1 (>L:SIMVAR,bool) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_IAS_HOLD_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM,bool) If{ (>K:AUTO_THROTTLE_ARM) 0 (>L:SIMVAR,bool) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_IAS_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_ARM) (L:SIMVAR,bool) ! (>L:SIMVAR,bool)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_APP_HOLD_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) ! if{ (>K:AP_APR_HOLD) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_APP_HOLD_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) if{ (>K:AP_APR_HOLD) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_APP_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_BC_HOLD_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BACKCOURSE HOLD, Bool) ! If{ (>K:AP_BC_HOLD) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_BC_HOLD_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BACKCOURSE HOLD, Bool) If{ (>K:AP_BC_HOLD) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_BC_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_HDG_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD_ON)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_HDG_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD_OFF)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_HDG_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_ALT_HOLD_ON": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD_ON)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_ALT_HOLD_OFF": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD_OFF)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_ALT_HOLD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_MASTER_ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) ! if{ (>K:AP_MASTER) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_MASTER_OFF": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_MASTER) (>H:Generic_Autopilot_Manual_Off) }"
	},
	"SC Designs.F16C.Autopilot.F16C_LEFT_AP_MASTER_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } }"
	},
	"Asobo.C208 Caravan.Lights.C208 LEFT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:LANDING_LIGHTS_ON)"
	},
	"Asobo.C208 Caravan.Lights.C208 LEFT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "1 (>K:LANDING_LIGHTS_OFF)"
	},
	"Asobo.C208 Caravan.Lights.C208 RIGHT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "2 (>K:LANDING_LIGHTS_ON)"
	},
	"Asobo.C208 Caravan.Lights.C208 RIGHT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "2 (>K:LANDING_LIGHTS_OFF)"
	},
	"Asobo.C208 Caravan.Electrical.C208 AVIONICS1 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Asobo.C208 Caravan.Electrical.C208 AVIONICS1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Asobo.C208 Caravan.Electrical.C208 AVIONICS2 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Asobo.C208 Caravan.Electrical.C208 AVIONICS2 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Microsoft.Generic.Lights.Input.BEACON LIGHTS ON": {
		"method": "calcCode",
		"code": "(>K:BEACON_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.BEACON LIGHTS OFF": {
		"method": "calcCode",
		"code": "(>K:BEACON_LIGHTS_OFF)"
	},
	"Microsoft.Generic.Lights.Input.NAV LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>K:NAV_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.NAV LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>K:NAV_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.TAXI LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>K:TAXI_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.TAXI LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>K:TAXI_LIGHTS_SET)"
	},
	"Asobo.Baron G58.Lights.G58 LEFT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:LANDING_LIGHTS_ON)"
	},
	"Asobo.Baron G58.Lights.G58 LEFT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "1 (>K:LANDING_LIGHTS_OFF)"
	},
	"Asobo.Baron G58.Lights.G58 RIGHT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "2 (>K:LANDING_LIGHTS_ON)"
	},
	"Asobo.Baron G58.Lights.G58 RIGHT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "2 (>K:LANDING_LIGHTS_OFF)"
	},
	"Asobo.King Air 350i.Lights.Input.KA LEFT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) \nl0 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA LEFT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) \nl0 (>L:LIGHTING_LANDING_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA RIGHT LANDING LIGHT OFF": {
		"method": "calcCode",
		"code": "0 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) \nl0 (>L:LIGHTING_LANDING_2)"
	},
	"Asobo.King Air 350i.Lights.Input.KA RIGHT LANDING LIGHT ON": {
		"method": "calcCode",
		"code": "1 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) \nl0 (>L:LIGHTING_LANDING_2)"
	},
	"Just Flight.Piper Arrow III.Radio.DME input to NAV1": {
		"method": "calcCode",
		"code": "1 (>L:RIGHT_MISC_dme_nav, Number)"
	},
	"Just Flight.Piper Arrow III.Radio.DME Input to NAV2": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_MISC_dme_nav, Number)"
	},
	"Microsoft.Generic.Electrical.BATTERY_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Microsoft.Generic.Electrical.BATTERY_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Microsoft.Generic.Radio.Input.XPNDR_IDENT_ON": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_ON)"
	},
	"Microsoft.Generic.Radio.XPNDR_IDENT_OFF": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_OFF)"
	},
	"Microsoft.Generic.Radio.XPNDR_IDENT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_TOGGLE)"
	},
	"Microsoft.Generic.Radio.XPNDR_IDENT_SET": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_SET)"
	},
	"Microsoft.Generic.Anti-Ice.ANTI_ICE_OFF": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_OFF)"
	},
	"Microsoft.Generic.Anti-Ice.WINDSHIELD_DE-ICE_ON": {
		"method": "calcCode",
		"code": "(>K:WINDSHIELD_DEICE_ON)"
	},
	"Microsoft.Generic.Anti-Ice.WINDSHIELD_DE-ICE_OFF": {
		"method": "calcCode",
		"code": "(>K:WINDSHIELD_DEICE_OFF)"
	},
	"Microsoft.Generic.Lights.WING_LIGHTS_ON": {
		"method": "calcCode",
		"code": "1 (>K:WING_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.WING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "0 (>K:WING_LIGHTS_SET)"
	},
	"Asobo.King Air 350i.Lights.Input.KA RECOGNITION LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) \nl0 (>L:LIGHTING_RECOGNITION_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA RECOGNITION LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) \nl0 (>L:LIGHTING_RECOGNITION_1)"
	},
	"Just Flight.Piper Arrow III.Gear.LDG_GEAR_AUTO_EXT / AUTO EXT OFF": {
		"method": "calcCode",
		"code": "(L:LDG_GEAR_AUTO_EXT,Bool)"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERTY 1 AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) "
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERTY 1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) \n"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERTY 2 AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) "
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD ELEC BATTERTY 2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) "
	},
	"Asobo.DA62.Fuel.DA62_LH_Fuel_Control_On": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, enum) 19 != if{ \n(>K:FUEL_SELECTOR_LEFT_MAIN) \n}"
	},
	"Asobo.DA62.Fuel.DA62_LH_Fuel_Control_Crossfeed": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, enum) 20 != if{ \n(>K:FUEL_SELECTOR_RIGHT_MAIN) \n}"
	},
	"Asobo.DA62.Fuel.DA62_LH_Fuel_Control_Off": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, enum) 0 != if{ \n(>K:FUEL_SELECTOR_OFF) }"
	},
	"Asobo.DA62.Fuel.DA62_RH_Fuel_Control_On": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:2, enum) 20 != if{ \n(>K:FUEL_SELECTOR_2_RIGHT_MAIN) \n}"
	},
	"Asobo.DA62.Fuel.DA62_RH_Fuel_Control_Crossfeed": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:2, enum) 19 != if{ \n(>K:FUEL_SELECTOR_2_LEFT_MAIN) \n}"
	},
	"Asobo.DA62.Fuel.DA62_RH_Fuel_Control_Off": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:2, enum) 0 != if{ \n(>K:FUEL_SELECTOR_2_OFF) }"
	},
	"Asobo.DA62.Anti-Ice.DA62_DE-ICE_OFF": {
		"method": "calcCode",
		"code": "2 (>L:DA62_ANTI-ICE_SWITCH, Number)"
	},
	"Asobo.DA62.Anti-Ice.DA62_DE-ICE_Normal": {
		"method": "calcCode",
		"code": "1 (>L:DA62_ANTI-ICE_SWITCH, Number)"
	},
	"Asobo.DA62.Anti-Ice.DA62_DE-ICE_High": {
		"method": "calcCode",
		"code": "0 (>L:DA62_ANTI-ICE_SWITCH, Number)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_LH_ECU_TEST_ON": {
		"method": "calcCode",
		"code": "1 (>L:FADEC_ECUTEST_BUTTON_L_IsDown)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_LH_ECU_TEST_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FADEC_ECUTEST_BUTTON_L_IsDown)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_RH_ECU_TEST_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FADEC_ECUTEST_BUTTON_R_IsDown)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_RH_ECU_TEST_ON": {
		"method": "calcCode",
		"code": "1 (>L:FADEC_ECUTEST_BUTTON_R_IsDown)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_LH_ECU_A": {
		"method": "calcCode",
		"code": "0 (>L:DA62_ECU_L)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_LH_ECU_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:DA62_ECU_L)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_LH_ECU_B": {
		"method": "calcCode",
		"code": "2 (>L:DA62_ECU_L)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_RH_ECU_A": {
		"method": "calcCode",
		"code": "0 (>L:DA62_ECU_R)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_RH_ECU_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:DA62_ECU_R)"
	},
	"Asobo.DA62.Engine and FADEC System.DA62_RH_ECU_B": {
		"method": "calcCode",
		"code": "2 (>L:DA62_ECU_R)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_WINGENG_LR_ON": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_Airframe_1) 1 (>L:DEICE_Airframe_2)"
	},
	"Working Title.CJ4.Anti-Ice.WT_CJ4_ANTIICE_WINGENG_LR_OFF": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_Airframe_1) 0 (>L:DEICE_Airframe_2)"
	},
	"Asobo.Longitude.Autopilot.LONGITUDE_AUTOPILOT_VNAV_ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.COCKPIT_DOOR_OPEN": {
		"method": "calcCode",
		"code": "(L:A32NX_COCKPIT_DOOR_LOCKED) !"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.COCKPIT_DOOR_LOCK": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_COCKPIT_DOOR_LOCKED)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.COCKPIT_DOOR_UNLOCK": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_COCKPIT_DOOR_LOCKED)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.PUSH_DOORPANEL_VIDEO_TOGGLE": {
		"method": "calcCode",
		"code": "(L:PUSH_DOORPANEL_VIDEO, bool) ! (>L:PUSH_DOORPANEL_VIDEO, bool)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_JOYSTICK_UP": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_JOYSTICK_UP)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_JOYSTICK_DOWN": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_JOYSTICK_DOWN)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_JOYSTICK_RIGHT": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_JOYSTICK_RIGHT)"
	},
	"Asobo.330 Extra.Avionics.AS3X_1_JOYSTICK_LEFT": {
		"method": "calcCode",
		"code": "(>H:AS3X_1_JOYSTICK_LEFT)"
	},
	"Asobo.330 Extra.Avionics.AS3X_MFD_Cursor": {
		"method": "calcCode",
		"code": "(L:MFD_Main_MapShowCursor,Number)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.KODIAK 100 AUX BUS ON": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_AUX_Bus_ON, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.KODIAK 100 AUX BUS OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_AUX_Bus_ON, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.KODIAK 100 FUEL PUMP ON": {
		"method": "calcCode",
		"code": "2 (>L:SWS_FUEL_Switch_Pump_1)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.KODIAK 100 FUEL PUMP STANDBY": {
		"method": "calcCode",
		"code": "1 (>L:SWS_FUEL_Switch_Pump_1)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.KODIAK 100 FUEL PUMP OFF": {
		"method": "calcCode",
		"code": "0 (>L:SWS_FUEL_Switch_Pump_1)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_EMER_LTS_SWITCH_ARM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_EMER_LTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_EMER_LTS_SWITCH_ON": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_OVHD_EMER_LTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_EMER_LTS_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_EMER_LTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_NO_SMOKING_SWITCH_ON": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_OVHD_NO_SMOKING, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_NO_SMOKING_SWITCH_AUTO": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_NO_SMOKING, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_NO_SMOKING_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_NO_SMOKING, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_SEATBELTS_SWITCH_ON": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_SEATBELTS_SWITCH_AUTO": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.ASCRJ_OVHD_SEATBELTS_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_ELT_SWITCH_XXX": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_ELT, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_ELT_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_ELT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_ELT_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_ELT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_TAXI_LTS_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_TAXI)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_TAXI_LTS_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_TAXI)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_LEFT_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_LDG_LEFT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_LEFT_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_LDG_LEFT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_RIGHT_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_LDG_RIGHT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_RIGHT_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_LDG_RIGHT)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_NOSE_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_OVHD_LDG_NOSE)"
	},
	"Aerosoft.CRJ 550-700-1000.Lights.ASCRJ_OVHD_LDG_LTS_NOSE_SWITCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_OVHD_LDG_NOSE)"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Avionics.Input.PC6_AVIONICS1_TOGGLE": {
		"method": "calcCode",
		"code": "3 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Blackbird/Milviz.PC6 Turbo Porter.Avionics.Input.PC6_AVIONICS2_TOGGLE": {
		"method": "calcCode",
		"code": "3 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_ND_RANGE_INC": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_ND_RANGE) ++ 5 min (>L:A32NX_EFIS_R_ND_RANGE)"
	},
	"Asobo.Bonanza G36.Controls.Input (Potentiometer).RUDDER_TRIM_SET": {
		"method": "calcCode",
		"code": "@ 512 - 4 / - -128max 128min (>K:RUDDER_TRIM_SET)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_ROT_LDG_ELEV_KNOB_INC_FAST": {
		"method": "calcCode",
		"code": " (L:ASCRJ_PRESS_LDG_ELEV, Number) 1000 + dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) ++ (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_ROT_LDG_ELEV_KNOB_DEC_FAST": {
		"method": "calcCode",
		"code": " (L:ASCRJ_PRESS_LDG_ELEV, Number) 1000 - dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) -- (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIC_FAN_SWCH_ON": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_AIRC_RECIC_FAN_SWCH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_AIRC_RECIRC_FAN)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_PRESS_CONT_BTN_PRESS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_PRESS_PRESS_CONT_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Air Condition / Pressurization.ASCRJ_PRESS_PRESS_CONT_BTN_REL": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_PRESS_PRESS_CONT_ANIM)"
	},
	"Fly By Wire.A320-Dev.ECAM.A32NX_ECAM_KNOB_LOWER_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:93,percent) 5 - 0 max 93 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.ECAM.A32NX_ECAM_KNOB_UPPER_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:92,percent) 5 + 100 min 92 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX_ECAM_KNOB_UPPER_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:92,percent) 5 - 0 max 92 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_1_INC": {
		"method": "calcCode",
		"code": "0 (>K:KOHLSMAN_INC)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_1_DEC": {
		"method": "calcCode",
		"code": "0 (>K:KOHLSMAN_DEC)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_2_INC": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_INC)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_2_DEC": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_DEC)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_3_INC": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_INC)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_3_DEC": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_DEC)"
	},
	"SimWorks Studios.Kodiak 100.Engine.Input (Potentiometer).Kodiak 100 Throttle with reverse": {
		"method": "calcCode",
		"code": "@ 20.0186 * 4096 - -4096 max 16383 min (>K:THROTTLE1_SET)"
	},
	"Asobo.TBM 930.Autopilot.Input.TBM930_AUTOPILOT_HDG_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_NAV_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.TBM930_AUTOPILOT_VS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.Cessna 172.Engine.Input (Potentiometer).C172 Starter Knob (Potentiometer)": {
		"method": "calcCode",
		"code": "@ 200 < if{  0 g1 }  \n@ 400 < if{  1 g1 } \n@ 600 < if{  2 g1 } \n@ 800 < if{  3 } els{ 4 } \n:1  (>K:MAGNETO1_SET) \n(A:GENERAL ENG STARTER:1, Bool) if{ \n1 (>K:SET_STARTER1_HELD) }\n"
	},
	"Just Flight.Piper Arrow III.Autopilot.PA28_AUTOPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_onoff,bool) ! (>L:AUTOPILOT_onoff,bool)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_FRONT_DOOR_LOCK_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_FrontDoor_Unlock) ! (>L:XMLVAR_TBM930_FrontDoor_Unlock)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_FRONT_DOOR_LEVER_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_FrontDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (L:XMLVAR_TBM930_FrontDoor_Unlock) if{ 1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_FrontDoor_State) ! (>L:XMLVAR_TBM930_FrontDoor_State) } els{ (A:EXIT OPEN:0, Bool) if{ 0 (>L:XMLVAR_TBM930_FrontDoor_State) 1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_BACK_DOOR_LOCK_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_BackDoor_Unlock) ! (>L:XMLVAR_TBM930_BackDoor_Unlock)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_BACK_DOOR_LEVER_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_BackDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (L:XMLVAR_TBM930_BackDoor_Unlock) if{ 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_BackDoor_State) ! (>L:XMLVAR_TBM930_BackDoor_State) } els{ (A:EXIT OPEN:1, Bool) if{ 0 (>L:XMLVAR_TBM930_BackDoor_State) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_CARGO_DOOR_LEVER_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_CargoDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and if{ 3 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_CargoDoor_State) ! (>L:XMLVAR_TBM930_CargoDoor_State) } els{ (A:EXIT OPEN:2, Bool) if{ 0 (>L:XMLVAR_TBM930_CargoDoor_State) 3 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_FRONT_DOOR_STATE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_FrontDoor_State)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_BACK_DOOR_STATE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_BackDoor_State)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_CARGO_DOOR_STATE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_CargoDoor_State)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.KODIAK_100_TANK_SELECT_L_CLOSE": {
		"method": "calcCode",
		"code": "0 (>L:SWS_Kodiak_TankSelector_1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.KODIAK_100_TANK_SELECT_L_OPEN": {
		"method": "calcCode",
		"code": "1 (>L:SWS_Kodiak_TankSelector_1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.KODIAK_100_TANK_SELECT_R_CLOSE": {
		"method": "calcCode",
		"code": "0 (>L:SWS_Kodiak_TankSelector_2, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.KODIAK_100_TANK_SELECT_R_OPEN": {
		"method": "calcCode",
		"code": "1 (>L:SWS_Kodiak_TankSelector_2, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.KODIAK_100_FIREW_FUEL_CUTOFF_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ENG1)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.RADAR PWS AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_SWITCH_RADAR_PWS_POSITION)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.RADAR PWS OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_SWITCH_RADAR_PWS_POSITION)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_SHOW-HIDE_PILOT_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_HidePilot) ! (>L:XMLVAR_TBM930_HidePilot)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_SHOW-HIDE_COPILOT_SWITCH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_TBM930_HideCoPilot) ! (>L:XMLVAR_TBM930_HideCoPilot)"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_PILOT_VISOR_UP-DOWN_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorY_1, Number) 0 > if{ (L:XMLVAR_SunVisorY_1, Number) -- (>L:XMLVAR_SunVisorY_1) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_PILOT_VISOR_UP-DOWN_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorY_1, Number) 100 < if{ (L:XMLVAR_SunVisorY_1, Number) ++ (>L:XMLVAR_SunVisorY_1) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_PILOT_VISOR_LEFT-RIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorX_1, Number) 100 < if{ (L:XMLVAR_SunVisorX_1, Number) ++ (>L:XMLVAR_SunVisorX_1) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_PILOT_VISOR_LEFT-RIGHT_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorX_1, Number) 0 > if{ (L:XMLVAR_SunVisorX_1, Number) -- (>L:XMLVAR_SunVisorX_1) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_COPILOT_VISOR_UP-DOWN_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorY_2, Number) 0 > if{ (L:XMLVAR_SunVisorY_2, Number) -- (>L:XMLVAR_SunVisorY_2) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_COPILOT_VISOR_UP-DOWN_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorY_2, Number) 100 < if{ (L:XMLVAR_SunVisorY_2, Number) ++ (>L:XMLVAR_SunVisorY_2) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_COPILOT_VISOR_LEFT-RIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorX_2, Number) 0 > if{ (L:XMLVAR_SunVisorX_2, Number) -- (>L:XMLVAR_SunVisorX_2) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_COPILOT_VISOR_LEFT-RIGHT_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SunVisorX_2, Number) 100 < if{ (L:XMLVAR_SunVisorX_2, Number) ++ (>L:XMLVAR_SunVisorX_2) }"
	},
	"Asobo.TBM 930.Miscellaneous.TBM930_SWAP_ACTION_LEFT-RIGHT_UP-DOWN_ENCODER_SWITCH": {
		"method": "calcCode",
		"code": "(L:TBM930_VISOR_SWAP_LR-UD_SWAP-SWITCH_POS) ! (>L:TBM930_VISOR_SWAP_LR-UD_SWAP-SWITCH_POS)"
	},
	"SC Designs.F16C.MCDU.Input.F16C_KEYPAD_0 - DUPLICATE": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_BTN_0)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_TAILHOOK_UP": {
		"method": "calcCode",
		"code": "0 (>L:Tailhook,bool)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_TAILHOOK_DOWN": {
		"method": "calcCode",
		"code": "1 (>L:Tailhook,bool)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_TAILHOOK_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Tailhook,bool) ! (>L:Tailhook,bool)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_GND_JETT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:GND_JETT,bool)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_GND_JETT_ENABLE": {
		"method": "calcCode",
		"code": "1 (>L:GND_JETT,bool)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_GND_JETT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:GND_JETT,bool) ! (>L:GND_JETT,bool)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_BRAKE_ANTISKID_OFF": {
		"method": "calcCode",
		"code": "(A:ANTISKID BRAKES ACTIVE, Bool) If{ (>K:ANTISKID_BRAKES_TOGGLE) 0 (>L:HANDLING_Autobrakes_Position) }"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_BRAKE_ANTISKID_ON": {
		"method": "calcCode",
		"code": "(A:ANTISKID BRAKES ACTIVE, Bool) ! If{ (>K:ANTISKID_BRAKES_TOGGLE) }"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_BRAKE_ANTISKID_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ANTISKID_BRAKES_TOGGLE) (A:ANTISKID BRAKES ACTIVE, Bool) ! if{ 0 (>L:HANDLING_Autobrakes_Position) }"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_PARKING_BRAKE_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_PARKING_BRAKE_ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_PARKING_BRAKE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PARKING_BRAKES)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_LANDING_GEAR_UP": {
		"method": "calcCode",
		"code": "0 (>K:GEAR_SET)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_LANDING_GEAR_DOWN": {
		"method": "calcCode",
		"code": "1 (>K:GEAR_SET)"
	},
	"SC Designs.F16C.Gear.F16C_LEFT_LANDING_GEAR_TOGGLE": {
		"method": "calcCode",
		"code": "(A:GEAR HANDLE POSITION, Bool) if{ 0 } els{ 1 } (>K:GEAR_SET)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_STORES_CAT_1": {
		"method": "calcCode",
		"code": "0 (>L:STORES_CAT)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_STORES_CAT_3": {
		"method": "calcCode",
		"code": "1 (>L:STORES_CAT)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_LEFT_STORES_CAT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:STORES_CAT) ! (>L:STORES_CAT)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_LANDING_LIGHTS_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LANDING_LIGHTS_SET)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LANDING_LIGHTS_SET)"
	},
	"SC Designs.F16C.Lights.F16C_LEFT_LANDING_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_LANDING_1) if{ 0 } els{ 1 } (>K:2:LANDING_LIGHTS_SET)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_RWR_OFF": {
		"method": "calcCode",
		"code": "0 (>L:RWR_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_RWR_ON": {
		"method": "calcCode",
		"code": "1 (>L:RWR_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_RWR_TOGGLE": {
		"method": "calcCode",
		"code": "(L:RWR_ON,bool) ! (>L:RWR_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_OFF": {
		"method": "calcCode",
		"code": "0 (>L:MWS_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_ON": {
		"method": "calcCode",
		"code": "1 (>L:MWS_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MWS_ON,bool) ! (>L:MWS_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_B_OFF": {
		"method": "calcCode",
		"code": "0 (>L:MWS_ON_B,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_B_ON": {
		"method": "calcCode",
		"code": "1 (>L:MWS_ON_B,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MWS_B_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MWS_ON_B,bool) ! (>L:MWS_ON_B,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_01_OFF": {
		"method": "calcCode",
		"code": "0 (>L:01_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_01_ON": {
		"method": "calcCode",
		"code": "1 (>L:01_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_01_TOGGLE": {
		"method": "calcCode",
		"code": "(L:01_ON,bool) ! (>L:01_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_02_OFF": {
		"method": "calcCode",
		"code": "0 (>L:02_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_02_ON": {
		"method": "calcCode",
		"code": "1 (>L:02_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_02_TOGGLE": {
		"method": "calcCode",
		"code": "(L:02_ON,bool) ! (>L:02_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_CH_OFF": {
		"method": "calcCode",
		"code": "0 (>L:03_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_CH_ON": {
		"method": "calcCode",
		"code": "1 (>L:03_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_CH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:03_ON,bool) ! (>L:03_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_FL_OFF": {
		"method": "calcCode",
		"code": "0 (>L:04_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_FL_ON": {
		"method": "calcCode",
		"code": "1 (>L:04_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_CMDS_FL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:04_ON,bool) ! (>L:04_ON,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_JETT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:JETT,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_JETT_ON": {
		"method": "calcCode",
		"code": "1 (>L:JETT,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_JETT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:JETT,bool) ! (>L:JETT,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_OFF": {
		"method": "calcCode",
		"code": "0 (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_1": {
		"method": "calcCode",
		"code": "1 (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_2": {
		"method": "calcCode",
		"code": "2 (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_3": {
		"method": "calcCode",
		"code": "3 (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_4": {
		"method": "calcCode",
		"code": "4 (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_INC": {
		"method": "calcCode",
		"code": "(L:PRGM) ++ 4 min (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_PRGM_DEC": {
		"method": "calcCode",
		"code": "(L:PRGM) -- 0 max (>L:PRGM)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_STBY": {
		"method": "calcCode",
		"code": "1 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_MAN": {
		"method": "calcCode",
		"code": "2 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_SEM": {
		"method": "calcCode",
		"code": "3 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_AUTO": {
		"method": "calcCode",
		"code": "4 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_BYP": {
		"method": "calcCode",
		"code": "5 (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_INC": {
		"method": "calcCode",
		"code": "(L:CMDS_MODE) ++ 5 min (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_MODE_DEC": {
		"method": "calcCode",
		"code": "(L:CMDS_MODE) -- 0 max (>L:CMDS_MODE)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_SET_OFF": {
		"method": "calcCode",
		"code": "0 (>L:TWR_SET,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_SET_ON": {
		"method": "calcCode",
		"code": "1 (>L:TWR_SET,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_SET_TOGGLE": {
		"method": "calcCode",
		"code": "(L:TWR_SET,bool) ! (>L:TWR_SET,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_VOL_OFF": {
		"method": "calcCode",
		"code": "0 (>L:TWR_VOL,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_VOL_ON": {
		"method": "calcCode",
		"code": "1 (>L:TWR_VOL,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_TWR_VOL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:TWR_VOL,bool) ! (>L:TWR_VOL,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_SYMBOLOGY_OFF": {
		"method": "calcCode",
		"code": "0 (>L:CYLINDER1,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_SYMBOLOGY_ON": {
		"method": "calcCode",
		"code": "1 (>L:CYLINDER1,bool)"
	},
	"SC Designs.F16C.Warning System.F16C_LEFT_SYMBOLOGY_TOGGLE": {
		"method": "calcCode",
		"code": "(L:CYLINDER1,bool) ! (>L:CYLINDER1,bool)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_LASER_ARM": {
		"method": "calcCode",
		"code": "0 (>L:LASER_ARM)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_LASER_OFF": {
		"method": "calcCode",
		"code": "1 (>L:LASER_ARM)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_LASER_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LASER_ARM) ! (>L:LASER_ARM)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_RF_NORM": {
		"method": "calcCode",
		"code": "0 (>L:ECM_ARM)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_RF_SILENT": {
		"method": "calcCode",
		"code": "1 (>L:ECM_ARM)"
	},
	"SC Designs.F16C.Weapons.F16C_FRONT_RF_ECM": {
		"method": "calcCode",
		"code": "2 (>L:ECM_ARM)"
	},
	"SC Designs.F16C.Weapons.Input.F16C_FRONT_MASTER_ARM_ON": {
		"method": "calcCode",
		"code": "0 (>L:MASTER_ARM)"
	},
	"SC Designs.F16C.Weapons.Input.F16C_FRONT_MASTER_ARM_OFF": {
		"method": "calcCode",
		"code": "1 (>L:MASTER_ARM)"
	},
	"SC Designs.F16C.Weapons.Input.F16C_FRONT_ARM_SIMULATE": {
		"method": "calcCode",
		"code": "2 (>L:MASTER_ARM)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_ROLL_HDG_SEL": {
		"method": "calcCode",
		"code": "0 (>L:MODE_HEADING)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_ROLL_STRG_SEL": {
		"method": "calcCode",
		"code": "1 (>L:MODE_HEADING)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_PITCH_ALT_HOLD": {
		"method": "calcCode",
		"code": "0 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) ! If{ (>K:AUTOPILOT_ON) } (A:AUTOPILOT ALTITUDE LOCK,bool) ! If{ (>K:AP_ALT_HOLD) }"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_PITCH_AP_OFF": {
		"method": "calcCode",
		"code": "1 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) if{ (>K:AUTOPILOT_OFF) } 0 (>K:AP_ALT_VAR_SET_ENGLISH) (>K:AP_ALT_HOLD_OFF) (A:AUTOPILOT PITCH HOLD,bool) if{ (>K:AP_PITCH_LEVELER_OFF) }"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_PITCH_ATT_HOLD": {
		"method": "calcCode",
		"code": "2 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) ! If{ (>K:AUTOPILOT_ON) } (A:AUTOPILOT PITCH HOLD,bool) ! If{ (>K:AP_PITCH_LEVELER_ON) }"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_ENG_CONTI_PRI": {
		"method": "calcCode",
		"code": "1 (>L:ENG_CONTI)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_ENG_CONTI_SEC": {
		"method": "calcCode",
		"code": "0 (>L:ENG_CONTI)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_ENG_CONTI_TOGGLE": {
		"method": "calcCode",
		"code": "(L:ENG_CONTI) ! (>L:ENG_CONTI)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_AB_RESET_ON": {
		"method": "calcCode",
		"code": "1 (>L:ABRESET)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_AB_RESET_ENGDATA": {
		"method": "calcCode",
		"code": "0 (>L:ABRESET)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_AB_RESET_TOGGLE": {
		"method": "calcCode",
		"code": "(L:ABRESET) ! (>L:ABRESET)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_FLCS_ON": {
		"method": "calcCode",
		"code": "1 (>L:FLCS)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_FLCS_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FLCS)"
	},
	"SC Designs.F16C.Engines.F16C_LEFT_FLCS_TOGGLE": {
		"method": "calcCode",
		"code": "(L:FLCS) ! (>L:FLCS)"
	},
	"SC Designs.F16C.Autopilot.Input.F16C_FRONT_AP_BARO_INC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_INC) (>H:AP_BARO_Up)"
	},
	"SC Designs.F16C.Autopilot.Input.F16C_FRONT_AP_BARO_DEC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_DEC) (>H:AP_BARO_Down)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_BARO_PUSH": {
		"method": "calcCode",
		"code": "1 (>K:BAROMETRIC)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_HDG_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, degrees) ++ dnor (>K:2:HEADING_BUG_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_HDG_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:1, degrees) -- dnor (>K:2:HEADING_BUG_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_HDG_SYNC_PUSH": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_CRS_INC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) ++ dnor (>K:VOR1_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_CRS_DEC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) -- dnor (>K:VOR1_SET)"
	},
	"SC Designs.F16C.Autopilot.F16C_FRONT_AP_CRS_SYNC_PUSH": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)"
	},
	"SC Designs.F16C.Fuel.F16C_FRONT_EXT_FUEL_TRANS_NORM": {
		"method": "calcCode",
		"code": "0 (>L:EXT_TRANSF) 16 (>K:FUEL_SELECTOR_SET)"
	},
	"SC Designs.F16C.Fuel.F16C_FRONT_EXT_FUEL_TRANS_OFF": {
		"method": "calcCode",
		"code": "1 (>L:EXT_TRANSF) 1 (>K:FUEL_SELECTOR_SET)"
	},
	"SC Designs.F16C.Fuel.F16C_FRONT_EXT_FUEL_TRANS_WING": {
		"method": "calcCode",
		"code": "2 (>L:EXT_TRANSF) 17 (>K:FUEL_SELECTOR_SET)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_BATTERY_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1,bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_BATTERY_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1,bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_BATTERY_TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_AVIONICS_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:23, Bool) if{  23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \r\n(A:BUS CONNECTION ON:4, Bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \r\n(A:CIRCUIT SWITCH ON:24, Bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \r\n(A:BUS CONNECTION ON:5, Bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_AVIONICS_ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:23, Bool) ! if{  23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \r\n(A:BUS CONNECTION ON:4, Bool) ! if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \r\n(A:CIRCUIT SWITCH ON:24, Bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \r\n(A:BUS CONNECTION ON:5, Bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_MASTER_AVIONICS_TOGGLE": {
		"method": "calcCode",
		"code": "23 (>K:ELECTRICAL_CIRCUIT_TOGGLE)\r\n4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \r\n24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \r\n5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_GENERATORS_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) if{ 1 0 (>K:2:ALTERNATOR_SET) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_GENERATORS_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! if{ 1 1 (>K:2:ALTERNATOR_SET) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_GENERATORS_TOGGLE": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! (>K:2:ALTERNATOR_SET)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_RDR_ALT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:RDR_ALT) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_RDR_ALT_ON": {
		"method": "calcCode",
		"code": "1 (>L:RDR_ALT) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_RDR_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:RDR_ALT) ! (>L:RDR_ALT)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_HUD_PWR_OFF": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:39, Bool) if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_HUD_PWR_ON": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:39, Bool) ! if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_HUD_PWR_TOGGLE": {
		"method": "calcCode",
		"code": "39 (>K:ELECTRICAL_CIRCUIT_TOGGLE)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_ATT_FPM_OFF": {
		"method": "calcCode",
		"code": "0 (>L:ATT_FPM) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_ATT_FPM_ON": {
		"method": "calcCode",
		"code": "1 (>L:ATT_FPM) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_ATT_FPM_TOGGLE": {
		"method": "calcCode",
		"code": "(L:ATT_FPM) ! (>L:ATT_FPM)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DED_DATA_OFF": {
		"method": "calcCode",
		"code": "0 (>L:DED_DATA) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DED_DATA_ON": {
		"method": "calcCode",
		"code": "1 (>L:DED_DATA) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DED_DATA_TOGGLE": {
		"method": "calcCode",
		"code": "(L:DED_DATA) ! (>L:DED_DATA)"
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DEPR_RET_OFF": {
		"method": "calcCode",
		"code": "0 (>L:DEPR_RET) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DEPR_RET_ON": {
		"method": "calcCode",
		"code": "1 (>L:DEPR_RET) "
	},
	"SC Designs.F16C.Electrical.F16C_RIGHT_DEPR_RET_TOGGLE": {
		"method": "calcCode",
		"code": "(L:DEPR_RET) ! (>L:DEPR_RET)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_CAS_ON": {
		"method": "calcCode",
		"code": "0 (>L:CAS)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_CAS_OFF": {
		"method": "calcCode",
		"code": "1 (>L:CAS)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_CAS_GND_SPD": {
		"method": "calcCode",
		"code": "2 (>L:CAS)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_ALT_RADAR_0": {
		"method": "calcCode",
		"code": "0 (>L:ALT_RADAR)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_ALT_RADAR_1": {
		"method": "calcCode",
		"code": "1 (>L:ALT_RADAR)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_ALT_RADAR_OFF": {
		"method": "calcCode",
		"code": "2 (>L:ALT_RADAR)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_DAY_NIGHT_UP": {
		"method": "calcCode",
		"code": "0 (>L:DAY_NIGHT)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_DAY_NIGHT_MID": {
		"method": "calcCode",
		"code": "1 (>L:DAY_NIGHT)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_DAY_NIGHT_DOWN": {
		"method": "calcCode",
		"code": "2 (>L:DAY_NIGHT)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_TEST_STEP_ON": {
		"method": "calcCode",
		"code": "1 (>L:TEST_STEP)"
	},
	"SC Designs.F16C.Flight Instrumentation.F16C_RIGHT_TEST_STEP_OFF": {
		"method": "calcCode",
		"code": "0 (>L:TEST_STEP)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_CABIN_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 + 100 min s0 (>L:LIGHTING_CABIN_1) \r\nl0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 \r\n(L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_CABIN_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 - 0 max s0 (>L:LIGHTING_CABIN_1) \r\nl0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 \r\n(L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_PANEL_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 + 100 min \r\ns0 (>L:LIGHTING_PANEL_1) \r\nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_PANEL_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 - 0 max \r\ns0 (>L:LIGHTING_PANEL_1) \r\nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_DED_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_13) 5 + 100 min \r\ns0 (>L:LIGHTING_POTENTIOMETER_13) l0 13 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_DED_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_13) 5 - 0 max \r\ns0 (>L:LIGHTING_POTENTIOMETER_13) l0 13 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_CONSOLE_INC": {
		"method": "calcCode",
		"code": "(>L:LIGHTING_POTENTIOMETER_9) 5 + 100 min \r\ns0 (>L:LIGHTING_POTENTIOMETER_9) l0 9 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_CONSOLE_DEC": {
		"method": "calcCode",
		"code": "(>L:LIGHTING_POTENTIOMETER_9) 5 - 0 max \r\ns0 (>L:LIGHTING_POTENTIOMETER_9) l0 9 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_INSTR_FLOOD_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_2) 5 + 100 min \r\ns0 (>L:LIGHTING_POTENTIOMETER_2) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_INSTR_FLOOD_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_2) 5 - 0 max \r\ns0 (>L:LIGHTING_POTENTIOMETER_2) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_MAIL_FLOOD_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PEDESTRAL_1) 5 + 100 min \r\ns0 (>L:LIGHTING_PEDESTRAL_1) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT PEDESTRAL:1, Bool) s2 \r\n(L:LIGHTING_PEDESTRAL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PEDESTRAL_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Lights.F16C_RIGHT_LIGHT_MAIL_FLOOD_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PEDESTRAL_1) 5 - 0 max \r\ns0 (>L:LIGHTING_PEDESTRAL_1) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) \r\n(A:LIGHT PEDESTRAL:1, Bool) s2 \r\n(L:LIGHTING_PEDESTRAL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PEDESTRAL_LIGHTS_SET) }"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_0": {
		"method": "calcCode",
		"code": "0 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_1": {
		"method": "calcCode",
		"code": "1 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_2": {
		"method": "calcCode",
		"code": "2 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_3": {
		"method": "calcCode",
		"code": "3 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_4": {
		"method": "calcCode",
		"code": "4 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_5": {
		"method": "calcCode",
		"code": "5 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_6": {
		"method": "calcCode",
		"code": "6 (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_INC": {
		"method": "calcCode",
		"code": "(L:AIRCOND) ++ 6 min (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIRCOND_TEMP_DEC": {
		"method": "calcCode",
		"code": "(L:AIRCOND) -- 0 max (>L:AIRCOND)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:Air_Source)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_NORM": {
		"method": "calcCode",
		"code": "1 (>L:Air_Source)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_DUMP": {
		"method": "calcCode",
		"code": "2 (>L:Air_Source)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_RAM": {
		"method": "calcCode",
		"code": "3 (>L:Air_Source)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_INC": {
		"method": "calcCode",
		"code": "(L:Air_Source) ++ 3 min (>L:Air_Source)"
	},
	"SC Designs.F16C.Air Conditioning and Pressurization.F16C_RIGHT_AIR_SOURCE_DEC": {
		"method": "calcCode",
		"code": "(L:Air_Source) -- 0 max (>L:Air_Source)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_SWITCH_SMOKE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:Smoke Visibility)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_SWITCH_SMOKE_ON": {
		"method": "calcCode",
		"code": "1 (>L:Smoke Visibility)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_SWITCH_SMOKE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Smoke Visibility) ! (>L:Smoke Visibility)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_HANDLE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:RIGHT_HANDLE) ! (>L:RIGHT_HANDLE)"
	},
	"SC Designs.F16C.Anti-Ice.F16C_RIGHT_PITOT_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_TOGGLE)"
	},
	"SC Designs.F16C.Anti-Ice.F16C_RIGHT_WINDSHIELD_DEICE_UPPER": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) ! if{ (>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"SC Designs.F16C.Anti-Ice.F16C_RIGHT_WINDSHIELD_DEICE_NORM": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"SC Designs.F16C.Anti-Ice.F16C_RIGHT_WINDSHIELD_DEICE_LOWER": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_MODE_C_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MODE_C) ! (>L:MODE_C)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_MODE_C_SET_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MODE_C_SET) ! (>L:MODE_C_SET)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_KY_58_VOL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:KY_58_VOL) ! (>L:KY_58_VOL)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_TD_ON_TOGGLE": {
		"method": "calcCode",
		"code": "(L:TD_ON) ! (>L:TD_ON)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_MASK_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:MaskSwitch) ! (>L:MaskSwitch)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_VISOR_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:VisorSwitch) ! (>L:VisorSwitch)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_OXYGEN_REG_L_TOGGLE": {
		"method": "calcCode",
		"code": "(L:OXY_REG) ! (>L:OXY_REG)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_OXYGEN_REG_R_TOGGLE": {
		"method": "calcCode",
		"code": "(L:OXY_REG_R) ! (>L:OXY_REG_R)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_COVERS_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Covers Switch) ! (>L:Covers Switch)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_CHOCKS_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Chocks Switch) ! (>L:Chocks Switch)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_LADDER_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:Ladder_Switch) ! (>L:Ladder_Switch)"
	},
	"SC Designs.F16C.Miscellaneous.F16C_RIGHT_AUDIO_IN_TOGGLE": {
		"method": "calcCode",
		"code": "(L:AUDIO_IN) ! (>L:AUDIO_IN)"
	},
	"SimWorks Studios.Kodiak 100.Engine.KODIAK_100_IGNITION_SWITCH_TOGGLE": {
		"method": "calcCode",
		"code": "1 2 (A:TURB ENG IGNITION SWITCH EX1:1, enum) 2 == ? (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"SimWorks Studios.Kodiak 100.Engine.KODIAK_100_IGNITION_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"SimWorks Studios.Kodiak 100.Engine.KODIAK_100_IGNITION_SWITCH_ON": {
		"method": "calcCode",
		"code": "2 (>K:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Microsoft.Generic.Controls.RUDDER_TRIM_RESET": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_RESET) "
	},
	"Fly By Wire.A320.Autopilot.XMLVAR_AUTOPILOT_ALTITUDE_INCREMENT": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AUTOPILOT_ALTITUDE_INCREMENT)"
	},
	"Fly By Wire.A320-Dev.Engine.A32NX_ENG1_MASTER_SWITCH_ON": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Fly By Wire.A320-Dev.Engine.A32NX_ENG2_MASTER_SWITCH_ON": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Fly By Wire.A320-Dev.Engine.A32NX_ENG1_MASTER_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Fly By Wire.A320-Dev.Engine.A32NX_ENG2_MASTER_SWITCH_OFF": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_FLAPS_INCR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FLAPS_SET,number) ++ 5 min (>L:ASCRJ_FLAPS_SET,number)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_FLAPS_DECR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FLAPS_SET,number) -- 0 max (>L:ASCRJ_FLAPS_SET,number)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.ASCRJ_FLAPS_ANALOG_SET": {
		"method": "calcCode",
		"code": "@ 204.6 / near 0 max 5 min (>L:ASCRJ_FLAPS_SET,number)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Controls.Input (Potentiometer).ASCRJ SPOILER SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:ASCRJ_SPOILER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.A32NX_KOHLSMAN_SETTING": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 1 > if{ 99 } els{ (L:XMLVAR_Baro_Selector_HPA_1,bool) ! if{ (A:KOHLSMAN SETTING HG, inHg) } els{ (A:KOHLSMAN SETTING HG, mbar) near } }"
	},
	"Aerosoft.CRJ 550-700-1000.Autopilot.ASCRJ_AP_TOGGLE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_FCP_AP_ENG_LED) if{ 1 (>L:ASCRJ_FCP_AP_DISC) }\n   els{ 0 (>L:ASCRJ_FCP_AP_DISC) 1 (>L:ASCRJ_FCP_AP_ENG)  }"
	},
	"SimWorks Studios.Kodiak 100.Electrical.KODIAK_BREAKER_STBYATT": {
		"method": "calcCode",
		"code": "7 (>A:BUS LOOKUP INDEX, Number)  1 (>A:CIRCUIT BREAKER PULLED:61, Bool) 100 *"
	},
	"Aerosoft.CRJ 550-700-1000.Avionics.ASCRJ_ECAM_ECS": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_ECAM_ECS)\n"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_TOD_REMAINING": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_TOD_REMAINING)"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_TOD_DISTANCE": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_TOD_DISTANCE)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TCAS TRAFFIC POSITION ": {
		"method": "calcCode",
		"code": "(L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) ++ 4 % (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_TCAS_TRAFFIC_POSITION_THRT": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_TCAS_TRAFFIC_POSITION_ALL": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_TCAS_TRAFFIC_POSITION_ABV": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)"
	},
	"Fly By Wire.A320-Dev.Navigation.A32NX_TCAS_TRAFFIC_POSITION_BLW": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)"
	},
	"SimWorks Studios.Kodiak 100.Engines.Input.KODIAK_100_Starter_Switch_Off": {
		"method": "calcCode",
		"code": "1 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Engines.Input.KODIAK_100_Starter_Switch_High": {
		"method": "calcCode",
		"code": "2 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak 100 Fuel Pump Switch Stby": {
		"method": "calcCode",
		"code": "0 (>L:SWS_FUEL_Switch_Pump_1, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak 100 Fuel Pump Switch On": {
		"method": "calcCode",
		"code": "2 (>L:SWS_FUEL_Switch_Pump_1, Enum)"
	},
	"Fly By Wire.A320-Dev.EFIS.A32NX_EFIS_R_CHRONO_PUSH": {
		"method": "calcCode",
		"code": "0 (>H:A32NX_EFIS_R_CHRONO_PUSHED)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Hold_MEM1_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Hold_MEM1_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Hold_MEM2_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Hold_MEM2_1)"
	},
	"Working Title.CJ4.Avionics.Generic_Lwr_Hold_MEM3_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_Hold_MEM3_1)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.A32NX_OVHD_RCDR_GND_CTL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_RCDR_GROUND_CONTROL_ON,bool) ! if{ \n   (A:GENERAL ENG OIL PRESSURE:1, psi) 18 < sp1\n   (A:GENERAL ENG OIL PRESSURE:2, psi) 18 < sp2\n   (L:A32NX_ELEC_DC_ESS_SHED_BUS_IS_POWERED,bool) l1 and l2 and\n   if{ 1 (>L:A32NX_RCDR_GROUND_CONTROL_ON,bool) } } \nels{ 0 (>L:A32NX_RCDR_GROUND_CONTROL_ON,bool) }"
	},
	"Microsoft.Generic.Environment.SIMULATION_RATE": {
		"method": "calcCode",
		"code": "(E:SIMULATION RATE,number)"
	},
	"Asobo.A320.Electrical.ASOA320_MASTER_BATTERY_1_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } \n1 sp0 10 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:6, Bool) l0 != if{ \n10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.A320.Electrical.ASOA320_MASTER_BATTERY_1_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } \n0 sp0 10 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:6, Bool) l0 != if{ \n10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_BARO1_KNOB_PUSH": {
		"method": "calcCode",
		"code": " 1 (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_BARO1_KNOB_PULL": {
		"method": "calcCode",
		"code": " 3 (>L:XMLVAR_Baro1_Mode) "
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_LEFT_ON": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG STARTER:1, Bool) != if{ (>K:TOGGLE_STARTER1) }"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_LEFT_OFF": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG STARTER:1, Bool) != if{ (>K:TOGGLE_STARTER1) }"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_RIGHT_ON": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG STARTER:2, Bool) != if{ (>K:TOGGLE_STARTER2) }"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_START_RIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG STARTER:2, Bool) != if{ (>K:TOGGLE_STARTER2) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_YD_ON": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT YAW DAMPER, Bool) != if{ (>K:YAW_DAMPER_TOGGLE) }"
	},
	"Working Title.CJ4.Autopilot.WT_CJ4_AP_YD_OFF": {
		"method": "calcCode",
		"code": "0 (A:AUTOPILOT YAW DAMPER, Bool) != if{ (>K:YAW_DAMPER_TOGGLE) }"
	},
	"Fly By Wire.A320-Dev.Safety.Output.A32NX_OVHD_EMEREXIT_LIGHT_OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position) 2 == (L:A32NX_OVHD_INTLT_ANN, number) 0 == or (A:CIRCUIT AVIONICS ON, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Lights.A32NX_OH_INTEG_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:86,percent) 5 + 100 min 86 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.A32NX_OH_INTEG_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:86,percent) 5 - 0 max 86 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH DOME LIGHT BRT": {
		"method": "calcCode",
		"code": "1 (>K:2:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH DOME LIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>K:2:CABIN_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_CLR2_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR2)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_CLR2_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CLR2)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_RCL_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_RCL)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_EMERCANC_PRESSED": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_EMERCANC_PRESSED)"
	},
	"Fly By Wire.A320.ECAM.A32NX_BTN_EMERCANC_RELEASED": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_EMERCANC_PRESSED)"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.KODIAK_100_DEICE_WINDSHIELD_ON": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD DEICE SWITCH, Bool) ! if{ (>K:WINDSHIELD_DEICE_TOGGLE) }"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.KODIAK_100_DEICE_WINDSHIELD_OFF": {
		"method": "calcCode",
		"code": "(A:WINDSHIELD DEICE SWITCH, Bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE) }"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.KODIAK_100_DEICE_WINDSHIELD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_PAGE_KNOB_DEC": {
		"method": "calcCode",
		"code": "0 (>K:GPS_PAGE_KNOB_DEC)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_PAGE_KNOB_INC": {
		"method": "calcCode",
		"code": "0 (>K:GPS_PAGE_KNOB_INC)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_GROUP_KNOB_DEC": {
		"method": "calcCode",
		"code": "0 (>K:GPS_GROUP_KNOB_DEC)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_GROUP_KNOB_INC": {
		"method": "calcCode",
		"code": "0 (>K:GPS_GROUP_KNOB_INC)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_DIRECTTO_BUTTON": {
		"method": "calcCode",
		"code": "2 (>K:GPS_DIRECTTO_BUTTON)\r\n4 (>K:GPS_DIRECTTO_BUTTON)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_BUTTON1": {
		"method": "calcCode",
		"code": "2 (>K:GPS_BUTTON1)\r\n4 (>K:GPS_BUTTON1)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_CURSOR_BUTTON": {
		"method": "calcCode",
		"code": "2 (>K:GPS_CURSOR_BUTTON)\r\n4 (>K:GPS_CURSOR_BUTTON)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_MENU_BUTTON": {
		"method": "calcCode",
		"code": "2 (>K:GPS_MENU_BUTTON)\r\n4 (>K:GPS_MENU_BUTTON)"
	},
	"TDS Sim.GTNxi 750.Navigation.GPS_BUTTON2": {
		"method": "calcCode",
		"code": "2 (>K:GPS_BUTTON2)\r\n4 (>K:GPS_BUTTON2)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_PAGE_KNOB_DEC": {
		"method": "calcCode",
		"code": "8 (>K:GPS_PAGE_KNOB_DEC)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_PAGE_KNOB_INC": {
		"method": "calcCode",
		"code": "8 (>K:GPS_PAGE_KNOB_INC)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_GROUP_KNOB_DEC": {
		"method": "calcCode",
		"code": "8 (>K:GPS_GROUP_KNOB_DEC)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_GROUP_KNOB_INC": {
		"method": "calcCode",
		"code": "8 (>K:GPS_GROUP_KNOB_INC)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_DIRECTTO_BUTTON": {
		"method": "calcCode",
		"code": "10 (>K:GPS_DIRECTTO_BUTTON)\r\n12 (>K:GPS_DIRECTTO_BUTTON)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_BUTTON1": {
		"method": "calcCode",
		"code": "10 (>K:GPS_BUTTON1)\r\n12 (>K:GPS_BUTTON1)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_CURSOR_BUTTON": {
		"method": "calcCode",
		"code": "10 (>K:GPS_CURSOR_BUTTON)\r\n12 (>K:GPS_CURSOR_BUTTON)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_MENU_BUTTON": {
		"method": "calcCode",
		"code": "10 (>K:GPS_MENU_BUTTON)\r\n12 (>K:GPS_MENU_BUTTON)"
	},
	"TDS Sim.GTNxi 650.Navigation.GPS_BUTTON2": {
		"method": "calcCode",
		"code": "10 (>K:GPS_BUTTON2)\r\n12 (>K:GPS_BUTTON2)"
	},
	"Working Title.CJ4.Avionics.WT_CJ4_PANEL_BRIGHTNESS": {
		"method": "calcCode",
		"code": "(L:LIGHTING_Knob_Master)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_L_RUN_OFF": {
		"method": "calcCode",
		"code": "0 (>K:MIXTURE1_SET) 0 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_L_RUN_ON": {
		"method": "calcCode",
		"code": "16384 (>K:MIXTURE1_SET) 1 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_R_RUN_OFF": {
		"method": "calcCode",
		"code": "0 (>K:MIXTURE2_SET) 0 (>K:SET_FUEL_VALVE_ENG2)"
	},
	"Working Title.CJ4.Engines.WT_CJ4_ENG_R_RUN_ON": {
		"method": "calcCode",
		"code": "16384 (>K:MIXTURE2_SET) 1 (>K:SET_FUEL_VALVE_ENG2)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_CLR_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_CLR_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_DIRECTTO": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_DIRECTTO)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_ENT_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_FPL_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_JOYSTICK_DOWN": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_JOYSTICK_DOWN)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_JOYSTICK_LEFT": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_JOYSTICK_LEFT)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_JOYSTICK_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_JOYSTICK_PUSH)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_JOYSTICK_RIGHT": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_JOYSTICK_RIGHT)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_JOYSTICK_UP": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_JOYSTICK_UP)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_MENU_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_NRST_Push": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_NRST_Push)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_RNG_Dezoom": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_RNG_Dezoom)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_RNG_Zoom": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_RNG_Zoom)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_SOFTKEYS_1": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_SOFTKEYS_1)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_SOFTKEYS_2": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_SOFTKEYS_2)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_SOFTKEYS_3": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_SOFTKEYS_3)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_SOFTKEYS_4": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_SOFTKEYS_4)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_SOFTKEYS_5": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_SOFTKEYS_5)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_TURN_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_TURN_DEC)"
	},
	"Asobo.330 Extra.Avionics.AS3X_2_TURN_INC": {
		"method": "calcCode",
		"code": "(>H:AS3X_2_TURN_INC)"
	},
	"Microsoft.Generic.Engines.COWLFLAP1_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:COWLFLAP1_SET)"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 1": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 1 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_1) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 2": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 2 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_2) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 3": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 3 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_3) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 4": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 4 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_4) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 5": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 5 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_5) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 6": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 6 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_6) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 7": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 7 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_7) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn 0": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) 0 > if{ 0 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_0) }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Btn CLR": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr) s1 2 < if{ (L:XPNDR_pos) -- s0 0 < if{ 3 } els{ l0 } (>L:XPNDR_pos) \nl1 0 == if{ (A:TRANSPONDER CODE:1,number) } els{ (L:XPNDR_temp) } 10 div \n(>L:XPNDR_temp) 2 (>L:XPNDR_clr) } els{ 0 (>L:XPNDR_temp) 0 (>L:XPNDR_pos) } \n(>H:A320_Neo_ATC_BTN_CLR) (E:SIMULATION TIME,second) 7 + (>L:XPNDR_timeout)"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom Numeric Keypress Handler": {
		"method": "calcCode",
		"code": "(L:XPNDR_act,bool) if{ 0 (>L:XPNDR_act) \n(E:SIMULATION TIME,second) 7 + (>L:XPNDR_timeout) \n(L:XPNDR_clr) 2 == if{ 1 (>L:XPNDR_clr) } \n(L:XPNDR_key) (L:XPNDR_temp,number) 10 * + (>L:XPNDR_temp,number) (L:XPNDR_pos) ++ 4 min s0 (>L:XPNDR_pos) l0 4 == if{ (L:XPNDR_temp,bco16) (>K:XPNDR_SET) \n0 (>L:XPNDR_timeout) 0 (>L:XPNDR_temp,number) \n0 (>L:XPNDR_pos) 0 (>L:XPNDR_clr) } } \n(L:XPNDR_temp)"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom 7 Sec Timeout Handler": {
		"method": "calcCode",
		"code": "(L:XPNDR_timeout) 0 != if{ (E:SIMULATION TIME,second) (L:XPNDR_timeout) > if{ 0 s0 (>L:XPNDR_timeout) l0 (>L:XPNDR_temp) l0 (>L:XPNDR_pos) l0 (>L:XPNDR_clr) } }"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom XPNDR_clr": {
		"method": "calcCode",
		"code": "(L:XPNDR_clr)"
	},
	"Fly By Wire.A320-Dev.Navigation.ATC Custom XPNDR_pos": {
		"method": "calcCode",
		"code": "(L:XPNDR_pos)"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM1-1 Button Short Long Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 0.25 + (>L:MEM1_Press)"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM1-1 Button Short Long Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:MEM1_Press) < if{ (>H:Generic_Lwr_Push_MEM1_1) } \nels{ (>H:Generic_Lwr_Hold_MEM1_1) }"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM2-1 Button Short Long Press ": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 0.25 + (>L:MEM2_Press)"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM2-1 Button Short Long Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:MEM2_Press) < if{ (>H:Generic_Lwr_Push_MEM2_1) } \nels{ (>H:Generic_Lwr_Hold_MEM2_1) }"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM3-1 Button Short Long Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 0.25 + (>L:MEM3_Press)"
	},
	"Working Title.CJ4.Avionics.MFD1 MEM3-1 Short Long Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:MEM3_Press) < if{ (>H:Generic_Lwr_Push_MEM3_1) } \nels{ (>H:Generic_Lwr_Hold_MEM3_1) }"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX_ECAM_KNOB_LOWER_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:93,percent) 5 + 100 min 93 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Carenado..Autopilot.Autopilot Master On": {
		"method": "calcCode",
		"code": "(>K:AP_MASTER)"
	},
	"Fly By Wire.A320..ISIS_PUSH_BUGS": {
		"method": "calcCode",
		"code": "(>H: A32NX_ISIS_BUGS_PRESSED)\n(L:A32NX_ISIS_BUGS_ACTIVE) ! (>L:A32NX_ISIS_BUGS_ACTIVE)"
	},
	"Fly By Wire.A320.ISIS.ISIS_PUSH_RST": {
		"method": "calcCode",
		"code": "0 (>H:A32NX_ISIS_RST_PRESSED)"
	},
	"Fly By Wire.A320.ISIS.ISIS_PUSH_LS": {
		"method": "calcCode",
		"code": "(>H:A32NX_ISIS_LS_PRESSED)\n(L:A32NX_ISIS_LS_ACTIVE) ! (>L:A32NX_ISIS_LS_ACTIVE)"
	},
	"Fly By Wire.A320.ISIS.Input.A32NX ISIS MINUS PRESS": {
		"method": "calcCode",
		"code": "(>H:A32NX_ISIS_MINUS_PRESSED)"
	},
	"Fly By Wire.A320.ISIS.Input.A32NX ISIS PLUS PRESS": {
		"method": "calcCode",
		"code": "(>H:A32NX_ISIS_PLUS_PRESSED)"
	},
	"Fly By Wire.A320.ISIS.Input.ISIS_KNOB_PRESSED": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ACTIVE, bool) if{\n 0 (>H:A32NX_ISIS_KNOB_PRESSED, number)\n} els{\n (L:A32NX_ISIS_BARO_MODE, enum) 0 == if{\n 1 (>L:A32NX_ISIS_BARO_MODE, enum)\n(A:KOHLSMAN SETTING MB:2, bars) 16000 * (>0:A32NX_ISIS_BARO_SAVED, number)\n2 16211 (>K:2:KOHLSMAN_SET)\n} els{\n 0 (>L:A32NX_ISIS_BARO_MODE, enum)\n2 (0:A32NX_ISIS_BARO_SAVED, number) (>K:2:KOHLSMAN_SET) } }"
	},
	"Fly By Wire.A320.ISIS.Input.ISIS_KNOB_ANTICLOCKWISE": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == \nif{ 0 (>H:A32NX_ISIS_KNOB_ANTI_CLOCKWISE) } \nels{ 2 (>K:KOHLSMAN_DEC) }"
	},
	"Fly By Wire.A320.ISIS.Input.ISIS_KNOB_CLOCKWISE": {
		"method": "calcCode",
		"code": "(L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == \nif{ 0 (>H:A32NX_ISIS_KNOB_CLOCKWISE) } \nels{ 2 (>K:KOHLSMAN_INC) }"
	},
	"Fly By Wire.A320.EFIS.A32NX_EFIS_FD2_PUSH": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.747-8i.Autopilot.Autopilot Heading Select Inc": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)"
	},
	"Asobo.747-8i.Autopilot.Autopilot Heading Select Dec": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 Autopilot Heading Select Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_HEADING_SEL)"
	},
	"Asobo.747-8i.Autopilot.Autopilot Heading Hold Press": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD_ON) (>H:B747_8_FMC_1_AP_HEADING_HOLD)"
	},
	"Fly By Wire.A320-Dev.Warning System.Input.GPWS Terr Off Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_TERR_OFF,bool) ! (>L:A32NX_GPWS_TERR_OFF)"
	},
	"Fly By Wire.A320-Dev.Warning System.GPWS Sys Off Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_SYS_OFF,bool) ! (>L:A32NX_GPWS_SYS_OFF)"
	},
	"Fly By Wire.A320-Dev.Warning System.GPWS GS Mode Off Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_GS_OFF,bool) ! (>L:A32NX_GPWS_GS_OFF)"
	},
	"Fly By Wire.A320-Dev.Warning System.GPWS Flap Mode Off Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_FLAP_OFF,bool) ! (>L:A32NX_GPWS_FLAP_OFF)"
	},
	"Fly By Wire.A320-Dev.Warning System.GPWS Ldg Flap3 Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_FLAPS3,bool) ! (>L:A32NX_GPWS_FLAPS3)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_1_BTN": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_1_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_2_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_2_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_1": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_1)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_2": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_2)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_3_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_3_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_3_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_3)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_4_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_4_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_4_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_4)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_5_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_5_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_5_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_5)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_6_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_6_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_6_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_6)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_7_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_7_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_7_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_7)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_8_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_8_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_8": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_8)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_9_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_9_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_9_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_9)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_0_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_0_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_0_BTN": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_0_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_ENTER_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_ENTER_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_ENTER_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_ENTER)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_TEST_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_TEST_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_KEY_TEST_BTN_ANIM - DUPLICATE": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_KEY_TEST_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_TEST_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_KEY_TEST)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_ACT_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_ACT_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_ACT_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_ACT)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_STBY_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_STBY_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_STBY_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_STBY)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_RWY_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_RWY_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_RWY_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_RWY)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_GS_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_GS_BTN_ANIM)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_GS_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_GS)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.Input.ASCRJ_HUD_BRT_BTN_ANIM": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_BRT_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_BRT_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_HUD_BRT)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_DIM_BTN": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_HUD_DIM_BTN_ANIM)"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_DIM_BRT_BTN": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_DIM_BRT)\t"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_RWY_LED": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent over 100) (L:ASCRJ_HUD_RWY_LED, Bool) * 0 >  (A:CIRCUIT GENERAL PANEL ON, Bool) and"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_GS_LED": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent over 100) (L:ASCRJ_HUD_GS_LED_, Bool) * 0 > (A:CIRCUIT GENERAL PANEL ON, Bool) and "
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_CLR_LED": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent over 100) (L:ASCRJ_HUD_CLR_LED, Bool) * 0 > (A:CIRCUIT GENERAL PANEL, Bool) and"
	},
	"Aerosoft.CRJ 550-700-1000.Flight Instrumentation.ASCRJ_HUD_KEY_TEST_LED": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent over 100) (L:ASCRJ_HUD_KEY_TEST_LED, Bool) * 0 >  (A:CIRCUIT GENERAL PANEL ON, Bool) and"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Axis Left Brake Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_LEFT_BRAKE_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Axis Right Brake Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_RIGHT_BRAKE_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Axis Spoiler Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_SPOILER_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Rudder Trim Set": {
		"method": "calcCode",
		"code": "@ 5.115 / 100 - -100 max 100 min (>K:RUDDER_TRIM_SET)"
	},
	"Microsoft.Generic.Controls.Rudder Trim Set EX1": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:RUDDER_TRIM_SET_EX1)"
	},
	"Microsoft.Generic.Controls.Axis Rudder Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_RUDDER_SET)"
	},
	"Microsoft.Generic.Controls.Flaps Continuous Set": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:FLAPS_CONTINUOUS_SET)"
	},
	"Microsoft.Generic.Controls.Axis Elev Trim Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_ELEV_TRIM_SET)"
	},
	"Microsoft.Generic.Controls.Axis Elevator Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_ELEVATOR_SET)"
	},
	"Microsoft.Generic.Controls.Aileron Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AILERON_SET)"
	},
	"Microsoft.Generic.Controls.Aileron Trim Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AILERON_TRIM_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Aileron Trim Set EX1": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).Axis Ailerons Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_AILERONS_SET)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TRANSPONDER MODE ON": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_TRANSPONDER_MODE)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TRANSPONDER MODE STBY": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_TRANSPONDER_MODE)"
	},
	"PMDG.DC-6.Lights.PMDGDC6_Entrance_Lights": {
		"method": "calcCode",
		"code": "0 (L:dc6_036_obj, number) ! (>L:dc6_036_obj, number) 1"
	},
	"Microsoft.Generic.Controls.Elevator Trim Fast Dec": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT,Percent) -- 163.83 * -16383 max (>K:ELEVATOR_TRIM_SET)"
	},
	"Microsoft.Generic.Controls.Elevator Trim Fast Inc": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT,Percent) ++ 163.83 * 16383 min (>K:ELEVATOR_TRIM_SET)"
	},
	"..Avionics.Garmin_Alt_Alerter_1000s_INC": {
		"method": "calcCode",
		"code": "(L:GENERIC_ALERTER_THOUSANDTHS, number) 99 <\n if{\n (L:GENERIC_ALERTER_THOUSANDTHS, number) 11.111 + (>L:GENERIC_ALERTER_THOUSANDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)\n }\n els{\n 0 (>L:GENERIC_ALERTER_THOUSANDTHS, number) (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)\n (L:GENERIC_ALERTER_TEN_THOUSANDTHS, number) 11.111 + (>L:GENERIC_ALERTER_TEN_THOUSANDTHS, number)\n10 div (>L:Alerter_GENERIC_ALERTER_TEN_THOUSANDTHS, number)\n }\n"
	},
	"..Avionics.Garmin_Alt_Alerter_1000s_DEC": {
		"method": "calcCode",
		"code": "(L:GENERIC_ALERTER_THOUSANDTHS) 11 >\n if{\n (L:GENERIC_ALERTER_THOUSANDTHS, number) 11.111 - (>L:GENERIC_ALERTER_THOUSANDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)\n }\n els{\n (L:GENERIC_ALERTER_TEN_THOUSANDTHS) 11 >\n if{\n (L:GENERIC_ALERTER_TEN_THOUSANDTHS, number) 11.111 - (>L:GENERIC_ALERTER_TEN_THOUSANDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_TEN_THOUSANDTHS, number)\n 99.999 (>L:GENERIC_ALERTER_THOUSANDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)\n } }\n"
	},
	"..Avionics.Garmin_Alt_Alerter_100s_INC": {
		"method": "calcCode",
		"code": "(L:GENERIC_ALERTER_HUNDREDTHS) 99 <\n if{\n (L:GENERIC_ALERTER_HUNDREDTHS, number) 11.111 + (>L:GENERIC_ALERTER_HUNDREDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_HUNDREDTHS, number)\n }\n"
	},
	"..Avionics.Garmin_Alt_Alerter_100s_DEC": {
		"method": "calcCode",
		"code": "(L:GENERIC_ALERTER_HUNDREDTHS) 11 >\n if{\n (L:GENERIC_ALERTER_HUNDREDTHS, number) 11.111 - (>L:GENERIC_ALERTER_HUNDREDTHS, number)\n 10 div (>L:Alerter_GENERIC_ALERTER_HUNDREDTHS, number)\n }\n"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_Alt": {
		"method": "calcCode",
		"code": "1 (>L:ALT_BTN) (L:ALT_MODE, bool) ! (>L:ALT_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_AP": {
		"method": "calcCode",
		"code": "(L:AP_MODE, Bool) ! (>L:AP_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_APR": {
		"method": "calcCode",
		"code": "1 (>L:APR_BTN) (L:APR_MODE, bool) ! (>L:APR_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_BC": {
		"method": "calcCode",
		"code": "1 (>L:BC_BTN) (L:BC_MODE, bool) ! (>L:BC_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_FD": {
		"method": "calcCode",
		"code": "1 (>L:FD_BTN) (L:FD_MODE, bool) ! (>L:FD_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_HDG": {
		"method": "calcCode",
		"code": "1 (>L:HDG_BTN) (L:HDG_MODE, bool) ! (>L:HDG_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_IAS": {
		"method": "calcCode",
		"code": "1 (>L:IAS_BTN) (L:IAS_MODE, bool) ! (>L:IAS_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_NAV": {
		"method": "calcCode",
		"code": "1 (>L:NAV_BTN) (L:NAV_MODE, bool) ! (>L:NAV_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_VS": {
		"method": "calcCode",
		"code": "1 (>L:VS_BTN) (L:VS_MODE, bool) ! (>L:VS_MODE)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_WHL_DN": {
		"method": "calcCode",
		"code": "1 (>L:AP_WHEEL_DEC)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_WHL_UP": {
		"method": "calcCode",
		"code": "1 (>L:AP_WHEEL_INC)"
	},
	"Flysimware.Cessna 414A.Autopilot.Garmin_605_AP_YD": {
		"method": "calcCode",
		"code": "(L:YD_MODE, bool) ! (>L:YD_MODE)"
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A_TAXI_LIGHTS_ON": {
		"method": "calcCode",
		"code": "1 (>K:TAXI_LIGHTS_SET)\n(A:GEAR HANDLE POSITION,Bool) (L:LIGHT_TAXI, bool) ! and if{ 1 } els{ 0 } (>L:LIGHT_TAXI)"
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A_TAXI_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "0 (>K:TAXI_LIGHTS_SET)\n(A:GEAR HANDLE POSITION,Bool) (L:LIGHT_TAXI, bool) ! and if{ 1 } els{ 0 } (>L:LIGHT_TAXI)"
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A_LANDING_LIGHTS_ON": {
		"method": "calcCode",
		"code": "2 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) \n1 (>K:LANDING_LIGHTS_SET) \n100 (>L:LANDING_LIGHT_MOTOR,Number) \n(>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) "
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A_LANDING_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "1 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) \n0 (>K:LANDING_LIGHTS_SET)  \n(>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) "
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A_LANDING_LIGHTS_RETRACT": {
		"method": "calcCode",
		"code": "0 (>K:LANDING_LIGHTS_SET) \n0 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) \n0 (>L:LANDING_LIGHT_MOTOR)\n(>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) "
	},
	"Flysimware.Cessna 414A.Lights.C414A_LANDING_LIGHTS_EXTEND": {
		"method": "calcCode",
		"code": "0 (>K:LANDING_LIGHTS_SET) 1 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 100 (>L:LANDING_LIGHT_MOTOR)"
	},
	"Flysimware.Cessna 414A.Avionics.Garmin_Alt_Alerter_Altitude_Arm": {
		"method": "calcCode",
		"code": "(L:ALT_ARM_SWITCH) ! (>L:ALT_ARM_SWITCH)"
	},
	"PMDG.DC-6.Lights.PMDGDC6_Main J.box Flood light": {
		"method": "calcCode",
		"code": "0 (L:dc6_037_obj, number) ! (>L:dc6_037_obj, number) 1"
	},
	"PMDG.DC-6.Lights.PMDGDC6_Emer LTS No smoking": {
		"method": "calcCode",
		"code": "0 (L:dc6_038_obj, number) ! (>L:dc6_038_obj, number) 1"
	},
	"PMDG.DC-6.Safety.PMDGDC6_Seat Belt": {
		"method": "calcCode",
		"code": "0 (L:dc6_039_obj, number) ! (>L:dc6_039_obj, number) 1"
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Plane batt_Ground": {
		"method": "calcCode",
		"code": "7801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Lights.PMDGDC6_Beacon": {
		"method": "calcCode",
		"code": "(L:dc6_041_obj, number) ! (>L:dc6_041_obj, number)"
	},
	"PMDG.DC-6.Lights.PMDGDC6_Position Lights_Steady": {
		"method": "calcCode",
		"code": "(L:dc6_040_obj, number) ! (>L:dc6_040_obj, number) "
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Generator#1": {
		"method": "calcCode",
		"code": "8301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Generator#2": {
		"method": "calcCode",
		"code": "8401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Generator#3": {
		"method": "calcCode",
		"code": "8501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Generator#4": {
		"method": "calcCode",
		"code": "8601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Electrical.PMDGDC6_Inverter#1": {
		"method": "calcCode",
		"code": "6301 (>K:ROTOR_BRAKE)"
	},
	"Asobo.DA40NG.Electrical.Electric Master Switch Off": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_OFF) \n1 (>K:ALTERNATOR_OFF) \n(A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.DA40NG.Electrical.Electric Master Switch On": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_ON) \n1 (>K:ALTERNATOR_ON) \n(A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.DA40NG.Electrical.Electric Master Switch Start": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_ON) \n1 (>K:ALTERNATOR_ON) \n1 (>K:SET_STARTER1_HELD)"
	},
	"Asobo.DA40NG.Electrical.Electrical Essential Bus On": {
		"method": "calcCode",
		"code": "1 s0 \nl0 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) == if{ \n\t2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \nl0 if{ \n\t1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n		1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n\t2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n		2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n} els{ \n\t1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n	   1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n\t2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n	   2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } \nl0 (>L:ELECTRICAL_EssentialBus_2)"
	},
	"Asobo.DA40NG.Electrical.Electrical Essential Bus Off": {
		"method": "calcCode",
		"code": "0 s0\nl0 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) == if{ \n\t2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \nl0 if{ \n\t1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n		1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n\t2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n		2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n} els{ \n\t1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ \n	   1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n\t2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ \n	   2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } \nl0 (>L:ELECTRICAL_EssentialBus_2) "
	},
	"Asobo.DA40NG.Electrical.Electrical Avionics Master On": {
		"method": "calcCode",
		"code": "1 s0 \n(A:CIRCUIT SWITCH ON:22, Bool) != if{ 22 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:22, Bool) 1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:4, Bool) != if{ \n4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \ns0 (A:CIRCUIT SWITCH ON:23, Bool) != if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:23, Bool) 2 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:5, Bool) != if{ \n5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.DA40NG.Electrical.Electrical Avionics Master Off": {
		"method": "calcCode",
		"code": "0 s0 \n(A:CIRCUIT SWITCH ON:22, Bool) != if{ 22 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:22, Bool) 1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:4, Bool) != if{ \n4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \ns0 (A:CIRCUIT SWITCH ON:23, Bool) != if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:23, Bool) 2 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:5, Bool) != if{ \n5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.DA40NG.Fuel.Fuel Pump Switch On": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \nl0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.DA40NG.Fuel.Fuel Pump Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \nl0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.DA40NG.Engines.Engine Master Switch On": {
		"method": "calcCode",
		"code": "1 s0 (A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) != if{ (>K:ENGINE_MASTER_1_TOGGLE) }"
	},
	"Asobo.DA40NG.Engines.Engine Master Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) != if{ (>K:ENGINE_MASTER_1_TOGGLE) }"
	},
	"Asobo.DA40NG.Fuel.Fuel Tank Selector Left": {
		"method": "calcCode",
		"code": "2 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"Asobo.DA40NG.Fuel.Fuel Tank Selector Right": {
		"method": "calcCode",
		"code": "3 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"Asobo.DA40NG.Fuel.Fuel Tank Selector Off": {
		"method": "calcCode",
		"code": "0 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"PMDG.DC-6.Fuel.PMDGDC-_Main_Fuel_Boost#1 ": {
		"method": "calcCode",
		"code": "(L:dc6_069, number) 0 (>L:dc6_069_obj, number) to set low\n(L:dc6_069, number) 1 (>L:dc6_069_obj, number) to set off\n(L:dc6_069, number) 2 (>L:dc6_069_obj, number) to set high"
	},
	"Asobo.Cessna 172.Lights.Input (Potentiometer).C172 DIMMING PEDESTAL Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10 / near  0 max 100 min s0 (>L:LIGHTING_PEDESTRAL_1) \nl0 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET) \nl2 ! 1 l0 (>K:2:PEDESTRAL_LIGHTS_SET) "
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump Low #1": {
		"method": "calcCode",
		"code": "6901 (>K:ROTOR_BRAKE) \n6902 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump Low #2": {
		"method": "calcCode",
		"code": "7001 (>K:ROTOR_BRAKE) \n7002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump Low #3": {
		"method": "calcCode",
		"code": "7101 (>K:ROTOR_BRAKE) \n7102 (>K:ROTOR_BRAKE)\n"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump Low #4": {
		"method": "calcCode",
		"code": "7201 (>K:ROTOR_BRAKE) \n7202 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump High #1": {
		"method": "calcCode",
		"code": "6907 (>K:ROTOR_BRAKE) \n6908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump High #2": {
		"method": "calcCode",
		"code": "7007 (>K:ROTOR_BRAKE) \n7008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump High #3": {
		"method": "calcCode",
		"code": "7107 (>K:ROTOR_BRAKE) \n7108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.PMDGDC6_Main Fuel Booster Pump High #4": {
		"method": "calcCode",
		"code": "7207 (>K:ROTOR_BRAKE) \n7208 (>K:ROTOR_BRAKE)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_CDI_Toggle": {
		"method": "calcCode",
		"code": "(>H:GTN750_CDI)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Direct_to": {
		"method": "calcCode",
		"code": "(>H:GTN750_DirectToPush)"
	},
	"Flysimware.Cessna 414A.Navigation.Input.PMS_GTN750U1_Home_Short_Long_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) 1.00 + (>L:myTimer)"
	},
	"Flysimware.Cessna 414A.Navigation.Input.PMS_GTN750U1_Home_Short_Long_Rls": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTimer) < if{ (>H:GTN750_HomePush) } els{ (>H:GTN750_HomePushLong) }"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Knob_Push": {
		"method": "calcCode",
		"code": "(>H:GTN750_KnobPush)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Large_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:GTN750_KnobLargeInc)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Large_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:GTN750_KnobLargeDec)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Small_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:GTN750_KnobSmallInc)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Small_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:GTN750_KnobSmallDec)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Menu": {
		"method": "calcCode",
		"code": "(>H:GTN750_GoToPage-HOME-MENU_HOME)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_FlightPlan": {
		"method": "calcCode",
		"code": "(>H:GTN750_GoToPage-HOME-PageFlighPlan)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Procedures": {
		"method": "calcCode",
		"code": "(>H:GTN750_GoToPage-HOME-PageProcs)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Transfer_Com": {
		"method": "calcCode",
		"code": "(>H:GTN750_GTN_COM_Switch)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U1_Transfer_Nav": {
		"method": "calcCode",
		"code": "(>H:GTN750_GTN_NAV_Switch)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_CDI_Toggle": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_CDI)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Direct_to": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_DirectToPush)"
	},
	"Flysimware.Cessna 414A.Navigation.Input.PMS_GTN750U2_Home_Short_Long_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) 1.00 + (>L:myTimer)"
	},
	"Flysimware.Cessna 414A.Navigation.Input.PMS_GTN750U2_Home_Short_Long_Rls": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTimer) < if{ (>H:GTN750_2_HomePush) } els{ (>H:GTN750_2_HomePushLong) }"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Knob_Push": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_KnobPush)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Large_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_KnobLargeInc)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Large_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_KnobLargeDec)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Small_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_KnobSmallInc)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Small_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_KnobSmallDec)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Menu": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_GoToPage-HOME-MENU_HOME)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_FlightPlan": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_GoToPage-HOME-PageFlighPlan)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Procedures": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_GoToPage-HOME-PageProcs)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Transfer_Com": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_GTN_COM_Switch)"
	},
	"Flysimware.Cessna 414A.Navigation.PMS_GTN750U2_Transfer_Nav": {
		"method": "calcCode",
		"code": "(>H:GTN750_2_GTN_NAV_Switch)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Direct_to_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_DTOKEY)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Direct_to_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U1_DTOKEY)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Home_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_HomeKEY)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Home_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U1_HomeKEY)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Knob_Push_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Knob_Push_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U1_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Large_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_RKnobOuterInc)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Large_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_RKnobOuterDec)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Small_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_RKnobInnerInc)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Small_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_RKnobInnerDec)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Direct_to_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_DTOKEY)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Direct_to_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U2_DTOKEY)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Home_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_HomeKEY)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Home_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U2_HomeKEY)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Knob_Push_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Knob_Push_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U2_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Large_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_RKnobOuterInc)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Large_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_RKnobOuterDec)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Small_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_RKnobInnerInc)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Small_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_RKnobInnerDec)"
	},
	"Fly By Wire.A320-Dev.Autopilot.A32NX_FCU_ALT_SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_ALT_SELECTED)"
	},
	"PMDG.DC-6.Electrical.PMDGDC6 BATT & GND POWER / OFF": {
		"method": "calcCode",
		"code": "8201 (>K:ROTOR_BRAKE)"
	},
	"Asobo.Baron G58.Fuel.G58 Fuel Boost Pump L Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n\t\tl0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Asobo.Baron G58.Fuel.G58 Fuel Boost Pump L Switch Lo": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n\t\tl0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Asobo.Baron G58.Fuel.G58 Fuel Boost Pump L Switch Hi": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n\t\tl0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Asobo.Cessna 172.Engine.Input.C172 Magneto Switch Off": {
		"method": "calcCode",
		"code": "0 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.Cessna 172.Engine.Input.C172 Magneto Switch Right": {
		"method": "calcCode",
		"code": "1 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.Cessna 172.Engine.Input.C172 Magneto Switch Left": {
		"method": "calcCode",
		"code": "2 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.Cessna 172.Engine.Input.C172 Magneto Switch Both": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }"
	},
	"Asobo.Cessna 172.Engine.Input.C172 Magneto Switch Start": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) }"
	},
	"Microsoft.Generic.Interaction.COCKPIT_CAMERA_ZOOM_DEC": {
		"method": "calcCode",
		"code": "(A:COCKPIT CAMERA ZOOM,Percent) 5 - (>A:COCKPIT CAMERA ZOOM,Percent)"
	},
	"Microsoft.Generic.Interaction.COCKPIT_CAMERA_ZOOM_INC": {
		"method": "calcCode",
		"code": "(A:COCKPIT CAMERA ZOOM,Percent) 5 + (>A:COCKPIT CAMERA ZOOM,Percent)"
	},
	"Microsoft.Generic.Interaction.EXTERNAL_CAMERA_ZOOM_DEC": {
		"method": "calcCode",
		"code": "(A:CHASE CAMERA ZOOM,Percent) 5 - (>A:CHASE CAMERA ZOOM,Percent)"
	},
	"Microsoft.Generic.Interaction.EXTERNAL_CAMERA_ZOOM_INC": {
		"method": "calcCode",
		"code": "(A:CHASE CAMERA ZOOM,Percent) 5 + (>A:CHASE CAMERA ZOOM,Percent)"
	},
	"Fly By Wire.A320-Dev.Electrical.Overhead Elec Bus Tie Auto Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)"
	},
	"Asobo.TBM 930.Warning System.MASTER_WARNING_RED_LED": {
		"method": "calcCode",
		"code": "(L:Generic_Master_Warning_Active)"
	},
	"Asobo.TBM 930.Warning System.MASTER_CAUTION_YELLOW_LED": {
		"method": "calcCode",
		"code": "(L:Generic_Master_Caution_Active)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Overhead Cond Pack 1 PB is On": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Overhead Cond Pack 2 PB is On": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool)"
	},
	"Microsoft.Generic.Interaction.Input.COCKPIT-EXTERNAL-VIEW-SWAP-SWITCH": {
		"method": "calcCode",
		"code": "50 (>A:COCKPIT CAMERA ZOOM,Percent) 50 (>A:CHASE CAMERA ZOOM,Percent) (A:CAMERA STATE,Enum) 2 == if{ 3 (>A:CAMERA STATE,Enum) } els{ (A:CAMERA STATE,Enum) 3 == if{ 2 (>A:CAMERA STATE,Enum) }"
	},
	"Working Title.CJ4.Avionics.Input.WT_CJ4_LNAV_MODE_PRESSED": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_Push_NAV)"
	},
	"Microsoft.Generic.Interaction.Input.COCKPIT-EXTERNAL-VIEW-SWAP-SWITCH - DUPLICATE (OLD)": {
		"method": "calcCode",
		"code": "50 (>A:COCKPIT CAMERA ZOOM,Percent)\n50 (>A:CHASE CAMERA ZOOM,Percent)\n(A:CAMERA STATE,Enum) 2 == if{ 3 (>A:CAMERA STATE,Enum) } els{ (A:CAMERA STATE,Enum) 3 == if{ 2 (>A:CAMERA STATE,Enum) }"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_L_ON": {
		"method": "calcCode",
		"code": "1 (A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_L_OFF": {
		"method": "calcCode",
		"code": "0 (A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_R_ON": {
		"method": "calcCode",
		"code": "1 (A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_R_OFF": {
		"method": "calcCode",
		"code": "0 (A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_L_LED": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool)"
	},
	"Asobo.747-8i.Fuel.B747_8_FUEL_Pump_Ctr_Tank_R_LED": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:2, Bool)"
	},
	"Asobo.747-8i.Electrical.Overhead Master Battery Toggle": {
		"method": "calcCode",
		"code": "6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Asobo.TBM 930.Warning System.Master Caution Yellow LED": {
		"method": "calcCode",
		"code": "(L:Generic_Master_Caution_Active)"
	},
	"Microsoft.Generic.Environment.SET SIMULATOR RATE": {
		"method": "calcCode",
		"code": "1 sp0\n :0 (E:SIMULATION RATE, number) l0 !=\n if{\n (E:SIMULATION RATE, number) l0 <\n if{\n  (>K:SIM_RATE_INCR) g0\n } \n els{\n  (>K:SIM_RATE_DECR) g0\n  }\n }"
	},
	"Working Title.G1000 NXi.Radio.Mid COM2 Button Push": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE:2, Bool) if{ 0 } els{ 1 } (>K:COM2_RECEIVE_SELECT) \n(>H:AS1000_MID_COM_2_Push)  \n"
	},
	"Working Title.G1000 NXi.Radio.Mid COM1 Button Push": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE:1, Bool) if{ 0 } els{ 1 } (>K:COM1_RECEIVE_SELECT) \n(>H:AS1000_MID_COM_1_Push) "
	},
	"Working Title.G1000 NXi.Radio.Mid COM3 Button Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_3_Push)"
	},
	"Working Title.G1000 NXi.Radio.Mid COM1 Mic Button Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_1_Push) \n0 (>K:PILOT_TRANSMITTER_SET) \n0 (>K:COPILOT_TRANSMITTER_SET)"
	},
	"Working Title.G1000 NXi.Radio.Mid COM2 Mic Button Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_2_Push) \n1 (>K:PILOT_TRANSMITTER_SET) \n1 (>K:COPILOT_TRANSMITTER_SET) "
	},
	"Working Title.G1000 NXi.Radio.Mid COM3 Mic Button Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Mic_3_Push)"
	},
	"Asobo.747-8i.Autopilot.Input.AP_APP_ARMED": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_APP_ARMED)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP VNAV Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_VNAV)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP HDG HOLD Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_HEADING_HOLD)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP LNAV Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_LNAV)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP FLCH Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_FLCH)"
	},
	"Asobo.747-8i.Electrical.Input.APU GENERATOR": {
		"method": "calcCode",
		"code": "1 (>K:APU_GENERATOR_SWITCH_TOGGLE)"
	},
	"Asobo.747-8i.Electrical.Input.APU START": {
		"method": "calcCode",
		"code": "(L:XMLVAR_APU_StarterKnob_Pos)  !\n2 (>L:XMLVAR_APU_StarterKnob_Pos)\n(>K:APU_STARTER)\n"
	},
	"Asobo.747-8i.Electrical.Input.APU OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_APU_StarterKnob_Pos) !\n(>K:APU_OFF_SWITCH)"
	},
	"Asobo.747-8i.Electrical.Input.BATTERY ON": {
		"method": "calcCode",
		"code": " 1 sp0 (A:ELECTRICAL MASTER BATTERY:1, Bool) l0 != if{ \n   1 (>K:TOGGLE_MASTER_BATTERY) \n } 1 sp0 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:7, Bool) l0 != if{ \n   6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n } "
	},
	"Asobo.747-8i.Electrical.Input.BATTERY OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) l0 != if{ \n\n 1 (>K:TOGGLE_MASTER_BATTERY) \n } 0 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:7, Bool) l0 != if{ \n   6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.747-8i.Electrical.Input.EXTERNAL POWER ON": {
		"method": "calcCode",
		"code": " (>K:TOGGLE_EXTERNAL_POWER)\n1  (>L:ELECTRICAL_ExternalPower_1)\n1  (>L:ELECTRICAL_ExternalPower_2)\n"
	},
	"Asobo.747-8i.Electrical.Input.EXTERNAL POWER OFF": {
		"method": "calcCode",
		"code": "0  (>L:ELECTRICAL_ExternalPower_1)\n0  (>L:ELECTRICAL_ExternalPower_2)\n0 (>K:TOGGLE_EXTERNAL_POWER)"
	},
	"Asobo.747-8i.ADIRS.Input.IRS 1 NAV": {
		"method": "calcCode",
		"code": "2 (>L:747_IRS_KNOB_1)"
	},
	"Asobo.747-8i.ADIRS.Input.IRS 2 NAV": {
		"method": "calcCode",
		"code": "2 (>L:747_IRS_KNOB_2)"
	},
	"Asobo.747-8i.ADIRS.Input.IRS 3 NAV": {
		"method": "calcCode",
		"code": "2 (>L:747_IRS_KNOB_3)"
	},
	"Asobo.747-8i.Fuel.Input.LEFT PUMPS ON": {
		"method": "calcCode",
		"code": "\n7 (>K:FUELSYSTEM_PUMP_TOGGLE)\n8 (>K:FUELSYSTEM_PUMP_TOGGLE)\n4 (>K:FUELSYSTEM_PUMP_TOGGLE)\n6 (>K:FUELSYSTEM_PUMP_TOGGLE)\n"
	},
	"Asobo.747-8i.Fuel.Input.LEFT PUMPS OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:3, Bool) != if{ 3 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:5, Bool) != if{ 5 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:7, Bool) != if{ 7 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:8, Bool) != if{ 8 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:6, Bool) != if{ 6 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:4, Bool) != if{ 4 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.RIGHT PUMPS ON": {
		"method": "calcCode",
		"code": "9 (>K:FUELSYSTEM_PUMP_TOGGLE)\n11 (>K:FUELSYSTEM_PUMP_TOGGLE)\n12 (>K:FUELSYSTEM_PUMP_TOGGLE)\n13 (>K:FUELSYSTEM_PUMP_TOGGLE)\n10 (>K:FUELSYSTEM_PUMP_TOGGLE)\n14 (>K:FUELSYSTEM_PUMP_TOGGLE)\n"
	},
	"Asobo.747-8i.Fuel.Input.RIGHT PUMPS OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:9, Bool) != if{ 9 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:11, Bool) != if{ 11 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:12, Bool) != if{ 12 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:13, Bool) != if{ 13 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\nA:FUELSYSTEM PUMP SWITCH:10, Bool) != if{ 10 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n\n(A:FUELSYSTEM PUMP SWITCH:14, Bool) != if{ 14 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n"
	},
	"Asobo.747-8i.Fuel.Input.CENTRE PUMPS ON": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_PUMP_TOGGLE)\n2 (>K:FUELSYSTEM_PUMP_TOGGLE)\n15 (>K:FUELSYSTEM_PUMP_TOGGLE)\n16 (>K:FUELSYSTEM_PUMP_TOGGLE)\n"
	},
	"Asobo.747-8i.Fuel.Input.CENTRE PUMPS OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n(A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n(A:FUELSYSTEM PUMP SWITCH:15, Bool) != if{ 15 (>K:FUELSYSTEM_PUMP_TOGGLE) }\n(A:FUELSYSTEM PUMP SWITCH:16, Bool) != if{ 16 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.747-8i.Anti-Ice.Input.WINDSHIELD DEICE": {
		"method": "calcCode",
		"code": "(>K:WINDSHIELD_DEICE_TOGGLE)"
	},
	"Asobo.747-8i.Engine.Input.ENG 1 START": {
		"method": "calcCode",
		"code": "1 (>K:1:STARTER1_SET)\n1 (>K:1:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Asobo.747-8i.Engine.Input.ENG 3 START": {
		"method": "calcCode",
		"code": "1 (>K:1:STARTER3_SET)\n1 (>K:1:TURBINE_IGNITION_SWITCH_SET3)\n"
	},
	"Asobo.747-8i.Engine.Input.ENG 4 START": {
		"method": "calcCode",
		"code": "1 (>K:1:STARTER4_SET)\n1 (>K:1:TURBINE_IGNITION_SWITCH_SET4)"
	},
	"Asobo.747-8i.Engine.Input.ENG 2 START": {
		"method": "calcCode",
		"code": "1 (>K:1:STARTER2_SET)\n1 (>K:1:TURBINE_IGNITION_SWITCH_SET2)"
	},
	"Asobo.747-8i.Engine.Input.ENG 1 FUEL CONTROL ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:5, Bool) != if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 1 FUEL CONTROL OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:5, Bool) 1 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 3 FUEL CONTROL ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:7, Bool) != if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 3 FUEL CONTROL OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:7, Bool) 1 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 2 FUEL CONTROL ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:6, Bool) != if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 2 FUEL CONTROL OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:6, Bool) 1 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 4 FUEL CONTROL OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Engine.Input.ENG 4 FUEL CONTROL ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:8, Bool) != if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Autopilot.Output.ALT DISPLAY": {
		"method": "calcCode",
		"code": "(L:HUD_AP_SELECTED_ALTITUDE)"
	},
	"Asobo.747-8i.Autopilot.Output.SPEED": {
		"method": "calcCode",
		"code": "(L:AP_SPD_ACTIVE)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_FLCH_ACTIVE": {
		"method": "calcCode",
		"code": "(L:AP_FLCH_ACTIVE)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_VNAV_ARMED": {
		"method": "calcCode",
		"code": "(L:AP_VNAV_ARMED)"
	},
	"Asobo.747-8i.Autopilot.Output.APP": {
		"method": "calcCode",
		"code": "(L:AP_APP_ARMED)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_ALT_HOLD_ACTIVE": {
		"method": "calcCode",
		"code": "(L:AP_ALT_HOLD_ACTIVE)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_VS_ACTIVE": {
		"method": "calcCode",
		"code": "(L:AP_VS_ACTIVE)"
	},
	"Asobo.747-8i.Autopilot.Output.MASTER CAUTION": {
		"method": "calcCode",
		"code": "(L:Generic_Master_Caution_Active)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_LNAV_ARMED": {
		"method": "calcCode",
		"code": "(L:AP_LNAV_ARMED)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_PFD_KNOB_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:88,percent) 5 - 0 max 88 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_PFD_KNOB_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:88,percent) 5 + 100 min 88 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_ND_KNOB_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:89,percent) 5 - 0 max 89 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_L_ND_KNOB_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:89,percent) 5 + 100 min 89 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_PFD_KNOB_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:90,percent) 5 - 0 max 90 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_PFD_KNOB_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:90,percent) 5 + 100 min 90 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_ND_KNOB_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:91,percent) 5 - 0 max 91 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_R_ND_KNOB_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:91,percent) 5 + 100 min 91 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.Input.CABIN_NO_SMOKING_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 + 3 % (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position)"
	},
	"Fly By Wire.A320-Dev.Passengers/Crew.Input.CABIN_EMERGENCY_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position) ++ 3 % (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A320.Air Condition / Pressurization.Input.PUSH_OVHD_OXYGEN_CREW_TOGGLE": {
		"method": "calcCode",
		"code": "(L:PUSH_OVHD_OXYGEN_CREW, Bool) ! (>L:PUSH_OVHD_OXYGEN_CREW)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX_PEDESTAL_KNOB_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:85,percent) 5 - 0 max 85 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX_PEDESTAL_KNOB_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:85,percent) 5 + 100 min 85 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead ELAC1 Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead ELAC2 Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool)"
	},
	"Asobo.747-8i.MCDU.Output.Execute LED ": {
		"method": "calcCode",
		"code": "(L:FMC_EXEC_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX PEDEST Knob Flood CPT DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:83,percent) 5 - 0 max 83 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX PEDEST Knob Flood CPT INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:83,percent) 5 + 100 min 83 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_PEDEST_KNOB_FLOOD_FO_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:76,percent) 5 - 0 max 76 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_PEDEST_KNOB_FLOOD_FO_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:76,percent) 5 + 100 min 76 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_PEDEST_KNOB_INTEG_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:85,percent) 5 - 0 max 85 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX_PEDEST_KNOB_INTEG_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:85,percent) 5 + 100 min 85 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.A32NX_XPNDR_MODE_STBY": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_TRANSPONDER_MODE, enum)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.A32NX_XPNDR_MODE_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_TRANSPONDER_MODE, enum)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.A32NX_XPNDR_MODE_ON": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_TRANSPONDER_MODE, enum)"
	},
	"Asobo.C208 Caravan.Fuel.Input.Fuel Condition Lever High Idle": {
		"method": "calcCode",
		"code": "2 (>L:Condition_Lever_CutOff_1) \n0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) }\n2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) "
	},
	"Asobo.C208 Caravan.Fuel.Input.Fuel Condition Lever Low Idle": {
		"method": "calcCode",
		"code": "1 (>L:Condition_Lever_CutOff_1) \n0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) } \n1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)"
	},
	"Asobo.C208 Caravan.Fuel.Input.Fuel Condition Lever Cutoff": {
		"method": "calcCode",
		"code": "0 (>L:Condition_Lever_CutOff_1) \n0 (>K:SET_FUEL_VALVE_ENG1) \n0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) "
	},
	"Asobo.C208 Caravan.Fuel.Input (Potentiometer).Fuel Condition Lever Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min s0 33 < if{\n  2 (>L:Condition_Lever_CutOff_1) \n  0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) }\n  2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) quit }\nels{ l0 90 < if{ \n  1 (>L:Condition_Lever_CutOff_1) \n  0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) } \n  1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) quit }\nels{ \n  0 (>L:Condition_Lever_CutOff_1) \n  0 (>K:SET_FUEL_VALVE_ENG1) \n  0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) } }"
	},
	"Fly By Wire.A320-Dev.Avionics.Input (Potentiometer).Adjust FO MFD Brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 91 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Avionics.Input (Potentiometer).Adjust FO PFD Brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 90 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.Piper Arrow III.Autopilot.Input.AUTOPILOT_HSI_HDG_BUG_DEC": {
		"method": "calcCode",
		"code": "(L:HSI_heading_knob, enum) -- 0 max (>L:HSI_heading_knob, enum) (L:HSI_heading_knob, enum) 0 == if{ 100 (>L:HSI_heading_knob, enum) }"
	},
	"Just Flight.Piper Arrow III.Autopilot.Input.AUTOPILOT_HSI_HDG_BUG_INC": {
		"method": "calcCode",
		"code": "(L:HSI_heading_knob, enum) ++  100 min (>L:HSI_heading_knob, enum) (L:HSI_heading_knob, enum) 100 == if{ 0 (>L:HSI_heading_knob, enum) }"
	},
	"Leonardo.MadDog MD-82.Gear.Input.MD_82_VC_PARKING_BRAKE_SWITCH": {
		"method": "calcCode",
		"code": "536870912 1 + (>L:cockpit_event,number)"
	},
	"Leonardo.MadDog MD-82.Electrical.Input.MD_82_OVHD_APU_LEFT_BUS_SWITCH": {
		"method": "calcCode",
		"code": "536870912 34 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Electrical.Input.MD_82_OVHD_APU_RIGHT_BUS_SWITCH": {
		"method": "calcCode",
		"code": "536870912 35 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Electrical.Input.MD_82_OVHD_EXT_POWER_LEFT_BUS_SWITCH": {
		"method": "calcCode",
		"code": "536870912 36 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Electrical.Input.MD_82_OVHD_EXT_POWER_RIGHT_BUS_SWITCH": {
		"method": "calcCode",
		"code": "536870912 37 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Electrical.Output.MD_82_OVHD_EXT_POWER_AVAILABLE_LED": {
		"method": "calcCode",
		"code": "(L:ovhd_gnd_ext_avail_adv1)"
	},
	"Leonardo.MadDog MD-82.Electrical.Output.MD_82_OVHD_APU_POWER_AVAILABLE_LED": {
		"method": "calcCode",
		"code": "(L:ovhd_apu_bus_adv1)"
	},
	"Leonardo.MadDog MD-82.Electrical.Input.MD_82_OVHD_BATTERY_SWITCH": {
		"method": "calcCode",
		"code": "536870912 42 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Gear.Output.MD_82_VC_PARKING_BRAKE_STATE_LED": {
		"method": "calcCode",
		"code": " (L:vc_parking_brake_knob)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD_82_VC_FGCP_AP_ENGAGE_SWITCH": {
		"method": "calcCode",
		"code": "536870912 19 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD_82_FGCP_AP_AUTOTHROTTLE_SWITCH": {
		"method": "calcCode",
		"code": "536870912 7 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD_82_CM1_FD_SWITCH": {
		"method": "calcCode",
		"code": "536870912 0 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD_82_CM2_FD_SWITCH": {
		"method": "calcCode",
		"code": "536870912 1 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_AP_SPEED_SWITCH": {
		"method": "calcCode",
		"code": "536870912 3 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_AP_MACH_SEL_SWITCH": {
		"method": "calcCode",
		"code": "536870912 4 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_FMS_OVRD_SWITCH": {
		"method": "calcCode",
		"code": "536870912 2 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_EPR_LIM_SWITCH": {
		"method": "calcCode",
		"code": "536870912 5 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_NAV_SWITCH": {
		"method": "calcCode",
		"code": "536870912 8 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VOR_LOC_SWITCH": {
		"method": "calcCode",
		"code": "536870912 9 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ILS_SWITCH": {
		"method": "calcCode",
		"code": "536870912 10 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_AUTOLAND_SWITCH": {
		"method": "calcCode",
		"code": "536870912 11 + (>L:fgcp_event, number)"
	},
	"Microsoft.737-MAX.Autopilot.Input.Bank Angle Limit  - 10 Degrees": {
		"method": "calcCode",
		"code": "4 (>K:AP_MAX_BANK_SET)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot MACH Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_MACH)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot IAS Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_IAS)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot VS Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VS)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot GSL Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_GSL)"
	},
	"Just Flight.BAE146.FMS.Input.FMS System": {
		"method": "calcCode",
		"code": "Same Inputs like CJ4"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot ALT SEL": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_dig1, number) 10000 * (L:MCP_Alt_dig2, number) 1000 * + (L:MCP_Alt_dig3, number) 100 * +"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot ALT SEL Encoder": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob, enum) -- (>L:MCP_Alt_sel_knob, enum) (L:MCP_Alt_sel_knob, enum) 0 < if{ 99 (>MCP_Alt_sel_knob, enum) }"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot MACH Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_MACH_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot IAS Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_IAS_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot VS Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VS_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot ALT Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_ALT_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot HDG Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_HDG_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Pedestal Yaw Damper 1 indication": {
		"method": "calcCode",
		"code": "(L:PED_AFT_AP_YD1_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Pedestal Yaw Damper 2 indication": {
		"method": "calcCode",
		"code": "(L:PED_AFT_AP_YD2_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot ON Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_AP_iL, bool) "
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot ALT ARM Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_ALT_arm)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot ALT ARM Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_arm_iL, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot LNAV Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_LNAV_iL, bool)"
	},
	"Just Flight.BAE146.Flight Instrumentation.Output.Annunciator RNAV Indication": {
		"method": "calcCode",
		"code": "(L:L_ANNUNS_Rnav_green_il, bool) if{ (L:L_MISC_annun_lts, number) } els{ 0 }"
	},
	"Just Flight.BAE146.Flight Instrumentation.Input.HSI/RNAV Mode on": {
		"method": "calcCode",
		"code": "1 (>L:L_MISC_HSI_mode, bool)"
	},
	"Just Flight.BAE146.Flight Instrumentation.Input.HSI/RNAV Mode off": {
		"method": "calcCode",
		"code": "0 (>L:L_MISC_HSI_mode, bool)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS Power Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Pwr)"
	},
	"Just Flight.BAE146.Autothrust System.Output.TMS Power On Indication": {
		"method": "calcCode",
		"code": "(L:R_TMS_Pwr_on_il, bool) if{ (L:TMS_annun_lts, number) } els{ 0 }"
	},
	"Just Flight.BAE146.Electrical.Input.OVHD APU ON": {
		"method": "calcCode",
		"code": "1 (>L:OVHD_APU_StartStop, bool)"
	},
	"Just Flight.BAE146.Electrical.Input.OVHD APU OFF": {
		"method": "calcCode",
		"code": "0 (>L:OVHD_APU_StartStop, bool)"
	},
	"Microsoft.737-MAX.Autopilot.Input.Bank Angle Limit  - 15 Degrees": {
		"method": "calcCode",
		"code": "3 (>K:AP_MAX_BANK_SET)"
	},
	"Microsoft.737-MAX.Autopilot.Input.Bank Angle Limit  - 20 Degrees": {
		"method": "calcCode",
		"code": "2 (>K:AP_MAX_BANK_SET)"
	},
	"Microsoft.737-MAX.Autopilot.Input.Bank Angle Limit  - 25 Degrees": {
		"method": "calcCode",
		"code": "1 (>K:AP_MAX_BANK_SET)"
	},
	"Microsoft.737-MAX.Autopilot.Input.Bank Angle Limit  - 30 Degrees": {
		"method": "calcCode",
		"code": "0 (>K:AP_MAX_BANK_SET)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS Disconnect Button Left Lever ": {
		"method": "calcCode",
		"code": "1 (>L:PED_MID_TMS_disc_L)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS Disconnect Button Right Lever": {
		"method": "calcCode",
		"code": "1 (>L:PED_MID_TMS_disc_R)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX Chrono ET Knob Dec": {
		"method": "calcCode",
		"code": "(L:A32NX_CHRONO_ET_SWITCH_POS, number) 1 - 0 max (>L:A32NX_CHRONO_ET_SWITCH_POS, number)\n(>H:A32NX_CHRONO_ET_POS_CHANGED)\n"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX Chrono ET Knob Inc": {
		"method": "calcCode",
		"code": "(L:A32NX_CHRONO_ET_SWITCH_POS, number) 1 + 2 min  (>L:A32NX_CHRONO_ET_SWITCH_POS, number)\n(>H:A32NX_CHRONO_ET_POS_CHANGED)"
	},
	"Just Flight.BAE146.Flight Instrumentation.Output.HSI HDG Bug": {
		"method": "calcCode",
		"code": "(L:L_HSI_Hdg_bug, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP CPT FD IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_FDLeft,Number)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737-7_CPT_FD_TOGGLE": {
		"method": "calcCode",
		"code": "37801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 IAS MACH IND": {
		"method": "calcCode",
		"code": "(L:ngx_SPDwindow, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 CPT CRS Display": {
		"method": "calcCode",
		"code": "(L:ngx_CRSwindowL, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 FO CRS": {
		"method": "calcCode",
		"code": "(L:ngx_CRSwindowR, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737-7 HDG Display": {
		"method": "calcCode",
		"code": "(L:ngx_HDGwindow, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 AP ALT Display": {
		"method": "calcCode",
		"code": "(L:ngx_ALTwindow, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 V SPEED": {
		"method": "calcCode",
		"code": "(L:ngx_VSwindow, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP CMD A IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_CMDA, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP CMD B IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_CMDB, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP CWS A IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_CWSA, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP CWS B IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_CWSB, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP AT ARM IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_ATArm, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP VNAV IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_VNav, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP LNAV IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_LNav, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP VOR LOC IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_VORLock, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP N1 IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_N1, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP SPEED IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_Speed, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP LVL CHANGE IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_LvlChg, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP HDG SEL IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_HdgSel, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP APP IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_App, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP ALT HOLD IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_AltHold, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP VS IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_VS, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP FO FD IND": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_FDRight,Number)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737-7_FO_FD_TOGGLE": {
		"method": "calcCode",
		"code": "40701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_LEFT_SW": {
		"method": "calcCode",
		"code": "3701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_LEFT_SW": {
		"method": "calcCode",
		"code": "3801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_SW": {
		"method": "calcCode",
		"code": "3901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_SW": {
		"method": "calcCode",
		"code": "4001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_L_SW": {
		"method": "calcCode",
		"code": "4501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_R_SW": {
		"method": "calcCode",
		"code": "4601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CPT_CRS_INC": {
		"method": "calcCode",
		"code": "37607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CPT_CRS_DEC": {
		"method": "calcCode",
		"code": "37608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_HDG_INC": {
		"method": "calcCode",
		"code": "39007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_HDG_DEC": {
		"method": "calcCode",
		"code": "39008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_IAS_MACH_INC": {
		"method": "calcCode",
		"code": "38407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_IAS_MACH_DEC": {
		"method": "calcCode",
		"code": "38408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_ALT_INC": {
		"method": "calcCode",
		"code": "40007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_ALT_DEC": {
		"method": "calcCode",
		"code": "40008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_VS_INC": {
		"method": "calcCode",
		"code": "40108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_VS_DEC": {
		"method": "calcCode",
		"code": "40107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_FO_CRS_INC": {
		"method": "calcCode",
		"code": "40907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_FO_CRS_DEC": {
		"method": "calcCode",
		"code": "40908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_UP": {
		"method": "calcCode",
		"code": "30 (L:switch_455_73X) - 10 div == if{ 45502 (>K:ROTOR_BRAKE) } els{ (>K:GEAR_UP) }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_DOWN": {
		"method": "calcCode",
		"code": "(>K:GEAR_DOWN)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_OFF": {
		"method": "calcCode",
		"code": "30 (L:switch_455_73X) - sp0 \nl0 0 > if{ 45501 (>K:ROTOR_BRAKE) } \nl0 0 < if{ 45502 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_VNAV_SWITCH": {
		"method": "calcCode",
		"code": "38601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_A/T_TOGGLE": {
		"method": "calcCode",
		"code": "38001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_BANK_ANGLE_INC": {
		"method": "calcCode",
		"code": "38902 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_BANK_ANGLE_DEC": {
		"method": "calcCode",
		"code": "38901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 MCP BANK ANGLE": {
		"method": "calcCode",
		"code": "(L:switch_389_73X, number)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_LEVER_INC": {
		"method": "calcCode",
		"code": "45502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_LEVER_DEC": {
		"method": "calcCode",
		"code": "45501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_LNAV_SWITCH": {
		"method": "calcCode",
		"code": "39701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_SPEED_SWITCH": {
		"method": "calcCode",
		"code": "38201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_LVL_CHG_SWITCH": {
		"method": "calcCode",
		"code": "39101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_HDG_SEL-SWITCH": {
		"method": "calcCode",
		"code": "39201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_VOR_LOC_SWITCH": {
		"method": "calcCode",
		"code": "39601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_APP_SWITCH": {
		"method": "calcCode",
		"code": "39301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_ALT_HLD_SWITCH": {
		"method": "calcCode",
		"code": "39401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_V/S_SWITCH": {
		"method": "calcCode",
		"code": "39501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_LEFT_OFF_POS_SW": {
		"method": "calcCode",
		"code": "0 (L:switch_36_73X) - 10 div s0\n:1\nl0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_LEFT_INT_POS_SW": {
		"method": "calcCode",
		"code": "10 (L:switch_36_73X) - 10 div s0\n:1\nl0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_LEFT_LOW_POS_SW": {
		"method": "calcCode",
		"code": "20 (L:switch_36_73X) - 10 div s0\n:1\nl0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_LEFT_HIGH_POS_SW": {
		"method": "calcCode",
		"code": "30 (L:switch_36_73X) - 10 div s0\n:1\nl0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_RIGHT_OFF_POS_SW": {
		"method": "calcCode",
		"code": "0 (L:switch_109_73X) - 10 div s0\n:1\nl0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_RIGHT_INT_POS_SW": {
		"method": "calcCode",
		"code": "10 (L:switch_109_73X) - 10 div s0\n:1\nl0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_RIGHT_LOW_POS_SW": {
		"method": "calcCode",
		"code": "20 (L:switch_109_73X) - 10 div s0\n:1\nl0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG_B737-7_WIPER_RIGHT_HIGH_POS_SW": {
		"method": "calcCode",
		"code": "30 (L:switch_109_73X) - 10 div s0\n:1\nl0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_LEFT_OFF_POS_SW": {
		"method": "calcCode",
		"code": "0 (L:switch_255_73X) - 10 div s0\n:1\nl0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_LEFT_ALIGN_POS_SW": {
		"method": "calcCode",
		"code": "10 (L:switch_255_73X) - 10 div s0\n:1\nl0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_LEFT_NAV_POS_SW": {
		"method": "calcCode",
		"code": "20 (L:switch_255_73X) - 10 div s0\n:1\nl0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_LEFT_ATT_POS_SW": {
		"method": "calcCode",
		"code": "30 (L:switch_255_73X) - 10 div s0\n:1\nl0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_RIGHT_OFF_POS_SW": {
		"method": "calcCode",
		"code": "0 (L:switch_256_73X) - 10 div s0\n:1\nl0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_RIGHT_ALIGN_POS_SW": {
		"method": "calcCode",
		"code": "10 (L:switch_256_73X) - 10 div s0\n:1\nl0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_RIGHT_NAV_POS_SW": {
		"method": "calcCode",
		"code": "20 (L:switch_256_73X) - 10 div s0\n:1\nl0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG_B737-7_IRS_RIGHT_ATT_POS_SW": {
		"method": "calcCode",
		"code": "30 (L:switch_256_73X) - 10 div s0\n:1\nl0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_GRD_POS": {
		"method": "calcCode",
		"code": "0 (L:switch_119_73X) - 10 div s0\n:1\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_OFF_POS": {
		"method": "calcCode",
		"code": "10 (L:switch_119_73X) - 10 div s0\n:1\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_CONT_POS": {
		"method": "calcCode",
		"code": "20 (L:switch_119_73X) - 10 div s0\n:1\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_FLT_POS": {
		"method": "calcCode",
		"code": "30 (L:switch_119_73X) - 10 div s0\n:1\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_GRD_POS": {
		"method": "calcCode",
		"code": "0 (L:switch_121_73X) - 10 div s0\n:1\nl0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_OFF_POS": {
		"method": "calcCode",
		"code": "10 (L:switch_121_73X) - 10 div s0\n:1\nl0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_CONT_POS": {
		"method": "calcCode",
		"code": "20 (L:switch_121_73X) - 10 div s0\n:1\nl0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_FLT_POS": {
		"method": "calcCode",
		"code": "30 (L:switch_121_73X) - 10 div s0\n:1\nl0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_GRD_PWR_OFF_POS_SW": {
		"method": "calcCode",
		"code": "1702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_GRD_PWR_ON_POS_SW": {
		"method": "calcCode",
		"code": "1701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_RTO_POS_SW": {
		"method": "calcCode",
		"code": "0 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_OFF_POS_SW": {
		"method": "calcCode",
		"code": "10 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_1_POS_SW": {
		"method": "calcCode",
		"code": "20 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_2_POS_SW": {
		"method": "calcCode",
		"code": "30 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_3_POS_SW": {
		"method": "calcCode",
		"code": "40 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_ANTISKID_MAX_POS_SW": {
		"method": "calcCode",
		"code": "50 (L:switch_460_73X) - 10 div s0\n:1\nl0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_N1_LIMIT_SWITCH": {
		"method": "calcCode",
		"code": "38101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CWS_A_SWITCH": {
		"method": "calcCode",
		"code": "40401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CWS_B_SWITCH": {
		"method": "calcCode",
		"code": "40501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CMD_A_SWITCH": {
		"method": "calcCode",
		"code": "40201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_CMD_B_SWITCH": {
		"method": "calcCode",
		"code": "40301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_AUTOPILOT_DISENGAGE_SWITCH": {
		"method": "calcCode",
		"code": "40601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_SPD_INTV_BUTTON": {
		"method": "calcCode",
		"code": "38701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CUT_OFF_LEVER1_UP": {
		"method": "calcCode",
		"code": "(L:switch_688_73X) 100 == if{ 68801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CUT_OFF_LEVER1_DN": {
		"method": "calcCode",
		"code": "(L:switch_688_73X) 0 == if{ 68801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CUT_OFF_LEVER2_UP": {
		"method": "calcCode",
		"code": "(L:switch_689_73X) 100 == if{ 68901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CUT_OFF_LEVER2_DN": {
		"method": "calcCode",
		"code": "(L:switch_689_73X) 0 == if{ 68901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737-7_MCP_C/O_BUTTON": {
		"method": "calcCode",
		"code": "38301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737-7_MCP_ALT_INTV_BUTTON": {
		"method": "calcCode",
		"code": "88501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Output.PMDG_B737_AUTOBRAKE_DISARM_IND": {
		"method": "calcCode",
		"code": "(L:switch_459_73X, number) 10 *"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737_BATT_ON_OFF_SWITCH": {
		"method": "calcCode",
		"code": "101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737_BATT_GUARD_SWITCH": {
		"method": "calcCode",
		"code": "201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_LOGO_TOGGLE": {
		"method": "calcCode",
		"code": "12201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_ANTI_COLLISION_TOGGLE": {
		"method": "calcCode",
		"code": "12401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_TAXI_TOGGLE": {
		"method": "calcCode",
		"code": "11701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_L_TOGGLE": {
		"method": "calcCode",
		"code": "11501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_R_TOGGLE": {
		"method": "calcCode",
		"code": "11601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WING_TOGGLE": {
		"method": "calcCode",
		"code": "12501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_CPT_RANGE_DEC": {
		"method": "calcCode",
		"code": "36108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_CPT_RANGE_INC": {
		"method": "calcCode",
		"code": "36107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Output.PMDG_B737_BATTERY_GUARD_POSITION": {
		"method": "calcCode",
		"code": "(L:switch_02_73X, number)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WHEEL_WELL_TOGGLE": {
		"method": "calcCode",
		"code": "12601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_L_TOGGLE": {
		"method": "calcCode",
		"code": "11301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_R_TOGGLE": {
		"method": "calcCode",
		"code": "11401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_TOGGLE": {
		"method": "calcCode",
		"code": "11301 (>K:ROTOR_BRAKE)\n11401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_BOTH_TOGGLE": {
		"method": "calcCode",
		"code": "11501 (>K:ROTOR_BRAKE)\n11601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_ALL_ON": {
		"method": "calcCode",
		"code": "11001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_ALL_OFF": {
		"method": "calcCode",
		"code": "11002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_TAXI_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_117_73X, number) == if{ 11701 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_TAXI_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_117_73X, number) == if{ 11701 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_LOGO_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_122_73X, number) == if{ 12201 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_LOGO_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_122_73X, number) == if{ 12201 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_ANTI_COLLISION_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_124_73X, number) == if{ 12401 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_ANTI_COLLISION_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_124_73X, number) == if{ 12401 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WHEEL_WELL_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_126_73X, number) == if{ 12601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WHEEL_WELL_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_126_73X, number) == if{ 12601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WING_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_125_73X, number) == if{ 12501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_WING_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_125_73X, number) == if{ 12501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_L_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_R_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_L_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_R_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_BOTH_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }\n0 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RUNWAY_BOTH_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }\n100 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_L_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_R_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }\n0 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_L_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_R_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }\n100 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_EXTENDED": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0 \nl0 0 == if{ 11101 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_EXTENDED": {
		"method": "calcCode",
		"code": "(L:switch_112_73X, number) s0 \nl0 0 == if{ 11201 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_EXTENDED": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0\n(L:switch_112_73X, number) s1\nl0 0 == if{ 11101 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11102 (>K:ROTOR_BRAKE) }\nl1 0 == if{ 11201 (>K:ROTOR_BRAKE) }\nl1 100  == if{ 11202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_OFF": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0\nl0 50 == if{ 11102 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11102 (>K:ROTOR_BRAKE) 11102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_OFF": {
		"method": "calcCode",
		"code": "(L:switch_112_73X, number) s0\nl0 50 == if{ 11202 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11202 (>K:ROTOR_BRAKE) 11202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_OFF": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0\n(L:switch_112_73X, number) s1\nl0 50 == if{ 11102 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 11102 (>K:ROTOR_BRAKE) 11102 (>K:ROTOR_BRAKE) }\nl1 50 == if{ 11202 (>K:ROTOR_BRAKE) }\nl1 100  == if{ 11202 (>K:ROTOR_BRAKE) 11202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_ON": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0\nl0 50 == if{ 11101 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 11101 (>K:ROTOR_BRAKE) 11101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_ON": {
		"method": "calcCode",
		"code": "(L:switch_112_73X, number) s0\nl0 50 == if{ 11201 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 11201 (>K:ROTOR_BRAKE) 11201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_ON": {
		"method": "calcCode",
		"code": "(L:switch_111_73X, number) s0\n(L:switch_112_73X, number) s1\nl0 50 == if{ 11101 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 11101 (>K:ROTOR_BRAKE) 11101 (>K:ROTOR_BRAKE) }\nl1 50 == if{ 11201 (>K:ROTOR_BRAKE) }\nl1 0  == if{ 11201 (>K:ROTOR_BRAKE) 11201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_POSITION_OFF": {
		"method": "calcCode",
		"code": "(L:switch_123_73X, number) s0 \nl0 0 == if{ 12301 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 12302 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_POSITION_STEADY": {
		"method": "calcCode",
		"code": "(L:switch_123_73X, number) s0\nl0 50 == if{ 12301 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 12301 (>K:ROTOR_BRAKE) 12301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_POSITION_STROBE": {
		"method": "calcCode",
		"code": "(L:switch_123_73X, number) s0\nl0 0 == if{ 12301 (>K:ROTOR_BRAKE) }\nl0 50 == if{ 12302 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 12302 (>K:ROTOR_BRAKE) 12302 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_OFF": {
		"method": "calcCode",
		"code": "(L:switch_258_73X, number) s0 \nl0 0 == if{ 25801 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 25802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_BRIGHT": {
		"method": "calcCode",
		"code": "(L:switch_258_73X, number) s0\nl0 50 == if{ 25801 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 25801 (>K:ROTOR_BRAKE) 25801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Lights.Input.PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_DIM": {
		"method": "calcCode",
		"code": "(L:switch_258_73X, number) s0\nl0 50 == if{ 25802 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 25802 (>K:ROTOR_BRAKE) 25802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_TOGGLE": {
		"method": "calcCode",
		"code": "16501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_TOGGLE": {
		"method": "calcCode",
		"code": "16601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_TOGGLE": {
		"method": "calcCode",
		"code": "16701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_TOGGLE": {
		"method": "calcCode",
		"code": "16801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_165_73X, number) == if{ 16501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_166_73X, number) == if{ 16601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_167_73X, number) == if{ 16701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_168_73X, number) == if{ 16801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_165_73X, number) == if{ 16502 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_166_73X, number) == if{ 16602 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_167_73X, number) == if{ 16702 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Hydraulic.Input.PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_168_73X, number) == if{ 16802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Flight Controls.Input.PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_63_73X, number) == if{ 6301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Flight Controls.Input.PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_63_73X, number) == if{ 6302 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Flight Controls.Input.PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_TOGGLE": {
		"method": "calcCode",
		"code": "6301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WING_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_156_73X, number) == if{ 15601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WING_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_156_73X, number) == if{ 15602 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WING_TOGGLE": {
		"method": "calcCode",
		"code": "15601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 OH APU SWITCH OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_118_73X) == if{ 11802 (>K:ROTOR_BRAKE) } "
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 OH APU SWITCH ON": {
		"method": "calcCode",
		"code": "50 (L:switch_118_73X) != if{ 11801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 OH APU SWITCH START": {
		"method": "calcCode",
		"code": "50 (L:switch_118_73X) == if{ 11801 (>K:ROTOR_BRAKE) }\n els{ 11801 (>K:ROTOR_BRAKE) 11801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_1_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_157_73X, number) == if{ 15701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_1_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_157_73X, number) == if{ 15702 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_1_TOGGLE": {
		"method": "calcCode",
		"code": "15701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_2_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_158_73X, number) == if{ 15801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_2_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_158_73X, number) == if{ 15802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_ENG_2_TOGGLE": {
		"method": "calcCode",
		"code": "15801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_LEFT_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_37_73X, number) == if{ 3701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_LEFT_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_38_73X, number) == if{ 3801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_39_73X, number) == if{ 3901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_40_73X, number) == if{ 4001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_L_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_45_73X, number) == if{ 4501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_R_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_46_73X, number) == if{ 4601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_LEFT_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_37_73X, number) == if{ 3702 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_LEFT_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_38_73X, number) == if{ 3802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_39_73X, number) == if{ 3902 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_40_73X, number) == if{ 4002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_L_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_45_73X, number) == if{ 4502 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_PUMP_CTR_R_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_46_73X, number) == if{ 4602 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GALLEY_POWER_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_974_73X, number) == if{ 97401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GALLEY_POWER_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_974_73X, number) == if{ 97402 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GALLEY_POWER_TOGGLE": {
		"method": "calcCode",
		"code": "97401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_A_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_140_73X, number) == if{ 14001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_A_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_140_73X, number) == if{ 14002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_A_TOGGLE": {
		"method": "calcCode",
		"code": "14001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_B_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_141_73X, number) == if{ 14101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_B_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_141_73X, number) == if{ 14102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_PROBE_B_TOGGLE": {
		"method": "calcCode",
		"code": "14101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_135_73X, number) == if{ 13501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_135_73X, number) == if{ 13502 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_TOGGLE": {
		"method": "calcCode",
		"code": "13501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_136_73X, number) == if{ 13601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_136_73X, number) == if{ 13602 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_TOGGLE": {
		"method": "calcCode",
		"code": "13601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_138_73X, number) == if{ 13801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_138_73X, number) == if{ 13802 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_TOGGLE": {
		"method": "calcCode",
		"code": "13801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_139_73X, number) == if{ 13901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_139_73X, number) == if{ 13902 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_TOGGLE": {
		"method": "calcCode",
		"code": "13901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_TEST_OVTH": {
		"method": "calcCode",
		"code": "13702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_TEST_POWER": {
		"method": "calcCode",
		"code": "13701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_210_73X, number) == if{ 21001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_210_73X, number) == if{ 21002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_TOGGLE": {
		"method": "calcCode",
		"code": "21001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_212_73X, number) == if{ 21201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_212_73X, number) == if{ 21202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_TOGGLE": {
		"method": "calcCode",
		"code": "21201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_APU_BLEED_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_211_73X, number) == if{ 21101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_APU_BLEED_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_211_73X, number) == if{ 21102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_APU_BLEED_TOGGLE": {
		"method": "calcCode",
		"code": "21101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_RECIRC_FAN_AUTO": {
		"method": "calcCode",
		"code": "0 (L:switch_196_73X, number) == if{ 19601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_RECIRC_FAN_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_196_73X, number) == if{ 19602 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_RECIRC_FAN_TOGGLE": {
		"method": "calcCode",
		"code": "19601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Passengers/Crew.Input.PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_103_73X, number) == if{ 10301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Passengers/Crew.Input.PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_103_73X, number) == if{ 10302 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Passengers/Crew.Input.PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_TOGGLE": {
		"method": "calcCode",
		"code": "10301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG_B737-7_SAFETY_FASTEN_BELTS_OFF": {
		"method": "calcCode",
		"code": "(L:switch_104_73X, number) s0\nl0 50 == if{ 10402 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 10402 (>K:ROTOR_BRAKE) 10402 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Safety.Input.PMDG_B737-7_SAFETY_FASTEN_BELTS_AUTO": {
		"method": "calcCode",
		"code": "(L:switch_104_73X, number) s0 \nl0 0 == if{ 10401 (>K:ROTOR_BRAKE) }\nl0 100  == if{ 10402 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Safety.Input.PMDG_B737-7_SAFETY_FASTEN_BELTS_ON": {
		"method": "calcCode",
		"code": "(L:switch_104_73X, number) s0\nl0 50 == if{ 10401 (>K:ROTOR_BRAKE) }\nl0 0  == if{ 10401 (>K:ROTOR_BRAKE) 10401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CROSSFEED_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_49_73X, number) == if{ 4901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CROSSFEED_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_49_73X, number) == if{ 4902 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Fuel.Input.PMDG_B737-7_FUEL_CROSSFEED_TOGGLE": {
		"method": "calcCode",
		"code": "4901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autothrust System.Input.PMDG_B737-7_AUTOTHRUST_TOGA_L_BTN": {
		"method": "calcCode",
		"code": "68401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autothrust System.Input.PMDG_B737-7_AUTOTHRUST_TOGA_R_BTN": {
		"method": "calcCode",
		"code": "68701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Passengers/Crew.Input.PMDG_B737-7_MISCELLANEOUS_ATTENDANT_CALL_BTN": {
		"method": "calcCode",
		"code": "10501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GEN1_ON": {
		"method": "calcCode",
		"code": "2701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GEN1_OFF": {
		"method": "calcCode",
		"code": "2702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_APU_GEN1_ON": {
		"method": "calcCode",
		"code": "2801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_APU_GEN1_OFF": {
		"method": "calcCode",
		"code": "2802 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_APU_GEN2_ON": {
		"method": "calcCode",
		"code": "2901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_APU_GEN2_OFF": {
		"method": "calcCode",
		"code": "2902 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GEN2_ON": {
		"method": "calcCode",
		"code": "3001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG_B737-7_ELECTRICAL_GEN2_OFF": {
		"method": "calcCode",
		"code": "3002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_L_OFF": {
		"method": "calcCode",
		"code": "(L:switch_200_73X, number) s0\nl0 50 == if{ 20002 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20002 (>K:ROTOR_BRAKE) 20002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_L_AUTO": {
		"method": "calcCode",
		"code": "(L:switch_200_73X, number) s0 \nl0 0 == if{ 20001 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_L_HIGH": {
		"method": "calcCode",
		"code": "(L:switch_200_73X, number) s0\nl0 50 == if{ 20001 (>K:ROTOR_BRAKE) }\nl0 0 == if{ 20001 (>K:ROTOR_BRAKE) 20001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_R_OFF": {
		"method": "calcCode",
		"code": "(L:switch_201_73X, number) s0\nl0 50 == if{ 20102 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20102 (>K:ROTOR_BRAKE) 20102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_R_AUTO": {
		"method": "calcCode",
		"code": "(L:switch_201_73X, number) s0 \nl0 0 == if{ 20101 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20102 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_PACK_R_HIGH": {
		"method": "calcCode",
		"code": "(L:switch_201_73X, number) s0\nl0 50 == if{ 20101 (>K:ROTOR_BRAKE) }\nl0 0 == if{ 20101 (>K:ROTOR_BRAKE) 20101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_CLOSE": {
		"method": "calcCode",
		"code": "(L:switch_202_73X, number) s0\nl0 50 == if{ 20202 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20202 (>K:ROTOR_BRAKE) 20202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_AUTO": {
		"method": "calcCode",
		"code": "(L:switch_202_73X, number) s0 \nl0 0 == if{ 20201 (>K:ROTOR_BRAKE) }\nl0 100 == if{ 20202 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Pneumatic.Input.PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_OPEN": {
		"method": "calcCode",
		"code": "(L:switch_202_73X, number) s0\nl0 50 == if{ 20201 (>K:ROTOR_BRAKE) }\nl0 0 == if{ 20201 (>K:ROTOR_BRAKE) 20201 (>K:ROTOR_BRAKE) }"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VNAV_SWITCH": {
		"method": "calcCode",
		"code": "536870912 17 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VERTSPD_SWITCH": {
		"method": "calcCode",
		"code": "536870912 15 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VERTSPD_DEC_KNOB": {
		"method": "calcCode",
		"code": "16384 14 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VERTSPD_INC_KNOB": {
		"method": "calcCode",
		"code": "8192 14 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_IASMACH_SWITCH": {
		"method": "calcCode",
		"code": "536870912 16 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_SWITCH": {
		"method": "calcCode",
		"code": "536870912 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPDSEL_SWITCH": {
		"method": "calcCode",
		"code": "536870912 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPD_INC_KNOB": {
		"method": "calcCode",
		"code": "16384 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPD_DEC_KNOB": {
		"method": "calcCode",
		"code": "8192 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.MD82_FMA_AUTOPILOT_LED": {
		"method": "calcCode",
		"code": "(L:CM1_fma_adv11, bool)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.MD82_FMA_CM1_FD_LED": {
		"method": "calcCode",
		"code": "(L:CM1_fma_adv10, bool)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.MD82_FMA_CM2_FD_LED": {
		"method": "calcCode",
		"code": "(L:CM2_fma_adv10, bool)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_DEC_KNOB": {
		"method": "calcCode",
		"code": "8192 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_INC_KNOB": {
		"method": "calcCode",
		"code": "16384 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_INC_KNOB": {
		"method": "calcCode",
		"code": "16384 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_DEC_KNOB": {
		"method": "calcCode",
		"code": "8192 23 + (>L:fgcp_event,number)"
	},
	"Just Flight.Piper Arrow III.Miscellaneous.Input.Timer mode": {
		"method": "calcCode",
		"code": "Press  = 1  (>L:YOKE_mode)  Release = 0  (>L:YOKE_mode)"
	},
	"PMDG.B737-700.Warning.Output.PMDG_B737_MASTER_CAUTION_YELLOW_LED": {
		"method": "calcCode",
		"code": "(L:switch_3481_73X, number) 2 *"
	},
	"PMDG.B737-700.Warning.Output.PMDG_B737_MASTER_WARNING_RED_LED": {
		"method": "calcCode",
		"code": "(L:switch_3471_73X, number) 2 *"
	},
	"PMDG.B737-700.Warning.Input.PMDG_B737_MASTER_CAUTION_YELLOW_SWITCH": {
		"method": "calcCode",
		"code": "34801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG_B737_MASTER_WARNING_FIRE_RED_SWITCH": {
		"method": "calcCode",
		"code": "34701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_TRANSPONDER_MODE_CHANGE_ENCODER_DEC": {
		"method": "calcCode",
		"code": "80008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_TRANSPONDER_MODE_CHANGE_ENCODER_INC": {
		"method": "calcCode",
		"code": "80007 (>K:ROTOR_BRAKE)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82_PED_FUELCUT_LEVER1_ON": {
		"method": "calcCode",
		"code": "536870912 11 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82_PED_FUELCUT_LEVER1_OFF": {
		"method": "calcCode",
		"code": "2147483648 11 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82_PED_FUELCUT_LEVER2_ON": {
		"method": "calcCode",
		"code": "536870912 12 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82_PED_FUELCUT_LEVER2_OFF": {
		"method": "calcCode",
		"code": "2147483648 12 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Flight Instrumentation.Output.MD_82_ACTUAL_AIRSPEED_INDICATED": {
		"method": "calcCode",
		"code": "(A:AIRSPEED INDICATED,Knots)"
	},
	"Leonardo.MadDog MD-82.Flight Instrumentation.Output.MD_82_ACTUAL_HEADING": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR,Degrees)"
	},
	"Leonardo.MadDog MD-82.Flight Instrumentation.Output.MD_82_ACTUAL_ALTITUDE": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE,Feet)"
	},
	"Leonardo.MadDog MD-82.Gear.Input.MD82_PED_GEAR_HORN_SW_RELEASE": {
		"method": "calcCode",
		"code": "131072 17 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Gear.Input.MD82_PED_GEAR_HORN_SW_PUSH": {
		"method": "calcCode",
		"code": "536870912 17 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_PULL_KNOB": {
		"method": "calcCode",
		"code": "536870912 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_PUSH_KNOB": {
		"method": "calcCode",
		"code": "2147483648 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.MD_82_AUTOPILOT_TARGET_AIRSPEED": {
		"method": "calcCode",
		"code": "(L:CM1_asi_needle3)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALTHOLD_SWITCH": {
		"method": "calcCode",
		"code": "536870912 18 + (>L:fgcp_event, number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPD_KNOB_PUSH": {
		"method": "calcCode",
		"code": "536870912 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD_82_YOKE_AP_DISC": {
		"method": "calcCode",
		"code": "536870912 8 + (>L:cockpit_event,number)"
	},
	"Leonardo.MadDog MD-82.Autothrust System.Input.MD82_PED_THROTTLE1_SWITCH": {
		"method": "calcCode",
		"code": "536870912 9 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Autothrust System.Input.MD82_PED_THROTTLE2_SWITCH": {
		"method": "calcCode",
		"code": "#536870912 28 + (>L:pedestal_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_NOSELIGHT_SWITCH_DN": {
		"method": "calcCode",
		"code": "8192 2 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_NOSELIGHT_SWITCH_UP": {
		"method": "calcCode",
		"code": "16384 2 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_WINGLIGHTL_SWITCH_DN": {
		"method": "calcCode",
		"code": "536870912 0 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_WINGLIGHTL_SWITCH_UP": {
		"method": "calcCode",
		"code": "2147483648 0 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_WINGLIGHTR_SWITCH_DN": {
		"method": "calcCode",
		"code": "536870912 1 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM1_WINGLIGHTR_SWITCH_UP": {
		"method": "calcCode",
		"code": "2147483648 1 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM2_STROBE_SWITCH1_DN": {
		"method": "calcCode",
		"code": "536870912 7 + (>L:ext_lights_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_CM2_STROBE_SWITCH1_UP": {
		"method": "calcCode",
		"code": "2147483648 7 + (>L:ext_lights_event,number)"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 LE Flaps Extended Indicator": {
		"method": "calcCode",
		"code": "(L:switch_456_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 LE Flaps Transit Indicator": {
		"method": "calcCode",
		"code": "(L:switch_457_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Nose Gear Safe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_450_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Left Gear Safe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_453_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Right Gear Safe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_454_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Nose Gear Unsafe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_449_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Left Gear Unsafe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_451_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Right Gear Unsafe Indicator": {
		"method": "calcCode",
		"code": "(L:switch_452_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 Autopilot A/T Arm Light": {
		"method": "calcCode",
		"code": "(L:switch_3801_73X, number) 0 >"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Spotlight Capt Knob Inc": {
		"method": "calcCode",
		"code": "201507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Spotlight Capt Knob Dec": {
		"method": "calcCode",
		"code": "201508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 1": {
		"method": "calcCode",
		"code": "53401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 2": {
		"method": "calcCode",
		"code": "53501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 3": {
		"method": "calcCode",
		"code": "53601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 4": {
		"method": "calcCode",
		"code": "53701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 5": {
		"method": "calcCode",
		"code": "53801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 6": {
		"method": "calcCode",
		"code": "53901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 7": {
		"method": "calcCode",
		"code": "54001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 8": {
		"method": "calcCode",
		"code": "54101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 9": {
		"method": "calcCode",
		"code": "54201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 10": {
		"method": "calcCode",
		"code": "54301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 11": {
		"method": "calcCode",
		"code": "54401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left LS 12": {
		"method": "calcCode",
		"code": "54501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left INIT REF": {
		"method": "calcCode",
		"code": "54601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left RTE": {
		"method": "calcCode",
		"code": "54701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left CLB": {
		"method": "calcCode",
		"code": "54801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left CRZ": {
		"method": "calcCode",
		"code": "54901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left DES": {
		"method": "calcCode",
		"code": "55001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left MENU": {
		"method": "calcCode",
		"code": "55101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left LEGS": {
		"method": "calcCode",
		"code": "55201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left DEP ARR": {
		"method": "calcCode",
		"code": "55301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left HOLD": {
		"method": "calcCode",
		"code": "55401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left PROG": {
		"method": "calcCode",
		"code": "55501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left EXEC": {
		"method": "calcCode",
		"code": "55601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left N1 LIMIT": {
		"method": "calcCode",
		"code": "55701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left FIX": {
		"method": "calcCode",
		"code": "55801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left PREV PAGE": {
		"method": "calcCode",
		"code": "55901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NEXT PAGE": {
		"method": "calcCode",
		"code": "56001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 1": {
		"method": "calcCode",
		"code": "56101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 2": {
		"method": "calcCode",
		"code": "56201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 3": {
		"method": "calcCode",
		"code": "56301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 4": {
		"method": "calcCode",
		"code": "56401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 5": {
		"method": "calcCode",
		"code": "56501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 6": {
		"method": "calcCode",
		"code": "56601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 7": {
		"method": "calcCode",
		"code": "56701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 8": {
		"method": "calcCode",
		"code": "56801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 9": {
		"method": "calcCode",
		"code": "56901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left DECIMAL": {
		"method": "calcCode",
		"code": "57001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left NUM 0": {
		"method": "calcCode",
		"code": "57101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left +/-": {
		"method": "calcCode",
		"code": "57201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left A": {
		"method": "calcCode",
		"code": "57301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left B": {
		"method": "calcCode",
		"code": "57401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left C": {
		"method": "calcCode",
		"code": "57501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left D": {
		"method": "calcCode",
		"code": "57601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left E": {
		"method": "calcCode",
		"code": "57701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left F": {
		"method": "calcCode",
		"code": "57801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left G": {
		"method": "calcCode",
		"code": "57901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left H": {
		"method": "calcCode",
		"code": "58001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left I": {
		"method": "calcCode",
		"code": "58101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left J": {
		"method": "calcCode",
		"code": "58201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left K": {
		"method": "calcCode",
		"code": "58301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left L": {
		"method": "calcCode",
		"code": "58401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left M": {
		"method": "calcCode",
		"code": "58501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left N": {
		"method": "calcCode",
		"code": "58601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left O": {
		"method": "calcCode",
		"code": "58701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left P": {
		"method": "calcCode",
		"code": "58801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left Q": {
		"method": "calcCode",
		"code": "58901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left R": {
		"method": "calcCode",
		"code": "59001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left S": {
		"method": "calcCode",
		"code": "59101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left T": {
		"method": "calcCode",
		"code": "59201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left U": {
		"method": "calcCode",
		"code": "59301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left V": {
		"method": "calcCode",
		"code": "59401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left W": {
		"method": "calcCode",
		"code": "59501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left X": {
		"method": "calcCode",
		"code": "59601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left Y": {
		"method": "calcCode",
		"code": "59701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left Z": {
		"method": "calcCode",
		"code": "59801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left SP": {
		"method": "calcCode",
		"code": "59901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left DEL": {
		"method": "calcCode",
		"code": "60001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left /": {
		"method": "calcCode",
		"code": "60101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left CLR Press": {
		"method": "calcCode",
		"code": "60201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left BRT Inc": {
		"method": "calcCode",
		"code": "60501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Left BRT Dec": {
		"method": "calcCode",
		"code": "60502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 1": {
		"method": "calcCode",
		"code": "60601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 2": {
		"method": "calcCode",
		"code": "60701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 3": {
		"method": "calcCode",
		"code": "60801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 4": {
		"method": "calcCode",
		"code": "60901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 5": {
		"method": "calcCode",
		"code": "61001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 6": {
		"method": "calcCode",
		"code": "61101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 7": {
		"method": "calcCode",
		"code": "61201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 8": {
		"method": "calcCode",
		"code": "61301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 9": {
		"method": "calcCode",
		"code": "61401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 10": {
		"method": "calcCode",
		"code": "61501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 11": {
		"method": "calcCode",
		"code": "61601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LS 12": {
		"method": "calcCode",
		"code": "61701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right INIT REF": {
		"method": "calcCode",
		"code": "61801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right RTE": {
		"method": "calcCode",
		"code": "61901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right CLB": {
		"method": "calcCode",
		"code": "62001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right CRZ": {
		"method": "calcCode",
		"code": "62101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right DES": {
		"method": "calcCode",
		"code": "62201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right MENU": {
		"method": "calcCode",
		"code": "62301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right LEGS": {
		"method": "calcCode",
		"code": "62401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right DEP ARR": {
		"method": "calcCode",
		"code": "62501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right HOLD": {
		"method": "calcCode",
		"code": "62601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right PROG": {
		"method": "calcCode",
		"code": "62701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right EXEC": {
		"method": "calcCode",
		"code": "62801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right N1 LIMIT": {
		"method": "calcCode",
		"code": "62901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right FIX": {
		"method": "calcCode",
		"code": "63001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right PREV PAGE": {
		"method": "calcCode",
		"code": "63101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NEXT PAGE": {
		"method": "calcCode",
		"code": "63201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 1": {
		"method": "calcCode",
		"code": "63301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 2": {
		"method": "calcCode",
		"code": "63401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 3": {
		"method": "calcCode",
		"code": "63501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 4": {
		"method": "calcCode",
		"code": "63601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 5": {
		"method": "calcCode",
		"code": "63701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 6": {
		"method": "calcCode",
		"code": "63801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 7": {
		"method": "calcCode",
		"code": "63901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 8": {
		"method": "calcCode",
		"code": "64001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 9": {
		"method": "calcCode",
		"code": "64101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right DECIMAL": {
		"method": "calcCode",
		"code": "64201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right NUM 0": {
		"method": "calcCode",
		"code": "64301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right +/-": {
		"method": "calcCode",
		"code": "64401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right A": {
		"method": "calcCode",
		"code": "64501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right B": {
		"method": "calcCode",
		"code": "64601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right C": {
		"method": "calcCode",
		"code": "64701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right D": {
		"method": "calcCode",
		"code": "64801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right E": {
		"method": "calcCode",
		"code": "64901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right F": {
		"method": "calcCode",
		"code": "65001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right G": {
		"method": "calcCode",
		"code": "65101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right H": {
		"method": "calcCode",
		"code": "65201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right I": {
		"method": "calcCode",
		"code": "65301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right J": {
		"method": "calcCode",
		"code": "65401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right K": {
		"method": "calcCode",
		"code": "65501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right L": {
		"method": "calcCode",
		"code": "65601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right M": {
		"method": "calcCode",
		"code": "65701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right N": {
		"method": "calcCode",
		"code": "65801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right O": {
		"method": "calcCode",
		"code": "65901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right P": {
		"method": "calcCode",
		"code": "66001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right Q": {
		"method": "calcCode",
		"code": "66101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right R": {
		"method": "calcCode",
		"code": "66201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right S": {
		"method": "calcCode",
		"code": "66301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right T": {
		"method": "calcCode",
		"code": "66401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right U": {
		"method": "calcCode",
		"code": "66501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right V": {
		"method": "calcCode",
		"code": "66601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right W": {
		"method": "calcCode",
		"code": "66701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right X": {
		"method": "calcCode",
		"code": "66801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right Y": {
		"method": "calcCode",
		"code": "66901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right Z": {
		"method": "calcCode",
		"code": "67001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right SP": {
		"method": "calcCode",
		"code": "67101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right DEL": {
		"method": "calcCode",
		"code": "67201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right /": {
		"method": "calcCode",
		"code": "67301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Right CLR Press": {
		"method": "calcCode",
		"code": "67401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right BRT Inc": {
		"method": "calcCode",
		"code": "67701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.PMDG B737 FMS Right BRT Dec": {
		"method": "calcCode",
		"code": "67702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_AUTOBRAKE_DEC": {
		"method": "calcCode",
		"code": "46008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_AUTOBRAKE_INC": {
		"method": "calcCode",
		"code": "46007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L MINS Slew Dec": {
		"method": "calcCode",
		"code": "35508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L MINS Slew Inc": {
		"method": "calcCode",
		"code": "35507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L MINS REF": {
		"method": "calcCode",
		"code": "35601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L MINS RST": {
		"method": "calcCode",
		"code": "35701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR/ADF VOR1": {
		"method": "calcCode",
		"code": "0 (L:switch_358_73X) - 50 div s0\n:1\nl0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR/ADF OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_358_73X) - 50 div s0\n:1\nl0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR/ADF ADF1": {
		"method": "calcCode",
		"code": "100 (L:switch_358_73X) - 50 div s0\n:1\nl0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode APP": {
		"method": "calcCode",
		"code": "0 (L:switch_359_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode VOR": {
		"method": "calcCode",
		"code": "10 (L:switch_359_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode MAP": {
		"method": "calcCode",
		"code": "20 (L:switch_359_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode PLN": {
		"method": "calcCode",
		"code": "30 (L:switch_359_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode Dec": {
		"method": "calcCode",
		"code": "35908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode Inc": {
		"method": "calcCode",
		"code": "35907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Mode CTR": {
		"method": "calcCode",
		"code": "36001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 5": {
		"method": "calcCode",
		"code": "0 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 10": {
		"method": "calcCode",
		"code": "10 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 20": {
		"method": "calcCode",
		"code": "20 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 40": {
		"method": "calcCode",
		"code": "30 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 80": {
		"method": "calcCode",
		"code": "40 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 160": {
		"method": "calcCode",
		"code": "50 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 320": {
		"method": "calcCode",
		"code": "60 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range 640": {
		"method": "calcCode",
		"code": "70 (L:switch_361_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Range Inc": {
		"method": "calcCode",
		"code": "36107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L TFC": {
		"method": "calcCode",
		"code": "36201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L FPV": {
		"method": "calcCode",
		"code": "36301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L MTRS": {
		"method": "calcCode",
		"code": "36401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L Range Dec": {
		"method": "calcCode",
		"code": "36108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L BARO Dec": {
		"method": "calcCode",
		"code": "36508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L BARO Inc": {
		"method": "calcCode",
		"code": "36507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L BARO IN HPA": {
		"method": "calcCode",
		"code": "36601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L BARO STD Press": {
		"method": "calcCode",
		"code": "36701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR2/ADF2 VOR2": {
		"method": "calcCode",
		"code": "0 (L:switch_368_73X) - 50 div s0\n:1\nl0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn WXR": {
		"method": "calcCode",
		"code": "36901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn STA": {
		"method": "calcCode",
		"code": "37001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn WPT": {
		"method": "calcCode",
		"code": "37101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn ARPT": {
		"method": "calcCode",
		"code": "37201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn DATA": {
		"method": "calcCode",
		"code": "37301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn POS": {
		"method": "calcCode",
		"code": "37401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS L Map Btn TERR": {
		"method": "calcCode",
		"code": "37501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn WXR": {
		"method": "calcCode",
		"code": "42501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn STA": {
		"method": "calcCode",
		"code": "42601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn WPT": {
		"method": "calcCode",
		"code": "42701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn ARPT": {
		"method": "calcCode",
		"code": "42801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn Data": {
		"method": "calcCode",
		"code": "42901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.PMDG B737 EFIS R Map Btn POS": {
		"method": "calcCode",
		"code": "43001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_LANDING_LIGHT_LEFT_LED": {
		"method": "calcCode",
		"code": "(L:switch_113_73X,number) 100 /"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_LANDING_RIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_114_73X, number) 100 /"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_LEFT_RUNWAY_TURNOFF_LIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_115_73X, number) 100 /"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_RIGHT_RUNWAY_TURNOFF_LIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_116_73X, number) 100 /"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_TAXI_LIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_117_73X, number) 100 /"
	},
	"PMDG.B737-700.Anti-Ice.Output.PMDG_B737-7_ANTI_ICE_WING_LEFT_VALVE_ANNUNC": {
		"method": "calcCode",
		"code": "(L:switch_152_73X, number) 10 *"
	},
	"PMDG.B737-700.Anti-Ice.Output.PMDG_B737-7_ANTI_ICE_WING_RIGHT_VALVE_ANNUNC": {
		"method": "calcCode",
		"code": "(L:switch_153_73X, number)"
	},
	"PMDG.B737-700.Anti-Ice.Output.PMDG_B737-7_ANTI_ICE_ENG_LEFT_VALVE_ANNUNC": {
		"method": "calcCode",
		"code": "(L:switch_157_73X, number)"
	},
	"PMDG.B737-700.Anti-Ice.Output.PMDG_B737-7_ANTI_ICE_ENG_RIGHT_VALVE_ANNUNC": {
		"method": "calcCode",
		"code": "(L:switch_158_73X, number)"
	},
	"PMDG.B737-700.Autothrust System.Input.PMDG_B737-7_AUTOTHRUST_DISENGAGE": {
		"method": "calcCode",
		"code": "68201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_PARKING_BRAKE_ON": {
		"method": "calcCode",
		"code": "0 (L:switch_693_73X, number) == if{ 69302 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_PARKING_BRAKE_OFF": {
		"method": "calcCode",
		"code": "100 (L:switch_693_73X, number) == if{ 69301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG_B737_MCP_AUTOPILOT_DISENGAGE_YOKE": {
		"method": "calcCode",
		"code": "100401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Emergency Light Switch Off": {
		"method": "calcCode",
		"code": "0 (L:switch_100_73X) - 50 div s0\n:1\nl0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Emergency Light Switch Armed": {
		"method": "calcCode",
		"code": "50 (L:switch_100_73X) - 50 div s0\n:1\nl0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Emergency Light Switch On": {
		"method": "calcCode",
		"code": "100 (L:switch_100_73X) - 50 div s0\n:1\nl0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Gear.Output.PMDG_B737_PARKING_BRAKE_LED": {
		"method": "calcCode",
		"code": "(L:switch_692_73X) 2 *"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 Master Battery Switch On": {
		"method": "calcCode",
		"code": "(L:switch_01_73X) 0 == if{ 101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 Master Battery Switch Off": {
		"method": "calcCode",
		"code": "(L:switch_01_73X) 0 != if{ 101 (>K:ROTOR_BRAKE) }"
	},
	"FenixSim.A320.Engine.Input.FNX320_ENG_MODE_CRANK": {
		"method": "calcCode",
		"code": "0 (>L:S_ENG_MODE)"
	},
	"FenixSim.A320.Engine.Input.FNX320_ENG_MODE_NORMAL": {
		"method": "calcCode",
		"code": "1 (>L:S_ENG_MODE) "
	},
	"FenixSim.A320.Engine.Input.FNX320_ENG_MODE_IGNSTART": {
		"method": "calcCode",
		"code": "2 (>L:S_ENG_MODE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_DOME_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_INT_LT_DOME)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_DOME_DIM": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_INT_LT_DOME)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_DOME_BRT": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_INT_LT_DOME)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Pedestal Flood Bright Knob Dec": {
		"method": "calcCode",
		"code": "75608 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Pedestal Flood Bright Knob Inc": {
		"method": "calcCode",
		"code": "75607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Pedestal Panel Bright Knob  Dec": {
		"method": "calcCode",
		"code": "75708 (>K:ROTOR_BRAKE)\n"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Pedestal Panel Bright Knob  Inc": {
		"method": "calcCode",
		"code": "75707 (>K:ROTOR_BRAKE)\n"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Emergency Light Switch Guard Toggle": {
		"method": "calcCode",
		"code": "10101 (>K:ROTOR_BRAKE)\n"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NAVLOGO_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_NAV_LOGO)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NAVLOGO_NAV": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_NAV_LOGO)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NAVLOGO_LOGO": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_NAV_LOGO)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_STROBE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_STROBE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_STROBE_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_STROBE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_STROBE_ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_STROBE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_BEACON_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_BEACON)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_BEACON_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_BEACON)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_WING_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_WING)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_WING_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_WING)"
	},
	"Microsoft.Generic.Avionics.Input.AS530_CDI_Push": {
		"method": "calcCode",
		"code": "(>H:AS530_CDI_Push)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_AP1_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_AP1) ++ (>L:S_FCU_AP1)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_AP1_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_AP1) ++ (>L:S_FCU_AP1)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_AP2_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_AP2) ++ (>L:S_FCU_AP2)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_AP2_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_AP2) ++ (>L:S_FCU_AP2)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS1_FD_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS1_FD_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS2_FD_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_FD) ++ (>L:S_FCU_EFIS2_FD)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS2_FD_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_FD) (>L:S_FCU_EFIS2_FD"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_LOC_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_LOC) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_LOC) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_LOC_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_LOC) ++ (>L:S_FCU_LOC)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_APPR_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_APPR) ++ (>L:S_FCU_APPR)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_APPR_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_APPR) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_APPR) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_TRK_FPA_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_HDGVS_TRKFPA) ++ (>L:S_FCU_HDGVS_TRKFPA)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_TRK_FPA_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_HDGVS_TRKFPA) ++ (>L:S_FCU_HDGVS_TRKFPA)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EXPED_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_EXPED) ++ (>L:S_FCU_EXPED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EXPED_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_EXPED) ++ (>L:S_FCU_EXPED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_SCALE_1000": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_ALTITUDE_SCALE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_SCALE_100": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_ALTITUDE_SCALE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ATHR_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_ATHR) ++ (>L:S_FCU_ATHR)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ATHR_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_ATHR) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_ATHR) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS1_LS_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_LS) ++ (>L:S_FCU_EFIS1_LS)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS1_LS_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_LS) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_EFIS1_LS) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS2_LS_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_LS) ++ (>L:S_FCU_EFIS2_LS)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_EFIS2_LS_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_LS) s0 2 % 0 != if{\n  l0 ++ (>L:S_FCU_EFIS2_LS) }"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_L_RETRACT": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_LANDING_L)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_L_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_LANDING_L)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_L_ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_LANDING_L)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_R_RETRACT": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_LANDING_R)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_R_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_LANDING_R)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_R_ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_LANDING_R)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_BOTH_RETRACT": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_LANDING_L) 0 (>L:S_OH_EXT_LT_LANDING_R) \n0 (>L:S_OH_EXT_LT_LANDING_BOTH) "
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_BOTH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_LANDING_L) 1 (>L:S_OH_EXT_LT_LANDING_R) \n1 (>L:S_OH_EXT_LT_LANDING_BOTH) "
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_BOTH_ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_LANDING_L) 2 (>L:S_OH_EXT_LT_LANDING_R) \n2 (>L:S_OH_EXT_LT_LANDING_BOTH) "
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_RWY_TURNOFF_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_RWY_TURNOFF)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_RWY_TURNOFF_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_RWY_TURNOFF)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NOSE_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_EXT_LT_NOSE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NOSE_TAXI": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_EXT_LT_NOSE)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NOSE_TO": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_EXT_LT_NOSE)"
	},
	"Just Flight.Piper Arrow III.Radio.Input.GNS530_COM_RADIO_VOLUME_POTENTIOMETER": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:COM1_VOLUME_SET)"
	},
	"Just Flight.Piper Arrow III.Radio.Input.GNS530_NAV_RADIO_VOLUME_POTENTIOMETER": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:NAV1_VOLUME_SET_EX1)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_ALTITUDE) ++ (>L:E_FCU_ALTITUDE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_ALTITUDE) -- (>L:E_FCU_ALTITUDE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_KNOB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_ALTITUDE) -- (>L:S_FCU_ALTITUDE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_KNOB_PULL": {
		"method": "calcCode",
		"code": "(L:S_FCU_ALTITUDE) ++ (>L:S_FCU_ALTITUDE)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_HEADING_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_HEADING) ++ (>L:E_FCU_HEADING)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_HEADING_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_HEADING) -- (>L:E_FCU_HEADING)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_HEADING_KNOB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_HEADING) -- (>L:S_FCU_HEADING)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_HEADING_KNOB_PULL": {
		"method": "calcCode",
		"code": "(L:S_FCU_HEADING) ++ (>L:S_FCU_HEADING)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPEED_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_SPEED) ++ (>L:E_FCU_SPEED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPEED_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_SPEED) -- (>L:E_FCU_SPEED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPEED_KNOB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_SPEED) -- (>L:S_FCU_SPEED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPEED_KNOB_PULL": {
		"method": "calcCode",
		"code": "(L:S_FCU_SPEED) ++ (>L:S_FCU_SPEED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_VS_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_VS) -- (>L:E_FCU_VS)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_VS_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_VS) ++ (>L:E_FCU_VS)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_VS_KNOB_PULL": {
		"method": "calcCode",
		"code": "(L:S_FCU_VERTICAL_SPEED) ++ (>L:S_FCU_VERTICAL_SPEED)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_VS_KNOB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_VERTICAL_SPEED) -- (>L:S_FCU_VERTICAL_SPEED)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_SEAT_BELTS_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_SIGNS)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_SEAT_BELTS_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_SIGNS)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_NO_SMOKING_ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_SIGNS_SMOKING)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_NO_SMOKING_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_SIGNS_SMOKING)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_NO_SMOKING_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_SIGNS_SMOKING)"
	},
	"PMDG.B737-700.Flight Instrumentation.Input.PMDG_B737-7_HGS_HUD_UP_DOWN_SWITCH": {
		"method": "calcCode",
		"code": "97901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Flight Instrumentation.Input.PMDG_B737-7_HGS_HUD_BRT_AUTO_MAN_SWITCH": {
		"method": "calcCode",
		"code": "98101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Flight Instrumentation.Input.PMDG_B737-7_HGS_HUD_BRIGHTNESS_KNOB_DEC": {
		"method": "calcCode",
		"code": "98008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Flight Instrumentation.Input.PMDG_B737-7_HGS_HUD_BRIGHTNESS_KNOB_INC": {
		"method": "calcCode",
		"code": "98007 (>K:ROTOR_BRAKE)"
	},
	"Hype Performance Group.H135.Electrical.Input.H135 MASTER AND STANDBY BATTERY ON": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_SET)"
	},
	"Hype Performance Group.H135.Electrical.Input.H135 MASTER AND STANDBY BATTERY OFF": {
		"method": "calcCode",
		"code": "0 (>K:MASTER_BATTERY_SET)"
	},
	"Hype Performance Group.H135.Electrical.Input.H135 MASTER AND STANDBY BATTERY TOGGLE": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_MASTER_BATTERY)\t"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 AVIONICS 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 AVIONICS 1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 AVIONICS 2 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 AVIONICS 2 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_2_SET)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_SCALE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_FCU_ALTITUDE_SCALE, Bool) if{ 0 (>L:S_FCU_ALTITUDE_SCALE) } els{ 1 (>L:S_FCU_ALTITUDE_SCALE) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_METRIC_ALT_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_METRIC_ALT) ++ (>L:S_FCU_METRIC_ALT)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_METRIC_ALT_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_METRIC_ALT) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_METRIC_ALT) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPD_MACH_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FCU_SPD_MACH) ++ (>L:S_FCU_SPD_MACH)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPD_MACH_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FCU_SPD_MACH) ++ (>L:S_FCU_SPD_MACH)"
	},
	"PMDG.B737-700.Gear.Input.PMDG_B737-7_GEAR_HORN_CUTOUT": {
		"method": "calcCode",
		"code": "71301 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_LS": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_VOR": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_NAV": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_ARC": {
		"method": "calcCode",
		"code": "3 (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_10": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_20": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_40": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_80": {
		"method": "calcCode",
		"code": "3 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_160": {
		"method": "calcCode",
		"code": "4 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_320": {
		"method": "calcCode",
		"code": "5 (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_INC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_ND_ZOOM) ++ 5 min (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_RANGE_DEC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_ND_ZOOM) -- 0 max (>L:S_FCU_EFIS1_ND_ZOOM)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_INC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_ND_MODE) ++ 4 min (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_ND_MODE_DEC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_ND_MODE) -- 0 max (>L:S_FCU_EFIS1_ND_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_STD_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_STD_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_STD_TOG": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_BARO_STD) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS1_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_MODE_INHG": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_BARO_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_MODE_HPA": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_BARO_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_MODE_TOG": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_BARO_MODE) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS1_BARO_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_LS": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_VOR": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_NAV": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_ARC": {
		"method": "calcCode",
		"code": "3 (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_10": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_20": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_40": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_80": {
		"method": "calcCode",
		"code": "3 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_160": {
		"method": "calcCode",
		"code": "4 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_320": {
		"method": "calcCode",
		"code": "5 (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_STD_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_BARO_STD)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_STD_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_BARO_STD)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_STD_TOG": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_BARO_STD) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS2_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_MODE_INHG": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_BARO_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_MODE_HPA": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_BARO_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_MODE_TOG": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_BARO_MODE) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS2_BARO_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_INC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_ND_ZOOM) ++ 5 min (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_RANGE_DEC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_ND_ZOOM) -- 0 max (>L:S_FCU_EFIS2_ND_ZOOM)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_INC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_ND_MODE) ++ 4 min (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_ND_MODE_DEC": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_ND_MODE) -- 0 max (>L:S_FCU_EFIS2_ND_MODE)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_PFD_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CO) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CO)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_PFD_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CO) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CO)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_ND_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CI) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CI)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_ND_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CI) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CI)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_ND_WX_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CI_OUTER)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_L_ND_WX_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CI_OUTER)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_PFD_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FO) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FO)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_PFD_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FO) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FO)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_ND_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FI) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FI)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_ND_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FI) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FI)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_ND_WX_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FI_OUTER)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNESS_R_ND_WX_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FI_OUTER)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNES_ECAM_U_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_ECAM_U) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_U)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNES_ECAM_U_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_ECAM_U) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_ECAM_U)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNES_ECAM_L_INC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_ECAM_L) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_L)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_DISPLAY_BRIGHTNES_ECAM_L_DEC": {
		"method": "calcCode",
		"code": "(L:A_DISPLAY_BRIGHTNESS_ECAM_L) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_ECAM_L)\n"
	},
	"FenixSim.A320.Lights.Input.FNX320 FCU DISPLAY BRIGHTNESS INC": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING_TEXT) 0.05 + 1 min (>L:A_FCU_LIGHTING_TEXT)\n"
	},
	"FenixSim.A320.Lights.Input.FNX320 FCU DISPLAY BRIGHTNESS DEC": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING_TEXT) 0.05 - 0 max (>L:A_FCU_LIGHTING_TEXT)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_MAP_L_INC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_MAP_L) 0.05 + 1 min (>L:A_MIP_LIGHTING_MAP_L)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_MAP_L_DEC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_MAP_L) 0.05 - 0 max (>L:A_MIP_LIGHTING_MAP_L)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_MAP_R_INC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_MAP_R) 0.05 + 1 min (>L:A_MIP_LIGHTING_MAP_R)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_MAP_R_DEC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_MAP_R) 0.05 - 0 max (>L:A_MIP_LIGHTING_MAP_R)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_FLOOD_MAIN_INC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_FLOOD_MAIN) 0.05 + 1 min (>L:A_MIP_LIGHTING_FLOOD_MAIN)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_FLOOD_MAIN_DEC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_FLOOD_MAIN) 0.05 - 0 max (>L:A_MIP_LIGHTING_FLOOD_MAIN)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_FLOOD_PED_INC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 0.05 + 1 min (>L:A_MIP_LIGHTING_FLOOD_PEDESTAL)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_LIGHTING_FLOOD_PED_DEC": {
		"method": "calcCode",
		"code": "(L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 0.05 - 0 max (>L:A_MIP_LIGHTING_FLOOD_PEDESTAL)\n"
	},
	"FenixSim.A320.Lights.Input.FNX320 FCU INTG BRIGHTNESS INC": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING) 0.05 + 1 min (>L:A_FCU_LIGHTING)\n"
	},
	"FenixSim.A320.Lights.Input.FNX320 FCU INTG BRIGHTNESS DEC": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING) 0.05 - 0 max (>L:A_FCU_LIGHTING)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32 OH INTEG LIGHTING INC": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_OVD) 0.05 + 1 min (>L:A_OH_LIGHTING_OVD)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32 OH INTEG LIGHTING DEC": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_OVD) 0.05 - 0 max (>L:A_OH_LIGHTING_OVD)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_INTG_LIGHTING_INC": {
		"method": "calcCode",
		"code": "(L:A_PED_LIGHTING_PEDESTAL) 0.05 + 1 min (>L:A_PED_LIGHTING_PEDESTAL)\n"
	},
	"FenixSim.A320.Lights.Input.FNX32_MIP_INTG_LIGHTING_DEC": {
		"method": "calcCode",
		"code": "(L:A_PED_LIGHTING_PEDESTAL) 0.05 - 0 max (>L:A_PED_LIGHTING_PEDESTAL)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 PITOT HEATER 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_ON)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 PITOT HEATER 1 OFF": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_OFF)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 PITOT HEATER 2 ON": {
		"method": "calcCode",
		"code": "2 (>K:PITOT_HEAT_ON)"
	},
	"Hype Performance Group.H135.Avionics.Input.H135 PITOT HEATER 2 OFF": {
		"method": "calcCode",
		"code": "2 (>K:PITOT_HEAT_OFF)"
	},
	"Hype Performance Group.H135.Warning System.Input.H135 WARNING LIGHTS TEST TOGGLE": {
		"method": "calcCode",
		"code": "(L:WARNIGNS_TEST_ON) ! (>L:WARNIGNS_TEST_ON)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 CABIN LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:CABIN_LIGHTS_ON)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 CABIN LIGHT OFF": {
		"method": "calcCode",
		"code": "1 (>K:CABIN_LIGHTS_OFF)"
	},
	"FenixSim.A320.Engine.Input.FNX320_AUTOTHROTTLE_LEFT_DISC_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FC_THR_INST_DISCONNECT1) ++ (>L:S_FC_THR_INST_DISCONNECT1)\n"
	},
	"FenixSim.A320.Engine.Input.FNX320_AUTOTHROTTLE_LEFT_DISC_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FC_THR_INST_DISCONNECT1) s0 2 % 0 != if{ \n  l0 ++ (>L:S_FC_THR_INST_DISCONNECT1) } "
	},
	"FenixSim.A320.Engine.Input.FNX320_AUTOTHROTTLE_RIGHT_DISC_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FC_THR_INST_DISCONNECT2) ++ (>L:S_FC_THR_INST_DISCONNECT2) "
	},
	"FenixSim.A320.Engine.Input.FNX320_AUTOTHROTTLE_RIGHT_DISC_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FC_THR_INST_DISCONNECT2) s0 2 % 0 != if{ \n  l0 ++ (>L:S_FC_THR_INST_DISCONNECT2) }"
	},
	"FenixSim.A320.Electrical.Input.FNX320_OVHD_BAT1_L_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_ELEC_BAT1)"
	},
	"FenixSim.A320.Electrical.Input.FNX320_OVHD_BAT2_L_ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_ELEC_BAT2)"
	},
	"FenixSim.A320.Electrical.Input.FNX320_OVHD_BAT1_L_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_ELEC_BAT1)"
	},
	"FenixSim.A320.Electrical.Input.FNX320_OVHD_BAT2_L_OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_ELEC_BAT2)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 CABIN LIGHT TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_CABIN_LIGHTS)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 POS LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:NAV_LIGHTS_ON)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 POS LIGHT OFF": {
		"method": "calcCode",
		"code": "1 (>K:NAV_LIGHTS_OFF)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 POS LIGHT TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_NAV_LIGHTS)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 ACOL LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_ON)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 ACOL LIGHT OFF": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_OFF)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 ACOL LIGHT Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_BEACON_LIGHTS)"
	},
	"Hype Performance Group.H135.Autopilot System.Input.H135 AP A_TRIM TOGGLE": {
		"method": "calcCode",
		"code": "(L:APCP_ATRIM) ! (>L:APCP_ATRIM)"
	},
	"Hype Performance Group.H135.Autopilot System.Input.H135 AP BACKUP TOGGLE": {
		"method": "calcCode",
		"code": "(L:APCP_BACKUP) ! (>L:APCP_BACKUP)"
	},
	"Hype Performance Group.H135.Autopilot System.Input.H135 AP AP1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:APCP_AP1) ! (>L:APCP_AP1)"
	},
	"Hype Performance Group.H135.Autopilot System.Input.H135 AP AP2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:APCP_AP2) ! (>L:APCP_AP2)"
	},
	"Hype Performance Group.H135.Autopilot System.Input.H135 AP ALT HOLD TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel Bright Dec": {
		"method": "calcCode",
		"code": "32808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel Bright Inc": {
		"method": "calcCode",
		"code": "32807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 OUTBD DU BRT Inc": {
		"method": "calcCode",
		"code": "32908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 OUTBD DU BRT Dec": {
		"method": "calcCode",
		"code": "32907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 INBD DU BRT Dec": {
		"method": "calcCode",
		"code": "33008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 INBD DU BRT Inc": {
		"method": "calcCode",
		"code": "33007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 INBD DU RDR BRT Dec": {
		"method": "calcCode",
		"code": "33108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 INBD DU RDR BRT Inc": {
		"method": "calcCode",
		"code": "33107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 LOW DU BRT Dec": {
		"method": "calcCode",
		"code": "33208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 LOW DU BRT Inc": {
		"method": "calcCode",
		"code": "33207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 LOW DU BRT Dec C": {
		"method": "calcCode",
		"code": "33308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 LOW DU BRT Inc C": {
		"method": "calcCode",
		"code": "33307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 UPPER DU BRT Dec": {
		"method": "calcCode",
		"code": "33408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 UPPER DU BRT Inc": {
		"method": "calcCode",
		"code": "33407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 MAIN PANEL Dus Dec": {
		"method": "calcCode",
		"code": "33508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 MAIN PANEL Dus Inc": {
		"method": "calcCode",
		"code": "33507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 LOWER DU L Selector Dec": {
		"method": "calcCode",
		"code": "33608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 LOWER DU L Selector Inc": {
		"method": "calcCode",
		"code": "33607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Background Bright Knob Dec": {
		"method": "calcCode",
		"code": "33708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Background Bright Knob Inc": {
		"method": "calcCode",
		"code": "33707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Capt A/P P/RST Button": {
		"method": "calcCode",
		"code": "33901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 A/T P/RST Button": {
		"method": "calcCode",
		"code": "34001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 FMC P/RST Button": {
		"method": "calcCode",
		"code": "34101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Lights Switch Test": {
		"method": "calcCode",
		"code": "0 (L:switch_346_73X) - 50 div s0\n:1\nl0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Lights Switch BRT": {
		"method": "calcCode",
		"code": "50 (L:switch_346_73X) - 50 div s0\n:1\nl0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Lights Switch DIM": {
		"method": "calcCode",
		"code": "100 (L:switch_346_73X) - 50 div s0\n:1\nl0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L VHF1 RECEIVE": {
		"method": "calcCode",
		"code": "73901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L VHF2 RECEIVE": {
		"method": "calcCode",
		"code": "74001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L VHF3 RECEIVE": {
		"method": "calcCode",
		"code": "74101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L HF1 RECEIVE": {
		"method": "calcCode",
		"code": "74201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L FLT RECEIVE": {
		"method": "calcCode",
		"code": "74301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L SVC RECEIVE": {
		"method": "calcCode",
		"code": "74401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L PA RECEIVE": {
		"method": "calcCode",
		"code": "74501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L NAV1 RECEIVE": {
		"method": "calcCode",
		"code": "74601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L NAV2 RECEIVE": {
		"method": "calcCode",
		"code": "74701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L ADF1 RECEIVE": {
		"method": "calcCode",
		"code": "74801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L ADF2 RECEIVE": {
		"method": "calcCode",
		"code": "74901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L MKR RECEIVE": {
		"method": "calcCode",
		"code": "75001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L SPKR RECEIVE": {
		"method": "calcCode",
		"code": "75101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L R/T I/C": {
		"method": "calcCode",
		"code": "75201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L MASK/BOOM": {
		"method": "calcCode",
		"code": "75301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio L ALT/NORM": {
		"method": "calcCode",
		"code": "75501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 Select XPNDR 1/2": {
		"method": "calcCode",
		"code": "79801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE Knob Dec": {
		"method": "calcCode",
		"code": "80008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE Knob Inc": {
		"method": "calcCode",
		"code": "80007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE STBY": {
		"method": "calcCode",
		"code": "0 (L:switch_800_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE ALT RPTG OFF": {
		"method": "calcCode",
		"code": "10 (L:switch_800_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 TCAS MODE XPNDR": {
		"method": "calcCode",
		"code": "20 (L:switch_800_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE TA ONLY": {
		"method": "calcCode",
		"code": "30 (L:switch_800_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS MODE TA RA": {
		"method": "calcCode",
		"code": "40 (L:switch_800_73X) - 10 div s0\r\n:1\r\nl0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\r\nl0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 TCAS TEST Button": {
		"method": "calcCode",
		"code": "80101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC ALT SOURCE": {
		"method": "calcCode",
		"code": "80301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Left Outer Dec": {
		"method": "calcCode",
		"code": "80408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Left Outer Inc": {
		"method": "calcCode",
		"code": "80407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Left Inner Dec": {
		"method": "calcCode",
		"code": "80508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Left Inner Inc": {
		"method": "calcCode",
		"code": "80507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 IDENT Button": {
		"method": "calcCode",
		"code": "80601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Right Outer Dec": {
		"method": "calcCode",
		"code": "80708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Right Outer Inc": {
		"method": "calcCode",
		"code": "80707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Right Inner Dec": {
		"method": "calcCode",
		"code": "80808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ATC Code Right Inner Inc": {
		"method": "calcCode",
		"code": "80807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R VHF1 RECEIVE": {
		"method": "calcCode",
		"code": "85501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R VHF2 RECEIVE": {
		"method": "calcCode",
		"code": "85601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R VHF3 RECEIVE": {
		"method": "calcCode",
		"code": "85701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R HF1 RECEIVE": {
		"method": "calcCode",
		"code": "85801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R FLT RECEIVE": {
		"method": "calcCode",
		"code": "85901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R SVC RECEIVE": {
		"method": "calcCode",
		"code": "86001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R PA RECEIVE": {
		"method": "calcCode",
		"code": "86101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R NAV1 RECEIVE": {
		"method": "calcCode",
		"code": "86201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R NAV2 RECEIVE": {
		"method": "calcCode",
		"code": "86301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R ADF1 RECEIVE": {
		"method": "calcCode",
		"code": "86401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R ADF2 RECEIVE": {
		"method": "calcCode",
		"code": "86501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R MKR RECEIVE": {
		"method": "calcCode",
		"code": "86601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R SPKR RECEIVE": {
		"method": "calcCode",
		"code": "86701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R R/T I/C": {
		"method": "calcCode",
		"code": "86801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R MASK/BOOM": {
		"method": "calcCode",
		"code": "86901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Radio R ALT/NORM": {
		"method": "calcCode",
		"code": "87101 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 BRIGHTNESS DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_BRIGHTNESS_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 BRIGHTNESS DOWN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_BRIGHTNESS_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 BRIGHTNESS UP Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_BRIGHTNESS_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 BRIGHTNESS UP Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_BRIGHTNESS_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_0)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 0 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_0)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_1)"
	},
	"FenixSim.A320.MCDU.Input.FNX320 CDU1 KEY 1 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_1)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_2)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 2 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_2)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_3)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 3 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_3)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_4)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 4 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_4)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_5)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 5 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_5)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_6)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 6 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_6)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_7)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 7 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_7)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_8)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 8 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_8)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_9)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY 9 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_9)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY A Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_A)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY A Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_A)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY AIRPORT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_AIRPORT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY AIRPORT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_AIRPORT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_ARROW_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW DOWN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_ARROW_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW LEFT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_ARROW_LEFT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW LEFT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_ARROW_LEFT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW RIGHT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_ARROW_RIGHT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW RIGHT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_ARROW_RIGHT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW UP Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_ARROW_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ARROW UP Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_ARROW_UP)"
	},
	"FenixSim.A320.MCDU.Input.FNX320 CDU1 KEY ATC COM Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_ATC_COM)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY ATC COM Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_ATC_COM)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY B Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_B)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY B Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_B)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY C Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_C)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY C Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_C)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY CLEAR Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_CLEAR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY CLEAR Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_CLEAR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY D Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_D)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY D Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_D)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DATA Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_DATA)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DATA Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_DATA)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DIR Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_DIR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DIR Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_DIR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_DOT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY DOT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_DOT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY E Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_E)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY E Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_E)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY F Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_F)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY F Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_F)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY FPLN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY FUEL PRED Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_FUEL_PRED)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY FUEL PRED Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_FUEL_PRED)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY G Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_G)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY G Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_G)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY H Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_H)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY H Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_H)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY I Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_I)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY I Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_I)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY INIT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_INIT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY INIT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_INIT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY J Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_J)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY J Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_J)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY K Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_K)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY K Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_K)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK1L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK1L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK1L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK1L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK1R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK1R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK1R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK1R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK2L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK2L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK2L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK2L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK2R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK2R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK2R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK2R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK3L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK3L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK3L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK3L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK3R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK3R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK3R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK3R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK4L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK4L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK4L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK4L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK4R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK4R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK4R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK4R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK5L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK5L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK5L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK5L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK5R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK5R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK5R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK5R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK6L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK6L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK6L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK6L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK6R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_LSK6R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY LSK6R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_LSK6R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY M Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_M)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY M Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_M)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY MENU Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY MINUS Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_MINUS)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY MINUS Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_MINUS)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY N Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_N)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY N Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_N)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY O Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_O)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY O Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_O)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY OVFLY Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_OVFLY)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY OVFLY Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_OVFLY)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY P Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_P)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY P Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_P)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY PERF Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_PERF)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY PERF Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_PERF)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY PROG Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_PROG)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY PROG Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_PROG)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Q Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_Q)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Q Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_Q)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY RAD NAV Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_RAD_NAV)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY RAD NAV Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_RAD_NAV)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY S Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_S)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY S Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_S)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SEC FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_SEC_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SEC FPLN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_SEC_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_SLASH)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SLASH Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_SLASH)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SPACE Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_SPACE)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY SPACE Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_SPACE)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY T Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_T)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY T Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_T)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY U Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_U)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY U Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_U)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY V Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_V)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY V Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_V)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY W Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_W)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY W Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_W)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY X Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_X)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY X Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_X)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Y Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_Y)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Y Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_Y)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Z Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU1_KEY_Z)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU1 KEY Z Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU1_KEY_Z)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 BRIGHTNESS DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_BRIGHTNESS_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 BRIGHTNESS DOWN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_BRIGHTNESS_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 BRIGHTNESS UP Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_BRIGHTNESS_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 BRIGHTNESS UP Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_BRIGHTNESS_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_0)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 0 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_0)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_1)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 1 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_1)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_2)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 2 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_2)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_3)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 3 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_3)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_4)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 4 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_4)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_5)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 5 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_5)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_6)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 6 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_6)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_7)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 7 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_7)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_8)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 8 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_8)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_9)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY 9 Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_9)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY A Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_A)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY A Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_A)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY AIRPORT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_AIRPORT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY AIRPORT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_AIRPORT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_ARROW_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW DOWN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_ARROW_DOWN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW LEFT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_ARROW_LEFT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW LEFT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_ARROW_LEFT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW RIGHT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_ARROW_RIGHT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW RIGHT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_ARROW_RIGHT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW UP Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_ARROW_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ARROW UP Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_ARROW_UP)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ATC COM Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_ATC_COM)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY ATC COM Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_ATC_COM)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY B Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_B)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY B Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_B)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY C Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_C)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY C Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_C)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY CLEAR Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_CLEAR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY CLEAR Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_CLEAR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY D Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_D)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY D Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_D)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DATA Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_DATA)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DATA Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_DATA)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DIR Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_DIR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DIR Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_DIR)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_DOT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY DOT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_DOT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY E Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_E)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY E Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_E)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY F Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_F)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY F Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_F)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY FPLN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY FUEL PRED Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_FUEL_PRED)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY FUEL PRED Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_FUEL_PRED)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY G Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_G)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY G Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_G)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY H Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_H)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY H Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_H)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY I Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_I)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY I Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_I)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY INIT Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_INIT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY INIT Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_INIT)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY J Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_J)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY J Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_J)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY K Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_K)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY K Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_K)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK1L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK1L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK1L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK1L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK1R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK1R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK1R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK1R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK2L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK2L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK2L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK2L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK2R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK2R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK2R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK2R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK3L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK3L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK3L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK3L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK3R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK3R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK3R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK3R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK4L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK4L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK4L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK4L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK4R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK4R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK4R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK4R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK5L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK5L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK5L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK5L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK5R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK5R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK5R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK5R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK6L Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK6L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK6L Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK6L)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK6R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_LSK6R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY LSK6R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_LSK6R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY M Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_M)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY M Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_M)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY MENU Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY MINUS Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_MINUS)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY MINUS Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_MINUS)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY N Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_N)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY N Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_N)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY O Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_O)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY O Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_O)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY OVFLY Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_OVFLY)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY OVFLY Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_OVFLY)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY P Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_P)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY P Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_P)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY PERF Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_PERF)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY PERF Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_PERF)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY PROG Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_PROG)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY PROG Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_PROG)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Q Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_Q)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Q Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_Q)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY R Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY R Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_R)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY RAD NAV Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_RAD_NAV)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY RAD NAV Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_RAD_NAV)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY S Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_S)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY S Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_S)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SEC FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_SEC_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SEC FPLN Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_SEC_FPLN)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_SLASH)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SLASH Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_SLASH)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SPACE Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_SPACE)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY SPACE Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_SPACE)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY T Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_T)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY T Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_T)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY U Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_U)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY U Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_U)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY V Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_V)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY V Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_V)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY W Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_W)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY W Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_W)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY X Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_X)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY X Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_X)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Y Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_Y)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Y Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_Y)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Z Press": {
		"method": "calcCode",
		"code": "1 (>L:S_CDU2_KEY_Z)"
	},
	"FenixSim.A320.MCDU.FNX320 CDU2 KEY Z Release": {
		"method": "calcCode",
		"code": "0 (>L:S_CDU2_KEY_Z)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A01 HP FUEL SOV 1": {
		"method": "calcCode",
		"code": "(L:CB_A01_HP_FUEL_SOV_1) ! (>L:CB_A01_HP_FUEL_SOV_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A02 HP FUEL SOV 2": {
		"method": "calcCode",
		"code": "(L:CB_A02_HP_FUEL_SOV_2) ! (>L:CB_A02_HP_FUEL_SOV_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A03 ENG12 IGN SYSA": {
		"method": "calcCode",
		"code": "(L:CB_A03_ENG12_IGN_SYSA) ! (>L:CB_A03_ENG12_IGN_SYSA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A04 ENG1 FADEC A EIU 1": {
		"method": "calcCode",
		"code": "(L:CB_A04_ENG1_FADEC_A_EIU_1) ! (>L:CB_A04_ENG1_FADEC_A_EIU_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A05 ENG2 FADEC A EIU 2": {
		"method": "calcCode",
		"code": "(L:CB_A05_ENG2_FADEC_A_EIU_2) ! (>L:CB_A05_ENG2_FADEC_A_EIU_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A06 ENG1 DET LOOP A": {
		"method": "calcCode",
		"code": "(L:CB_A06_ENG1_DET_LOOP_A) ! (>L:CB_A06_ENG1_DET_LOOP_A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A07 ENG2 DET LOOP B": {
		"method": "calcCode",
		"code": "(L:CB_A07_ENG2_DET_LOOP_B) ! (>L:CB_A07_ENG2_DET_LOOP_B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A08 LP VALVE MOT1 ENG1": {
		"method": "calcCode",
		"code": "(L:CB_A08_LP_VALVE_MOT1_ENG1) ! (>L:CB_A08_LP_VALVE_MOT1_ENG1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A09 LP VALVE MOT1 ENG2": {
		"method": "calcCode",
		"code": "(L:CB_A09_LP_VALVE_MOT1_ENG2) ! (>L:CB_A09_LP_VALVE_MOT1_ENG2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A10 XFR VALVE 1 L": {
		"method": "calcCode",
		"code": "(L:CB_A10_XFR_VALVE_1_L) ! (>L:CB_A10_XFR_VALVE_1_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A11 XFR VALVE 1 R": {
		"method": "calcCode",
		"code": "(L:CB_A11_XFR_VALVE_1_R) ! (>L:CB_A11_XFR_VALVE_1_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A12 XFEED VALVE MOT1": {
		"method": "calcCode",
		"code": "(L:CB_A12_XFEED_VALVE_MOT1) ! (>L:CB_A12_XFEED_VALVE_MOT1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A13 FQI CHAN 1": {
		"method": "calcCode",
		"code": "(L:CB_A13_FQI_CHAN_1) ! (>L:CB_A13_FQI_CHAN_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker A14 SMOKE CONFIG PUMP CTL": {
		"method": "calcCode",
		"code": "(L:CB_A14_SMOKE_CONFIG_PUMP_CTL) ! (>L:CB_A14_SMOKE_CONFIG_PUMP_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker AB01 BUS 2 231XP SPLY": {
		"method": "calcCode",
		"code": "(L:CB_AB01_BUS_2_231XP_SPLY) ! (>L:CB_AB01_BUS_2_231XP_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker AB09 B HYD ELEC PUMP": {
		"method": "calcCode",
		"code": "(L:CB_AB09_B_HYD_ELEC_PUMP) ! (>L:CB_AB09_B_HYD_ELEC_PUMP)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker AB12 BUS 1 131XP SPLY": {
		"method": "calcCode",
		"code": "(L:CB_AB12_BUS_1_131XP_SPLY) ! (>L:CB_AB12_BUS_1_131XP_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B01 MCDU 1": {
		"method": "calcCode",
		"code": "(L:CB_B01_MCDU_1) ! (>L:CB_B01_MCDU_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B02 FMGC1": {
		"method": "calcCode",
		"code": "(L:CB_B02_FMGC1) ! (>L:CB_B02_FMGC1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B03 FAC 1 NORM": {
		"method": "calcCode",
		"code": "(L:CB_B03_FAC_1_NORM) ! (>L:CB_B03_FAC_1_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B04 FAC 1 STBY": {
		"method": "calcCode",
		"code": "(L:CB_B04_FAC_1_STBY) ! (>L:CB_B04_FAC_1_STBY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B05 FCU1": {
		"method": "calcCode",
		"code": "(L:CB_B05_FCU1) ! (>L:CB_B05_FCU1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B06 SLAT CTL MON SYS 1": {
		"method": "calcCode",
		"code": "(L:CB_B06_SLAT_CTL_MON_SYS_1) ! (>L:CB_B06_SLAT_CTL_MON_SYS_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B07 FLAP CTL MON SYS 1": {
		"method": "calcCode",
		"code": "(L:CB_B07_FLAP_CTL_MON_SYS_1) ! (>L:CB_B07_FLAP_CTL_MON_SYS_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B08 SEC 1 NORM": {
		"method": "calcCode",
		"code": "(L:CB_B08_SEC_1_NORM) ! (>L:CB_B08_SEC_1_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B09 FC THS MOT2": {
		"method": "calcCode",
		"code": "(L:CB_B09_FC_THS_MOT2) ! (>L:CB_B09_FC_THS_MOT2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B10 FCTL FCDC1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_B10_FCTL_FCDC1_SPLY) ! (>L:CB_B10_FCTL_FCDC1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B11 ELAC 1 NORM": {
		"method": "calcCode",
		"code": "(L:CB_B11_ELAC_1_NORM) ! (>L:CB_B11_ELAC_1_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B12 SLT FLP 1 POS IND": {
		"method": "calcCode",
		"code": "(L:CB_B12_SLT_FLP_1_POS_IND) ! (>L:CB_B12_SLT_FLP_1_POS_IND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker B14 APU FUEL BLOWOFF PUMP": {
		"method": "calcCode",
		"code": "(L:CB_B14_APU_FUEL_BLOWOFF_PUMP) ! (>L:CB_B14_APU_FUEL_BLOWOFF_PUMP)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C01 WING ANTI ICE MON": {
		"method": "calcCode",
		"code": "(L:CB_C01_WING_ANTI_ICE_MON) ! (>L:CB_C01_WING_ANTI_ICE_MON)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C02 WING ANTI ICE CTL": {
		"method": "calcCode",
		"code": "(L:CB_C02_WING_ANTI_ICE_CTL) ! (>L:CB_C02_WING_ANTI_ICE_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C07 AFT CARGO VENT CTL MON": {
		"method": "calcCode",
		"code": "(L:CB_C07_AFT_CARGO_VENT_CTL_MON) ! (>L:CB_C07_AFT_CARGO_VENT_CTL_MON)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C09 LGCIU 1": {
		"method": "calcCode",
		"code": "(L:CB_C09_LGCIU_1) ! (>L:CB_C09_LGCIU_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C10 ABCU SPLY": {
		"method": "calcCode",
		"code": "(L:CB_C10_ABCU_SPLY) ! (>L:CB_C10_ABCU_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C11 HYD RESS XMTR": {
		"method": "calcCode",
		"code": "(L:CB_C11_HYD_RESS_XMTR) ! (>L:CB_C11_HYD_RESS_XMTR)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C12 HYD POWER B WARN CTL": {
		"method": "calcCode",
		"code": "(L:CB_C12_HYD_POWER_B_WARN_CTL) ! (>L:CB_C12_HYD_POWER_B_WARN_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C13 FIRE VALVE G ENG 1": {
		"method": "calcCode",
		"code": "(L:CB_C13_FIRE_VALVE_G_ENG_1) ! (>L:CB_C13_FIRE_VALVE_G_ENG_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker C14 FIRE VALVE Y ENG 2": {
		"method": "calcCode",
		"code": "(L:CB_C14_FIRE_VALVE_Y_ENG_2) ! (>L:CB_C14_FIRE_VALVE_Y_ENG_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D02 PROBES 1 PITOT": {
		"method": "calcCode",
		"code": "(L:CB_D02_PROBES_1_PITOT) ! (>L:CB_D02_PROBES_1_PITOT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D03 PROBES 1 PHC SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_D03_PROBES_1_PHC_SUPPLY) ! (>L:CB_D03_PROBES_1_PHC_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D04 PROBES 1 AOA": {
		"method": "calcCode",
		"code": "(L:CB_D04_PROBES_1_AOA) ! (>L:CB_D04_PROBES_1_AOA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D05 AVNCS VENT CTL DC": {
		"method": "calcCode",
		"code": "(L:CB_D05_AVNCS_VENT_CTL_DC) ! (>L:CB_D05_AVNCS_VENT_CTL_DC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D06 AVNCS VENT CTL ESS": {
		"method": "calcCode",
		"code": "(L:CB_D06_AVNCS_VENT_CTL_ESS) ! (>L:CB_D06_AVNCS_VENT_CTL_ESS)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D08 TEMP CTL SYS1 CHANB": {
		"method": "calcCode",
		"code": "(L:CB_D08_TEMP_CTL_SYS1_CHANB) ! (>L:CB_D08_TEMP_CTL_SYS1_CHANB)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D09 CAB PRESS CTL 1": {
		"method": "calcCode",
		"code": "(L:CB_D09_CAB_PRESS_CTL_1) ! (>L:CB_D09_CAB_PRESS_CTL_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D10 RAM AIR INLET": {
		"method": "calcCode",
		"code": "(L:CB_D10_RAM_AIR_INLET) ! (>L:CB_D10_RAM_AIR_INLET)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D11 AIRBLEED ENG1 MONG": {
		"method": "calcCode",
		"code": "(L:CB_D11_AIRBLEED_ENG1_MONG) ! (>L:CB_D11_AIRBLEED_ENG1_MONG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D12 AIRBLEED ENG1 CTL": {
		"method": "calcCode",
		"code": "(L:CB_D12_AIRBLEED_ENG1_CTL) ! (>L:CB_D12_AIRBLEED_ENG1_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker D13 X FEED VALVE BAT": {
		"method": "calcCode",
		"code": "(L:CB_D13_X_FEED_VALVE_BAT) ! (>L:CB_D13_X_FEED_VALVE_BAT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E01 CAPT ND": {
		"method": "calcCode",
		"code": "(L:CB_E01_CAPT_ND) ! (>L:CB_E01_CAPT_ND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E02 DU ND CAPT SWTG": {
		"method": "calcCode",
		"code": "(L:CB_E02_DU_ND_CAPT_SWTG) ! (>L:CB_E02_DU_ND_CAPT_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E03 CAPT PFD": {
		"method": "calcCode",
		"code": "(L:CB_E03_CAPT_PFD) ! (>L:CB_E03_CAPT_PFD)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E04 DU PFD CAPT SWTG": {
		"method": "calcCode",
		"code": "(L:CB_E04_DU_PFD_CAPT_SWTG) ! (>L:CB_E04_DU_PFD_CAPT_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E05 UPPER ECAM": {
		"method": "calcCode",
		"code": "(L:CB_E05_UPPER_ECAM) ! (>L:CB_E05_UPPER_ECAM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E06 DU ECAM UPPER SWTG": {
		"method": "calcCode",
		"code": "(L:CB_E06_DU_ECAM_UPPER_SWTG) ! (>L:CB_E06_DU_ECAM_UPPER_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E07 DMC3 SWTG": {
		"method": "calcCode",
		"code": "(L:CB_E07_DMC3_SWTG) ! (>L:CB_E07_DMC3_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E09 DMC1 SWTG": {
		"method": "calcCode",
		"code": "(L:CB_E09_DMC1_SWTG) ! (>L:CB_E09_DMC1_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E10 DMC3 STDBY SPLY": {
		"method": "calcCode",
		"code": "(L:CB_E10_DMC3_STDBY_SPLY) ! (>L:CB_E10_DMC3_STDBY_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E11 DMC1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_E11_DMC1_SPLY) ! (>L:CB_E11_DMC1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E12 ECAM CTL PNL": {
		"method": "calcCode",
		"code": "(L:CB_E12_ECAM_CTL_PNL) ! (>L:CB_E12_ECAM_CTL_PNL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E13 CVR CTL": {
		"method": "calcCode",
		"code": "(L:CB_E13_CVR_CTL) ! (>L:CB_E13_CVR_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker E14 CVR DC SPLY": {
		"method": "calcCode",
		"code": "(L:CB_E14_CVR_DC_SPLY) ! (>L:CB_E14_CVR_DC_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F01 FWC 1 SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_F01_FWC_1_SUPPLY) ! (>L:CB_F01_FWC_1_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F02 SDAC1 AC ESS REF": {
		"method": "calcCode",
		"code": "(L:CB_F02_SDAC1_AC_ESS_REF) ! (>L:CB_F02_SDAC1_AC_ESS_REF)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F03 SDAC2 AC ESS REF": {
		"method": "calcCode",
		"code": "(L:CB_F03_SDAC2_AC_ESS_REF) ! (>L:CB_F03_SDAC2_AC_ESS_REF)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F04 SDAC 1 SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_F04_SDAC_1_SUPPLY) ! (>L:CB_F04_SDAC_1_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F06 ADIRU 1 115": {
		"method": "calcCode",
		"code": "(L:CB_F06_ADIRU_1_115) ! (>L:CB_F06_ADIRU_1_115)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker F11 CLOCK NORM SPLY": {
		"method": "calcCode",
		"code": "(L:CB_F11_CLOCK_NORM_SPLY) ! (>L:CB_F11_CLOCK_NORM_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G01 CIDS DIR ESS 1": {
		"method": "calcCode",
		"code": "(L:CB_G01_CIDS_DIR_ESS_1) ! (>L:CB_G01_CIDS_DIR_ESS_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G06 ACP CAPT": {
		"method": "calcCode",
		"code": "(L:CB_G06_ACP_CAPT) ! (>L:CB_G06_ACP_CAPT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G07 ACP FO": {
		"method": "calcCode",
		"code": "(L:CB_G07_ACP_FO) ! (>L:CB_G07_ACP_FO)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G09 COM VHF1": {
		"method": "calcCode",
		"code": "(L:CB_G09_COM_VHF1) ! (>L:CB_G09_COM_VHF1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G10 COM RMP1": {
		"method": "calcCode",
		"code": "(L:CB_G10_COM_RMP1) ! (>L:CB_G10_COM_RMP1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G11 NAV ATC1": {
		"method": "calcCode",
		"code": "(L:CB_G11_NAV_ATC1) ! (>L:CB_G11_NAV_ATC1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G12 NAV ILS1": {
		"method": "calcCode",
		"code": "(L:CB_G12_NAV_ILS1) ! (>L:CB_G12_NAV_ILS1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G13 NAV VOR1": {
		"method": "calcCode",
		"code": "(L:CB_G13_NAV_VOR1) ! (>L:CB_G13_NAV_VOR1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker G14 NAV DME1": {
		"method": "calcCode",
		"code": "(L:CB_G14_NAV_DME1) ! (>L:CB_G14_NAV_DME1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H01 COM FWD ATT": {
		"method": "calcCode",
		"code": "(L:CB_H01_COM_FWD_ATT) ! (>L:CB_H01_COM_FWD_ATT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H04 ICE STBY COMPASS LT": {
		"method": "calcCode",
		"code": "(L:CB_H04_ICE_STBY_COMPASS_LT) ! (>L:CB_H04_ICE_STBY_COMPASS_LT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H08 CKPT DOME": {
		"method": "calcCode",
		"code": "(L:CB_H08_CKPT_DOME) ! (>L:CB_H08_CKPT_DOME)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H10 LT CTL": {
		"method": "calcCode",
		"code": "(L:CB_H10_LT_CTL) ! (>L:CB_H10_LT_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H11 AC BUS 8XP MONG": {
		"method": "calcCode",
		"code": "(L:CB_H11_AC_BUS_8XP_MONG) ! (>L:CB_H11_AC_BUS_8XP_MONG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H11 CIDS L AFT": {
		"method": "calcCode",
		"code": "(L:CB_H11_CIDS_L_AFT) ! (>L:CB_H11_CIDS_L_AFT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker H14 NAV ADF1": {
		"method": "calcCode",
		"code": "(L:CB_H14_NAV_ADF1) ! (>L:CB_H14_NAV_ADF1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA1 CREW OXY SPLY": {
		"method": "calcCode",
		"code": "(L:CB_HA1_CREW_OXY_SPLY) ! (>L:CB_HA1_CREW_OXY_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA10 CIDS R FWD": {
		"method": "calcCode",
		"code": "(L:CB_HA10_CIDS_R_FWD) ! (>L:CB_HA10_CIDS_R_FWD)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA12 CIDS R AFT": {
		"method": "calcCode",
		"code": "(L:CB_HA12_CIDS_R_AFT) ! (>L:CB_HA12_CIDS_R_AFT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA14 COM HF1": {
		"method": "calcCode",
		"code": "(L:CB_HA14_COM_HF1) ! (>L:CB_HA14_COM_HF1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA2 PASS OXY CTL 1": {
		"method": "calcCode",
		"code": "(L:CB_HA2_PASS_OXY_CTL_1) ! (>L:CB_HA2_PASS_OXY_CTL_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA3 PASS OXY CTL 2": {
		"method": "calcCode",
		"code": "(L:CB_HA3_PASS_OXY_CTL_2) ! (>L:CB_HA3_PASS_OXY_CTL_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA4 PASS OXY CTL 3": {
		"method": "calcCode",
		"code": "(L:CB_HA4_PASS_OXY_CTL_3) ! (>L:CB_HA4_PASS_OXY_CTL_3)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA5 PASS OXY ACT 1": {
		"method": "calcCode",
		"code": "(L:CB_HA5_PASS_OXY_ACT_1) ! (>L:CB_HA5_PASS_OXY_ACT_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA6 PASS OXY ACT 2": {
		"method": "calcCode",
		"code": "(L:CB_HA6_PASS_OXY_ACT_2) ! (>L:CB_HA6_PASS_OXY_ACT_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA7 PASS OXY ACT 3": {
		"method": "calcCode",
		"code": "(L:CB_HA7_PASS_OXY_ACT_3) ! (>L:CB_HA7_PASS_OXY_ACT_3)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA8 PASS OXY ACT 4": {
		"method": "calcCode",
		"code": "(L:CB_HA8_PASS_OXY_ACT_4) ! (>L:CB_HA8_PASS_OXY_ACT_4)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker HA9 CIDS L FWD": {
		"method": "calcCode",
		"code": "(L:CB_HA9_CIDS_L_FWD) ! (>L:CB_HA9_CIDS_L_FWD)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker J18 CFDIU": {
		"method": "calcCode",
		"code": "(L:CB_J18_CFDIU) ! (>L:CB_J18_CFDIU)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K02 NAV ADF2": {
		"method": "calcCode",
		"code": "(L:CB_K02_NAV_ADF2) ! (>L:CB_K02_NAV_ADF2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K06 NAV DME2": {
		"method": "calcCode",
		"code": "(L:CB_K06_NAV_DME2) ! (>L:CB_K06_NAV_DME2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K07 NAV ATC2": {
		"method": "calcCode",
		"code": "(L:CB_K07_NAV_ATC2) ! (>L:CB_K07_NAV_ATC2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K08 NAV VOR2": {
		"method": "calcCode",
		"code": "(L:CB_K08_NAV_VOR2) ! (>L:CB_K08_NAV_VOR2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K11 RADIO ALT 1": {
		"method": "calcCode",
		"code": "(L:CB_K11_RADIO_ALT_1) ! (>L:CB_K11_RADIO_ALT_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K12 RADIO ALT 2": {
		"method": "calcCode",
		"code": "(L:CB_K12_RADIO_ALT_2) ! (>L:CB_K12_RADIO_ALT_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K19 PDL PWR SPLY": {
		"method": "calcCode",
		"code": "(L:CB_K19_PDL_PWR_SPLY) ! (>L:CB_K19_PDL_PWR_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K23 ": {
		"method": "calcCode",
		"code": "(L:CB_K23_) ! (>L:CB_K23_)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K25 STAT INV": {
		"method": "calcCode",
		"code": "(L:CB_K25_STAT_INV) ! (>L:CB_K25_STAT_INV)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker K39 APU FUEL BLOWOFF CTL": {
		"method": "calcCode",
		"code": "(L:CB_K39_APU_FUEL_BLOWOFF_CTL) ! (>L:CB_K39_APU_FUEL_BLOWOFF_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L02 COM RMP2": {
		"method": "calcCode",
		"code": "(L:CB_L02_COM_RMP2) ! (>L:CB_L02_COM_RMP2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L03 COM RMP3": {
		"method": "calcCode",
		"code": "(L:CB_L03_COM_RMP3) ! (>L:CB_L03_COM_RMP3)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L04 COM VHF2": {
		"method": "calcCode",
		"code": "(L:CB_L04_COM_VHF2) ! (>L:CB_L04_COM_VHF2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L05 COM VHF3": {
		"method": "calcCode",
		"code": "(L:CB_L05_COM_VHF3) ! (>L:CB_L05_COM_VHF3)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU EXPED Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EXPED)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU ATHR Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_ATHR)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU APPR Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_APPR)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU AP2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_AP2)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU AP1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_AP1)"
	},
	"FenixSim.A320.Warning.FNX320 Evacuation Command Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_EVAC_COMMAND_U)"
	},
	"FenixSim.A320.Warning.FNX320 Evacuation Command Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_EVAC_COMMAND_L)"
	},
	"FenixSim.A320.Engines.Output.FNX320 Engine N1 Mode 2 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_N1_MODE_2)"
	},
	"FenixSim.A320.Engines.Output.FNX320 Engine N1 Mode 1 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_N1_MODE_1)"
	},
	"FenixSim.A320.Engines.FNX320 Engine Manual Start 2 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ENG_MANSTART_2_L)"
	},
	"FenixSim.A320.Engines.FNX320 Engine Manual Start 1 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ENG_MANSTART_1_L)"
	},
	"FenixSim.A320.Warning.FNX320 EmergencyElectrical RAT Emergency Generator Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_EMERG_GEN_FAULT)"
	},
	"FenixSim.A320.Warning.FNX320 EmergencyElectrical Generator 1 Line Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN1_LINE_U)"
	},
	"FenixSim.A320.Warning.FNX320 EmergencyElectrical Generator 1 Line Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN1_LINE_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical IDG 2 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_IDG2_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical IDG 1 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_IDG1_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Generator 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN2_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Generator 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN2_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Generator 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN1_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Generator 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GEN1_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Galley Cabin Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GALY_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Galley Cabin Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_GALY_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical External Power Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_EXT_PWR_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical External Power Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_EXT_PWR_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Commercial Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_COMMERCIAL_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Commercial Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_COMMERCIAL_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Bus Tie Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_BUSTIE_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Battery 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_BAT2_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Battery 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_BAT2_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Battery 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_BAT1_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical Battery 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_BAT1_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical APU Generator Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_GENERATOR_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical APU Generator Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_GENERATOR_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical AC Essential Feed Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_AC_ESS_FEED_U)"
	},
	"FenixSim.A320.Electrical.FNX320 Electrical AC Essential Feed Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_AC_ESS_FEED_L)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 WPT Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_WPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 VORD Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 NDB Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 LS Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_LS)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 FD Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_FD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 CSTR Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 ARPT Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_ARPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 WPT Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_WPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 VORD Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 NDB Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 LS Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_LS)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 FD Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 CSTR Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 ARPT Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_ARPT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM WHEEL Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_WHEEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM STS Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_STATUS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM PRESS Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_CAB_PRESS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM HYD Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_HYD)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FUEL Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_FUEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FCTL Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_FCTL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ENG Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_ENGINE)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ELEC Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_ELEC)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM DOOR Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_DOOR)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM COND Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_COND)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Right Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_CLR_RIGHT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Left Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_CLR_LEFT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM BLEED Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_BLEED)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM APU Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ECAM_APU)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM EMER CANC Button On": {
		"method": "calcCode",
		"code": "(L:I_ECAM_EMER_CANCEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM EMER CANC Button Off": {
		"method": "calcCode",
		"code": "(L:I_ECAM_EMER_CANCEL)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoSmoke Forward Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_CARGO_SMOKE_FWD_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoSmoke Aft Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_CARGO_SMOKE_AFT_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoHeat Hot Air Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_HOT_AIR_AFT_CARGO_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoHeat Hot Air Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_HOT_AIR_AFT_CARGO_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoHeat Aft Isolation Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 CargoHeat Aft Isolation Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE_L)"
	},
	"FenixSim.A320.Warning.FNX320 Call Emergency Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_CALLS_EMER_U)"
	},
	"FenixSim.A320.Warning.FNX320 Call Emergency Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_CALLS_EMER_L)"
	},
	"FenixSim.A320.Engines.FNX320 APU Start Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_START_U)"
	},
	"FenixSim.A320.Engines.FNX320 APU Start Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_START_L)"
	},
	"FenixSim.A320.Engines.FNX320 APU Master Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_MASTER_U)"
	},
	"FenixSim.A320.Engines.FNX320 APU Master Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_ELEC_APU_MASTER_L)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 3 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR3_ALIGN)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 3 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR3_FAULT)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 2 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR2_ALIGN)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 2 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR2_FAULT)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 1 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR1_ALIGN)"
	},
	"FenixSim.A320.Radio.Output.FNX320 ADIRS IR 1 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_IR1_FAULT)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 3 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR3_U)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 3 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR3_L)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR2_U)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR2_L)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR1_U)"
	},
	"FenixSim.A320.Radio.FNX320 ADIRS ADR 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADR1_L)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOICE Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_3_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_VHF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_INT_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_HF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_HF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP3_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP3_CAB_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOICE Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_3_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_VHF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 PA SEND Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ASP2_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_INT_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_HF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_HF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP2_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP2_CAB_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VOICE Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ASP_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 3 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 3 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_3_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_VHF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 PA SEND Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ASP_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INT Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INT Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_INT_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 2 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 2 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_HF_2_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 1 Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 1 Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_HF_1_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 CAB Send Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_ASP_CAB_SEND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L13 COM HF1": {
		"method": "calcCode",
		"code": "(L:CB_L13_COM_HF1) ! (>L:CB_L13_COM_HF1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L15 ATSU": {
		"method": "calcCode",
		"code": "(L:CB_L15_ATSU) ! (>L:CB_L15_ATSU)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L16 ATSU": {
		"method": "calcCode",
		"code": "(L:CB_L16_ATSU) ! (>L:CB_L16_ATSU)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L17 DCDU1": {
		"method": "calcCode",
		"code": "(L:CB_L17_DCDU1) ! (>L:CB_L17_DCDU1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L18 DCDU2": {
		"method": "calcCode",
		"code": "(L:CB_L18_DCDU2) ! (>L:CB_L18_DCDU2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L32 BRK FAN12": {
		"method": "calcCode",
		"code": "(L:CB_L32_BRK_FAN12) ! (>L:CB_L32_BRK_FAN12)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L35 BRK FAN34": {
		"method": "calcCode",
		"code": "(L:CB_L35_BRK_FAN34) ! (>L:CB_L35_BRK_FAN34)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L38 FIRE EXTNG APU A": {
		"method": "calcCode",
		"code": "(L:CB_L38_FIRE_EXTNG_APU_A) ! (>L:CB_L38_FIRE_EXTNG_APU_A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L39 FIRE EXTNG APU B": {
		"method": "calcCode",
		"code": "(L:CB_L39_FIRE_EXTNG_APU_B) ! (>L:CB_L39_FIRE_EXTNG_APU_B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L40 APU AUTO EXT GND TEST": {
		"method": "calcCode",
		"code": "(L:CB_L40_APU_AUTO_EXT_GND_TEST) ! (>L:CB_L40_APU_AUTO_EXT_GND_TEST)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L41 ECP SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_L41_ECP_SUPPLY) ! (>L:CB_L41_ECP_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L42 APU CTL": {
		"method": "calcCode",
		"code": "(L:CB_L42_APU_CTL) ! (>L:CB_L42_APU_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L43 FIRE DET APU LOOP A": {
		"method": "calcCode",
		"code": "(L:CB_L43_FIRE_DET_APU_LOOP_A) ! (>L:CB_L43_FIRE_DET_APU_LOOP_A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker L44 FIRE DET APU LOOP B": {
		"method": "calcCode",
		"code": "(L:CB_L44_FIRE_DET_APU_LOOP_B) ! (>L:CB_L44_FIRE_DET_APU_LOOP_B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M02 ACP 3D": {
		"method": "calcCode",
		"code": "(L:CB_M02_ACP_3D) ! (>L:CB_M02_ACP_3D)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M17 FMGC2": {
		"method": "calcCode",
		"code": "(L:CB_M17_FMGC2) ! (>L:CB_M17_FMGC2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M18 FAC 2 NORM": {
		"method": "calcCode",
		"code": "(L:CB_M18_FAC_2_NORM) ! (>L:CB_M18_FAC_2_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M19 FAC 2 STBY": {
		"method": "calcCode",
		"code": "(L:CB_M19_FAC_2_STBY) ! (>L:CB_M19_FAC_2_STBY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M20 RUDDER TRIM IND": {
		"method": "calcCode",
		"code": "(L:CB_M20_RUDDER_TRIM_IND) ! (>L:CB_M20_RUDDER_TRIM_IND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M21 FCU2": {
		"method": "calcCode",
		"code": "(L:CB_M21_FCU2) ! (>L:CB_M21_FCU2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M22 XFR VALVE 2 L": {
		"method": "calcCode",
		"code": "(L:CB_M22_XFR_VALVE_2_L) ! (>L:CB_M22_XFR_VALVE_2_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M23 XFR VALVE 2 R": {
		"method": "calcCode",
		"code": "(L:CB_M23_XFR_VALVE_2_R) ! (>L:CB_M23_XFR_VALVE_2_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M24 XFEED VALVE MOT2": {
		"method": "calcCode",
		"code": "(L:CB_M24_XFEED_VALVE_MOT2) ! (>L:CB_M24_XFEED_VALVE_MOT2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M25 LP VALVE MOT2 ENG1": {
		"method": "calcCode",
		"code": "(L:CB_M25_LP_VALVE_MOT2_ENG1) ! (>L:CB_M25_LP_VALVE_MOT2_ENG1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M26 LP VALVE MOT2 ENG2": {
		"method": "calcCode",
		"code": "(L:CB_M26_LP_VALVE_MOT2_ENG2) ! (>L:CB_M26_LP_VALVE_MOT2_ENG2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M27 FQI CHAN 2": {
		"method": "calcCode",
		"code": "(L:CB_M27_FQI_CHAN_2) ! (>L:CB_M27_FQI_CHAN_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M32 BRK FAN CTL": {
		"method": "calcCode",
		"code": "(L:CB_M32_BRK_FAN_CTL) ! (>L:CB_M32_BRK_FAN_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M33 BSCU 1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_M33_BSCU_1_SPLY) ! (>L:CB_M33_BSCU_1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M34 BSCU 1 CTL": {
		"method": "calcCode",
		"code": "(L:CB_M34_BSCU_1_CTL) ! (>L:CB_M34_BSCU_1_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M35 BSCU 2 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_M35_BSCU_2_SPLY) ! (>L:CB_M35_BSCU_2_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M36 BSCU 2 CTL": {
		"method": "calcCode",
		"code": "(L:CB_M36_BSCU_2_CTL) ! (>L:CB_M36_BSCU_2_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M38 APU FUEL PUMP CTL": {
		"method": "calcCode",
		"code": "(L:CB_M38_APU_FUEL_PUMP_CTL) ! (>L:CB_M38_APU_FUEL_PUMP_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M39 APU LP VALVE SPLY": {
		"method": "calcCode",
		"code": "(L:CB_M39_APU_LP_VALVE_SPLY) ! (>L:CB_M39_APU_LP_VALVE_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M40 APU LP VALVE CTL": {
		"method": "calcCode",
		"code": "(L:CB_M40_APU_LP_VALVE_CTL) ! (>L:CB_M40_APU_LP_VALVE_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M41 APU FIRE STBY": {
		"method": "calcCode",
		"code": "(L:CB_M41_APU_FIRE_STBY) ! (>L:CB_M41_APU_FIRE_STBY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker M42 APU FIRE NORM": {
		"method": "calcCode",
		"code": "(L:CB_M42_APU_FIRE_NORM) ! (>L:CB_M42_APU_FIRE_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N03 CLOCK STBY SPLY": {
		"method": "calcCode",
		"code": "(L:CB_N03_CLOCK_STBY_SPLY) ! (>L:CB_N03_CLOCK_STBY_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N04 ADIRS 3 28": {
		"method": "calcCode",
		"code": "(L:CB_N04_ADIRS_3_28) ! (>L:CB_N04_ADIRS_3_28)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N05 ADIRS 2 28": {
		"method": "calcCode",
		"code": "(L:CB_N05_ADIRS_2_28) ! (>L:CB_N05_ADIRS_2_28)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N06 ADIRU 3 115": {
		"method": "calcCode",
		"code": "(L:CB_N06_ADIRU_3_115) ! (>L:CB_N06_ADIRU_3_115)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N07 ADIRU 2 115": {
		"method": "calcCode",
		"code": "(L:CB_N07_ADIRU_2_115) ! (>L:CB_N07_ADIRU_2_115)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N10 2PWR SHED": {
		"method": "calcCode",
		"code": "(L:CB_N10_2PWR_SHED) ! (>L:CB_N10_2PWR_SHED)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N16 STICK LOCK": {
		"method": "calcCode",
		"code": "(L:CB_N16_STICK_LOCK) ! (>L:CB_N16_STICK_LOCK)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N20 MCDU 2": {
		"method": "calcCode",
		"code": "(L:CB_N20_MCDU_2) ! (>L:CB_N20_MCDU_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N23 L PUMP1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_N23_L_PUMP1_SPLY) ! (>L:CB_N23_L_PUMP1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N26 L PUMP2 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_N26_L_PUMP2_SPLY) ! (>L:CB_N26_L_PUMP2_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N28 IGGS CTLR": {
		"method": "calcCode",
		"code": "(L:CB_N28_IGGS_CTLR) ! (>L:CB_N28_IGGS_CTLR)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N30 HYD POWER Y": {
		"method": "calcCode",
		"code": "(L:CB_N30_HYD_POWER_Y) ! (>L:CB_N30_HYD_POWER_Y)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N34 PTU CTL": {
		"method": "calcCode",
		"code": "(L:CB_N34_PTU_CTL) ! (>L:CB_N34_PTU_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N35 GYB LEAK TEST": {
		"method": "calcCode",
		"code": "(L:CB_N35_GYB_LEAK_TEST) ! (>L:CB_N35_GYB_LEAK_TEST)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N36 PARKING BRAKE CTL NORM": {
		"method": "calcCode",
		"code": "(L:CB_N36_PARKING_BRAKE_CTL_NORM) ! (>L:CB_N36_PARKING_BRAKE_CTL_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N37 PARKING BRAKE CTL STBY": {
		"method": "calcCode",
		"code": "(L:CB_N37_PARKING_BRAKE_CTL_STBY) ! (>L:CB_N37_PARKING_BRAKE_CTL_STBY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N44 ENG1 REV LOCK": {
		"method": "calcCode",
		"code": "(L:CB_N44_ENG1_REV_LOCK) ! (>L:CB_N44_ENG1_REV_LOCK)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker N45 ENG2 REV LOCK": {
		"method": "calcCode",
		"code": "(L:CB_N45_ENG2_REV_LOCK) ! (>L:CB_N45_ENG2_REV_LOCK)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P06 GPWS 28": {
		"method": "calcCode",
		"code": "(L:CB_P06_GPWS_28) ! (>L:CB_P06_GPWS_28)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P07 GPWS 115": {
		"method": "calcCode",
		"code": "(L:CB_P07_GPWS_115) ! (>L:CB_P07_GPWS_115)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P09 HORN SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_P09_HORN_SUPPLY) ! (>L:CB_P09_HORN_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P16 SLT FLP 2 POS IND": {
		"method": "calcCode",
		"code": "(L:CB_P16_SLT_FLP_2_POS_IND) ! (>L:CB_P16_SLT_FLP_2_POS_IND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P19 WTB SLT 2": {
		"method": "calcCode",
		"code": "(L:CB_P19_WTB_SLT_2) ! (>L:CB_P19_WTB_SLT_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P20 WTB FLP 2": {
		"method": "calcCode",
		"code": "(L:CB_P20_WTB_FLP_2) ! (>L:CB_P20_WTB_FLP_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P29 ACT XFR VLV AUTO CTL": {
		"method": "calcCode",
		"code": "(L:CB_P29_ACT_XFR_VLV_AUTO_CTL) ! (>L:CB_P29_ACT_XFR_VLV_AUTO_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P30 ABCU HOT BUS SPLY": {
		"method": "calcCode",
		"code": "(L:CB_P30_ABCU_HOT_BUS_SPLY) ! (>L:CB_P30_ABCU_HOT_BUS_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P33 RAT SPLY EXTN SOL1": {
		"method": "calcCode",
		"code": "(L:CB_P33_RAT_SPLY_EXTN_SOL1) ! (>L:CB_P33_RAT_SPLY_EXTN_SOL1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P39 IGN ENG1 SYSA": {
		"method": "calcCode",
		"code": "(L:CB_P39_IGN_ENG1_SYSA) ! (>L:CB_P39_IGN_ENG1_SYSA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P40 IGN ENG2 SYSA": {
		"method": "calcCode",
		"code": "(L:CB_P40_IGN_ENG2_SYSA) ! (>L:CB_P40_IGN_ENG2_SYSA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P41 IGN ENG1 SYSB": {
		"method": "calcCode",
		"code": "(L:CB_P41_IGN_ENG1_SYSB) ! (>L:CB_P41_IGN_ENG1_SYSB)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker P42 IGN ENG2 SYSB": {
		"method": "calcCode",
		"code": "(L:CB_P42_IGN_ENG2_SYSB) ! (>L:CB_P42_IGN_ENG2_SYSB)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q02 SDAC2 AC REF 2": {
		"method": "calcCode",
		"code": "(L:CB_Q02_SDAC2_AC_REF_2) ! (>L:CB_Q02_SDAC2_AC_REF_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q03 SDAC1 AC REF 2": {
		"method": "calcCode",
		"code": "(L:CB_Q03_SDAC1_AC_REF_2) ! (>L:CB_Q03_SDAC1_AC_REF_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q05 SDAC2 AC REF 1": {
		"method": "calcCode",
		"code": "(L:CB_Q05_SDAC2_AC_REF_1) ! (>L:CB_Q05_SDAC2_AC_REF_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q06 SDAC 2 SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q06_SDAC_2_SUPPLY) ! (>L:CB_Q06_SDAC_2_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q07 FWC 2 SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q07_FWC_2_SUPPLY) ! (>L:CB_Q07_FWC_2_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q08 DMC2 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q08_DMC2_SPLY) ! (>L:CB_Q08_DMC2_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q09 DMC3 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q09_DMC3_SPLY) ! (>L:CB_Q09_DMC3_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q16 FC THS MOT1": {
		"method": "calcCode",
		"code": "(L:CB_Q16_FC_THS_MOT1) ! (>L:CB_Q16_FC_THS_MOT1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q17 FC THS MOT3": {
		"method": "calcCode",
		"code": "(L:CB_Q17_FC_THS_MOT3) ! (>L:CB_Q17_FC_THS_MOT3)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q18 SEC 2": {
		"method": "calcCode",
		"code": "(L:CB_Q18_SEC_2) ! (>L:CB_Q18_SEC_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q19 SEC 3": {
		"method": "calcCode",
		"code": "(L:CB_Q19_SEC_3) ! (>L:CB_Q19_SEC_3)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q20 FCTL FCDC1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q20_FCTL_FCDC1_SPLY) ! (>L:CB_Q20_FCTL_FCDC1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q21 FLAP CTL MON SYS 2": {
		"method": "calcCode",
		"code": "(L:CB_Q21_FLAP_CTL_MON_SYS_2) ! (>L:CB_Q21_FLAP_CTL_MON_SYS_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q23 R PUMP1 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q23_R_PUMP1_SPLY) ! (>L:CB_Q23_R_PUMP1_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q26 R PUMP2 SPLY": {
		"method": "calcCode",
		"code": "(L:CB_Q26_R_PUMP2_SPLY) ! (>L:CB_Q26_R_PUMP2_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q34 LGCIU 1 GND": {
		"method": "calcCode",
		"code": "(L:CB_Q34_LGCIU_1_GND) ! (>L:CB_Q34_LGCIU_1_GND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q35 LGCIU 2": {
		"method": "calcCode",
		"code": "(L:CB_Q35_LGCIU_2) ! (>L:CB_Q35_LGCIU_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q38 ENG1 DET LOOP B": {
		"method": "calcCode",
		"code": "(L:CB_Q38_ENG1_DET_LOOP_B) ! (>L:CB_Q38_ENG1_DET_LOOP_B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q39 ENG2 DET LOOP A": {
		"method": "calcCode",
		"code": "(L:CB_Q39_ENG2_DET_LOOP_A) ! (>L:CB_Q39_ENG2_DET_LOOP_A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q40 ENG2 FADEC B EIU 2": {
		"method": "calcCode",
		"code": "(L:CB_Q40_ENG2_FADEC_B_EIU_2) ! (>L:CB_Q40_ENG2_FADEC_B_EIU_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q41 FIRE EXTNG 2A": {
		"method": "calcCode",
		"code": "(L:CB_Q41_FIRE_EXTNG_2A) ! (>L:CB_Q41_FIRE_EXTNG_2A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q42 FIRE EXTNG 2B": {
		"method": "calcCode",
		"code": "(L:CB_Q42_FIRE_EXTNG_2B) ! (>L:CB_Q42_FIRE_EXTNG_2B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q43 FIRE EXTNG 1A": {
		"method": "calcCode",
		"code": "(L:CB_Q43_FIRE_EXTNG_1A) ! (>L:CB_Q43_FIRE_EXTNG_1A)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Q44 FIRE EXTNG 1B": {
		"method": "calcCode",
		"code": "(L:CB_Q44_FIRE_EXTNG_1B) ! (>L:CB_Q44_FIRE_EXTNG_1B)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R03 FO PFD": {
		"method": "calcCode",
		"code": "(L:CB_R03_FO_PFD) ! (>L:CB_R03_FO_PFD)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R04 FO ND": {
		"method": "calcCode",
		"code": "(L:CB_R04_FO_ND) ! (>L:CB_R04_FO_ND)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R05 DU PFD FO SWTG": {
		"method": "calcCode",
		"code": "(L:CB_R05_DU_PFD_FO_SWTG) ! (>L:CB_R05_DU_PFD_FO_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R06 DU ND FO SWTG": {
		"method": "calcCode",
		"code": "(L:CB_R06_DU_ND_FO_SWTG) ! (>L:CB_R06_DU_ND_FO_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R08 DMC2 SWTG": {
		"method": "calcCode",
		"code": "(L:CB_R08_DMC2_SWTG) ! (>L:CB_R08_DMC2_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R10 DU ECAM LOWER SWTG": {
		"method": "calcCode",
		"code": "(L:CB_R10_DU_ECAM_LOWER_SWTG) ! (>L:CB_R10_DU_ECAM_LOWER_SWTG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R11 LOWER ECAM": {
		"method": "calcCode",
		"code": "(L:CB_R11_LOWER_ECAM) ! (>L:CB_R11_LOWER_ECAM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R14 ELT NAV AC IDENT": {
		"method": "calcCode",
		"code": "(L:CB_R14_ELT_NAV_AC_IDENT) ! (>L:CB_R14_ELT_NAV_AC_IDENT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R16 RUDDER FTU": {
		"method": "calcCode",
		"code": "(L:CB_R16_RUDDER_FTU) ! (>L:CB_R16_RUDDER_FTU)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R20 ELAC 2 NORM": {
		"method": "calcCode",
		"code": "(L:CB_R20_ELAC_2_NORM) ! (>L:CB_R20_ELAC_2_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R21 SLAT CTL MON SYS 2": {
		"method": "calcCode",
		"code": "(L:CB_R21_SLAT_CTL_MON_SYS_2) ! (>L:CB_R21_SLAT_CTL_MON_SYS_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R23 L PUMP1 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R23_L_PUMP1_CTL) ! (>L:CB_R23_L_PUMP1_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R24 L PUMP2 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R24_L_PUMP2_CTL) ! (>L:CB_R24_L_PUMP2_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R25 CTR PUMP1 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R25_CTR_PUMP1_CTL) ! (>L:CB_R25_CTR_PUMP1_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R26 CTR PUMP2 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R26_CTR_PUMP2_CTL) ! (>L:CB_R26_CTR_PUMP2_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R27 CTR AUTO CTL": {
		"method": "calcCode",
		"code": "(L:CB_R27_CTR_AUTO_CTL) ! (>L:CB_R27_CTR_AUTO_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R28 R PUMP1 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R28_R_PUMP1_CTL) ! (>L:CB_R28_R_PUMP1_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R29 L PUMP2 CTL": {
		"method": "calcCode",
		"code": "(L:CB_R29_L_PUMP2_CTL) ! (>L:CB_R29_L_PUMP2_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker R41 ENG1 FADEC B EIU 1": {
		"method": "calcCode",
		"code": "(L:CB_R41_ENG1_FADEC_B_EIU_1) ! (>L:CB_R41_ENG1_FADEC_B_EIU_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker S06 WTB SLT 1": {
		"method": "calcCode",
		"code": "(L:CB_S06_WTB_SLT_1) ! (>L:CB_S06_WTB_SLT_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker S07 WTB FLP 1": {
		"method": "calcCode",
		"code": "(L:CB_S07_WTB_FLP_1) ! (>L:CB_S07_WTB_FLP_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker S22 AFT CARGO VENT FAN": {
		"method": "calcCode",
		"code": "(L:CB_S22_AFT_CARGO_VENT_FAN) ! (>L:CB_S22_AFT_CARGO_VENT_FAN)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T02 NAV LOGO 2": {
		"method": "calcCode",
		"code": "(L:CB_T02_NAV_LOGO_2) ! (>L:CB_T02_NAV_LOGO_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T03 NAV LOGO 1": {
		"method": "calcCode",
		"code": "(L:CB_T03_NAV_LOGO_1) ! (>L:CB_T03_NAV_LOGO_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T04 LANDING LIGHT SPLY L": {
		"method": "calcCode",
		"code": "(L:CB_T04_LANDING_LIGHT_SPLY_L) ! (>L:CB_T04_LANDING_LIGHT_SPLY_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T05 LANDING LIGHT CTL L": {
		"method": "calcCode",
		"code": "(L:CB_T05_LANDING_LIGHT_CTL_L) ! (>L:CB_T05_LANDING_LIGHT_CTL_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T06 LANDING LIGHT SPLY R": {
		"method": "calcCode",
		"code": "(L:CB_T06_LANDING_LIGHT_SPLY_R) ! (>L:CB_T06_LANDING_LIGHT_SPLY_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T07 LANDING LIGHT CTL R": {
		"method": "calcCode",
		"code": "(L:CB_T07_LANDING_LIGHT_CTL_R) ! (>L:CB_T07_LANDING_LIGHT_CTL_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker T13 CPKT LOCK": {
		"method": "calcCode",
		"code": "(L:CB_T13_CPKT_LOCK) ! (>L:CB_T13_CPKT_LOCK)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker U03 BEACON LOWER": {
		"method": "calcCode",
		"code": "(L:CB_U03_BEACON_LOWER) ! (>L:CB_U03_BEACON_LOWER)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker U06 BEACON UPPER": {
		"method": "calcCode",
		"code": "(L:CB_U06_BEACON_UPPER) ! (>L:CB_U06_BEACON_UPPER)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker U19 LAV GALLEY FAN SPLY": {
		"method": "calcCode",
		"code": "(L:CB_U19_LAV_GALLEY_FAN_SPLY) ! (>L:CB_U19_LAV_GALLEY_FAN_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker U21 LAV GALLEY FAN CTL": {
		"method": "calcCode",
		"code": "(L:CB_U21_LAV_GALLEY_FAN_CTL) ! (>L:CB_U21_LAV_GALLEY_FAN_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker V02 LOGO LIGHT RIGHT": {
		"method": "calcCode",
		"code": "(L:CB_V02_LOGO_LIGHT_RIGHT) ! (>L:CB_V02_LOGO_LIGHT_RIGHT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker V03 LOGO LIGHT LEFT": {
		"method": "calcCode",
		"code": "(L:CB_V03_LOGO_LIGHT_LEFT) ! (>L:CB_V03_LOGO_LIGHT_LEFT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker V05 WING STROBE LIGHT": {
		"method": "calcCode",
		"code": "(L:CB_V05_WING_STROBE_LIGHT) ! (>L:CB_V05_WING_STROBE_LIGHT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker V12 ICE DET L": {
		"method": "calcCode",
		"code": "(L:CB_V12_ICE_DET_L) ! (>L:CB_V12_ICE_DET_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker V13 ICE DET R": {
		"method": "calcCode",
		"code": "(L:CB_V13_ICE_DET_R) ! (>L:CB_V13_ICE_DET_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W02 WING LIGHT LEFT": {
		"method": "calcCode",
		"code": "(L:CB_W02_WING_LIGHT_LEFT) ! (>L:CB_W02_WING_LIGHT_LEFT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W03 WING LIGHT RIGHT": {
		"method": "calcCode",
		"code": "(L:CB_W03_WING_LIGHT_RIGHT) ! (>L:CB_W03_WING_LIGHT_RIGHT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W05 RWY TURNOFF R": {
		"method": "calcCode",
		"code": "(L:CB_W05_RWY_TURNOFF_R) ! (>L:CB_W05_RWY_TURNOFF_R)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W06 RWY TURNOFF L": {
		"method": "calcCode",
		"code": "(L:CB_W06_RWY_TURNOFF_L) ! (>L:CB_W06_RWY_TURNOFF_L)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W07 NOSE LIGHT TAKEOFF": {
		"method": "calcCode",
		"code": "(L:CB_W07_NOSE_LIGHT_TAKEOFF) ! (>L:CB_W07_NOSE_LIGHT_TAKEOFF)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W08 NOSE LIGHT TAXI": {
		"method": "calcCode",
		"code": "(L:CB_W08_NOSE_LIGHT_TAXI) ! (>L:CB_W08_NOSE_LIGHT_TAXI)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W09 NOSE LIGHT CTL": {
		"method": "calcCode",
		"code": "(L:CB_W09_NOSE_LIGHT_CTL) ! (>L:CB_W09_NOSE_LIGHT_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W10 ENG ANTI ICE 2": {
		"method": "calcCode",
		"code": "(L:CB_W10_ENG_ANTI_ICE_2) ! (>L:CB_W10_ENG_ANTI_ICE_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W12 WIPER FO": {
		"method": "calcCode",
		"code": "(L:CB_W12_WIPER_FO) ! (>L:CB_W12_WIPER_FO)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W13 WHC 2": {
		"method": "calcCode",
		"code": "(L:CB_W13_WHC_2) ! (>L:CB_W13_WHC_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W18 RECIRC R SPLY": {
		"method": "calcCode",
		"code": "(L:CB_W18_RECIRC_R_SPLY) ! (>L:CB_W18_RECIRC_R_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W20 RECIRC R CTL": {
		"method": "calcCode",
		"code": "(L:CB_W20_RECIRC_R_CTL) ! (>L:CB_W20_RECIRC_R_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W25 DC BUS TIE": {
		"method": "calcCode",
		"code": "(L:CB_W25_DC_BUS_TIE) ! (>L:CB_W25_DC_BUS_TIE)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker W26 ESS DC BUS TIE": {
		"method": "calcCode",
		"code": "(L:CB_W26_ESS_DC_BUS_TIE) ! (>L:CB_W26_ESS_DC_BUS_TIE)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker X10 ENG ANTI ICE 1": {
		"method": "calcCode",
		"code": "(L:CB_X10_ENG_ANTI_ICE_1) ! (>L:CB_X10_ENG_ANTI_ICE_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker X12 WIPER CAPT": {
		"method": "calcCode",
		"code": "(L:CB_X12_WIPER_CAPT) ! (>L:CB_X12_WIPER_CAPT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker X13 WHC 1": {
		"method": "calcCode",
		"code": "(L:CB_X13_WHC_1) ! (>L:CB_X13_WHC_1)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker X18 RECIRC L SPLY": {
		"method": "calcCode",
		"code": "(L:CB_X18_RECIRC_L_SPLY) ! (>L:CB_X18_RECIRC_L_SPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker X20 RECIRC L CTL": {
		"method": "calcCode",
		"code": "(L:CB_X20_RECIRC_L_CTL) ! (>L:CB_X20_RECIRC_L_CTL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y03 OVHD PANEL": {
		"method": "calcCode",
		"code": "(L:CB_Y03_OVHD_PANEL) ! (>L:CB_Y03_OVHD_PANEL)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y04 INST LIGHT PED": {
		"method": "calcCode",
		"code": "(L:CB_Y04_INST_LIGHT_PED) ! (>L:CB_Y04_INST_LIGHT_PED)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y05 GLARE SHIELD": {
		"method": "calcCode",
		"code": "(L:CB_Y05_GLARE_SHIELD) ! (>L:CB_Y05_GLARE_SHIELD)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y06 CKPT DOME": {
		"method": "calcCode",
		"code": "(L:CB_Y06_CKPT_DOME) ! (>L:CB_Y06_CKPT_DOME)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y11 PROBES 2 STATIC": {
		"method": "calcCode",
		"code": "(L:CB_Y11_PROBES_2_STATIC) ! (>L:CB_Y11_PROBES_2_STATIC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y12 PROBES 2 PHC SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_Y12_PROBES_2_PHC_SUPPLY) ! (>L:CB_Y12_PROBES_2_PHC_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y13 PROBES 2 AOA": {
		"method": "calcCode",
		"code": "(L:CB_Y13_PROBES_2_AOA) ! (>L:CB_Y13_PROBES_2_AOA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y14 PROBES 2 PITOT": {
		"method": "calcCode",
		"code": "(L:CB_Y14_PROBES_2_PITOT) ! (>L:CB_Y14_PROBES_2_PITOT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y15 PROBES 2 TAT": {
		"method": "calcCode",
		"code": "(L:CB_Y15_PROBES_2_TAT) ! (>L:CB_Y15_PROBES_2_TAT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y16 PROBES 3 PHC SUPPLY": {
		"method": "calcCode",
		"code": "(L:CB_Y16_PROBES_3_PHC_SUPPLY) ! (>L:CB_Y16_PROBES_3_PHC_SUPPLY)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y17 AVNCS VENT MONG": {
		"method": "calcCode",
		"code": "(L:CB_Y17_AVNCS_VENT_MONG) ! (>L:CB_Y17_AVNCS_VENT_MONG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y22 CAB PRESS CTL 2": {
		"method": "calcCode",
		"code": "(L:CB_Y22_CAB_PRESS_CTL_2) ! (>L:CB_Y22_CAB_PRESS_CTL_2)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Y23 CAB MAN PRESS": {
		"method": "calcCode",
		"code": "(L:CB_Y23_CAB_MAN_PRESS) ! (>L:CB_Y23_CAB_MAN_PRESS)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z04 LIGHTING FLOOD CTR": {
		"method": "calcCode",
		"code": "(L:CB_Z04_LIGHTING_FLOOD_CTR) ! (>L:CB_Z04_LIGHTING_FLOOD_CTR)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z05 LIGHTING FLOOD CAPT": {
		"method": "calcCode",
		"code": "(L:CB_Z05_LIGHTING_FLOOD_CAPT) ! (>L:CB_Z05_LIGHTING_FLOOD_CAPT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z06 LIGHTING FLOOD FO": {
		"method": "calcCode",
		"code": "(L:CB_Z06_LIGHTING_FLOOD_FO) ! (>L:CB_Z06_LIGHTING_FLOOD_FO)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z07 LIGHTING AVNCS CPT": {
		"method": "calcCode",
		"code": "(L:CB_Z07_LIGHTING_AVNCS_CPT) ! (>L:CB_Z07_LIGHTING_AVNCS_CPT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z08 AVNCS CPT DC": {
		"method": "calcCode",
		"code": "(L:CB_Z08_AVNCS_CPT_DC) ! (>L:CB_Z08_AVNCS_CPT_DC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z09 AVNCS CPT AC": {
		"method": "calcCode",
		"code": "(L:CB_Z09_AVNCS_CPT_AC) ! (>L:CB_Z09_AVNCS_CPT_AC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z12 PROBES 1 TAT": {
		"method": "calcCode",
		"code": "(L:CB_Z12_PROBES_1_TAT) ! (>L:CB_Z12_PROBES_1_TAT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z13 PROBES 1 STATIC": {
		"method": "calcCode",
		"code": "(L:CB_Z13_PROBES_1_STATIC) ! (>L:CB_Z13_PROBES_1_STATIC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z14 PROBES 3 STATIC": {
		"method": "calcCode",
		"code": "(L:CB_Z14_PROBES_3_STATIC) ! (>L:CB_Z14_PROBES_3_STATIC)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z15 PROBES 3 AOA": {
		"method": "calcCode",
		"code": "(L:CB_Z15_PROBES_3_AOA) ! (>L:CB_Z15_PROBES_3_AOA)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z16 PROBES 3 PITOT": {
		"method": "calcCode",
		"code": "(L:CB_Z16_PROBES_3_PITOT) ! (>L:CB_Z16_PROBES_3_PITOT)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z20 X FEED VALVE NORM": {
		"method": "calcCode",
		"code": "(L:CB_Z20_X_FEED_VALVE_NORM) ! (>L:CB_Z20_X_FEED_VALVE_NORM)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z22 AIRBLEED ENG2 MONG": {
		"method": "calcCode",
		"code": "(L:CB_Z22_AIRBLEED_ENG2_MONG) ! (>L:CB_Z22_AIRBLEED_ENG2_MONG)"
	},
	"FenixSim.A320.Electrical.FNX320 Breaker Z23 AIRBLEED ENG2 CTL": {
		"method": "calcCode",
		"code": "(L:CB_Z23_AIRBLEED_ENG2_CTL) ! (>L:CB_Z23_AIRBLEED_ENG2_CTL)"
	},
	"FenixSim.A320.Avionics.FNX320 Transponder ATC FAIL Annunciator": {
		"method": "calcCode",
		"code": "(L:I_XPDR_FAIL)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear Arrow Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_RED)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 3 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_3_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 3 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_3_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 2 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_2_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 2 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_2_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 1 Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_1_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Landing Gear 1 Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_GEAR_1_L)"
	},
	"FenixSim.A320.Warning.FNX320 Throttle Engine Fire 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ENG_FIRE_2)"
	},
	"FenixSim.A320.Warning.FNX320 Throttle Engine Fire 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ENG_FIRE_1)"
	},
	"FenixSim.A320.Warning.FNX320 Throttle Engine Fault 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ENG_FAULT_2)"
	},
	"FenixSim.A320.Warning.FNX320 Throttle Engine Fault 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ENG_FAULT_1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 VOR Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_VOR)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 VHF 3 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_VHF3)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 VHF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_VHF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 VHF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_VHF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 SEL Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_SEL)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 NAV Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_NAV)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 LS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_ILS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 HF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_HF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 HF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_HF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 GLS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_MLS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 BFO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_BFO)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 AM Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_AM)"
	},
	"FenixSim.A320.Radio.FNX320 RMP3 ADF Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP3_ADF)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 VOR Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_VOR)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 VHF 3 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_VHF3)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 VHF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_VHF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 VHF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_VHF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 SEL Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_SEL)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 NAV Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_NAV)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 LS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_ILS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 HF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_HF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 HF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_HF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 GLS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_MLS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 BFO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_BFO)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 AM Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_AM)"
	},
	"FenixSim.A320.Radio.FNX320 RMP2 ADF Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP2_ADF)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 VOR Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_VOR)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 VHF 3 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_VHF3)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 VHF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_VHF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 VHF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_VHF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 SEL Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_SEL)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 NAV Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_NAV)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 LS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_ILS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 HF 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_HF2)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 HF 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_HF1)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 GLS Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_MLS)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 BFO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_BFO)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 AM Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_AM)"
	},
	"FenixSim.A320.Radio.FNX320 RMP1 ADF Annunciator": {
		"method": "calcCode",
		"code": "(L:I_PED_RMP1_ADF)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU RDY FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_RDY)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU RDY Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_RDY)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU MENU FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_MCDU_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU MENU Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_MCDU_MENU)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU IND FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_IND)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU IND Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_IND)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM2 FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_FM2)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM2 Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_FM2)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM1 FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_FM1)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM1 Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_FM1)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_FM)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FM Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_FM)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FAIL FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_FAIL)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU FAIL Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_FAIL)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU Dash FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU2_DASH)"
	},
	"FenixSim.A320.MCDU.FNX320 MCDU Dash Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_CDU1_DASH)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Extract Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_EXTRACT_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Extract Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_EXTRACT_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Cabin Fans Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_CAB_FANS_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Cabin Fans Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_CAB_FANS_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Blower Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_BLOWER_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Ventilation Blower Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_BLOWER_L)"
	},
	"FenixSim.A320.Warning.FNX320 Sign Emergency Exit Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_INT_LT_EMER_OFF)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Recorder Ground Control Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_RCRD_GND_CTL_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Mode Select Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PRESS_MODE_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Mode Select Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PRESS_MODE_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Ditching Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_DITCHING_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Ram Air Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_RAM_AIR_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Pack 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PACK_2_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Pack 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PACK_2_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Pack 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PACK_1_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Pack 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_PACK_1_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Hot Air Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_HOT_AIR_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Hot Air Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_HOT_AIR_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Engine Bleed 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG2_BLEED_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Engine Bleed 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG2_BLEED_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Engine Bleed 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG1_BLEED_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic Engine Bleed 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG1_BLEED_L)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic APU Bleed Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_APU_BLEED_U)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pneumatic APU Bleed Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_APU_BLEED_L)"
	},
	"FenixSim.A320.Safety.FNX320 Oxygen Passenger Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_OXYGEN_PASSENGER_U)"
	},
	"FenixSim.A320.Safety.FNX320 Oxygen Crew Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_OXYGEN_CREW_OXYGEN_L)"
	},
	"FenixSim.A320.Safety.FNX320 Oxygen High Alt Landing Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_OXYGEN_HIGH_ALT_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Svce Int Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_SVCE_INT_OVRD)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Oxygen TMR Reset Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_OXYGEN_TMR_RESET_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Oxygen TMR Reset Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_OXYGEN_TMR_RESET_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc LMV Yellow Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_LMV_YELLOW_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc LMV Green Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_LMV_GREEN_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc LMV Blue Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_LMV_BLUE_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Engine FADEC Ground 2 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_AFT_FADEC_GND_2_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Engine FADEC Ground 1 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_AFT_FADEC_GND_1_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Cockpit Door Video Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_DOOR_VIDEO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Blue Pump Override Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_BLUE_PUMP_OVERRIDE_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Avionics Compt Light Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_LIGHTING_AVIONICS_COMPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc APU Auto Exiting Test Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_APU_AUTOEXTING_TEST_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc APU Auto Exiting Test Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_APU_AUTOEXTING_TEST_L)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Cockpit Door CTL Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_DOOR_CTL_U)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Cockpit Door CTL Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_DOOR_CTL_L)"
	},
	"FenixSim.A320.Safety.FNX320 CargoSmoke Discharge Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_CARGO_SMOKE_DISCHARGE_2)"
	},
	"FenixSim.A320.Safety.FNX320 CargoSmoke Discharge Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_CARGO_SMOKE_DISCHARGE_1)"
	},
	"FenixSim.A320.Safety.FNX320 CargoSmoke Discharge Agent Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_CARGO_SMOKE_DISCHARGE_AGENT_2)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 OverheadMisc Toilet Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_TOILET)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 PA SEND Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_ASP3_PA_SEND)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND FO Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_TERRAIN_ON_ND_FO_L)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND Captain Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_TERRAIN_ON_ND_CAPT_L)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS FO Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_VISUAL_ALERT_FO_u)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS FO Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_VISUAL_ALERT_FO_L)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS Captain Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_VISUAL_ALERT_CAPT_U)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS Captain Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_GPWS_VISUAL_ALERT_CAPT_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Brake Fan Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_BRAKE_FAN_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Brake Fan Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_BRAKE_FAN_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Medium Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_MED_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Medium Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_MED_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Max Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_MAX_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Max Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_MAX_L)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Low Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_LO_U)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Low Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOBRAKE_LO_L)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Wing Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_WING_ANTI_ICE_U)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Wing Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_WING_ANTI_ICE_L)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Probe Heat Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PROBE_HEAT_U)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Probe Heat Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PROBE_HEAT_L)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Engine 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG2_ANTI_ICE_U)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Engine 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG2_ANTI_ICE_L)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Engine 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG1_ANTI_ICE_U)"
	},
	"FenixSim.A320.Anti-Ice.FNX320 Icing Engine 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_PNEUMATIC_ENG1_ANTI_ICE_L)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic PTU Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_PTU_U)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic PTU Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_PTU_L)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 Hydraulic Engine 2 Pump Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_ENG_2_PUMP_U)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 Hydraulic Engine 2 Pump Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_ENG_2_PUMP_L)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 Hydraulic Engine 1 Pump Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_ENG_1_PUMP_U)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 Hydraulic Engine 1 Pump Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_ENG_1_PUMP_L)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic Electrical Pump Yellow Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_YELLOW_ELEC_PUMP_U)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic Electrical Pump Yellow Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_YELLOW_ELEC_PUMP_L)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic Electrical Pump Blue Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_BLUE_ELEC_PUMP_U)"
	},
	"FenixSim.A320.Hydraulic.FNX320 Hydraulic Electrical Pump Blue Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_HYD_BLUE_ELEC_PUMP_L)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS Terrain Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_TERR_U)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS Terrain Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_TERR_L)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS System Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_SYS_U)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS System Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_SYS_L)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS Landing Flap 3 Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_LDG_FLAP3_L)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS GS Mode Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_GS_MODE_L)"
	},
	"FenixSim.A320.Warning.FNX320 GPWS Flap Mode Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_GPWS_FLAP_MODE_L)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield MSG FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_ATC_MSG_FO_L)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield ATC FO Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_ATC_MSG_FO_U)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield MSG Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_ATC_MSG_CAPT_L)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield ATC Captain Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_ATC_MSG_CAPT_U)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority FO Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FC_SIDESTICK_PRIORITY_FO_ARROW)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority FO Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_FC_SIDESTICK_PRIORITY_FO)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority Captain Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FC_SIDESTICK_PRIORITY_CAPT_ARROW)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority Captain Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_FC_SIDESTICK_PRIORITY_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning FO Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_WARNING_FO_L)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning FO Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_WARNING_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning Captain Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_WARNING_CAPT_L)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning Captain Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_WARNING_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution FO Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_CAUTION_FO_L)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution FO Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_CAUTION_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution Captain Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_CAUTION_CAPT_L)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution Captain Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_MIP_MASTER_CAUTION_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland FO Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOLAND_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland Captain Button Annunciator": {
		"method": "calcCode",
		"code": "(L:I_MIP_AUTOLAND_CAPT)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Right 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_RIGHT_2_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Right 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_RIGHT_2_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Right 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_RIGHT_1_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Right 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_RIGHT_1_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Left 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_LEFT_2_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Left 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_LEFT_2_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Left 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_LEFT_1_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Wing Tank Pump Left 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_LEFT_1_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Mode Select Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_MODE_SEL_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Mode Select Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_MODE_SEL_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Crossfeed Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_XFEED_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Crossfeed Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_XFEED_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Center Tank Pump 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_CENTER_2_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Center Tank Pump 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_CENTER_2_L)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Center Tank Pump 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_CENTER_1_U)"
	},
	"FenixSim.A320.Fuel.FNX320 Fuel Center Tank Pump 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FUEL_CENTER_1_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 3 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_3_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 3 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_3_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_2_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_2_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_1_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl SEC 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_SEC_1_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl FAC 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_FAC_2_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl FAC 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_FAC_2_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl FAC 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_FAC_1_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl FAC 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_FAC_1_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl ELAC 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_ELAC_2_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl ELAC 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_ELAC_2_L)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl ELAC 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_ELAC_1_U)"
	},
	"FenixSim.A320.Controls.FNX320 FlightControl ELAC 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FLT_CTL_ELAC_1_L)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 2 Agent 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG2_AGENT2_U)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 2 Agent 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG2_AGENT2_L)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 2 Agent 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG2_AGENT1_U)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 2 Agent 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG2_AGENT1_L)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 1 Agent 2 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG1_AGENT2_U)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 1 Agent 2 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG1_AGENT2_L)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 1 Agent 1 Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG1_AGENT1_U)"
	},
	"FenixSim.A320.Safety.FNX320 Fire Engine 1 Agent 1 Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG1_AGENT1_L)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Agent Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_APU_AGENT_U)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Agent Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_APU_AGENT_L)"
	},
	"FenixSim.A320.Autopilot.FNX320 FCU LOC Button Annunciator Upper": {
		"method": "calcCode",
		"code": "(L:I_FCU_LOC)"
	},
	"FenixSim.A320.Navigation.FNX320 ADIRS Key Clear Dot": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADIRS_QUEUE_CLR)"
	},
	"FenixSim.A320.Navigation.FNX320 ADIRS Key Enter Dot": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADIRS_QUEUE_ENT)"
	},
	"FenixSim.A320.Navigation.FNX320 ADIRS On Bat Annunciator": {
		"method": "calcCode",
		"code": "(L:I_OH_NAV_ADIRS_ON_BAT)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FXNX320_ACTUAL_ALTITUDE_DISPLAY": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE,Feet)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FXNX320_ACTUAL_HEADING_DISPLAY": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES MAGNETIC, Degrees)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FXNX320_ACTUAL_AIRSPEED_DISPLAY": {
		"method": "calcCode",
		"code": "(A:AIRSPEED INDICATED,Knots)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FXNX320_ACTUAL_VERTICAL_SPEED_DISPLAY": {
		"method": "calcCode",
		"code": "(A:VERTICAL SPEED,Feet/minute)"
	},
	"FenixSim.A320.Gear.Input.FNX320_MIP_PARKING_BRAKE ON_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_PARKING_BRAKE)"
	},
	"FenixSim.A320.Gear.Input.FNX320_MIP_PARKING_BRAKE OFF_SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_PARKING_BRAKE)"
	},
	"FenixSim.A320.Gear.Output.FNX320_MIP_PARKING_BRAKE STATE_LED": {
		"method": "calcCode",
		"code": "(L:S_MIP_PARKING_BRAKE)"
	},
	"FenixSim.A320.Flight Controls.Output.FNX320_FC_FLAPS_LEVER_POSITION_INDEX": {
		"method": "calcCode",
		"code": "(L:S_FC_FLAPS) near"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_POSITION_0_SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_POSITION_1_SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_POSITION_2_SWITCH": {
		"method": "calcCode",
		"code": "2 (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_POSITION_3_SWITCH": {
		"method": "calcCode",
		"code": "3 (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_POSITION_FULL_SWITCH": {
		"method": "calcCode",
		"code": "4 (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Output.FNX320_FC_FLAPS_EFFECTIVE_LEFT_POSITION": {
		"method": "calcCode",
		"code": "(L:A320_FC_L_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Output.FNX320_FC_FLAPS_EFFECTIVE_RIGHT_POSITION": {
		"method": "calcCode",
		"code": "(L:A320_FC_R_FLAPS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_EFIS1_BARO) ++ (>L:E_FCU_EFIS1_BARO)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_L_BARO_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_EFIS1_BARO) -- (>L:E_FCU_EFIS1_BARO)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_FCU_EFIS2_BARO) ++ (>L:E_FCU_EFIS2_BARO)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_R_BARO_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_FCU_EFIS2_BARO) -- (>L:E_FCU_EFIS2_BARO)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_1_INNER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP1_INNER) ++ (>L:E_PED_RMP1_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_1_INNER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP1_INNER) -- (>L:E_PED_RMP1_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_1_OUTER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP1_OUTER) ++ (>L:E_PED_RMP1_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_1_OUTER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP1_OUTER) -- (>L:E_PED_RMP1_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_2_INNER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP2_INNER) ++ (>L:E_PED_RMP2_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_2_INNER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP2_INNER) -- (>L:E_PED_RMP2_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_2_OUTER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP2_OUTER) ++ (>L:E_PED_RMP2_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_2_OUTER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP2_OUTER) -- (>L:E_PED_RMP2_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_3_INNER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP3_INNER) ++ (>L:E_PED_RMP3_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_3_INNER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP3_INNER) -- (>L:E_PED_RMP3_INNER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_3_OUTER_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP3_OUTER) ++ (>L:E_PED_RMP3_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX32_RADIO_3_OUTER_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_PED_RMP3_OUTER) -- (>L:E_PED_RMP3_OUTER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_1_XFER_PUSH": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP1_XFER) ++ (>L:S_PED_RMP1_XFER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_1_XFER_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP1_XFER) ++ (>L:S_PED_RMP1_XFER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_2_XFER_PUSH": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP2_XFER) ++ (>L:S_PED_RMP2_XFER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_2_XFER_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP2_XFER) ++ (>L:S_PED_RMP2_XFER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_3_XFER_PUSH": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP3_XFER) ++ (>L:S_PED_RMP3_XFER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RADIO_3_XFER_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP3_XFER) ++ (>L:S_PED_RMP3_XFER)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM1_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "72608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM1_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "72607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM1_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "72708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM1_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "72707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM1_RADIO_SWAP_SWITCH": {
		"method": "calcCode",
		"code": "72101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM2_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "84208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM2_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "84207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM2_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "84308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM2_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "84307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_COM2_RADIO_SWAP_SWITCH": {
		"method": "calcCode",
		"code": "83701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV1_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "73308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV1_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "73307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV1_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "73208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV1_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "73207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV1_RADIO_SWAP_SWITCH": {
		"method": "calcCode",
		"code": "72901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV2_RADIO_WHOLE_DEC": {
		"method": "calcCode",
		"code": "84808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV2_RADIO_WHOLE_INC": {
		"method": "calcCode",
		"code": "84807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV2_RADIO_FRACT_DEC": {
		"method": "calcCode",
		"code": "84908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV2_RADIO_FRACT_INC": {
		"method": "calcCode",
		"code": "84907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG_B737-7_NAV2_RADIO_SWAP_SWITCH": {
		"method": "calcCode",
		"code": "84501 (>K:ROTOR_BRAKE)"
	},
	"Flysimware.Cessna 414A.Avionics.Input.Honeywell_Alt_Alerter_1000s_INC": {
		"method": "calcCode",
		"code": "(>H:KNOB_ALT_SEL_1000_INC)"
	},
	"Flysimware.Cessna 414A.Avionics.Input.Honeywell_Alt_Alerter_1000s_DEC": {
		"method": "calcCode",
		"code": "(>H:KNOB_ALT_SEL_1000_DEC)"
	},
	"Flysimware.Cessna 414A.Avionics.Input.Honeywell_Alt_Alerter_100s_INC": {
		"method": "calcCode",
		"code": "(>H:KNOB_ALT_SEL_100_INC)"
	},
	"Flysimware.Cessna 414A.Avionics.Input.Honeywell_Alt_Alerter_100s_DEC": {
		"method": "calcCode",
		"code": "(>H:KNOB_ALT_SEL_100_DEC)"
	},
	"Hype Performance Group.H135.Fire.Input.H135 FIRE TEST ENG1": {
		"method": "calcCode",
		"code": "(L:ENG1_FIRE_TEST) ! (>L:ENG1_FIRE_TEST)"
	},
	"Hype Performance Group.H135.Fire.Input.H135 FIRE TEST ENG2": {
		"method": "calcCode",
		"code": "(L:ENG2_FIRE_TEST) ! (>L:ENG2_FIRE_TEST)"
	},
	"FenixSim.A320.Gear.Input.FNX320_LANDING_GEAR_DOWN": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_GEAR)"
	},
	"FenixSim.A320.Gear.Input.FNX320_LANDING_GEAR_UP": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_GEAR)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FLAPS_LEVER_FOR_TCAQ-ADDON": {
		"method": "calcCode",
		"code": "@ 16383.75 / 0 max 4 min (>L:S_FC_FLAPS)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 STROBE LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:STROBES_SET)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 STROBE LIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>K:STROBES_SET)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 LANDING LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>K:LANDING_LIGHTS_SET)"
	},
	"Hype Performance Group.H135.Lights.Input.H135 LANDING LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>K:LANDING_LIGHTS_SET)"
	},
	"Hype Performance Group.H135.Air Condition / Pressurization.Input.H135 AIR CONDITION ON": {
		"method": "calcCode",
		"code": "1 (>L:AIR_COND)"
	},
	"Hype Performance Group.H135.Air Condition / Pressurization.Input.H135 AIR CONDITION OFF": {
		"method": "calcCode",
		"code": "0 (>L:AIR_COND)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL AUX TOGGLE": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_TOGGLE)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PRIME PUMP 1 ON": {
		"method": "calcCode",
		"code": "1 (>L:ENG1_PRIME)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PRIME PUMP 1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:ENG1_PRIME)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PRIME PUMP 2 ON": {
		"method": "calcCode",
		"code": "1 (>L:ENG2_PRIME)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PRIME PUMP 2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:ENG2_PRIME)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PUMP 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_PUMP_ON)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PUMP 1 OFF": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_PUMP_OFF)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PUMP 2 ON": {
		"method": "calcCode",
		"code": "4 (>K:FUELSYSTEM_PUMP_ON)"
	},
	"Hype Performance Group.H135.Fuel.Input.H135 FUEL PUMP 2 OFF": {
		"method": "calcCode",
		"code": "4 (>K:FUELSYSTEM_PUMP_OFF)"
	},
	"FenixSim.A320.ISIS.Input.FNX320_ISIS_BARO_KNOB_INC": {
		"method": "calcCode",
		"code": "(L:E_MIP_ISFD_BARO) ++ (>L:E_MIP_ISFD_BARO)"
	},
	"FenixSim.A320.ISIS.Input.FNX320_ISIS_BARO_KNOB_DEC": {
		"method": "calcCode",
		"code": "(L:E_MIP_ISFD_BARO) -- (>L:E_MIP_ISFD_BARO)"
	},
	"FenixSim.A320.ISIS.Input.FNX320_ISIS_BARO_KNOB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_MIP_ISFD_BARO_BUTTON) ++ (>L:S_MIP_ISFD_BARO_BUTTON)"
	},
	"FenixSim.A320.ISIS.Input.FNX320_ISIS_BARO_KNOB_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_MIP_ISFD_BARO_BUTTON) ++ (>L:S_MIP_ISFD_BARO_BUTTON)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_SEAT_BELTS_TOG": {
		"method": "calcCode",
		"code": "(L:S_OH_SIGNS) ! (>L:S_OH_SIGNS)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_BEACON_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_BEACON) ! (>L:S_OH_EXT_LT_BEACON)"
	},
	"FenixSim.A320.Electrical.Input.FNX320_APU_MASTER_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_APU_MASTER) ! (>L:S_OH_ELEC_APU_MASTER)"
	},
	"FenixSim.A320.Electrical.Input.FNX320_APU_START_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_APU_START) 2 +  (>L:S_OH_ELEC_APU_START)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 OVHD APU BLEED SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_APU_BLEED) ! (>L:S_OH_PNEUMATIC_APU_BLEED)"
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR1_KNOB_OFF-NAV_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR1_MODE) ! (>L:S_OH_NAV_IR1_MODE)"
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR2_KNOB_OFF-NAV_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR2_MODE) ! (>L:S_OH_NAV_IR2_MODE)"
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR3_KNOB_OFF-NAV_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR3_MODE) ! (>L:S_OH_NAV_IR3_MODE)"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL L TK PUMP 1 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_LEFT_1) ! (>L:S_OH_FUEL_LEFT_1) "
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL L TK PUMP 2 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_LEFT_2) ! (>L:S_OH_FUEL_LEFT_2)"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL CENTER TK PUMP 1 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_CENTER_1) ! (>L:S_OH_FUEL_CENTER_1)\n"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL CENTER TK PUMP 2 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_CENTER_2) ! (>L:S_OH_FUEL_CENTER_2) \n"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL R TK PUMP 1 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_RIGHT_1) ! (>L:S_OH_FUEL_RIGHT_1)\n"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL R TK PUMP 2 PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_RIGHT_2) ! (>L:S_OH_FUEL_RIGHT_2) \n"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL X-FEED PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_XFEED) ! (>L:S_OH_FUEL_XFEED)\n"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 CAB Send Button Annunciator Lower": {
		"method": "calcCode",
		"code": "(L:I_ASP_CAB_CALL)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 0 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_0)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 0 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_0)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 1 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_1)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 1 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_1)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 2 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_2)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 2 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_2)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 3 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_3)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 3 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_3)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 4 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_4)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 4 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_4)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 5 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_5)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 5 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_5)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 6 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_6)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 6 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_6)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 7 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_7)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder 7 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_7)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder Alt Reporting Toggle": {
		"method": "calcCode",
		"code": "(L:S_XPDR_ALTREPORTING) ! (>L:S_XPDR_ALTREPORTING)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder ATC Switch": {
		"method": "calcCode",
		"code": "(L:S_XPDR_ATC) ! (>L:S_XPDR_ATC)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Clear Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_ATC_CLR)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Clear Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_ATC_CLR)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Ident Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_XPDR_IDENT)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Ident Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_XPDR_IDENT)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Mode Knob STBY": {
		"method": "calcCode",
		"code": "0 (>L:S_XPDR_MODE)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Mode Knob TA": {
		"method": "calcCode",
		"code": "1 (>L:S_XPDR_MODE)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Mode Knob TARA": {
		"method": "calcCode",
		"code": "2 (>L:S_XPDR_MODE)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Operation Knob AUTO": {
		"method": "calcCode",
		"code": "1 (>L:S_XPDR_OPERATION)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Operation Knob ON": {
		"method": "calcCode",
		"code": "2 (>L:S_XPDR_OPERATION)"
	},
	"FenixSim.A320.Radio.FNX320 Transponder Operation Knob STBY": {
		"method": "calcCode",
		"code": "0 (>L:S_XPDR_OPERATION)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Range Knob Dec": {
		"method": "calcCode",
		"code": "(L:S_TCAS_RANGE) 1 - 0 max (>L:S_TCAS_RANGE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Range Knob Inc": {
		"method": "calcCode",
		"code": "(L:S_TCAS_RANGE) 1 + 3 min (>L:S_TCAS_RANGE)"
	},
	"FenixSim.A320.Radar.FNX320 WX GCS Switch": {
		"method": "calcCode",
		"code": "(L:S_WR_GCS) ! (>L:S_WR_GCS)"
	},
	"FenixSim.A320.Radar.FNX320 WX Multiscan Switch": {
		"method": "calcCode",
		"code": "(L:S_WR_MULTISCAN) ! (>L:S_WR_MULTISCAN)"
	},
	"FenixSim.A320.Radar.FNX320 WX System Switch 1": {
		"method": "calcCode",
		"code": "0 (>L:S_WR_SYS)"
	},
	"FenixSim.A320.Radar.FNX320 WX Image Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:S_WR_MODE) 0.1 + 1 min (>L:S_WR_MODE)"
	},
	"FenixSim.A320.Radar.FNX320 WX Tilt Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_WR_TILT) 0.1 + 1 min (>L:A_WR_TILT)"
	},
	"FenixSim.A320.Radar.FNX320 WX Gain Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_WR_GAIN) 0.1 + 1 min (>L:A_WR_GAIN)"
	},
	"FenixSim.A320.Radar.FNX320 WX System Switch OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_WR_SYS)"
	},
	"FenixSim.A320.Radar.FNX320 WX Image Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:S_WR_MODE) 0.1 - 0 max (>L:S_WR_MODE)"
	},
	"FenixSim.A320.Radar.FNX320 WX Tilt Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_WR_TILT) 0.1 - 0 max (>L:A_WR_TILT)"
	},
	"FenixSim.A320.Radar.FNX320 WX Gain Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_WR_GAIN) 0.1 - 0 max (>L:A_WR_GAIN)"
	},
	"FenixSim.A320.Radar.FNX320 WX System Switch 2": {
		"method": "calcCode",
		"code": "2 (>L:S_WR_SYS)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX230 Ventilation Cabin Fans Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_CAB_FANS) ! (>L:S_OH_PNEUMATIC_CAB_FANS) "
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX230 Ventilation Extract Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_EXTRACT) ! (>L:S_OH_PNEUMATIC_EXTRACT) "
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX230 Ventilation Blower Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_BLOWER) ! (>L:S_OH_PNEUMATIC_BLOWER) "
	},
	"FenixSim.A320.Radio.FNX320 Switching ECAM ND XFR Knob CAPT": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_ECAM_ND_XFR)"
	},
	"FenixSim.A320.Radio.FNX320 Switching EIS DMC Knob  CAPT": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_EIS_DMC)"
	},
	"FenixSim.A320.Radio.FNX320 Switching AIR DATA Knob CAPT": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_AIR_DATA)"
	},
	"FenixSim.A320.Radio.FNX320 Switching ATT HDG Knob CAPT": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_ATT_HDG)"
	},
	"FenixSim.A320.Radio.FNX320 Switching ECAM ND XFR Knob Normal": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_ECAM_ND_XFR)"
	},
	"FenixSim.A320.Radio.FNX320 Switching EIS DMC Knob  Normal": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_EIS_DMC)"
	},
	"FenixSim.A320.Radio.FNX320 Switching AIR DATA Knob Normal": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_AIR_DATA)"
	},
	"FenixSim.A320.Radio.FNX320 Switching ATT HDG Knob Normal": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_ATT_HDG)"
	},
	"FenixSim.A320.Radio.FNX320 Switching ECAM ND XFR Knob FO": {
		"method": "calcCode",
		"code": "2 (>L:S_DISPLAY_ECAM_ND_XFR)"
	},
	"FenixSim.A320.Radio.FNX320 Switching EIS DMC Knob  FO": {
		"method": "calcCode",
		"code": "2 (>L:S_DISPLAY_EIS_DMC)"
	},
	"FenixSim.A320.Radio.FNX320 Switching AIR DATA Knob FO": {
		"method": "calcCode",
		"code": "2 (>L:S_DISPLAY_AIR_DATA)"
	},
	"FenixSim.A320.Radio.FNX320 Switching ATT HDG Knob FO": {
		"method": "calcCode",
		"code": "2 (>L:S_DISPLAY_ATT_HDG)"
	},
	"FenixSim.A320.Safety.FNX320 Sign Emergency Exit Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_INT_LT_EMER)"
	},
	"FenixSim.A320.Safety.FNX320 Sign Emergency Exit Switch ARM": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_INT_LT_EMER)"
	},
	"FenixSim.A320.Safety.FNX320 Sign Emergency Exit Switch ON": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_INT_LT_EMER)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 Pressurization Ditching Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_DITCHING) ! (>L:S_OH_PNEUMATIC_DITCHING) "
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 Pressurization Landing Elevation Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_LDG_ELEV) 0.25 - -3 max (>L:A_OH_PNEUMATIC_LDG_ELEV)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 Pressurization Landing Elevation Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_LDG_ELEV) 0.25 + 14 min (>L:A_OH_PNEUMATIC_LDG_ELEV)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Manual Vertical Speed Control Down": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_PNEUMATIC_PRESS_MAN)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Manual Vertical Speed Control Mid": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_PNEUMATIC_PRESS_MAN)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.FNX320 Pressurization Manual Vertical Speed Control Up": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_PNEUMATIC_PRESS_MAN)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 Pressurization Mode Select Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_PRESS_MODE) ! (>L:S_OH_PNEUMATIC_PRESS_MODE) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Temp Cabin Aft Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_AFT_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_AFT_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Temp Cabin Forward Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_FWD_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_FWD_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Temp Cockpit Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_COCKPIT_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_COCKPIT_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Cross Bleed Selector Knob SHUT": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Pack Flow Selector Knob LOW": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_PNEUMATIC_PACK_FLOW)"
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Hot Air Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_HOT_AIR) ! (>L:S_OH_PNEUMATIC_HOT_AIR) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Ram Air Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_RAM_AIR) ! (>L:S_OH_PNEUMATIC_RAM_AIR) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic APU Bleed Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_APU_BLEED) ! (>L:S_OH_PNEUMATIC_APU_BLEED) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Engine Bleed 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_ENG2_BLEED) ! (>L:S_OH_PNEUMATIC_ENG2_BLEED) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Engine Bleed 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_ENG1_BLEED) ! (>L:S_OH_PNEUMATIC_ENG1_BLEED) "
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Pack 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_PACK_2) ! (>L:S_OH_PNEUMATIC_PACK_2)"
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Pack 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_PACK_1) ! (>L:S_OH_PNEUMATIC_PACK_1) "
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Temp Cabin Aft Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_AFT_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_AFT_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Temp Cabin Forward Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_FWD_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_FWD_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Temp Cockpit Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_PNEUMATIC_COCKPIT_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_COCKPIT_TEMP)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Cross Bleed Selector Knob AUTO": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Pack Flow Selector Knob NORMAL": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_PNEUMATIC_PACK_FLOW)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Cross Bleed Selector Knob OPEN": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)"
	},
	"FenixSim.A320.Pneumatic.FNX320 Pneumatic Pack Flow Selector Knob HIGH": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_PNEUMATIC_PACK_FLOW)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Oxygen Crew Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_OXYGEN_CREW_OXYGEN) ! (>L:S_OH_OXYGEN_CREW_OXYGEN)"
	},
	"FenixSim.A320.Safety.FNX320 Oxygen Crew Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_OXYGEN_CREW_OXYGEN)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Oxygen High Alt Landing Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_OXYGEN_HIGH_ALT) ! (>L:S_OH_OXYGEN_HIGH_ALT)"
	},
	"FenixSim.A320.Safety.FNX320 Oxygen High Alt Landing Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_OXYGEN_HIGH_ALT)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Oxygen Mask Manual Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_OXYGEN_MASK_MAN_ON) ++ (>L:S_OH_OXYGEN_MASK_MAN_ON)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Oxygen Mask Manual Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_OXYGEN_MASK_MAN_ON) ++ (>L:S_OH_OXYGEN_MASK_MAN_ON)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal AIDS Print Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_AIDS_PRINT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal AIDS Print Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_AIDS_PRINT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal Cockpit Door Mode Switch Lock": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_COCKPIT_DOOR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal Cockpit Door Mode Switch Mid": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_COCKPIT_DOOR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal Cockpit Door Mode Switch Unlock": {
		"method": "calcCode",
		"code": "2 (>L:S_PED_COCKPIT_DOOR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal Cockpit Door Video Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_COCKPIT_DOOR_VIDEO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal Cockpit Door Video Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_COCKPIT_DOOR_VIDEO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal DFDR Event Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_DFDR_EVENT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Pedestal DFDR Event Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_DFDR_EVENT)"
	},
	"FenixSim.A320.Gear.FNX320 Pedestal Parking Brake Handle Toggle": {
		"method": "calcCode",
		"code": "(L:S_MIP_PARKING_BRAKE) ! (>L:S_MIP_PARKING_BRAKE)"
	},
	"FenixSim.A320.Controls.FNX320 Pedestal Rudder Trim Reset Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_RUDDER_TRIM_RESET)"
	},
	"FenixSim.A320.Controls.FNX320 Pedestal Rudder Trim Reset Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_RUDDER_TRIM_RESET)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Floods Main Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:1, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spot Light R Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:10, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spot Light C Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:11, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Dome Lights Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:12, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Emerg Dome Light Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:13, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Parking Brake Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:14, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Fire Handle 1 Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:15, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Fire Handle 2 Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:16, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Fire Handle Apu Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:17, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Floods Afds Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Floods Pedestal Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Floods Cb Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light L Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light R Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:6, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light L Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:7, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light R Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spot Light L Source": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:9, Percent)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Circuit Breakers": {
		"method": "calcCode",
		"code": "(L:BL_CBs, number)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Compass": {
		"method": "calcCode",
		"code": "(L:BL_Compass, number)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Main Ca": {
		"method": "calcCode",
		"code": "(L:BL_MainCA, number)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Main Fo": {
		"method": "calcCode",
		"code": "(L:BL_MainFO, number)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Overhead": {
		"method": "calcCode",
		"code": "(L:BL_Overhead, number)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Bl Pedestal": {
		"method": "calcCode",
		"code": "(L:BL_Pedestal, number)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Drive 1 Disconnect": {
		"method": "calcCode",
		"code": "(L:switch_07_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Standby Power Off LED": {
		"method": "calcCode",
		"code": "(L:switch_08_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Drive 2 Disconnect": {
		"method": "calcCode",
		"code": "(L:switch_09_73X, number) 0 >"
	},
	"PMDG.B737-700.Warning.PMDG B737 Emer Exit Lights Not Armed": {
		"method": "calcCode",
		"code": "(L:switch_102_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Attend Call": {
		"method": "calcCode",
		"code": "(L:switch_107_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Pa In Use": {
		"method": "calcCode",
		"code": "(L:switch_108_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Left Side Overheat": {
		"method": "calcCode",
		"code": "(L:switch_127_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Left Fwd Overheat": {
		"method": "calcCode",
		"code": "(L:switch_128_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Right Fwd Overheat": {
		"method": "calcCode",
		"code": "(L:switch_129_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Right Side Overheat": {
		"method": "calcCode",
		"code": "(L:switch_130_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Left Side On": {
		"method": "calcCode",
		"code": "(L:switch_131_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Left Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_132_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Right Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_133_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Window Heat Right Side On": {
		"method": "calcCode",
		"code": "(L:switch_134_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Capt Pitot": {
		"method": "calcCode",
		"code": "(L:switch_142_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 L Elev Pitot": {
		"method": "calcCode",
		"code": "(L:switch_143_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 L Alpha Vane": {
		"method": "calcCode",
		"code": "(L:switch_144_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Temp Probe": {
		"method": "calcCode",
		"code": "(L:switch_145_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Fo Pitot": {
		"method": "calcCode",
		"code": "(L:switch_146_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 R Elev Pitot": {
		"method": "calcCode",
		"code": "(L:switch_147_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 R Alpha Vane": {
		"method": "calcCode",
		"code": "(L:switch_148_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Aux Pitot": {
		"method": "calcCode",
		"code": "(L:switch_149_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Eng Anti-Ice L Cowl Anti-Ice": {
		"method": "calcCode",
		"code": "(L:switch_150_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Eng Anti-Ice R Cowl Anti-Ice": {
		"method": "calcCode",
		"code": "(L:switch_151_73X, number) 0 >"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Eng Anti-Ice L Cowl Valve Open": {
		"method": "calcCode",
		"code": "(L:switch_154_73X, number) 10 *"
	},
	"PMDG.B737-700.Anti-Ice.PMDG B737 Eng Anti-Ice R Cowl Valve Open": {
		"method": "calcCode",
		"code": "(L:switch_155_73X, number) 10 *"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump A Overheat": {
		"method": "calcCode",
		"code": "(L:switch_159_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ground Power Available": {
		"method": "calcCode",
		"code": "(L:switch_16_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump B Overheat": {
		"method": "calcCode",
		"code": "(L:switch_160_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump A Eng1 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_161_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump B Eng2 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_162_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump A Elec2 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_163_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Hyd Pump B Elec1 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_164_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fwd Entry": {
		"method": "calcCode",
		"code": "(L:switch_169_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fwd Service": {
		"method": "calcCode",
		"code": "(L:switch_170_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fwd Cargo": {
		"method": "calcCode",
		"code": "(L:switch_171_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Main Cargo Fo Bdsf": {
		"method": "calcCode",
		"code": "(L:switch_1711_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Equip": {
		"method": "calcCode",
		"code": "(L:switch_172_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Left Overwing": {
		"method": "calcCode",
		"code": "(L:switch_173_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Right Overwing": {
		"method": "calcCode",
		"code": "(L:switch_174_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Aft Cargo": {
		"method": "calcCode",
		"code": "(L:switch_175_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Aft Entry": {
		"method": "calcCode",
		"code": "(L:switch_176_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Aft Service": {
		"method": "calcCode",
		"code": "(L:switch_177_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Cvr Test Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_179_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Duct Overheat": {
		"method": "calcCode",
		"code": "(L:switch_188_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Duct Overheat 1": {
		"method": "calcCode",
		"code": "(L:switch_189_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Dual Bleed": {
		"method": "calcCode",
		"code": "(L:switch_193_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Ram Door1 Full Open": {
		"method": "calcCode",
		"code": "(L:switch_194_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Ram Door2 Full Open": {
		"method": "calcCode",
		"code": "(L:switch_195_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 Left Transfer Bus Off": {
		"method": "calcCode",
		"code": "(L:switch_20_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 L Pack - Pack Trip Off": {
		"method": "calcCode",
		"code": "(L:switch_203_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 L Pack - Wing-Body Overheat": {
		"method": "calcCode",
		"code": "(L:switch_204_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 L Pack - Bleed Trip Off": {
		"method": "calcCode",
		"code": "(L:switch_205_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 R Pack - Pack Trip Off": {
		"method": "calcCode",
		"code": "(L:switch_206_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 R Pack - Wing-Body Overheat": {
		"method": "calcCode",
		"code": "(L:switch_207_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 R Pack - Bleed Trip Off": {
		"method": "calcCode",
		"code": "(L:switch_208_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Right Transfer Bus Off": {
		"method": "calcCode",
		"code": "(L:switch_21_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Press Auto Fail": {
		"method": "calcCode",
		"code": "(L:switch_213_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Press Off Sched Descent": {
		"method": "calcCode",
		"code": "(L:switch_214_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Press Altn": {
		"method": "calcCode",
		"code": "(L:switch_215_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Press Manual": {
		"method": "calcCode",
		"code": "(L:switch_216_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 Left Source Off": {
		"method": "calcCode",
		"code": "(L:switch_22_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pseu": {
		"method": "calcCode",
		"code": "(L:switch_225_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Right Source Off": {
		"method": "calcCode",
		"code": "(L:switch_23_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Left Gen Off Bus": {
		"method": "calcCode",
		"code": "(L:switch_24_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Irs Ent Lights": {
		"method": "calcCode",
		"code": "(L:switch_242_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Irs Clr Lights": {
		"method": "calcCode",
		"code": "(L:switch_245_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Irs Gps": {
		"method": "calcCode",
		"code": "(L:switch_246_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Apu Gen Off Bus": {
		"method": "calcCode",
		"code": "(L:switch_25_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 OVHD IRS ALIGN 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_251_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 OVHD IRS ON DC 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_252_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 OVHD IRS FAULT 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_253_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 OVHD IRS DC FAIL 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_254_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Right Gen Off Bus": {
		"method": "calcCode",
		"code": "(L:switch_26_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Pass Oxy On": {
		"method": "calcCode",
		"code": "(L:switch_263_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng1 Engine Control": {
		"method": "calcCode",
		"code": "(L:switch_266_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng1 Eec1 Altn": {
		"method": "calcCode",
		"code": "(L:switch_2691_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng2 Eec2 Altn": {
		"method": "calcCode",
		"code": "(L:switch_2721_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng2 Engine Control": {
		"method": "calcCode",
		"code": "(L:switch_273_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng1 Reverser": {
		"method": "calcCode",
		"code": "(L:switch_274_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng2 Reverser": {
		"method": "calcCode",
		"code": "(L:switch_275_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav1 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2801_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav2 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2811_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf1 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2821_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf2 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2831_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Mkr Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2841_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Spkr Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2851_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2861_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2871_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2881_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2891_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Receiver Knobswitch": {
		"method": "calcCode",
		"code": "(L:switch_2901_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Vhf1 Button": {
		"method": "calcCode",
		"code": "(L:switch_2911_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Vhf2 Button": {
		"method": "calcCode",
		"code": "(L:switch_2921_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Vhf3 Button": {
		"method": "calcCode",
		"code": "(L:switch_2931_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Hf1 Button": {
		"method": "calcCode",
		"code": "(L:switch_2941_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Radio Hf2 Button": {
		"method": "calcCode",
		"code": "(L:switch_2951_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Flt Button": {
		"method": "calcCode",
		"code": "(L:switch_2961_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Left Acp Svc Button": {
		"method": "calcCode",
		"code": "(L:switch_2971_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Flight Recorder Off": {
		"method": "calcCode",
		"code": "(L:switch_300_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Cont Cab Zone Temp": {
		"method": "calcCode",
		"code": "(L:switch_308_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Fwd Cab Zone Temp": {
		"method": "calcCode",
		"code": "(L:switch_309_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 APU Maint Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_31_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Aft Cab Zone Temp": {
		"method": "calcCode",
		"code": "(L:switch_310_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 APU Low Oil Pressure Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_32_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 APU Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_33_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 A/P P/Rst 1": {
		"method": "calcCode",
		"code": "(L:switch_3391_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 Dsp Ap L Red": {
		"method": "calcCode",
		"code": "(L:switch_3392_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 APU Overspeed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_34_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Dsp At L Amber": {
		"method": "calcCode",
		"code": "(L:switch_3401_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Dsp At L Red": {
		"method": "calcCode",
		"code": "(L:switch_3402_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 Fmc P/Rst 1": {
		"method": "calcCode",
		"code": "(L:switch_3411_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.PMDG B737 Speedbrake Armed": {
		"method": "calcCode",
		"code": "(L:switch_343_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.PMDG B737 Stab Out Of Trim": {
		"method": "calcCode",
		"code": "(L:switch_344_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.PMDG B737 Speedbrake Do Not Arm": {
		"method": "calcCode",
		"code": "(L:switch_345_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 6 Pack Flt Cont": {
		"method": "calcCode",
		"code": "(L:switch_3491_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 6 Pack Irs": {
		"method": "calcCode",
		"code": "(L:switch_350_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 6 Pack Fuel": {
		"method": "calcCode",
		"code": "(L:switch_351_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 6 Pack Elec": {
		"method": "calcCode",
		"code": "(L:switch_352_73X, number) 0 >"
	},
	"PMDG.B737-700.Annunciator Panel.Output.PMDG B737 6 Pack APU": {
		"method": "calcCode",
		"code": "(L:switch_353_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 6 Pack Ovht/Det": {
		"method": "calcCode",
		"code": "(L:switch_354_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 MA Annunciator L": {
		"method": "calcCode",
		"code": "(L:switch_379_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 N1 Switch": {
		"method": "calcCode",
		"code": "(L:switch_3811_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Speed Switch": {
		"method": "calcCode",
		"code": "(L:switch_3821_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 Vnav Led": {
		"method": "calcCode",
		"code": "(L:switch_3861_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Level Change (Lvl Chg)": {
		"method": "calcCode",
		"code": "(L:switch_3911_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Heading Select (Hdg Sel)": {
		"method": "calcCode",
		"code": "(L:switch_3921_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 Approach (App) ": {
		"method": "calcCode",
		"code": "(L:switch_3931_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Altitude Hold (Alt Hld)": {
		"method": "calcCode",
		"code": "(L:switch_3941_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 Vertical Speed (V/S)": {
		"method": "calcCode",
		"code": "(L:switch_3951_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Vor Localizer (Vor Loc)": {
		"method": "calcCode",
		"code": "(L:switch_3961_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 Lnav Led": {
		"method": "calcCode",
		"code": "(L:switch_3971_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Command Engage (Cmd A)": {
		"method": "calcCode",
		"code": "(L:switch_4021_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Command Engage (Cmd B)": {
		"method": "calcCode",
		"code": "(L:switch_4031_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Control Wheel Steering Engage (Cws A)": {
		"method": "calcCode",
		"code": "(L:switch_4041_73X, number) 0 >"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Control Wheel Steering Engage (Cws B)": {
		"method": "calcCode",
		"code": "(L:switch_4051_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 MA Annunciator R": {
		"method": "calcCode",
		"code": "(L:switch_408_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Fuel Pump Aft 1 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_41_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Fuel Pump Fwd 1 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_42_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.Output.PMDG B737 Fuel Pump Aft 2 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_44_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Anti-Ice": {
		"method": "calcCode",
		"code": "(L:switch_432_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Hyd": {
		"method": "calcCode",
		"code": "(L:switch_433_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.Output.PMDG B737 Doors": {
		"method": "calcCode",
		"code": "(L:switch_434_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Eng": {
		"method": "calcCode",
		"code": "(L:switch_435_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Overhead": {
		"method": "calcCode",
		"code": "(L:switch_436_73X, number) 0 >"
	},
	"PMDG.B737-700.Warning.PMDG B737 Air Cond": {
		"method": "calcCode",
		"code": "(L:switch_4371_73X, number) 0 >"
	},
	"PMDG.B737-700.Warning.PMDG B737 Master Caution Light Right": {
		"method": "calcCode",
		"code": "(L:switch_4381_73X, number) 0 >"
	},
	"PMDG.B737-700.Warning.PMDG B737 Master Fire Warning  Light Right": {
		"method": "calcCode",
		"code": "(L:switch_4391_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.Output.PMDG B737 Fuel Pump Fwd 2 Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_43_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fmc P/Rst": {
		"method": "calcCode",
		"code": "(L:switch_4431_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 A/T P/Rst": {
		"method": "calcCode",
		"code": "(L:switch_4441_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Dsp At R Red": {
		"method": "calcCode",
		"code": "(L:switch_4442_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.Output.PMDG B737 A/P P/Rst": {
		"method": "calcCode",
		"code": "(L:switch_4451_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Dsp Ap R Red": {
		"method": "calcCode",
		"code": "(L:switch_4452_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Below G/S P-Inhibit LED": {
		"method": "calcCode",
		"code": "(L:switch_4461_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.PMDG B737 Speedbrakes Extended": {
		"method": "calcCode",
		"code": "(L:switch_447_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Takeoff Config": {
		"method": "calcCode",
		"code": "(L:switch_4471_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Cabin Altitude": {
		"method": "calcCode",
		"code": "(L:switch_4472_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Center Left Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_47_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Center Right Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_48_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Ground Proximity Inop Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_499_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Left Filter Bypass": {
		"method": "calcCode",
		"code": "(L:switch_50_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.Output.PMDG B737 Cross Feed Valve Open": {
		"method": "calcCode",
		"code": "(L:switch_51_73X, number)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Right Filter Bypass": {
		"method": "calcCode",
		"code": "(L:switch_52_73X, number) 0 >"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Hgs Fail Switch": {
		"method": "calcCode",
		"code": "(L:switch_5221_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Green Light On Clock Bezel": {
		"method": "calcCode",
		"code": "(L:switch_528_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Left Spar Valve Closed": {
		"method": "calcCode",
		"code": "(L:switch_53_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Right Spar Valve Closed": {
		"method": "calcCode",
		"code": "(L:switch_54_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Left Engine Valve Closed": {
		"method": "calcCode",
		"code": "(L:switch_55_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Right Engine Valve Closed": {
		"method": "calcCode",
		"code": "(L:switch_56_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Alert Capt": {
		"method": "calcCode",
		"code": "(L:switch_5661_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Maint Capt": {
		"method": "calcCode",
		"code": "(L:switch_5662_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Alert Ind Capt": {
		"method": "calcCode",
		"code": "(L:switch_5663_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Maint Ind Capt": {
		"method": "calcCode",
		"code": "(L:switch_5664_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Alert Fo": {
		"method": "calcCode",
		"code": "(L:switch_5665_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Maint Fo": {
		"method": "calcCode",
		"code": "(L:switch_5666_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Alert Ind Fo ": {
		"method": "calcCode",
		"code": "(L:switch_5667_73X, number) 0 >"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Maint Ind Fo": {
		"method": "calcCode",
		"code": "(L:switch_5668_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.PMDG B737 Fms Call Light 1": {
		"method": "calcCode",
		"code": "(L:switch_6030_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.PMDG B737 Fms Fail Light 1": {
		"method": "calcCode",
		"code": "(L:switch_6031_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.PMDG B737 Fms Msg Light 1": {
		"method": "calcCode",
		"code": "(L:switch_6040_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.PMDG B737 Fms Ofst Light 1": {
		"method": "calcCode",
		"code": "(L:switch_6041_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.PMDG B737 Fms Exec Light 1": {
		"method": "calcCode",
		"code": "(L:switch_6042_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 OVHD Yaw Damper Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_64_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.Output.PMDG B737 Fms Call Light 2": {
		"method": "calcCode",
		"code": "(L:switch_6750_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.Output.PMDG B737 Fms Fail Light 2": {
		"method": "calcCode",
		"code": "(L:switch_6751_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.Output.PMDG B737 Fms Msg Light 2": {
		"method": "calcCode",
		"code": "(L:switch_6760_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.Output.PMDG B737 Fms Ofst Light 2": {
		"method": "calcCode",
		"code": "(L:switch_6761_73X, number) 0 >"
	},
	"PMDG.B737-700.FMS.Output.PMDG B737 Fms Exec Light 2": {
		"method": "calcCode",
		"code": "(L:switch_6762_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.PMDG B737 Auto Slat Fail": {
		"method": "calcCode",
		"code": "(L:switch_69_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Eng1 Overheat Light": {
		"method": "calcCode",
		"code": "(L:switch_695_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 Eng 1 Start": {
		"method": "calcCode",
		"code": "(L:switch_688_73X, number)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Apu Fire Warn/Disch 1": {
		"method": "calcCode",
		"code": "(L:switch_6982_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 Eng 2 Start": {
		"method": "calcCode",
		"code": "(L:switch_689_73X, number)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Mach Trim Fail": {
		"method": "calcCode",
		"code": "(L:switch_70_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Wheel Well Fire Light": {
		"method": "calcCode",
		"code": "(L:switch_700_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Fire Det Fault Light": {
		"method": "calcCode",
		"code": "(L:switch_701_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Apu Det Inop Light": {
		"method": "calcCode",
		"code": "(L:switch_702_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Apu Bottle Discharge Light": {
		"method": "calcCode",
		"code": "(L:switch_703_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Eng2 Overheat Light": {
		"method": "calcCode",
		"code": "(L:switch_706_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 L Bottle Discharge Light": {
		"method": "calcCode",
		"code": "(L:switch_707_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 R Bottle Discharge Light": {
		"method": "calcCode",
		"code": "(L:switch_708_73X, number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Stabtrim Main Elec Cutout": {
		"method": "calcCode",
		"code": "(L:switch_709_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 L Eng Test Light": {
		"method": "calcCode",
		"code": "(L:switch_716_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 R Eng Test Light": {
		"method": "calcCode",
		"code": "(L:switch_717_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.PMDG B737 Apu Test Light": {
		"method": "calcCode",
		"code": "(L:switch_718_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Feel Diff Press": {
		"method": "calcCode",
		"code": "(L:switch_72_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Mic LED": {
		"method": "calcCode",
		"code": "(L:switch_7341_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Mic LED": {
		"method": "calcCode",
		"code": "(L:switch_7351_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Mic LED": {
		"method": "calcCode",
		"code": "(L:switch_7361_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Mic LED": {
		"method": "calcCode",
		"code": "(L:switch_7371_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Mic LED": {
		"method": "calcCode",
		"code": "(L:switch_7381_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7391_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7401_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf3 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7411_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf1 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7421_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7431_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7441_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7451_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav1 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7461_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav2 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7471_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf1 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7481_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf2 Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7491_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Mkr Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7501_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Spkr Receive LED": {
		"method": "calcCode",
		"code": "(L:switch_7511_73X, number) 0 >"
	},
	"PMDG.B737-700.Lights.PMDG B737 Ext Fwd Light LED": {
		"method": "calcCode",
		"code": "(L:switch_758_73X, number) 0 >"
	},
	"PMDG.B737-700.Lights.PMDG B737 Ext Aft Light LED": {
		"method": "calcCode",
		"code": "(L:switch_759_73X, number) 0 >"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Light": {
		"method": "calcCode",
		"code": "(L:switch_7591_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Flt Control A Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_76_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Main Det Select Switch": {
		"method": "calcCode",
		"code": "(L:switch_7621_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Fwd Cargo Fire Arm LED": {
		"method": "calcCode",
		"code": "(L:switch_764_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Aft Cargo Fire Arm LED": {
		"method": "calcCode",
		"code": "(L:switch_766_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Fire Discharge LED": {
		"method": "calcCode",
		"code": "(L:switch_7671_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Flt Control B Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_77_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 Xpndr Fail Light": {
		"method": "calcCode",
		"code": "(L:switch_799_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Standby Hyd Stby Rud On": {
		"method": "calcCode",
		"code": "(L:switch_82_73X, number) 0 >"
	},
	"PMDG.B737-700.Hydraulic.PMDG B737 Standby Hyd Low Pressure": {
		"method": "calcCode",
		"code": "(L:switch_83_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Lock Fail Light": {
		"method": "calcCode",
		"code": "(L:switch_832_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Auto Unlk Light": {
		"method": "calcCode",
		"code": "(L:switch_833_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 COM Unit 2 (FO) Multi select LED": {
		"method": "calcCode",
		"code": "(L:switch_836_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8551_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8561_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Receive": {
		"method": "calcCode",
		"code": "(L:switch_8591_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Receive": {
		"method": "calcCode",
		"code": "(L:switch_8601_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Receive": {
		"method": "calcCode",
		"code": "(L:switch_8611_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav1 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8621_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav2 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8631_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf1 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8641_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf2 Receive": {
		"method": "calcCode",
		"code": "(L:switch_8651_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Mkr Receive": {
		"method": "calcCode",
		"code": "(L:switch_8661_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Spkr Receive": {
		"method": "calcCode",
		"code": "(L:switch_8671_73X, number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 Left Acp Pa Button": {
		"method": "calcCode",
		"code": "(L:switch_8731_73X, number)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Airstair": {
		"method": "calcCode",
		"code": "(L:switch_8951_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Left Fwd Overwing": {
		"method": "calcCode",
		"code": "(L:switch_896_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Left Aft Overwing": {
		"method": "calcCode",
		"code": "(L:switch_897_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Right Fwd Overwing": {
		"method": "calcCode",
		"code": "(L:switch_898_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Right Aft Overwing": {
		"method": "calcCode",
		"code": "(L:switch_899_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Bat Discharge": {
		"method": "calcCode",
		"code": "(L:switch_90_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 1 Green": {
		"method": "calcCode",
		"code": "(L:switch_9051_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 1 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9052_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 2 Green": {
		"method": "calcCode",
		"code": "(L:switch_9053_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 2 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9054_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 3 Green": {
		"method": "calcCode",
		"code": "(L:switch_9055_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 3 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9056_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 4 Green": {
		"method": "calcCode",
		"code": "(L:switch_9057_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 4 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9058_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 5 Green": {
		"method": "calcCode",
		"code": "(L:switch_9059_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 5 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9060_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 6 Green": {
		"method": "calcCode",
		"code": "(L:switch_9061_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 6 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9062_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 7 Green": {
		"method": "calcCode",
		"code": "(L:switch_9063_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 7 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9064_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 8 Green": {
		"method": "calcCode",
		"code": "(L:switch_9065_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 8 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9066_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 9 Green": {
		"method": "calcCode",
		"code": "(L:switch_9067_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 9 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9068_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 10 Green": {
		"method": "calcCode",
		"code": "(L:switch_9069_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 10 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9070_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 11 Green": {
		"method": "calcCode",
		"code": "(L:switch_9071_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 11 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9072_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 12 Green": {
		"method": "calcCode",
		"code": "(L:switch_9073_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 12 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9074_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 13 Green": {
		"method": "calcCode",
		"code": "(L:switch_9075_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 13 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9076_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 14 Green": {
		"method": "calcCode",
		"code": "(L:switch_9077_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 14 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9078_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 15 Green": {
		"method": "calcCode",
		"code": "(L:switch_9079_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 15 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9080_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 16 Green": {
		"method": "calcCode",
		"code": "(L:switch_9081_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 16 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9082_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 17 Green": {
		"method": "calcCode",
		"code": "(L:switch_9083_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 17 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9084_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 18 Green": {
		"method": "calcCode",
		"code": "(L:switch_9085_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 18 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9086_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 19 Green": {
		"method": "calcCode",
		"code": "(L:switch_9087_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 19 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9088_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 20 Green": {
		"method": "calcCode",
		"code": "(L:switch_9089_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke 20 Amber": {
		"method": "calcCode",
		"code": "(L:switch_9090_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke Depress": {
		"method": "calcCode",
		"code": "(L:switch_9091_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Main Smoke Cargo": {
		"method": "calcCode",
		"code": "(L:switch_9092_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Tr Unit": {
		"method": "calcCode",
		"code": "(L:switch_91_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Lav Smoke Sys Fault": {
		"method": "calcCode",
		"code": "(L:switch_9131_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Lav Smoke Det Fault 1": {
		"method": "calcCode",
		"code": "(L:switch_9132_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Lav Smoke Det Fault": {
		"method": "calcCode",
		"code": "(L:switch_9133_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Lav Smoke Smoke": {
		"method": "calcCode",
		"code": "(L:switch_9134_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Supn Smoke Smoke": {
		"method": "calcCode",
		"code": "(L:switch_9135_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Main Smoke Det Fault": {
		"method": "calcCode",
		"code": "(L:switch_9136_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.PMDG B737 Main Smoke Smoke": {
		"method": "calcCode",
		"code": "(L:switch_9137_73X, number) 0 >"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Elec": {
		"method": "calcCode",
		"code": "(L:switch_92_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instrumentation.PMDG B737 Hud Stow/Hide": {
		"method": "calcCode",
		"code": "(L:switch_98_73X, number) 0 >"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Equip Cooling Exhaust Off": {
		"method": "calcCode",
		"code": "(L:switch_99_73X, number) 0 >"
	},
	"PMDG.B737-700.Gear.PMDG B737 00 Alt Gear Ext Door": {
		"method": "calcCode",
		"code": "200201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 00 Alt Gear Ext Handle Left": {
		"method": "calcCode",
		"code": "200401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 00 Alt Gear Ext Handle Nose": {
		"method": "calcCode",
		"code": "200501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 00 Alt Gear Ext Handle Right": {
		"method": "calcCode",
		"code": "200301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Checklist Knob Left": {
		"method": "calcCode",
		"code": "752101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Checklist Knob Right": {
		"method": "calcCode",
		"code": "752201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Combiner Cover": {
		"method": "calcCode",
		"code": "200601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Left Arrow": {
		"method": "calcCode",
		"code": "170101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Left Chart": {
		"method": "calcCode",
		"code": "170001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Left Power": {
		"method": "calcCode",
		"code": "173001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Left Star": {
		"method": "calcCode",
		"code": "172901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Left Sun": {
		"method": "calcCode",
		"code": "172801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Right Arrow": {
		"method": "calcCode",
		"code": "178701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Right Chart": {
		"method": "calcCode",
		"code": "178601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Right Power": {
		"method": "calcCode",
		"code": "181601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Right Star": {
		"method": "calcCode",
		"code": "181501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Efb Right Sun": {
		"method": "calcCode",
		"code": "181401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Grimes Light Ca": {
		"method": "calcCode",
		"code": "202001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Hgs Projector Mover": {
		"method": "calcCode",
		"code": "(L:hgs_projector_mover,bool) ! (>L:hgs_projector_mover,bool)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Jumpseat": {
		"method": "calcCode",
		"code": "200101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Noclick": {
		"method": "calcCode",
		"code": "0 (L:NoClick,bool) ! (>L:NoClick,bool) 1"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Yoke Left Hide": {
		"method": "calcCode",
		"code": "200701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 00 Yoke Right Hide": {
		"method": "calcCode",
		"code": "200801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 A Testswitch": {
		"method": "calcCode",
		"code": "(L:TestSwitch,bool) ! (>L:TestSwitch,bool)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel A Aft": {
		"method": "calcCode",
		"code": "201101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel A Fwd": {
		"method": "calcCode",
		"code": "200901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Aft Bleed": {
		"method": "calcCode",
		"code": "201401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel B Aft": {
		"method": "calcCode",
		"code": "201201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel B Fwd": {
		"method": "calcCode",
		"code": "201001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Fwd Bleed": {
		"method": "calcCode",
		"code": "201301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Gnd Guard": {
		"method": "calcCode",
		"code": "201801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Aux Fuel Gnd Switch": {
		"method": "calcCode",
		"code": "201901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Left Alert Switch": {
		"method": "calcCode",
		"code": "203201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Left Maint Switch": {
		"method": "calcCode",
		"code": "203401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Left Test Switch": {
		"method": "calcCode",
		"code": "203001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Right Alert Switch": {
		"method": "calcCode",
		"code": "203301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Right Maint Switch": {
		"method": "calcCode",
		"code": "203501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Fuel.PMDG B737 Bbj Aux Fuel Right Test Switch": {
		"method": "calcCode",
		"code": "203101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light CA Adjust Dec": {
		"method": "calcCode",
		"code": "31908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light CA Adjust Inc": {
		"method": "calcCode",
		"code": "31907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light FO Adjust Dec": {
		"method": "calcCode",
		"code": "32208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Chart Light FO Adjust Inc": {
		"method": "calcCode",
		"code": "32207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.PMDG B737 Compass Stow": {
		"method": "calcCode",
		"code": "(L:NGXCompassStow,bool) ! (>L:NGXCompassStow,bool)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light L Adjust Dec": {
		"method": "calcCode",
		"code": "32308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light L Adjust Inc": {
		"method": "calcCode",
		"code": "32307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light L Pull": {
		"method": "calcCode",
		"code": "89501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light R Adjust Dec": {
		"method": "calcCode",
		"code": "32408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light R Adjust Inc": {
		"method": "calcCode",
		"code": "32407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Map Light R Pull": {
		"method": "calcCode",
		"code": "89601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob Dec": {
		"method": "calcCode",
		"code": "308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob Inc": {
		"method": "calcCode",
		"code": "307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob STBY PWR": {
		"method": "calcCode",
		"code": "0 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob BAT BUS": {
		"method": "calcCode",
		"code": "10 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob BAT": {
		"method": "calcCode",
		"code": "20 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob AUX BAT": {
		"method": "calcCode",
		"code": "30 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob TR1": {
		"method": "calcCode",
		"code": "40 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob TR2": {
		"method": "calcCode",
		"code": "50 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob TR3": {
		"method": "calcCode",
		"code": "60 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Dc Source Knob TEST": {
		"method": "calcCode",
		"code": "70 (L:switch_03_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob Dec": {
		"method": "calcCode",
		"code": "408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob Inc": {
		"method": "calcCode",
		"code": "407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob STBY PWR": {
		"method": "calcCode",
		"code": "0 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob GND PWR": {
		"method": "calcCode",
		"code": "10 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob GEN 1": {
		"method": "calcCode",
		"code": "20 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob APU GEN": {
		"method": "calcCode",
		"code": "30 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob GEN 2": {
		"method": "calcCode",
		"code": "40 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob INV": {
		"method": "calcCode",
		"code": "50 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Ac Source Knob TEST": {
		"method": "calcCode",
		"code": "60 (L:switch_04_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Cab Util": {
		"method": "calcCode",
		"code": "501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Ife/Pass": {
		"method": "calcCode",
		"code": "601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Standby Power Bat": {
		"method": "calcCode",
		"code": "0 (L:switch_10_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Standby Power Off": {
		"method": "calcCode",
		"code": "50 (L:switch_10_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Standby Power Auto": {
		"method": "calcCode",
		"code": "100 (L:switch_10_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 3": {
		"method": "calcCode",
		"code": "100001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 4": {
		"method": "calcCode",
		"code": "100101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 5": {
		"method": "calcCode",
		"code": "100201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 6": {
		"method": "calcCode",
		"code": "100301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Ap Disc Right": {
		"method": "calcCode",
		"code": "100501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Ca Left Arm Rest": {
		"method": "calcCode",
		"code": "100601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Ca Right Arm Rest": {
		"method": "calcCode",
		"code": "100701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fo Left Arm Rest": {
		"method": "calcCode",
		"code": "100801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fo Right Arm Rest": {
		"method": "calcCode",
		"code": "100901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.PMDG B737 Ap Disc Left": {
		"method": "calcCode",
		"code": "101501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 Right Manual Gear Extension": {
		"method": "calcCode",
		"code": "101701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 Left Manual Gear Extension": {
		"method": "calcCode",
		"code": "101901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 Center Manual Gear Extension": {
		"method": "calcCode",
		"code": "102001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 No Smoking OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_103_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 No Smoking AUTO": {
		"method": "calcCode",
		"code": "50 (L:switch_103_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 No Smoking ON": {
		"method": "calcCode",
		"code": "100 (L:switch_103_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 Fasten Belts OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_104_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Fasten Belts AUTO": {
		"method": "calcCode",
		"code": "50 (L:switch_104_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 Fasten Belts ON": {
		"method": "calcCode",
		"code": "100 (L:switch_104_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 OVHD Ground Call Button Press": {
		"method": "calcCode",
		"code": "10601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Standby Power Guard": {
		"method": "calcCode",
		"code": "1101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Retractable Landing Light Left RET": {
		"method": "calcCode",
		"code": "0 (L:switch_111_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Retractable Landing Light Left EXT": {
		"method": "calcCode",
		"code": "50 (L:switch_111_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Retractable Landing Light Left ON": {
		"method": "calcCode",
		"code": "100 (L:switch_111_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Retractable Landing Light Right RET": {
		"method": "calcCode",
		"code": "0 (L:switch_112_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Retractable Landing Light Right EXT": {
		"method": "calcCode",
		"code": "50 (L:switch_112_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Retractable Landing Light Right ON": {
		"method": "calcCode",
		"code": "100 (L:switch_112_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Apu Start OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_118_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Apu Start ON": {
		"method": "calcCode",
		"code": "50 (L:switch_118_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Apu Start START": {
		"method": "calcCode",
		"code": "100 (L:switch_118_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.PMDG B737 Engine Start Left Dec": {
		"method": "calcCode",
		"code": "11908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.PMDG B737 Engine Start Left Inc": {
		"method": "calcCode",
		"code": "11909 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG B737 Engine Start Left GRD": {
		"method": "calcCode",
		"code": "0 (L:switch_119_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.PMDG B737 Engine Start Left OFF": {
		"method": "calcCode",
		"code": "10 (L:switch_119_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.PMDG B737 Engine Start Left CONT": {
		"method": "calcCode",
		"code": "20 (L:switch_119_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Engines.PMDG B737 Engine Start Left FLT": {
		"method": "calcCode",
		"code": "30 (L:switch_119_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Gen Drive Disc Left": {
		"method": "calcCode",
		"code": "1201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.PMDG B737 Ignition Select IGN L": {
		"method": "calcCode",
		"code": "0 (L:switch_120_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Engines.PMDG B737 Ignition Select Both": {
		"method": "calcCode",
		"code": "50 (L:switch_120_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Engines.PMDG B737 Ignition Select IGN R": {
		"method": "calcCode",
		"code": "100 (L:switch_120_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Lights.PMDG B737 Position Light STROBE STEADY": {
		"method": "calcCode",
		"code": "0 (L:switch_123_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Position Light OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_123_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Lights.PMDG B737 Position Light STEADY": {
		"method": "calcCode",
		"code": "100 (L:switch_123_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Gen Drive Disc Left Guard": {
		"method": "calcCode",
		"code": "1301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Gen Drive Disc Right": {
		"method": "calcCode",
		"code": "1401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Gen Drive Disc Right Guard": {
		"method": "calcCode",
		"code": "1501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Cvr Test": {
		"method": "calcCode",
		"code": "17801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG B737 Eng 2 Reverse Thrust Kill": {
		"method": "calcCode",
		"code": "68101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG B737 Eng 1 Throttle": {
		"method": "calcCode",
		"code": "68301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng 2 A/T Disengage": {
		"method": "calcCode",
		"code": "68501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.PMDG B737 Eng 2 Throttle": {
		"method": "calcCode",
		"code": "68601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 1 Ovht Det A": {
		"method": "calcCode",
		"code": "0 (L:switch_694_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 1 Ovht Det Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_694_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 1 Ovht Det B": {
		"method": "calcCode",
		"code": "100 (L:switch_694_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Ovht Test Fault Inop": {
		"method": "calcCode",
		"code": "0 (L:switch_696_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Ovht Test Normal ": {
		"method": "calcCode",
		"code": "50 (L:switch_696_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Ovht Test Fire": {
		"method": "calcCode",
		"code": "100 (L:switch_696_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 1 Fire Warn/Disch Rotate Left": {
		"method": "calcCode",
		"code": "69701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 1 Fire Warn/Disch Rotate Right": {
		"method": "calcCode",
		"code": "69702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 1 Fire Warn/Disch Handle Up": {
		"method": "calcCode",
		"code": "697101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Apu Fire Warn/Disch Rotate Left": {
		"method": "calcCode",
		"code": "69801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Apu Fire Warn/Disch Rotate Right": {
		"method": "calcCode",
		"code": "69802 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Apu Fire Warn/Disch Handle Up": {
		"method": "calcCode",
		"code": "698101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 2 Fire Warn/Disch Rotate Left": {
		"method": "calcCode",
		"code": "69901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 2 Fire Warn/Disch Rotate Right": {
		"method": "calcCode",
		"code": "69902 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Bell Cutout": {
		"method": "calcCode",
		"code": "70401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 2 Ovht Det A": {
		"method": "calcCode",
		"code": "0 (L:switch_705_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 2 Ovht Det Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_705_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eng 2 Ovht Det B": {
		"method": "calcCode",
		"code": "100 (L:switch_705_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Safety.PMDG B737 Stabtrim Main Elec Cutout": {
		"method": "calcCode",
		"code": "70901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Stabtrim Main Elec Cutout Guard": {
		"method": "calcCode",
		"code": "71001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Stabtrim Autopilot Cutout": {
		"method": "calcCode",
		"code": "71101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Stabtrim Autopilot Cutout Guard": {
		"method": "calcCode",
		"code": "71201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Move Flap Lever": {
		"method": "calcCode",
		"code": "71401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps Up": {
		"method": "calcCode",
		"code": "714101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 1": {
		"method": "calcCode",
		"code": "714201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 2": {
		"method": "calcCode",
		"code": "714301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Set Flaps 5": {
		"method": "calcCode",
		"code": "714401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 10": {
		"method": "calcCode",
		"code": "714501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Set Flaps 15": {
		"method": "calcCode",
		"code": "714601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 25": {
		"method": "calcCode",
		"code": "714701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 30": {
		"method": "calcCode",
		"code": "714801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Flaps 40": {
		"method": "calcCode",
		"code": "714901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Engines Fire Ext Test 1": {
		"method": "calcCode",
		"code": "0 (L:switch_715_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Engines Fire Ext Test Middle": {
		"method": "calcCode",
		"code": "50 (L:switch_715_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Engines Fire Ext Test 2": {
		"method": "calcCode",
		"code": "100 (L:switch_715_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Outer Frq": {
		"method": "calcCode",
		"code": "72301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf Sensor Dec 1": {
		"method": "calcCode",
		"code": "72408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf Sensor Inc 1": {
		"method": "calcCode",
		"code": "72407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Test 1": {
		"method": "calcCode",
		"code": "72501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Alternate Flaps Master": {
		"method": "calcCode",
		"code": "7301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav1 Test": {
		"method": "calcCode",
		"code": "73101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Mic 1": {
		"method": "calcCode",
		"code": "73401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Mic 1": {
		"method": "calcCode",
		"code": "73501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Mic 1": {
		"method": "calcCode",
		"code": "73601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Mic 1": {
		"method": "calcCode",
		"code": "73701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Mic 1": {
		"method": "calcCode",
		"code": "73801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Alternate Flaps Master Guard": {
		"method": "calcCode",
		"code": "7401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Alternate Flaps Down Press": {
		"method": "calcCode",
		"code": "7501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter Switch Dec": {
		"method": "calcCode",
		"code": "75408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter Switch Inc": {
		"method": "calcCode",
		"code": "75407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Fwd Det Select Dec": {
		"method": "calcCode",
		"code": "76001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Fwd Det Select Inc": {
		"method": "calcCode",
		"code": "76002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Aft Det Select Switch Dec": {
		"method": "calcCode",
		"code": "76101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Aft Det Select Switch Inc": {
		"method": "calcCode",
		"code": "76102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Main Det Select Switch Dec": {
		"method": "calcCode",
		"code": "761101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Main Det Select Switch Inc": {
		"method": "calcCode",
		"code": "761102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Fwd Cargo Fire Arm": {
		"method": "calcCode",
		"code": "76301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Aft Cargo Fire Arm": {
		"method": "calcCode",
		"code": "76501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Fire Discharge": {
		"method": "calcCode",
		"code": "76701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Cargo Fire Discharge Guard": {
		"method": "calcCode",
		"code": "76801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Cargo Fire Test": {
		"method": "calcCode",
		"code": "76901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Mode": {
		"method": "calcCode",
		"code": "77001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Stby": {
		"method": "calcCode",
		"code": "77101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Rwy": {
		"method": "calcCode",
		"code": "77201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS G/S": {
		"method": "calcCode",
		"code": "77301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Clr": {
		"method": "calcCode",
		"code": "77501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Brt+": {
		"method": "calcCode",
		"code": "77601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Dim-": {
		"method": "calcCode",
		"code": "77701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 1": {
		"method": "calcCode",
		"code": "77801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 2": {
		"method": "calcCode",
		"code": "77901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control A Stby": {
		"method": "calcCode",
		"code": "0 (L:switch_78_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control A Off": {
		"method": "calcCode",
		"code": "50 (L:switch_78_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control A On": {
		"method": "calcCode",
		"code": "100 (L:switch_78_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 3": {
		"method": "calcCode",
		"code": "78001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 4": {
		"method": "calcCode",
		"code": "78101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 5": {
		"method": "calcCode",
		"code": "78201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 6": {
		"method": "calcCode",
		"code": "78301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 7": {
		"method": "calcCode",
		"code": "78401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 8": {
		"method": "calcCode",
		"code": "78501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 9": {
		"method": "calcCode",
		"code": "78601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Enter": {
		"method": "calcCode",
		"code": "78701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Num 0": {
		"method": "calcCode",
		"code": "78801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 HGS Test": {
		"method": "calcCode",
		"code": "78901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control A Guard": {
		"method": "calcCode",
		"code": "7901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tfr Left": {
		"method": "calcCode",
		"code": "79001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Wx Left": {
		"method": "calcCode",
		"code": "79101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Map Left": {
		"method": "calcCode",
		"code": "79201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gc Left": {
		"method": "calcCode",
		"code": "79301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tilt Control Left Dec": {
		"method": "calcCode",
		"code": "79408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tilt Control Left Inc": {
		"method": "calcCode",
		"code": "79407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tilt Control Right Dec": {
		"method": "calcCode",
		"code": "79508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tilt Control Right Inc": {
		"method": "calcCode",
		"code": "79507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Wx Right": {
		"method": "calcCode",
		"code": "79601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Map Right": {
		"method": "calcCode",
		"code": "79701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control B Stby": {
		"method": "calcCode",
		"code": "0 (L:switch_80_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control B Off": {
		"method": "calcCode",
		"code": "50 (L:switch_80_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control B On": {
		"method": "calcCode",
		"code": "100 (L:switch_80_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flight Control B Guard": {
		"method": "calcCode",
		"code": "8101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Aileron Trim Switch Left": {
		"method": "calcCode",
		"code": "81001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Aileron Trim Switch Right": {
		"method": "calcCode",
		"code": "81002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Rudder Trim Nose Right": {
		"method": "calcCode",
		"code": "81102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Rudder Trim Nose Left": {
		"method": "calcCode",
		"code": "81101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 SELCAL VHF1": {
		"method": "calcCode",
		"code": "81201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 SELCAL VHF2": {
		"method": "calcCode",
		"code": "81301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 SELCAL VHF3": {
		"method": "calcCode",
		"code": "81401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Outer 1": {
		"method": "calcCode",
		"code": "81501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Middle": {
		"method": "calcCode",
		"code": "81601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Outer": {
		"method": "calcCode",
		"code": "81701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf/Ant": {
		"method": "calcCode",
		"code": "81801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Test 1/2 R": {
		"method": "calcCode",
		"code": "81901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 Off/On": {
		"method": "calcCode",
		"code": "90301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Test": {
		"method": "calcCode",
		"code": "82101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Inner Dec": {
		"method": "calcCode",
		"code": "82208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Inner Inc": {
		"method": "calcCode",
		"code": "82207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Middle Dec": {
		"method": "calcCode",
		"code": "82308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Middle Inc": {
		"method": "calcCode",
		"code": "82307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Outer Dec": {
		"method": "calcCode",
		"code": "82408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Adf Frq Outer Inc": {
		"method": "calcCode",
		"code": "82407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 ADF Tfr": {
		"method": "calcCode",
		"code": "82701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Stab Trim": {
		"method": "calcCode",
		"code": "83001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Stab Trim Guard": {
		"method": "calcCode",
		"code": "83101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Dk Door Dec": {
		"method": "calcCode",
		"code": "83408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Dk Door Inc": {
		"method": "calcCode",
		"code": "83407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Outer Frq": {
		"method": "calcCode",
		"code": "83901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Nav2 Test": {
		"method": "calcCode",
		"code": "84701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf1 Mic": {
		"method": "calcCode",
		"code": "85001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf2 Mic": {
		"method": "calcCode",
		"code": "85101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Flt Mic": {
		"method": "calcCode",
		"code": "85201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Svc Mic": {
		"method": "calcCode",
		"code": "85301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Filter Switch Dec": {
		"method": "calcCode",
		"code": "87008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Filter Switch Inc": {
		"method": "calcCode",
		"code": "87007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 2 Toggle": {
		"method": "calcCode",
		"code": "87201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Pa Mic": {
		"method": "calcCode",
		"code": "87301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf3 Receive": {
		"method": "calcCode",
		"code": "87401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf1 Receive": {
		"method": "calcCode",
		"code": "87501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Wlan": {
		"method": "calcCode",
		"code": "88801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Wlan Guard": {
		"method": "calcCode",
		"code": "88901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Smoke Test": {
		"method": "calcCode",
		"code": "90501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Smoke Bell Cut Out": {
		"method": "calcCode",
		"code": "90701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Smoke": {
		"method": "calcCode",
		"code": "90901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Freighter Smoke Switch Guard": {
		"method": "calcCode",
		"code": "91101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Freighter Lav Smoke Test": {
		"method": "calcCode",
		"code": "91301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf2 Switch": {
		"method": "calcCode",
		"code": "91401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Freighter Lav Bell Cut Out": {
		"method": "calcCode",
		"code": "91501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Wx+T Left": {
		"method": "calcCode",
		"code": "91601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Auto": {
		"method": "calcCode",
		"code": "91701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Test": {
		"method": "calcCode",
		"code": "91801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Tfr Right": {
		"method": "calcCode",
		"code": "91901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Wx+T Right": {
		"method": "calcCode",
		"code": "92001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gc Right": {
		"method": "calcCode",
		"code": "92101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gain Control Right Dec": {
		"method": "calcCode",
		"code": "92208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gain Control Right Inc": {
		"method": "calcCode",
		"code": "92207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gain Control Left Dec": {
		"method": "calcCode",
		"code": "92308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Weather Radar Gain Control Left Inc": {
		"method": "calcCode",
		"code": "92307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Off 1": {
		"method": "calcCode",
		"code": "92401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Elec Maint": {
		"method": "calcCode",
		"code": "9301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf1 1": {
		"method": "calcCode",
		"code": "93101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Am Switch 1": {
		"method": "calcCode",
		"code": "93301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf2 1": {
		"method": "calcCode",
		"code": "93501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Ovhd Circuit Breaker Light Knob Dec": {
		"method": "calcCode",
		"code": "9408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Ovhd Circuit Breaker Light Knob Inc": {
		"method": "calcCode",
		"code": "9407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 COM Unit 3 Vhf Frq Tfr": {
		"method": "calcCode",
		"code": "94601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf Sensor Dec": {
		"method": "calcCode",
		"code": "94908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf Sensor Inc": {
		"method": "calcCode",
		"code": "94907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Ovhd Panel Light Knob Dec": {
		"method": "calcCode",
		"code": "9508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Ovhd Panel Light Knob Inc": {
		"method": "calcCode",
		"code": "9507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Test": {
		"method": "calcCode",
		"code": "95001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Outer Frq Dec": {
		"method": "calcCode",
		"code": "95108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Outer Frq Inc": {
		"method": "calcCode",
		"code": "95107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Inner Frq Dec": {
		"method": "calcCode",
		"code": "95208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Inner Frq Inc": {
		"method": "calcCode",
		"code": "95207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Off": {
		"method": "calcCode",
		"code": "95301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 Radio 3 Vhf1 Press": {
		"method": "calcCode",
		"code": "95401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 Radio 3 Vhf2 Press": {
		"method": "calcCode",
		"code": "95601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Equipment Cooling Supply": {
		"method": "calcCode",
		"code": "9601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf1": {
		"method": "calcCode",
		"code": "96001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Am Switch": {
		"method": "calcCode",
		"code": "96201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 Hf2": {
		"method": "calcCode",
		"code": "96401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Equipment Cooling Exhaust": {
		"method": "calcCode",
		"code": "9701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Galley": {
		"method": "calcCode",
		"code": "97501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 1 Fire Warn/Disch Lock Switch": {
		"method": "calcCode",
		"code": "97601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Apu Fire Warn/Disch Lock Switch": {
		"method": "calcCode",
		"code": "97701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 2 Fire Warn Lock Switch": {
		"method": "calcCode",
		"code": "97801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Compass Light": {
		"method": "calcCode",
		"code": "98201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 O2 Test/Reset 1": {
		"method": "calcCode",
		"code": "98301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 O2 Test/Reset 2": {
		"method": "calcCode",
		"code": "983101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 O2 Test/Reset 3": {
		"method": "calcCode",
		"code": "983201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 O2 Test/Reset 4": {
		"method": "calcCode",
		"code": "983301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Hp/In": {
		"method": "calcCode",
		"code": "98601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd App": {
		"method": "calcCode",
		"code": "98701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd +": {
		"method": "calcCode",
		"code": "98801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd -": {
		"method": "calcCode",
		"code": "98901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Att Rst Switch": {
		"method": "calcCode",
		"code": "99001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Isfd Baro Knob Dec": {
		"method": "calcCode",
		"code": "99108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Isfd Baro Knob Inc": {
		"method": "calcCode",
		"code": "99107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Std": {
		"method": "calcCode",
		"code": "99301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Menu": {
		"method": "calcCode",
		"code": "202101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Adjust Knob Dec": {
		"method": "calcCode",
		"code": "202208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Adjust Knob Inc": {
		"method": "calcCode",
		"code": "202207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Isfd Adjust Push": {
		"method": "calcCode",
		"code": "202301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 1": {
		"method": "calcCode",
		"code": "99801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Yoke Counter 2": {
		"method": "calcCode",
		"code": "99901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spotlight Knob Fo Dec": {
		"method": "calcCode",
		"code": "201608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spotlight Knob Fo Inc": {
		"method": "calcCode",
		"code": "201607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spotlight Knob Obs Dec": {
		"method": "calcCode",
		"code": "201708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Spotlight Knob Obs Inc": {
		"method": "calcCode",
		"code": "201707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).OH Circuit Breaker Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_94_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 9407 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 9408 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).OH Panel Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_95_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 9507 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 9508 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Chartlight L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_319_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 31907 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 31908 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Chartlight R Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_322_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 32207 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 32208 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Main Panel L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_328_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 32807 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 32808 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Outbd DU L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_329_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 32907 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 32908 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Inbd DU Outer L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_330_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33007 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33008 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Inbd DU Inner L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_331_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33107 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33108 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Lower DU Outer L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_332_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33207 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33208 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Lower DU Inner L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_333_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33307 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33308 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Upper DU L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_334_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33407 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33408 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Background L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_337_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33707 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33708 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).AFDS Flood L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_338_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 33807 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 33808 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Inbd DU R Outer Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_507_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 50707 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 50708 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Inbd DU R Inner Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_508_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 50807 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 50808 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Outbd DU R Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_509_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 50907 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 50908 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Main Panel R Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_510_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 51007 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 51008 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Pedestal Flood Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_756_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 75607 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 75608 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Pedestal Panel Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_757_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 75707 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 75708 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Maplight L Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_895_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 89507 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 89508 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Maplight R Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_896_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 89607 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 89608 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Spotlight CA Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_2015_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 201507 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 201508 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Spotlight FO Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_2016_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 201607 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 201608 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Lights.Input (Potentiometer).Spotlight OBS Brt Poti": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min  (L:switch_2017_73X) - 9 div s1\r\n:1 \r\nl1 0 > if{ 201707 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\r\nl1 0 < if{ 201708 (>K:ROTOR_BRAKE) l1 ++ s1 g1 }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 Elec Bus Transfer Toggle": {
		"method": "calcCode",
		"code": "1801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Cvr Erase": {
		"method": "calcCode",
		"code": "18001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 OVHD Alt Horn Cutout Button Press": {
		"method": "calcCode",
		"code": "18301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Source": {
		"method": "calcCode",
		"code": "18701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Bus Transfer Guard": {
		"method": "calcCode",
		"code": "1901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Cont Cabin Temp Dec": {
		"method": "calcCode",
		"code": "19108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Cont Cabin Temp Inc": {
		"method": "calcCode",
		"code": "19107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pass Cabin Temp Dec": {
		"method": "calcCode",
		"code": "19208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pass Cabin Temp Inc": {
		"method": "calcCode",
		"code": "19207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG B737 OVHD Ovht Test Button Press": {
		"method": "calcCode",
		"code": "19901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Fs2Crew": {
		"method": "calcCode",
		"code": "200001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Electrical.PMDG B737 Trip Reset": {
		"method": "calcCode",
		"code": "20901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flt Alt Dec": {
		"method": "calcCode",
		"code": "21808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Flt Alt Inc": {
		"method": "calcCode",
		"code": "21807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Land Alt Dec": {
		"method": "calcCode",
		"code": "22008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Land Alt Inc": {
		"method": "calcCode",
		"code": "22007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Outflow Valve Close": {
		"method": "calcCode",
		"code": "22201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Outflow Valve Open": {
		"method": "calcCode",
		"code": "22202 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pressurization Mode AUTO": {
		"method": "calcCode",
		"code": "0 (L:switch_223_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pressurization Mode ALTN": {
		"method": "calcCode",
		"code": "10 (L:switch_223_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Pressurization Mode MAN": {
		"method": "calcCode",
		"code": "20 (L:switch_223_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 OVHD LE Devices Test Press": {
		"method": "calcCode",
		"code": "22401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector Dec": {
		"method": "calcCode",
		"code": "22908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector Inc": {
		"method": "calcCode",
		"code": "22907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector TEST": {
		"method": "calcCode",
		"code": "0 (L:switch_229_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector TK GS": {
		"method": "calcCode",
		"code": "10 (L:switch_229_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Irs Display Selector PPOS": {
		"method": "calcCode",
		"code": "20 (L:switch_229_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector WIND": {
		"method": "calcCode",
		"code": "30 (L:switch_229_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Display Selector HDG STS": {
		"method": "calcCode",
		"code": "40 (L:switch_229_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Dspl Brt Dec": {
		"method": "calcCode",
		"code": "23008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Dspl Brt Inc": {
		"method": "calcCode",
		"code": "23007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 OVHD IRS Sys Dspl R": {
		"method": "calcCode",
		"code": "(L:switch_231_73X) 0 == if{ 23101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 OVHD IRS Sys Dspl L": {
		"method": "calcCode",
		"code": "(L:switch_231_73X) 100 == if{ 23101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 1": {
		"method": "calcCode",
		"code": "23201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 2": {
		"method": "calcCode",
		"code": "23301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 3": {
		"method": "calcCode",
		"code": "23401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 4": {
		"method": "calcCode",
		"code": "23501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 5": {
		"method": "calcCode",
		"code": "23601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 6": {
		"method": "calcCode",
		"code": "23701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 7": {
		"method": "calcCode",
		"code": "23801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 8": {
		"method": "calcCode",
		"code": "23901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 9": {
		"method": "calcCode",
		"code": "24001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS Ent": {
		"method": "calcCode",
		"code": "24101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS 0": {
		"method": "calcCode",
		"code": "24301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 IRS Clr": {
		"method": "calcCode",
		"code": "24401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.PMDG B737 Service Interphone": {
		"method": "calcCode",
		"code": "25701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Pass Oxygen": {
		"method": "calcCode",
		"code": "26401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Pass Oxygen Guard": {
		"method": "calcCode",
		"code": "26501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eec 1 Guard": {
		"method": "calcCode",
		"code": "26701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eec 1": {
		"method": "calcCode",
		"code": "26801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eec 2 Guard": {
		"method": "calcCode",
		"code": "27001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Eec 2": {
		"method": "calcCode",
		"code": "27101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 R/T I/C": {
		"method": "calcCode",
		"code": "27601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Mask Boom": {
		"method": "calcCode",
		"code": "27701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter Dec": {
		"method": "calcCode",
		"code": "27808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter Inc": {
		"method": "calcCode",
		"code": "27807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter V": {
		"method": "calcCode",
		"code": "0 (L:switch_278_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter B": {
		"method": "calcCode",
		"code": "10 (L:switch_278_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 Filter R": {
		"method": "calcCode",
		"code": "20 (L:switch_278_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.PMDG B737 Alt Norm": {
		"method": "calcCode",
		"code": "27901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Nav1 Receive": {
		"method": "calcCode",
		"code": "28001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Nav2 Receive": {
		"method": "calcCode",
		"code": "28101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Adf1 Receive": {
		"method": "calcCode",
		"code": "28201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Adf2 Receive": {
		"method": "calcCode",
		"code": "28301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Mkr Receive": {
		"method": "calcCode",
		"code": "28401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Spkr Receive": {
		"method": "calcCode",
		"code": "28501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Vhf1 Receive": {
		"method": "calcCode",
		"code": "28601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Vhf2 Receive": {
		"method": "calcCode",
		"code": "28701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Flt Receive": {
		"method": "calcCode",
		"code": "28801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Svc Receive": {
		"method": "calcCode",
		"code": "28901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Pa Receive": {
		"method": "calcCode",
		"code": "29001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Vhf1 Mic": {
		"method": "calcCode",
		"code": "29101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Vhf2 Mic": {
		"method": "calcCode",
		"code": "29201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Vhf3 Mic": {
		"method": "calcCode",
		"code": "29301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Hf1 Mic": {
		"method": "calcCode",
		"code": "29401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Hf2 Mic": {
		"method": "calcCode",
		"code": "29501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Flt Mic": {
		"method": "calcCode",
		"code": "29601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Svc Mic": {
		"method": "calcCode",
		"code": "29701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Flight Recorder": {
		"method": "calcCode",
		"code": "29801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Safety.PMDG B737 Flight Recorder Guard": {
		"method": "calcCode",
		"code": "29901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Mach Airspeed Warning Test 1": {
		"method": "calcCode",
		"code": "30101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Mach Airspeed Warning Test 2": {
		"method": "calcCode",
		"code": "30201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Stall Warning Test 1 Press": {
		"method": "calcCode",
		"code": "30301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Stall Warning Test 2 Press": {
		"method": "calcCode",
		"code": "30401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Cont Cab Temp Dec": {
		"method": "calcCode",
		"code": "30508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Cont Cab Temp Inc": {
		"method": "calcCode",
		"code": "30507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Fwd Cab Temp Dec": {
		"method": "calcCode",
		"code": "30608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Fwd Cab Temp Inc": {
		"method": "calcCode",
		"code": "30607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Aft Cab Temp Dec 1": {
		"method": "calcCode",
		"code": "30708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Aft Cab Temp Dec": {
		"method": "calcCode",
		"code": "30707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Trim Air": {
		"method": "calcCode",
		"code": "31101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src Dec": {
		"method": "calcCode",
		"code": "31308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src Inc": {
		"method": "calcCode",
		"code": "31307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src PASS CAB AFT": {
		"method": "calcCode",
		"code": "0 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src PACK R": {
		"method": "calcCode",
		"code": "10 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src PACK L": {
		"method": "calcCode",
		"code": "20 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src CONT CAB FWD": {
		"method": "calcCode",
		"code": "30 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src CONT CAB AFT": {
		"method": "calcCode",
		"code": "40 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.PMDG B737 Air Temp Src PASS CAB FWD": {
		"method": "calcCode",
		"code": "50 (L:switch_313_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr": {
		"method": "calcCode",
		"code": "31401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr Tc/Sr": {
		"method": "calcCode",
		"code": "314102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr Time/Date": {
		"method": "calcCode",
		"code": "31501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr Set": {
		"method": "calcCode",
		"code": "31601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr +": {
		"method": "calcCode",
		"code": "31701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr -": {
		"method": "calcCode",
		"code": "31801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr Reset": {
		"method": "calcCode",
		"code": "32001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 Cpt Chr Et": {
		"method": "calcCode",
		"code": "32101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Nose Wheel Steering Switch": {
		"method": "calcCode",
		"code": "32501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Nose Wheel Steering Guard": {
		"method": "calcCode",
		"code": "32601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Below G/S P-Inhibit": {
		"method": "calcCode",
		"code": "32701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Capt AFDS Test 2 Switch Press": {
		"method": "calcCode",
		"code": "34201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 Annunciator Panel L Press": {
		"method": "calcCode",
		"code": "34901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Mins Slew FO Dec": {
		"method": "calcCode",
		"code": "41108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Mins Slew FO Inc": {
		"method": "calcCode",
		"code": "41107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R Mins Ref Toggle": {
		"method": "calcCode",
		"code": "41201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Mins R Rst": {
		"method": "calcCode",
		"code": "41301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Vor1/Adf1 R": {
		"method": "calcCode",
		"code": "41401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 Efis Mode FO Dec": {
		"method": "calcCode",
		"code": "41508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 Efis Mode FO Inc": {
		"method": "calcCode",
		"code": "41507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Ctr R": {
		"method": "calcCode",
		"code": "41601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 Efis Range FO Dec": {
		"method": "calcCode",
		"code": "41708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 Efis Range FO Inc": {
		"method": "calcCode",
		"code": "41707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Tfc R": {
		"method": "calcCode",
		"code": "41801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fpv R": {
		"method": "calcCode",
		"code": "41901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Mtrs R": {
		"method": "calcCode",
		"code": "42001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Baro FO Dec": {
		"method": "calcCode",
		"code": "42108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Baro FO Inc": {
		"method": "calcCode",
		"code": "42107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Baro Ref": {
		"method": "calcCode",
		"code": "42201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Std R": {
		"method": "calcCode",
		"code": "42301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Vor2/Adf2 R": {
		"method": "calcCode",
		"code": "42401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.PMDG B737 Annunciator Panel R Press": {
		"method": "calcCode",
		"code": "43701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.PMDG B737 Master Caution": {
		"method": "calcCode",
		"code": "43801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.PMDG B737 Fire Warn": {
		"method": "calcCode",
		"code": "43901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel Dus R Dec": {
		"method": "calcCode",
		"code": "44008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel Dus R Inc": {
		"method": "calcCode",
		"code": "44007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Lower Du R Selector Dec": {
		"method": "calcCode",
		"code": "44108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 Lower Du R Selector Inc": {
		"method": "calcCode",
		"code": "44107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 FO AFDS Panel Test Switch 2": {
		"method": "calcCode",
		"code": "44201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fmc P/Rst R": {
		"method": "calcCode",
		"code": "44301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 A/T P/Rst R": {
		"method": "calcCode",
		"code": "44401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 A/P P/Rst R": {
		"method": "calcCode",
		"code": "44501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Below G/S P-Inhibit": {
		"method": "calcCode",
		"code": "44601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 Landing Gear Off": {
		"method": "calcCode",
		"code": "455101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Gear.PMDG B737 Landing Gear Unlock": {
		"method": "calcCode",
		"code": "455201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Sys": {
		"method": "calcCode",
		"code": "46201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Cr": {
		"method": "calcCode",
		"code": "462101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Eng": {
		"method": "calcCode",
		"code": "46301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Spd Ref Mode Dec": {
		"method": "calcCode",
		"code": "46408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Spd Ref Mode Inc": {
		"method": "calcCode",
		"code": "46407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Spd Ref Sel Dec": {
		"method": "calcCode",
		"code": "46508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Spd Ref Sel Inc": {
		"method": "calcCode",
		"code": "46507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Mode Outer Dec": {
		"method": "calcCode",
		"code": "46608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Mode Outer Inc": {
		"method": "calcCode",
		"code": "46607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Inner Dec": {
		"method": "calcCode",
		"code": "46708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Inner Inc": {
		"method": "calcCode",
		"code": "46707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Fuel Flow Switch Used": {
		"method": "calcCode",
		"code": "46801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Ai Mode Dec": {
		"method": "calcCode",
		"code": "47408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Ai Mode Inc": {
		"method": "calcCode",
		"code": "47407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Cage": {
		"method": "calcCode",
		"code": "47601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 STBY Baro Set Dec": {
		"method": "calcCode",
		"code": "49208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 STBY Baro Set Inc": {
		"method": "calcCode",
		"code": "49207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 STBY RMI Vor1/Adf1": {
		"method": "calcCode",
		"code": "49701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 STBY RMI Vor2/Adf2": {
		"method": "calcCode",
		"code": "49801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Sys Test": {
		"method": "calcCode",
		"code": "50001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Inbd Du R Brt Dec": {
		"method": "calcCode",
		"code": "50708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Inbd Du R Brt Inc": {
		"method": "calcCode",
		"code": "50707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Inbd Du Rdr R Brt Dec": {
		"method": "calcCode",
		"code": "50808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Inbd Du Rdr R Brt Inc": {
		"method": "calcCode",
		"code": "50807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Outbd Du R Brt Dec": {
		"method": "calcCode",
		"code": "50908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Outbd Du R Brt Inc": {
		"method": "calcCode",
		"code": "50907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel R Brt Dec": {
		"method": "calcCode",
		"code": "51008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.PMDG B737 Main Panel R Brt Inc": {
		"method": "calcCode",
		"code": "51007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Hgs Fail": {
		"method": "calcCode",
		"code": "52201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr": {
		"method": "calcCode",
		"code": "52301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr Tc/Sr": {
		"method": "calcCode",
		"code": "523102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr Time/Date": {
		"method": "calcCode",
		"code": "52401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr Set": {
		"method": "calcCode",
		"code": "52501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr +": {
		"method": "calcCode",
		"code": "52601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr -": {
		"method": "calcCode",
		"code": "52701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr Reset": {
		"method": "calcCode",
		"code": "52901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Navigation.Input.PMDG B737 FO Chr Et": {
		"method": "calcCode",
		"code": "53001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Displays Source All 1": {
		"method": "calcCode",
		"code": "0 (L:switch_58_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Displays Source Auto": {
		"method": "calcCode",
		"code": "10 (L:switch_58_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Displays Source All 2": {
		"method": "calcCode",
		"code": "20 (L:switch_58_73X,number) - 10 div s0 \r\n:1 \r\nl0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Control Panel Both 1": {
		"method": "calcCode",
		"code": "0 (L:switch_59_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Control Panel Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_59_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Control Panel Both 2": {
		"method": "calcCode",
		"code": "100 (L:switch_59_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fmc Source Both L": {
		"method": "calcCode",
		"code": "0 (L:switch_60_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fmc Source Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_60_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Fmc Source Both R": {
		"method": "calcCode",
		"code": "100 (L:switch_60_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Transfer Both L": {
		"method": "calcCode",
		"code": "0 (L:switch_61_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Transfer Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_61_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.PMDG B737 Irs Transfer Both R": {
		"method": "calcCode",
		"code": "100 (L:switch_61_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Nav Both on 1": {
		"method": "calcCode",
		"code": "0 (L:switch_62_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Nav Normal": {
		"method": "calcCode",
		"code": "50 (L:switch_62_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Radio.PMDG B737 Vhf Nav Both on 2": {
		"method": "calcCode",
		"code": "100 (L:switch_62_73X,number) - 50 div s0 \r\n:1 \r\nl0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \r\nl0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\r\n"
	},
	"PMDG.B737-700.Controls.PMDG B737 Spoiler A": {
		"method": "calcCode",
		"code": "6501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Spoiler A Guard": {
		"method": "calcCode",
		"code": "6601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Spoiler B": {
		"method": "calcCode",
		"code": "6701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Move Spoilers Lever": {
		"method": "calcCode",
		"code": "67901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Spoilers Down": {
		"method": "calcCode",
		"code": "679101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Spoilers Armed": {
		"method": "calcCode",
		"code": "679201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Spoilers 50 Percent": {
		"method": "calcCode",
		"code": "679301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Spoilers Flight Detent": {
		"method": "calcCode",
		"code": "679401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Set Spoilers Up": {
		"method": "calcCode",
		"code": "679501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.PMDG B737 Spoiler B Guard": {
		"method": "calcCode",
		"code": "6801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG B737 Eng 1 Reverse Thrust Kill": {
		"method": "calcCode",
		"code": "68001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 Annunciator Panel L Release": {
		"method": "calcCode",
		"code": "34904 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 Annunciator Panel R Release": {
		"method": "calcCode",
		"code": "43704 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead Engine FADEC Ground 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_AFT_FADEC_GND_2) ! (>L:S_OH_AFT_FADEC_GND_2) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead Engine FADEC Ground 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_AFT_FADEC_GND_1) ! (>L:S_OH_AFT_FADEC_GND_1) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead LMV Yellow Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_LMV_YELLOW) ! (>L:S_OH_HYD_LMV_YELLOW) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead LMV Blue Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_LMV_BLUE) ! (>L:S_OH_HYD_LMV_BLUE) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead LMV Green Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_LMV_GREEN) ! (>L:S_OH_HYD_LMV_GREEN) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Overhead Blue Pump Override Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_BLUE_PUMP_OVERRIDE) ! (>L:S_OH_HYD_BLUE_PUMP_OVERRIDE) "
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 Overhead Cockpit Door Video Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_COCKPIT_DOOR_VIDEO) ! (>L:S_OH_COCKPIT_DOOR_VIDEO) "
	},
	"FenixSim.A320.Safety.FNX320 Overhead ELT Test Switch Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_ELT_TEST)"
	},
	"FenixSim.A320.Electrical.FNX320 Overhead APU Auto Exiting Reset Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_APU_AUTOEXTING_RESET)"
	},
	"FenixSim.A320.Electrical.FNX320 Overhead APU Auto Exiting Test Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_APU_AUTOEXTING_TEST)"
	},
	"FenixSim.A320.Avionics.FNX320 Overhead Avionics Compt Light Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_LIGHTING_AVIONICS_COMPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Overhead Svce Int Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_SVCE_INT_OVRD)"
	},
	"FenixSim.A320.Safety.FNX320 Overhead Oxygen TMR Reset Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_OXYGEN_TMR_RESET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Overhead Audio Switching Knob CA": {
		"method": "calcCode",
		"code": "0 (>L:S_AUDIO_SWITCHING)"
	},
	"FenixSim.A320.Lights.FNX320 Overhead Reading Light FO Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_READING_FO) 0.1 + 1 min (>L:A_OH_LIGHTING_READING_FO)"
	},
	"FenixSim.A320.Lights.FNX320 Overhead Reading Light Captain Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_READING_CAPT) 0.1 + 1 min (>L:A_OH_LIGHTING_READING_CAPT)"
	},
	"FenixSim.A320.Safety.FNX320 Overhead ELT Switch Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_ELT) ! (>L:S_OH_ELT)"
	},
	"FenixSim.A320.Safety.FNX320 Overhead ELT Test Switch Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_ELT_TEST)"
	},
	"FenixSim.A320.Electrical.FNX320 Overhead APU Auto Exiting Reset Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_APU_AUTOEXTING_RESET)"
	},
	"FenixSim.A320.Electrical.FNX320 Overhead APU Auto Exiting Test Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_APU_AUTOEXTING_TEST)"
	},
	"FenixSim.A320.Avionics.FNX320 Overhead Avionics Compt Light Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_LIGHTING_AVIONICS_COMPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Overhead Svce Int Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_SVCE_INT_OVRD)"
	},
	"FenixSim.A320.Safety.FNX320 Overhead Oxygen TMR Reset Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_OXYGEN_TMR_RESET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Overhead Audio Switching Knob Norm": {
		"method": "calcCode",
		"code": "1 (>L:S_AUDIO_SWITCHING)"
	},
	"FenixSim.A320.Lights.FNX320 Overhead Reading Light FO Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_READING_FO) 0.1 - 0 max (>L:A_OH_LIGHTING_READING_FO)"
	},
	"FenixSim.A320.Lights.FNX320 Overhead Reading Light Captain Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_READING_CAPT) 0.1 - 0 max (>L:A_OH_LIGHTING_READING_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Overhead Audio Switching Knob FO": {
		"method": "calcCode",
		"code": "2 (>L:S_AUDIO_SWITCHING)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light Captain Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_CHART_LIGHT_TEMP_CAPT) 0.1 - 0 max (>L:A_CHART_LIGHT_TEMP_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light Captain Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_CHART_LIGHT_TEMP_CAPT) 0.1 + 1 min (>L:A_CHART_LIGHT_TEMP_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light Captain Switch Press": {
		"method": "calcCode",
		"code": "(L:S_CHART_LIGHT_TEMP_CAPT) ! (>L:S_CHART_LIGHT_TEMP_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light FO Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_CHART_LIGHT_TEMP_FO) 0.1 - 0 max (>L:A_CHART_LIGHT_TEMP_FO)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light FO Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_CHART_LIGHT_TEMP_FO) 0.1 + 1 min (>L:A_CHART_LIGHT_TEMP_FO)"
	},
	"FenixSim.A320.Lights.FNX320 Misc Chart Light FO Switch Press": {
		"method": "calcCode",
		"code": "(L:S_CHART_LIGHT_TEMP_FO) ! (>L:S_CHART_LIGHT_TEMP_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Cockpit Door Press": {
		"method": "calcCode",
		"code": "(L:S_COCKPIT_DOOR) ! (>L:S_COCKPIT_DOOR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Emergency Gear Lever Dec": {
		"method": "calcCode",
		"code": "(L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 3 == if{ 0 (>L:S_HYD_GRAVITY_GEAR_EXTEND) } (L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 0.05 - 0 max (>L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Emergency Gear Lever Inc": {
		"method": "calcCode",
		"code": "(L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 0.05 + 3 min (>L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) (L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 3 == if{ 1 (>L:S_HYD_GRAVITY_GEAR_EXTEND) }"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Jumpseat Headrest Press": {
		"method": "calcCode",
		"code": "(L:S_JUMPSEAT_HEADREST) ! (>L:S_JUMPSEAT_HEADREST)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Jumpseat Press": {
		"method": "calcCode",
		"code": "(L:S_JUMPSEAT) ! (>L:S_JUMPSEAT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 1 Test Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OXYGEN_MASK_1_TEST_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 1 Test Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OXYGEN_MASK_1_TEST_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 1 Test FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OXYGEN_MASK_1_TEST_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 1 Test FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OXYGEN_MASK_1_TEST_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 2 Test Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OXYGEN_MASK_2_TEST_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 2 Test Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OXYGEN_MASK_2_TEST_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 2 Test FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OXYGEN_MASK_2_TEST_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask 2 Test FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OXYGEN_MASK_2_TEST_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask Cover Captain Press": {
		"method": "calcCode",
		"code": "(L:S_OXYGEN_MASK_COVER_CAPT) ! (>L:S_OXYGEN_MASK_COVER_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Oxygen Mask Cover FO Press": {
		"method": "calcCode",
		"code": "(L:S_OXYGEN_MASK_COVER_FO) ! (>L:S_OXYGEN_MASK_COVER_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Seat Armrest Left Captain Press": {
		"method": "calcCode",
		"code": "(L:S_ARMREST_LEFT_CAPT) ! (>L:S_ARMREST_LEFT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Seat Armrest Left FO Press": {
		"method": "calcCode",
		"code": "(L:S_ARMREST_LEFT_FO) ! (>L:S_ARMREST_LEFT_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Seat Armrest Right Captain Press": {
		"method": "calcCode",
		"code": "(L:S_ARMREST_RIGHT_CAPT) ! (>L:S_ARMREST_RIGHT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Seat Armrest Right FO Press": {
		"method": "calcCode",
		"code": "(L:S_ARMREST_RIGHT_FO) ! (>L:S_ARMREST_RIGHT_FO)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320 Misc Sidestick AP Disconnect Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_CAPT_INST_DISCONNECT)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320 Misc Sidestick AP Disconnect Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_CAPT_INST_DISCONNECT)"
	},
	"FenixSim.A320.Autopilot.FNX320 Misc Sidestick AP Disconnect FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_FO_INST_DISCONNECT)"
	},
	"FenixSim.A320.Autopilot.FNX320 Misc Sidestick AP Disconnect FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_FO_INST_DISCONNECT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Standby Compass Position Press": {
		"method": "calcCode",
		"code": "(L:S_STANDBY_COMPASS) ! (>L:S_STANDBY_COMPASS)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Sunshade Captain Press": {
		"method": "calcCode",
		"code": "(L:S_SUNSHADE_CAPT) ! (>L:S_SUNSHADE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Sunshade FO Press": {
		"method": "calcCode",
		"code": "(L:S_SUNSHADE_FO) ! (>L:S_SUNSHADE_FO)"
	},
	"FenixSim.A320.Gear.Input.FNX320 Misc Tiller Pedal Disconnect Captain Press": {
		"method": "calcCode",
		"code": "(L:S_FC_CAPT_TILLER_PEDAL_DISCONNECT) ! (>L:S_FC_CAPT_TILLER_PEDAL_DISCONNECT) "
	},
	"FenixSim.A320.Gear.Input.FNX320 Misc Tiller Pedal Disconnect FO Press": {
		"method": "calcCode",
		"code": "(L:S_FC_FO_TILLER_PEDAL_DISCONNECT) ! (>L:S_FC_FO_TILLER_PEDAL_DISCONNECT) "
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Window Blinds Captain Press": {
		"method": "calcCode",
		"code": "(L:S_WINDOW_BLINDS_CAPT) ! (>L:S_WINDOW_BLINDS_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Window Blinds FO Press": {
		"method": "calcCode",
		"code": "(L:S_WINDOW_BLINDS_FO) ! (>L:S_WINDOW_BLINDS_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Window Blinds Rear Captain Press": {
		"method": "calcCode",
		"code": "(L:S_WINDOW_BLINDS_REAR_CAPT) ! (>L:S_WINDOW_BLINDS_REAR_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Misc Window Blinds Rear FO Press": {
		"method": "calcCode",
		"code": "(L:S_WINDOW_BLINDS_REAR_FO) ! (>L:S_WINDOW_BLINDS_REAR_FO)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Anti Skid Switch Press": {
		"method": "calcCode",
		"code": "(L:S_FC_MIP_ANTI_SKID) ! (>L:S_FC_MIP_ANTI_SKID)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Low Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_AUTOBRAKE_LO)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Low Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_AUTOBRAKE_LO)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Max Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_AUTOBRAKE_MAX)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Max Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_AUTOBRAKE_MAX)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Medium Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_AUTOBRAKE_MED)"
	},
	"FenixSim.A320.Gear.FNX320 MainPanel Autobrake Medium Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_AUTOBRAKE_MED)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock CHR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CLOCK_CHR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock CHR Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CLOCK_CHR)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Date Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CLOCK_SET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Date Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CLOCK_SET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Date Knob Dec": {
		"method": "calcCode",
		"code": "(L:E_MIP_CLOCK_SET) -- (>L:E_MIP_CLOCK_SET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Date Knob Inc": {
		"method": "calcCode",
		"code": "(L:E_MIP_CLOCK_SET) ++ (>L:E_MIP_CLOCK_SET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock ET Selector Knob RST": {
		"method": "calcCode",
		"code": "2 (>L:S_MIP_CLOCK_ET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock ET Selector Knob Run": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CLOCK_ET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock ET Selector Knob STP": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CLOCK_ET)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Reset Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CLOCK_RST)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock Reset Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CLOCK_RST)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock UTC Selector Knob GPS": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CLOCK_UTC)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock UTC Selector Knob INT": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CLOCK_UTC)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 MainPanel Clock UTC Selector Knob SET": {
		"method": "calcCode",
		"code": "2 (>L:S_MIP_CLOCK_UTC)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light Captain Switch BRT": {
		"method": "calcCode",
		"code": "2 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light Captain Switch DIM": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light Captain Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light FO Switch BRT": {
		"method": "calcCode",
		"code": "2 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light FO Switch DIM": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)"
	},
	"FenixSim.A320.Lights.FNX320 MainPanel Console Floor Light FO Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright Captain Button BRT": {
		"method": "calcCode",
		"code": "2 (>L:S_DCDU1_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright Captain Button DIM": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright Captain Button Mid": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright FO Button BRT": {
		"method": "calcCode",
		"code": "2 (>L:S_DCDU2_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright FO Button DIM": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Dim Bright FO Button Mid": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_DIM_BRT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Left Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_LSK1L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Left Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_LSK1L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Left FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_LSK1L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Left FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_LSK1L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Right Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_LSK1R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Right Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_LSK1R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Right FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_LSK1R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 1 Right FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_LSK1R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Left Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_LSK2L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Left Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_LSK2L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Left FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_LSK2L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Left FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_LSK2L)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Right Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_LSK2R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Right Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_LSK2R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Right FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_LSK2R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC LSK 2 Right FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_LSK2R)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Minus Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_MSGDWN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Minus Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_MSGDWN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Minus FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_MSGDWN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Minus FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_MSGDWN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Plus Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_MSGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Plus Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_MSGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Plus FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_MSGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Message Plus FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_MSGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Minus Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_PGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Minus Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_PGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Minus FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_PGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Minus FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_PGUP)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Plus Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_PGDN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Plus Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_PGDN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Plus FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_PGDN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Page Plus FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_PGDN)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Print Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU1_PRINT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Print Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU1_PRINT)"
	},
	"FenixSim.A320.CPDLC.Input.FNX320 MainPanel CPDLC Print FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DCDU2_PRINT)"
	},
	"FenixSim.A320.CPDLC.FNX320 MainPanel CPDLC Print FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DCDU2_PRINT)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_GPWS_VISUAL_ALERT_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_GPWS_VISUAL_ALERT_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_GPWS_VISUAL_ALERT_FO)"
	},
	"FenixSim.A320.Warning.FNX320 MainPanel GPWS GS FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_GPWS_VISUAL_ALERT_FO)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker Captain Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_MIP_LOUDSPEAKER_CAPT) 0.1 - 0 max (>L:A_MIP_LOUDSPEAKER_CAPT)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker Captain Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_MIP_LOUDSPEAKER_CAPT) 0.1 + 1 min (>L:A_MIP_LOUDSPEAKER_CAPT)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker Captain Knob Press": {
		"method": "calcCode",
		"code": "0.1 (>L:A_MIP_LOUDSPEAKER_CAPT)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker FO Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_MIP_LOUDSPEAKER_FO) 0.1 - 0 max (>L:A_MIP_LOUDSPEAKER_FO)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker FO Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_MIP_LOUDSPEAKER_FO) 0.1 + 1 min (>L:A_MIP_LOUDSPEAKER_FO)"
	},
	"FenixSim.A320.Radio.FNX320 MainPanel Loud Speaker FO Knob Press": {
		"method": "calcCode",
		"code": "0.1 (>L:A_MIP_LOUDSPEAKER_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel PFD ND Transfer Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_PFDND_XFER_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel PFD ND Transfer Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_PFDND_XFER_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel PFD ND Transfer FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_DISPLAY_PFDND_XFER_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel PFD ND Transfer FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_DISPLAY_PFDND_XFER_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Altimeter Imperial Baro Knob Dec": {
		"method": "calcCode",
		"code": "(L:E_STANDBY_ALT_IMPERIAL_BARO) -- (>L:E_STANDBY_ALT_IMPERIAL_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Altimeter Imperial Baro Knob Inc": {
		"method": "calcCode",
		"code": "(L:E_STANDBY_ALT_IMPERIAL_BARO) ++ (>L:E_STANDBY_ALT_IMPERIAL_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Altimeter Metric Baro Knob Dec": {
		"method": "calcCode",
		"code": "(L:E_STANDBY_ALT_METRIC_BARO) -- (>L:E_STANDBY_ALT_METRIC_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Altimeter Metric Baro Knob Inc": {
		"method": "calcCode",
		"code": "(L:E_STANDBY_ALT_METRIC_BARO) ++ (>L:E_STANDBY_ALT_METRIC_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Attitude Cage Press": {
		"method": "calcCode",
		"code": "1 (>L:S_STANDBY_ATTITUDE_CAGE)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Attitude Cage Release": {
		"method": "calcCode",
		"code": "0 (>L:S_STANDBY_ATTITUDE_CAGE)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Baro Knob Dec": {
		"method": "calcCode",
		"code": "(L:E_MIP_ISFD_BARO) -- (>L:E_MIP_ISFD_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Baro Knob Inc": {
		"method": "calcCode",
		"code": "(L:E_MIP_ISFD_BARO) ++ (>L:E_MIP_ISFD_BARO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Bugs Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ISFD_BUGS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Bugs Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ISFD_BUGS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby LS Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ISFD_LS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby LS Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ISFD_LS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Minus Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ISFD_MINUS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Minus Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ISFD_MINUS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Plus Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ISFD_PLUS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby Plus Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ISFD_PLUS)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby RST Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ISFD_RST)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Standby RST Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ISFD_RST)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_GPWS_TERRAIN_ON_ND_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND Captain ButtonRelease": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_GPWS_TERRAIN_ON_ND_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_GPWS_TERRAIN_ON_ND_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 MainPanel Terrain On ND FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_GPWS_TERRAIN_ON_ND_FO)"
	},
	"FenixSim.A320.Lights.Input.FNX320 Int Light Annunciator Switch BRT": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_IN_LT_ANN_LT)"
	},
	"FenixSim.A320.Lights.Input.FNX320 Int Light Annunciator Switch DIM": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_IN_LT_ANN_LT)"
	},
	"FenixSim.A320.Lights.FNX320 Int Light Annunciator Switch TEST": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_IN_LT_ANN_LT)"
	},
	"FenixSim.A320.Lights.FNX320 Int Light Ice Standby Switch Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_IN_LT_ICE) ! (>L:S_OH_IN_LT_ICE)"
	},
	"FenixSim.A320.Anti-Ice.Input.FNX320 Icing Engine 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_ENG1_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_ENG1_ANTI_ICE) "
	},
	"FenixSim.A320.Anti-Ice.Input.FNX320 Icing Engine 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_ENG2_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_ENG2_ANTI_ICE) "
	},
	"FenixSim.A320.Anti-Ice.Input.FNX320 Icing Probe Heat Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PROBE_HEAT) ! (>L:S_OH_PROBE_HEAT) "
	},
	"FenixSim.A320.Anti-Ice.Input.FNX320 Icing Wing Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_WING_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_WING_ANTI_ICE) "
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic Electrical Pump Blue Button Press": {
		"method": "calcCode",
		"code": " (L:S_OH_HYD_BLUE_ELEC_PUMP) ! (>L:S_OH_HYD_BLUE_ELEC_PUMP)"
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic Electrical Pump Yellow Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_YELLOW_ELEC_PUMP) 2 + (>L:S_OH_HYD_YELLOW_ELEC_PUMP)"
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic Engine 1 Pump Green Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_ENG_1_PUMP) ! (>L:S_OH_HYD_ENG_1_PUMP)"
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic Engine 2 Pump Yellow Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_ENG_2_PUMP) ! (>L:S_OH_HYD_ENG_2_PUMP)"
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic PTU Button Press": {
		"method": "calcCode",
		"code": " (L:S_OH_HYD_PTU) ! (>L:S_OH_HYD_PTU)"
	},
	"FenixSim.A320.Hydraulic.Input.FNX320 Hydraulic RAT Manual Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_HYD_RAT_MAN_ON) ! (>L:S_OH_HYD_RAT_MAN_ON)"
	},
	"FenixSim.A320.Warning.Input.FNX320 GPWS Flap Mode Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_GPWS_FLAP_MODE) ! (>L:S_OH_GPWS_FLAP_MODE) "
	},
	"FenixSim.A320.Warning.Input.FNX320 GPWS GS Mode Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_GPWS_GS_MODE) ! (>L:S_OH_GPWS_GS_MODE) "
	},
	"FenixSim.A320.Warning.Input.FNX320 GPWS Landing Flap 3 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_GPWS_LDG_FLAP3) ! (>L:S_OH_GPWS_LDG_FLAP3) "
	},
	"FenixSim.A320.Warning.Input.FNX320 GPWS System Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_GPWS_SYS) ! (>L:S_OH_GPWS_SYS) "
	},
	"FenixSim.A320.Warning.Input.FNX320 GPWS Terrain Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_GPWS_TERR) ! (>L:S_OH_GPWS_TERR) "
	},
	"FenixSim.A320.Radio.FNX320 Glareshield ATC Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ATC_MSG_CAPT)"
	},
	"FenixSim.A320.Radio.FNX320 Glareshield ATC Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ATC_MSG_CAPT)"
	},
	"FenixSim.A320.Radio.FNX320 Glareshield ATC FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_ATC_MSG_FO)"
	},
	"FenixSim.A320.Radio.FNX320 Glareshield ATC FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_ATC_MSG_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_AUTOLAND_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_AUTOLAND_CAPT)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_AUTOLAND_FO)"
	},
	"FenixSim.A320.Avionics.FNX320 Glareshield Autoland FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_AUTOLAND_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Glareshield Chrono Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CHRONO_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Glareshield Chrono Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CHRONO_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Glareshield Chrono FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_CHRONO_FO)"
	},
	"FenixSim.A320.Miscellaneous.FNX320 Glareshield Chrono FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_CHRONO_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_MASTER_CAUTION_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_MASTER_CAUTION_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_MASTER_CAUTION_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Caution FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_MASTER_CAUTION_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_MASTER_WARNING_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_MASTER_WARNING_CAPT)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_MIP_MASTER_WARNING_FO)"
	},
	"FenixSim.A320.Warning.FNX320 Glareshield Master Warning FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_MIP_MASTER_WARNING_FO)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority Captain Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_CAPT_PRIORITY)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority Captain Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_CAPT_PRIORITY)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority FO Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_FO_PRIORITY)"
	},
	"FenixSim.A320.Controls.FNX320 Glareshield Sidestick Priority FO Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_FO_PRIORITY)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Agent Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_FIRE_APU_AGENT)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Agent Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_FIRE_APU_AGENT)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire APU Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_APU_BUTTON) ! (>L:S_OH_FIRE_APU_BUTTON)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Test Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_FIRE_APU_TEST)"
	},
	"FenixSim.A320.Safety.FNX320 Fire APU Test Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_FIRE_APU_TEST)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Agent 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_AGENT1) ++ (>L:S_OH_FIRE_ENG1_AGENT1)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Agent 1 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_AGENT1) ++ (>L:S_OH_FIRE_ENG1_AGENT1)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Agent 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_AGENT2) ++ (>L:S_OH_FIRE_ENG1_AGENT2)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Agent 2 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_AGENT2) ++ (>L:S_OH_FIRE_ENG1_AGENT2)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_BUTTON) ! (>L:S_OH_FIRE_ENG1_BUTTON) "
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Test Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_TEST) ++ (>L:S_OH_FIRE_ENG1_TEST)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 1 Test Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG1_TEST) ++ (>L:S_OH_FIRE_ENG1_TEST)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Agent 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_AGENT1) ++ (>L:S_OH_FIRE_ENG2_AGENT1)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Agent 1 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_AGENT1) ++ (>L:S_OH_FIRE_ENG2_AGENT1)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Agent 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_AGENT2) ++ (>L:S_OH_FIRE_ENG2_AGENT2)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Agent 2 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_AGENT2) ++ (>L:S_OH_FIRE_ENG2_AGENT2)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_BUTTON) ! (>L:S_OH_FIRE_ENG2_BUTTON) "
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Test Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_TEST) ++ (>L:S_OH_FIRE_ENG2_TEST)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Fire Engine 2 Test Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_FIRE_ENG2_TEST) ++ (>L:S_OH_FIRE_ENG2_TEST)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Evacuation Capt Purser Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_EVAC_CAPT_PURSER) ! (>L:S_OH_EVAC_CAPT_PURSER)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Evacuation Command Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_EVAC_COMMAND) ! (>L:S_OH_EVAC_COMMAND) "
	},
	"FenixSim.A320.Safety.Input.FNX320 Evacuation Horn Shutoff Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_EVAC_HORN_SHUTOFF) ++ (>L:S_OH_EVAC_HORN_SHUTOFF)"
	},
	"FenixSim.A320.Safety.Input.FNX320 Evacuation Horn Shutoff Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_EVAC_HORN_SHUTOFF) ++ (>L:S_OH_EVAC_HORN_SHUTOFF)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Engine Manual Start 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_MANSTART_1) ! (>L:S_OH_ENG_MANSTART_1)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Engine Manual Start 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_MANSTART_2) ! (>L:S_OH_ENG_MANSTART_2) "
	},
	"FenixSim.A320.Engines.Input.FNX320 Engine N1 Mode 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_N1_MODE_1) ! (>L:S_OH_ENG_N1_MODE_1)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Engine N1 Mode 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ENG_N1_MODE_2) ! (>L:S_OH_ENG_N1_MODE_2) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 Emergency Electrical Generator 1 Line Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_GEN1_LINE) ! (>L:S_OH_ELEC_GEN1_LINE) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 Emergency Electrical Generator Test Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_TEST) ++ (>L:S_OH_ELEC_EMER_GEN_TEST) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 Emergency Electrical Generator Test Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_TEST) ++ (>L:S_OH_ELEC_EMER_GEN_TEST)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Emergency Electrical Manual On Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_MAN_ON) ++ (>L:S_OH_ELEC_EMER_GEN_MAN_ON) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 Emergency Electrical Manual On Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_MAN_ON) s0 2 % 0 != if{ \n  l0 ++ (>L:S_OH_ELEC_EMER_GEN_MAN_ON) } "
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 ARPT Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_ARPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 ARPT Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_ARPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 CSTR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 CSTR Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 NDB Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 NDB Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 VORD Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 VORD Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 WPT Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_WPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 1 WPT Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_WPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 ARPT Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_ARPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 ARPT Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_ARPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 CSTR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 CSTR Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_CSTR)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 NDB Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 NDB Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_NDB)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 VORD Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 VORD Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_VORD)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 WPT Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_WPT)"
	},
	"FenixSim.A320.EFIS.FNX320 EFIS 2 WPT Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_WPT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ALL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_ALL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ALL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_ALL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM APU Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_APU)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM APU Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_APU)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM BLEED Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_BLEED)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM BLEED Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_BLEED)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Left Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_CLR_LEFT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Left Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_CLR_LEFT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Right Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_CLR_RIGHT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM CLR Right Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_CLR_RIGHT)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM COND Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_COND)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM COND Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_COND)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM DOOR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_DOOR)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM DOOR Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_DOOR)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ELEC Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_ELEC)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ELEC Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_ELEC)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM EMER CANC Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_EMER_CANCEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM EMER CANC Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_EMER_CANCEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ENG Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_ENGINE)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM ENG Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_ENGINE)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FCTL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_FCTL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FCTL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_FCTL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FUEL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_FUEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM FUEL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_FUEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM HYD Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_HYD)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM HYD Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_HYD)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM PRESS Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_CAB_PRESS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM PRESS Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_CAB_PRESS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM RCL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_RCL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM RCL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_RCL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM STS Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_STATUS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM STS Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_STATUS)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM TO CONFIG Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_TO)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM TO CONFIG Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_TO)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM WHEEL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ECAM_WHEEL)"
	},
	"FenixSim.A320.ECAM.FNX320 ECAM WHEEL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ECAM_WHEEL)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR1) ++ (>L:S_OH_NAV_ADR1)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 1 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR1) ++ (>L:S_OH_NAV_ADR1)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR2) ++ (>L:S_OH_NAV_ADR2)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 2 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR2) s0 2 % 0 != if{ l0 ++ (>L:S_OH_NAV_ADR2) }"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 3 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR3) ++ (>L:S_OH_NAV_ADR3)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS ADR 3 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_ADR3) ++ (>L:S_OH_NAV_ADR3)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS Data Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_DATA_DISP) 0.1 - 0 max (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS Data Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_DATA_DISP) 0.1 + 1 min (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 1 Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_NAV_IR1_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 1 Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_NAV_IR1_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 1 Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_NAV_IR1_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 2 Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_NAV_IR2_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 2 Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_NAV_IR2_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 2 Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_NAV_IR2_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 3 Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_NAV_IR3_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 3 Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_NAV_IR3_MODE)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS IR 3 Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_NAV_IR3_MODE)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 0 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_0) ++ (>L:S_OH_ADIRS_KEY_0)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 0 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_0) ++ (>L:S_OH_ADIRS_KEY_0)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 1 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_1) ++ (>L:S_OH_ADIRS_KEY_1)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 1 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_1) ++ (>L:S_OH_ADIRS_KEY_1)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 2 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_2) ++ (>L:S_OH_ADIRS_KEY_2)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 2 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_2) ++ (>L:S_OH_ADIRS_KEY_2)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 3 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_3) ++ (>L:S_OH_ADIRS_KEY_3)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 3 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_3) ++ (>L:S_OH_ADIRS_KEY_3)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 4 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_4) ++ (>L:S_OH_ADIRS_KEY_4)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 4 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_4) ++ (>L:S_OH_ADIRS_KEY_4)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 5 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_5) ++ (>L:S_OH_ADIRS_KEY_5)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 5 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_5) ++ (>L:S_OH_ADIRS_KEY_5)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 6 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_6) ++ (>L:S_OH_ADIRS_KEY_6)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 6 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_6) ++ (>L:S_OH_ADIRS_KEY_6)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 7 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_7) ++ (>L:S_OH_ADIRS_KEY_7)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 7 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_7) ++ (>L:S_OH_ADIRS_KEY_7)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 8 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_8) ++ (>L:S_OH_ADIRS_KEY_8)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 8 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_8) ++ (>L:S_OH_ADIRS_KEY_8)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 9 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_9) ++ (>L:S_OH_ADIRS_KEY_9)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key 9 Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_9) ++ (>L:S_OH_ADIRS_KEY_9)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key Clear Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_CLR) ++ (>L:S_OH_ADIRS_KEY_CLR)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key Clear Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_CLR) ++ (>L:S_OH_ADIRS_KEY_CLR)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key Enter Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_ENT) ++ (>L:S_OH_ADIRS_KEY_ENT)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Key Enter Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ADIRS_KEY_ENT) ++ (>L:S_OH_ADIRS_KEY_ENT)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS System Selector Knob Dec": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_SYS_DISP) 0.1 - 0 max (>L:S_OH_NAV_SYS_DISP)"
	},
	"FenixSim.A320.ADIRS.FNX320 ADIRS System Selector Knob Inc": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_SYS_DISP) 0.1 + 1 min (>L:S_OH_NAV_SYS_DISP)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot master": {
		"method": "calcCode",
		"code": "(>H:APGA_AP)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Flight director": {
		"method": "calcCode",
		"code": "(>H:APGA_FD)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Yaw damper": {
		"method": "calcCode",
		"code": "(>H:APGA_YD)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot HDG": {
		"method": "calcCode",
		"code": "(>H:APGA_HDG)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot NAV": {
		"method": "calcCode",
		"code": "(>H:APGA_NAV)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Approach mode": {
		"method": "calcCode",
		"code": "(>H:APGA_APR)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Back course mode": {
		"method": "calcCode",
		"code": "(>H:APGA_REV)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot ALT mode": {
		"method": "calcCode",
		"code": "(>H:APGA_ALT)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot VS mode": {
		"method": "calcCode",
		"code": "(>H:APGA_VS)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot FLC mode": {
		"method": "calcCode",
		"code": "(>H:APGA_FLC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot LVL mode": {
		"method": "calcCode",
		"code": "(>H:APGA_LVL)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot CGA Mode": {
		"method": "calcCode",
		"code": "(>H:APGA_CGA)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot CLVL mode": {
		"method": "calcCode",
		"code": "(>H:APGA_CLVL)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot ARM": {
		"method": "calcCode",
		"code": "(>H:APGA_ARM)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot UP": {
		"method": "calcCode",
		"code": "(>H:APGA_UP)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot DOWN": {
		"method": "calcCode",
		"code": "(>H:APGA_DOWN)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude small inc": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_SMALL_INC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude large inc": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_LARGE_INC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude very large inc": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_VERY_LARGE_INC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude small dec": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_SMALL_DEC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude large dec": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_LARGE_DEC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected altitude very large dec": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_ALT_VERY_LARGE_DEC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected VS small inc": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_VS_SMALL_INC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected VS small dec": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_VS_SMALL_DEC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected VS large inc": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_VS_LARGE_INC)"
	},
	"PMS50.APGA.Autopilot.Input.Autopilot Selected VS large dec": {
		"method": "calcCode",
		"code": "(>H:APGA_SEL_VS_LARGE_DEC)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ADF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ADF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ADF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ADF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 CAB Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_CAB_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 CAB Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 CAB Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 CAB Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 HF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 HF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 HF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 HF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 HF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ILS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 ILS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 INT Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_INT_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 INT Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INT Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_INT_VOLUME) 0.05 - 0 max (>L:A_ASP_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INT Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_INT_VOLUME) 0.05 + 1 min (>L:A_ASP_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INTRAD Switch INT": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INTRAD Switch OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 INTRAD Switch RAD": {
		"method": "calcCode",
		"code": "2 (>L:S_ASP_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 MARKER Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 MARKER Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 MLS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 MLS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 PA SEND Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_PA_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 PA SEND Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 PA Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_PA_VOLUME) 0.05 - 0 max (>L:A_ASP_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 PA Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_PA_VOLUME) 0.05 + 1 min (>L:A_ASP_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 RESET Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_RESET)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 RESET Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_RESET)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 3 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 3 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 3 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VHF 3 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VOICE Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP_VOICE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VOICE Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VOR 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VOR 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VOR 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP1 VOR 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP_VOR_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ADF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ADF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ADF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ADF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 CAB Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP2_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 HF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ILS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 ILS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP2_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_INT_VOLUME) 0.05 - 0 max (>L:A_ASP_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INT Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_INT_VOLUME) 0.05 + 1 min (>L:A_ASP2_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INTRAD Switch INT": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INTRAD Switch OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 INTRAD Switch RAD": {
		"method": "calcCode",
		"code": "2 (>L:S_ASP2_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 MARKER Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 MARKER Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP2_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 MLS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 MLS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP2_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 PA SEND Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 PA SEND Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 PA Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_PA_VOLUME) 0.05 + 1 min (>L:A_ASP2_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 PA Volume Knob Release": {
		"method": "calcCode",
		"code": "(L:A_ASP_PA_VOLUME) 0.05 - 0 max (>L:A_ASP_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 RESET Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_RESET)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 RESET Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_RESET)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VHF 3 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOICE Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP2_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOICE Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP2_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOR 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOR 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOR 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP2 VOR 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP2_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_VOR_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ADF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ADF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_ADF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ADF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ADF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_ADF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_CAB_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP3_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 CAB Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP3_CAB_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_HF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_HF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_HF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 HF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_HF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ILS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP3_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 ILS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP3_ILS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_INT_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_INT_VOLUME) 0.05 - 0 max (>L:A_ASP3_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INT Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_INT_VOLUME) 0.05 + 1 min (>L:A_ASP3_INT_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INTRAD Switch INT": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INTRAD Switch OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 INTRAD Switch RAD": {
		"method": "calcCode",
		"code": "2 (>L:S_ASP3_INTRAD)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 MARKER Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP3_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 MARKER Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP3_MARKER_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 MLS Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP3_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 MLS Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP3_MLS_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 PA SEND Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 PA SEND Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_PA_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 PA Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_PA_VOLUME) 0.05 + 1 min (>L:A_ASP3_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 PA Volume Knob Release": {
		"method": "calcCode",
		"code": "(L:A_ASP3_PA_VOLUME) 0.05 - 0 max (>L:A_ASP3_PA_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 RESET Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_RESET)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 RESET Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_RESET)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_VHF_1_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_VHF_2_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Send Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Send Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_VHF_3_SEND)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VHF 3 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_3_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOICE Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_ASP3_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOICE Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_ASP3_VOICE)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOR 1 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOR 1 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_VOR_1_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOR 2 Volume Knob Dec": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_VOR_2_VOLUME)"
	},
	"FenixSim.A320.Radio.FNX320 ACP3 VOR 2 Volume Knob Inc": {
		"method": "calcCode",
		"code": "(L:A_ASP3_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_VOR_2_VOLUME)"
	},
	"PMDG.B737-700.Engines.Input.Engine 2 Start Lever": {
		"method": "calcCode",
		"code": "ENG2\n68901 (>K:ROTOR_BRAKE) - ON\n68902 (>K:ROTOR_BRAKE - OFF\nRead variable to get switch position from aircraft\nL:switch_689_73X"
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH ELEC EXT PWR PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EXT_PWR) ++ (>L:S_OH_ELEC_EXT_PWR)"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 ENG1 Fire Warn/Disch 1": {
		"method": "calcCode",
		"code": "(L:switch_6972_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 ENG2 Fire Warn/Disch 1": {
		"method": "calcCode",
		"code": "(L:switch_6992_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Fire Bottle Discharge L": {
		"method": "calcCode",
		"code": "(L:switch_716_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Fire Bottle Discharge APU": {
		"method": "calcCode",
		"code": "(L:switch_717_73X, number) 0 >"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Fire Bottle Discharge R": {
		"method": "calcCode",
		"code": "(L:switch_718_73X, number) 0 >"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX Chrono Date Display": {
		"method": "calcCode",
		"code": "(>H:A32NX_CHRONO_DATE)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle Engine 1 Master Switch Toggle": {
		"method": "calcCode",
		"code": "(L:S_ENG_MASTER_1) ! (>L:S_ENG_MASTER_1)\n"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle Engine 2 Master Switch Toggle": {
		"method": "calcCode",
		"code": "(L:S_ENG_MASTER_2) ! (>L:S_ENG_MASTER_2)\n"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_MECH-SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_MECH) ++ (>L:S_OH_CALLS_MECH)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_ALL-SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_ALL) ++ (>L:S_OH_CALLS_ALL)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_FWD-SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_FWD) ++ (>L:S_OH_CALLS_FWD)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_AFT-SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_AFT) ++ (>L:S_OH_CALLS_AFT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_EMER-COVER": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_EMER_Cover) ! (>L:S_OH_CALLS_EMER_Cover)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_CALLS_EMER_SWITCH": {
		"method": "calcCode",
		"code": "(L:S_OH_CALLS_EMER) ! (>L:S_OH_CALLS_EMER)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical AC Essential Feed Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_AC_ESS_FEED) ++ (>L:S_OH_ELEC_AC_ESS_FEED)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical AC Essential Feed Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_AC_ESS_FEED) ++ (>L:S_OH_ELEC_AC_ESS_FEED)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical APU Generator Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_APU_GENERATOR) ! (>L:S_OH_ELEC_APU_GENERATOR) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Bus Tie Button Press": {
		"method": "calcCode",
		"code": "(>L:S_OH_ELEC_BUSTIE) ++ (>L:S_OH_ELEC_BUSTIE)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Bus Tie Button Release": {
		"method": "calcCode",
		"code": "(>L:S_OH_ELEC_BUSTIE) ++ (>L:S_OH_ELEC_BUSTIE)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Commercial Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_COMMERCIAL) ++ (>L:S_OH_ELEC_COMMERCIAL)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Commercial Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_COMMERCIAL) ++ (>L:S_OH_ELEC_COMMERCIAL)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Galley Cabin Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_GALY) ++ (>L:S_OH_ELEC_GALY)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical Galley Cabin Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_GALY) ++ (>L:S_OH_ELEC_GALY)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH Elec Generator 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_GEN1) ! (>L:S_OH_ELEC_GEN1) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH Elec Generator 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_GEN2) ! (>L:S_OH_ELEC_GEN2)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical IDG 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_IDG1) ++ (>L:S_OH_ELEC_IDG1)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical IDG 1 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_IDG1) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_IDG1) }"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical IDG 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_IDG2) ++ (>L:S_OH_ELEC_IDG2)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 Electrical IDG 2 Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_IDG2) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_IDG2) }"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl ELAC 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_ELAC_1) ! (>L:S_OH_FLT_CTL_ELAC_1) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl ELAC 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_ELAC_2) ! (>L:S_OH_FLT_CTL_ELAC_2) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl FAC 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_FAC_1) ! (>L:S_OH_FLT_CTL_FAC_1) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl FAC 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_FAC_2) ! (>L:S_OH_FLT_CTL_FAC_2) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl SEC 1 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_SEC_1) ! (>L:S_OH_FLT_CTL_SEC_1) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl SEC 2 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_SEC_2) ! (>L:S_OH_FLT_CTL_SEC_2) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 FlightControl SEC 3 Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_FLT_CTL_SEC_3) ! (>L:S_OH_FLT_CTL_SEC_3) "
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 Bank Angle Selector 10": {
		"method": "calcCode",
		"code": "0 (L:switch_389_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 Bank Angle Selector 15": {
		"method": "calcCode",
		"code": "10 (L:switch_389_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 Bank Angle Selector 20": {
		"method": "calcCode",
		"code": "20 (L:switch_389_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 Bank Angle Selector 25": {
		"method": "calcCode",
		"code": "30 (L:switch_389_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 Bank Angle Selector 30": {
		"method": "calcCode",
		"code": "40 (L:switch_389_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Main Panel DUs OUTBD PFD": {
		"method": "calcCode",
		"code": "0 (L:switch_335_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Main Panel DUs NORM": {
		"method": "calcCode",
		"code": "10 (L:switch_335_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Main Panel DUs ENG PRI": {
		"method": "calcCode",
		"code": "20 (L:switch_335_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Main Panel DUs PFD": {
		"method": "calcCode",
		"code": "30 (L:switch_335_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Main Panel DUs MFD": {
		"method": "calcCode",
		"code": "40 (L:switch_335_73X,number) - 10 div s0 \n:1 \nl0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } \nl0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L Baro Select Knob InHg": {
		"method": "calcCode",
		"code": "(L:switch_366_73X) 0 == if{ 36601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L Baro Select Knob HPa": {
		"method": "calcCode",
		"code": "(L:switch_366_73X) 0 != if{ 36601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Output.PMDG B737 EFIS L Baro Select Knob": {
		"method": "calcCode",
		"code": "(L:switch_366_73X, number)"
	},
	"PMDG.B737-700.EFIS.Output.PMDG B737 EFIS Baro STD On": {
		"method": "calcCode",
		"code": "(L:EFISSTDRSTPush) 2 =="
	},
	"Fly By Wire.A320-Dev.Navigation.Input.A32NX ATC Alt Rptg Select OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_SWITCH_ATC_ALT,number)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.A32NX ATC Alt Rptg Select ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_SWITCH_ATC_ALT,number)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD1_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_15) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD1_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_15) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD2_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_16) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD2_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_16) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_MFD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_17) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_MFD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_17) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD1_GTC_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_18) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD1_GTC_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_18) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD2_GTC_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_19) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_19) 19 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PFD2_GTC_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_19) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_19) 19 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_MFD_GTC_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_20) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_20) 20 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_MFD_GTC_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_20) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_20) 20 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PANEL_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL POWER SETTING:1, Percent) 5 - 0 max 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET) (A:LIGHT PANEL:1, Bool) (A:LIGHT PANEL POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PANEL_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL:1, Bool) ! if{ 1 1 (>K:2:PANEL_LIGHTS_SET) } (A:LIGHT PANEL POWER SETTING:1, Percent) 5 + 100 min 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_FLOOD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:3, Bool) ! if{ 3 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:3, Percent) 5 + 100 min 3 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_FLOOD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN POWER SETTING:3, Percent) 5 - 0 max 3 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:3, Bool) (A:LIGHT CABIN POWER SETTING:3, Percent) 0 == and if{ 3 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PILOT_FLOOD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN POWER SETTING:1, Percent) 5 - 0 max 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:1, Bool) (A:LIGHT CABIN POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_PILOT_FLOOD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:1, Bool) ! if{ 1 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:1, Percent) 5 + 100 min 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_COPILOT_FLOOD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:3, Bool) if{ 3 - 0 max (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:3, Percent) 5 - 0 max 3 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.Longitude.Lights.Input (Potentiometer).LONGITUDE_COPILOT_FLOOD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN:2, Bool) ! if{ 2 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:2, Percent) 5 + 100 min 2 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 APU EGT Gauge": {
		"method": "calcCode",
		"code": "(L:switch_35_73X, number)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Capt AFDS Test 1 Switch Press": {
		"method": "calcCode",
		"code": "34202 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Capt AFDS Test Switch Release": {
		"method": "calcCode",
		"code": "34204 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_GND_SPLRS_LEVER_ARM-DISARM_SWITCH": {
		"method": "calcCode",
		"code": "(L:A_FC_SPEEDBRAKE) ! (>L:A_FC_SPEEDBRAKE)"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_ANTI-COLLISION_LIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_124_73X, number) 100 /"
	},
	"PMDG.B737-700.Lights.Output.PMDG_B737_WING_LIGHT_LED": {
		"method": "calcCode",
		"code": "(L:switch_125_73X, number) 100 /"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS_1_BARO_MODE_STATUS": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_BARO_MODE)"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS_2_BARO_MODE_STATUS": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_BARO_MODE)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_1_SWITCH_ADF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_1_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_1_SWITCH_VOR": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS1_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_2_SWITCH_ADF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_NAV2)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_2_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_NAV2)\n"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_1_NAV_2_SWITCH_VOR": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS1_NAV2)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_1_SWITCH_ADF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_1_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_1_SWITCH_VOR": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS2_NAV1)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_2_SWITCH_ADF": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_NAV2)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_2_SWITCH_VOR": {
		"method": "calcCode",
		"code": "2 (>L:S_FCU_EFIS2_NAV2)"
	},
	"FenixSim.A320.EFIS.Input.FNX320_EFIS_2_NAV_2_SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_NAV2)\n"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPD_KNOB_INC": {
		"method": "calcCode",
		"code": "16384 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_SPD_KNOB_DEC": {
		"method": "calcCode",
		"code": "8192 6 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_KNOB_PULL": {
		"method": "calcCode",
		"code": "536870912 13 + (>L:fgcp_event,number) "
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_KNOB_DEC": {
		"method": "calcCode",
		"code": "8192 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_HDG_KNOB_INC": {
		"method": "calcCode",
		"code": "16384 13 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VS_KNOB_DEC": {
		"method": "calcCode",
		"code": "16384 14 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_VS_KNOB_INC": {
		"method": "calcCode",
		"code": "8192 14 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_BANK_KNOB_DEC": {
		"method": "calcCode",
		"code": "8192 12 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_BANK_KNOB_INC": {
		"method": "calcCode",
		"code": "16384 12 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_KNOB_PULL": {
		"method": "calcCode",
		"code": "536870912 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_KNOB_DEC": {
		"method": "calcCode",
		"code": "8192 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_KNOB_INC": {
		"method": "calcCode",
		"code": "16384 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Gear.Input.MD_82_VC_PARKING_BRAKE_ON": {
		"method": "calcCode",
		"code": "(L:vc_parking_brake_knob, bool) ! if{ 536870912 1 + (>L:cockpit_event,number) }"
	},
	"Leonardo.MadDog MD-82.Gear.Input.MD_82_VC_PARKING_BRAKE_OFF": {
		"method": "calcCode",
		"code": "(L:vc_parking_brake_knob, bool) if{ 536870912 1 + (>L:cockpit_event,number) }"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_OVHD_FLOOD_SWITCH_OFF": {
		"method": "calcCode",
		"code": "2147483648 90 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_OVHD_FLOOD_SWITCH_ON": {
		"method": "calcCode",
		"code": "(L:ovhd_ckpt_flood_switch1, enum) 2 == if{ 2147483648 90 + (>L:overhead_event,number) } (L:ovhd_ckpt_flood_switch1, enum) 0 == if{ 536870912 90 + (>L:overhead_event,number) }"
	},
	"Leonardo.MadDog MD-82.Lights.Input.MD82_OVHD_FLOOD_SWITCH_ALT": {
		"method": "calcCode",
		"code": "536870912 90 + (>L:overhead_event,number) } "
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS1_BARO_STD Status": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS1_QNH)"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 Eng1 Eec1 ON": {
		"method": "calcCode",
		"code": "(L:switch_268_73X, number) 0 >"
	},
	"PMDG.B737-700.Engines.Output.PMDG B737 Eng2 Eec1 ON": {
		"method": "calcCode",
		"code": "(L:switch_271_73X, number) 0 >"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Bleed air duct pressure LEFT needle": {
		"method": "calcCode",
		"code": "(L:switch_197_73X, number)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Bleed air duct pressure RIGHT needle": {
		"method": "calcCode",
		"code": "(L:switch_198_73X, number)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output. Outflow valve position indicator needle": {
		"method": "calcCode",
		"code": "(L:switch_221_73X, number)"
	},
	"PMDG.B737-700.Fuel.Output.Fuel temperature indicator no.1 tank": {
		"method": "calcCode",
		"code": "(L:switch_57_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Cabin rate of climb indicator": {
		"method": "calcCode",
		"code": "(L:switch_184_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Cabin altimeter long needle (pressure difference)": {
		"method": "calcCode",
		"code": "(L:switch_182_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Cabin altimeter short needle (cabin altitude)": {
		"method": "calcCode",
		"code": "(L:switch_181_73X, number)\n"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Deice Boots Inflate": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_DEICE_SURFACE, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Deice Boots Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_DEICE_SURFACE, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Deice Boots Auto": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_DEICE_SURFACE, enum)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.Air temp source: Pass cabin": {
		"method": "calcCode",
		"code": "(L:switch_187_73X, number) 0 == if{ 18701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.Air temp source: Supply duct": {
		"method": "calcCode",
		"code": "(L:switch_187_73X, number) 100 == if{ 18701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Air temp Indicator Needle": {
		"method": "calcCode",
		"code": "(L:switch_190_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Air mix valve: Control cabin indicator": {
		"method": "calcCode",
		"code": "(L:switch_185_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Air mix valve: Passenger cabin indicator": {
		"method": "calcCode",
		"code": "(L:switch_186_73X, number)\n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Output.Flight crew oxygen pressure indicator needle": {
		"method": "calcCode",
		"code": "(L:switch_262_73X, number)\n"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Prop Deice On": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_ON)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Prop Deice Off": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_OFF)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Windshield Heat On": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_DEICE_WINDSHLD, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Windshield Heat Off": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_DEICE_WINDSHLD, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Pitot Heat On": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_ON)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Pitot Heat Off": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_OFF)"
	},
	"FenixSim.A320.MCDU.Input.FNX320_CDU1_KEY_DIR_Press": {
		"method": "calcCode",
		"code": "(L:S_CDU1_KEY_DIR) 2 + (>L:S_CDU1_KEY_DIR)"
	},
	"Blackbird/Milviz.Cessna 310R.Avionics.Input.C310R Avionics Master On": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }"
	},
	"Blackbird/Milviz.Cessna 310R.Avionics.Input.C310R Avionics Master Off": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Wing Ice Lights On": {
		"method": "calcCode",
		"code": "1 (>K:WING_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Wing Ice Lights Off": {
		"method": "calcCode",
		"code": "0 (>K:WING_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Beacon Lights  On": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Beacon Lights Off": {
		"method": "calcCode",
		"code": "0 (>K:BEACON_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Strobe Lights On": {
		"method": "calcCode",
		"code": "(>K:STROBES_ON)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Strobe Lights Off": {
		"method": "calcCode",
		"code": "(>K:STROBES_OFF)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Nav Lights On": {
		"method": "calcCode",
		"code": "1 (>K:NAV_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Nav Lghts Off": {
		"method": "calcCode",
		"code": "0 (>K:NAV_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Taxi Lights On": {
		"method": "calcCode",
		"code": "1 (>K:TAXI_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Taxi Lights Off": {
		"method": "calcCode",
		"code": "0 (>K:TAXI_LIGHTS_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Landing Lights Extend": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_LIGHTS_LANDING, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Landing Lights Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_LIGHTS_LANDING, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Landing Lights Retract": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_LIGHTS_LANDING, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Left High": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_FUEL_PUMP_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Left  Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_FUEL_PUMP_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Left  Low": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_FUEL_PUMP_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Right High": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Right Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Pump Right Low": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Start Left Engine": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER1)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Start Right Engine": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER2)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Primer Left": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_PRIMER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Primer off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_PRIMER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Primer Right": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_PRIMER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Left Alt On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Left Alt Off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Right Alt On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Right Alt Off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Battery On": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R Battery Off": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Mag 1 On": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG LEFT MAGNETO:1, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Mag 1 Off": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG LEFT MAGNETO:1, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Mag 2 On": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG RIGHT MAGNETO:1, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Mag 2 Off": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG RIGHT MAGNETO:1, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Mag 1 On": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG LEFT MAGNETO:2, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Mag 1 Off": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG LEFT MAGNETO:2, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Mag 2 On": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG RIGHT MAGNETO:2, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Mag 2 Off": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG RIGHT MAGNETO:2, Bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Engine EDM Step Button Press": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_EDML_L, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Engine EDM Step Button Release": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_EDML_L, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Engine EDM LF Button Press": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_EDML_R, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Left Engine EDM LF Button Release": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_EDML_R, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Engine EDM Step Button Press": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_EDMR_L, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Engine EDM Step Button Release": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_EDMR_L, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Engine EDM LF Button Press": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_EDMR_R, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Engine.Input.C310R Right Engine EDM LF Button Release": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_EDMR_R, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Avionics.Input.C310R Nav 1 Select": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_NAV_SELECTOR, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Avionics.Input.C310R Nav 2 Select": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_NAV_SELECTOR, bool)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Cabin Heat On": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_HEATER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Cabin Heat Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_HEATER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Anti-Ice.Input.C310R Cabin Heat Fan": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_HEATER, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Gauge Main": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_FUEL_IND, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Gauge Selected": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_FUEL_IND, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Fuel Gauge Aux": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_FUEL_IND, enum)"
	},
	"PMDG.B737-700.Engines.Output.PMDG_B737_ENGINE_START_RIGHT_KNOB": {
		"method": "calcCode",
		"code": "(L:switch_121_73X, number)"
	},
	"PMDG.B737-700.Engines.Output.PMDG_B737_ENGINE_START_LEFT_KNOB": {
		"method": "calcCode",
		"code": "(L:switch_119_73X, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 FLIGHT DIRECTOR RIGHT SWITCH": {
		"method": "calcCode",
		"code": "(L:switch_407_73X, number)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 FLIGHT DIRECTOR LEFT SWITCH": {
		"method": "calcCode",
		"code": "(L:switch_378_73X, number)"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737_ENGINE_START_LEFT_LEVER_CUTOFF": {
		"method": "calcCode",
		"code": "68802 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737_ENGINE_START_LEFT_LEVER_IDLE": {
		"method": "calcCode",
		"code": "68801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737_ENGINE_START_RIGHT_LEVER_CUTOFF": {
		"method": "calcCode",
		"code": "68902 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Engines.Input.PMDG_B737_ENGINE_START_RIGHT_LEVER_IDLE": {
		"method": "calcCode",
		"code": "68901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Autopilot.Output.PMDG B737 A/T ARM SWITCH": {
		"method": "calcCode",
		"code": "(L:switch_380_73X, number)"
	},
	"Fly By Wire.A320-Dev.Safety.Input.A32NX_CABIN_SEATBELTS_ALERT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Flap Position Indicator Left Needle": {
		"method": "calcCode",
		"code": "(L:switch_458_73X, number)"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Flap Position Indicator Right Needle": {
		"method": "calcCode",
		"code": "(L:switch_4581_73X, number)"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Brake Press Indicator Needle": {
		"method": "calcCode",
		"code": "(L:switch_448_73X, number)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Left Fuel Selector Off": {
		"method": "calcCode",
		"code": "3 (>L:C310_SW_FUEL_SEL_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Left Fuel Selector Left Main": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_FUEL_SEL_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Left Fuel Selector Left Aux": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_FUEL_SEL_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Left Fuel Selector Right Main": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_FUEL_SEL_LEFT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Right Fuel Selector Off": {
		"method": "calcCode",
		"code": "3 (>L:C310_SW_FUEL_SEL_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Right Fuel Selector Right Main": {
		"method": "calcCode",
		"code": "2 (>L:C310_SW_FUEL_SEL_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Right Fuel Selector Right Aux": {
		"method": "calcCode",
		"code": "1 (>L:C310_SW_FUEL_SEL_RIGHT, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Fuel.Input.C310R Right Fuel Selector Left Main": {
		"method": "calcCode",
		"code": "0 (>L:C310_SW_FUEL_SEL_RIGHT, enum)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_Range_Dec": {
		"method": "calcCode",
		"code": "41708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_Range_Inc": {
		"method": "calcCode",
		"code": "41707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_Mode_Dec": {
		"method": "calcCode",
		"code": "41508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_Mode_Inc": {
		"method": "calcCode",
		"code": "41507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_TFC": {
		"method": "calcCode",
		"code": "41801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG_B737_EFIS_R_Mode_CTR": {
		"method": "calcCode",
		"code": "41601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Alternate Flaps Down Release": {
		"method": "calcCode",
		"code": "7502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Alternate Flaps Up Press": {
		"method": "calcCode",
		"code": "7502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Alternate Flaps Up Release": {
		"method": "calcCode",
		"code": "7501 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input (Potentiometer).A32NX Overhead Air Cond Cockpit Selector Knob (Analog)": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min (>L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input (Potentiometer).A32NX Overhead Air Cond Forward Cabin Selector Knob (Analog)": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min (>L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Input (Potentiometer).A32NX Overhead Air Cond Aft Cabin Selector Knob (Analog)": {
		"method": "calcCode",
		"code": "@ 3.41 / 0 max 300 min (>L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB)"
	},
	"Fly By Wire.A320-Dev.Lights.Input (Potentiometer).A32NX Overhead Integ Light Set (analog)": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 86 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_NO_SMOKING_OFF_AUTO_ON_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_SIGNS_SMOKING, Number) ++ 3 % (>L:S_OH_SIGNS_SMOKING, Number)"
	},
	"FenixSim.A320.Safety.Input.FNX320_SAFETY_EMER_EXIT_LT_OFF_ARM_ON_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_INT_LT_EMER, Number) ++ 3 % (>L:S_OH_INT_LT_EMER, Number)"
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR1_KNOB_OFF-NAV-ATT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR1_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR1_MODE, Number)"
	},
	"Asobo.TBM 930.Avionics.Input.TSC 2 Softkey 1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_1) \n1 (>O:_ButtonAnimVar) "
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR2_KNOB_OFF-NAV-ATT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR2_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR2_MODE, Number)"
	},
	"FenixSim.A320.Navigation.Input.FNX320_OVHD_IR3_KNOB_OFF-NAV-ATT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_NAV_IR3_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR3_MODE, Number)"
	},
	"Asobo.TBM 930.Avionics.Input.TSC 2 Softkey 2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_2) \n1 (>O:_ButtonAnimVar) "
	},
	"Asobo.TBM 930.Avionics.Input.TSC 2 Softkey 3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_3) \n1 (>O:_ButtonAnimVar) "
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Bottom Knob DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Bottom Knob INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)"
	},
	"FenixSim.A320.Lights.Input.FNX320_OVHD_ANN_LT_DIM-BRT-TEST_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_IN_LT_ANN_LT, Number) ++ 3 % (>L:S_OH_IN_LT_ANN_LT, Number)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 Act/Stby": {
		"method": "calcCode",
		"code": "721001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 Test": {
		"method": "calcCode",
		"code": "721101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 Mode Dn": {
		"method": "calcCode",
		"code": "721201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 Mode Up": {
		"method": "calcCode",
		"code": "721301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 1": {
		"method": "calcCode",
		"code": "721401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 2": {
		"method": "calcCode",
		"code": "721501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 3": {
		"method": "calcCode",
		"code": "721601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 4": {
		"method": "calcCode",
		"code": "721701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 5": {
		"method": "calcCode",
		"code": "721801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 6": {
		"method": "calcCode",
		"code": "721901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 7": {
		"method": "calcCode",
		"code": "722001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 8": {
		"method": "calcCode",
		"code": "722101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 9": {
		"method": "calcCode",
		"code": "722201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 0": {
		"method": "calcCode",
		"code": "722301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR1 Clr": {
		"method": "calcCode",
		"code": "722401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 Act/Stby": {
		"method": "calcCode",
		"code": "722501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 Test": {
		"method": "calcCode",
		"code": "722601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 Mode Dn": {
		"method": "calcCode",
		"code": "722701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 Mode Up": {
		"method": "calcCode",
		"code": "722801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 1": {
		"method": "calcCode",
		"code": "722901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 2": {
		"method": "calcCode",
		"code": "723001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 3": {
		"method": "calcCode",
		"code": "723101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 4": {
		"method": "calcCode",
		"code": "723201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 5": {
		"method": "calcCode",
		"code": "723401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 6": {
		"method": "calcCode",
		"code": "723501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 7": {
		"method": "calcCode",
		"code": "723601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 8": {
		"method": "calcCode",
		"code": "723701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 9": {
		"method": "calcCode",
		"code": "723801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 0": {
		"method": "calcCode",
		"code": "723901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR2 Clr": {
		"method": "calcCode",
		"code": "724001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 Act/Stby": {
		"method": "calcCode",
		"code": "724101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 Test": {
		"method": "calcCode",
		"code": "724201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 Mode Dn": {
		"method": "calcCode",
		"code": "724301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 Mode Up": {
		"method": "calcCode",
		"code": "724401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 1": {
		"method": "calcCode",
		"code": "724501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 2": {
		"method": "calcCode",
		"code": "724601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 3": {
		"method": "calcCode",
		"code": "724701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 4": {
		"method": "calcCode",
		"code": "724801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 5": {
		"method": "calcCode",
		"code": "724901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 6": {
		"method": "calcCode",
		"code": "725001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 7": {
		"method": "calcCode",
		"code": "725101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 8": {
		"method": "calcCode",
		"code": "725201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 9": {
		"method": "calcCode",
		"code": "725301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 0": {
		"method": "calcCode",
		"code": "725401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 MMR3 Clr": {
		"method": "calcCode",
		"code": "725501 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_1": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_1) 2 + (>L:S_PED_ATC_1)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_2": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_2) 2 + (>L:S_PED_ATC_2)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_3": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_3) 2 + (>L:S_PED_ATC_3)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_4": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_4) 2 + (>L:S_PED_ATC_4)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_5": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_5) 2 + (>L:S_PED_ATC_5)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_6": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_6) 2 + (>L:S_PED_ATC_6)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_7": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_7) 2 + (>L:S_PED_ATC_7)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_0": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_0) 2 + (>L:S_PED_ATC_0)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_CLR": {
		"method": "calcCode",
		"code": "(L:S_PED_ATC_CLR) 2 + (>L:S_PED_ATC_CLR)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_OPERATION_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_XPDR_OPERATION, Number) ++ 3 % (>L:S_XPDR_OPERATION, Number)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_MODE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_XPDR_MODE) ++ 3 % (>L:S_XPDR_MODE)"
	},
	"FenixSim.A320.Radio.Input.FNX320_TRANSPONDER_KEY_IDENT": {
		"method": "calcCode",
		"code": "(L:S_XPDR_IDENT) 2 + (>L:S_XPDR_IDENT)"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Overhead Eng 1 Fire Button Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1,bool) (A:ENG ON FIRE:1, bool) or (L:A32NX_OVHD_INTLT_ANN) 0 == or \n(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED,bool) \n(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED,bool) or \n(L:A32NX_ELEC_AC_2_BUS_IS_POWERED,bool) or and "
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Overhead Eng 2 Fire Button Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2, bool) (A:ENG ON FIRE:2,  bool) or (L:A32NX_OVHD_INTLT_ANN) 0 == or \n(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, bool) \n(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, bool) or \n(L:A32NX_ELEC_AC_2_BUS_IS_POWERED, bool) or and "
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Overhead APU Fire Button Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_APU, bool) \n(A:APU ON FIRE DETECTED, bool) or \n(L:A32NX_OVHD_INTLT_ANN) 0 == or \n(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, bool) \n(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, bool) or \n(L:A32NX_ELEC_AC_1_BUS_IS_POWERED, bool) or and "
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Flight Instrument Lighting INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_FLT_INST) 5 + 100 min (>L:C310_SW_LIGHTS_FLT_INST) (L:C310_SW_LIGHTS_FLT_INST) (>K:LIGHT_POTENTIOMETER_4_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Flight Instrument Lighting DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_FLT_INST) 5 - 0 max (>L:C310_SW_LIGHTS_FLT_INST) (L:C310_SW_LIGHTS_FLT_INST) (>K:LIGHT_POTENTIOMETER_4_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Radio Lighting INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_RADIO) 5 + 100 min (>L:C310_SW_LIGHTS_RADIO) (L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Radio Lighting DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_RADIO) 5 - 0 max (>L:C310_SW_LIGHTS_RADIO) (L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Engine Instrument Lighting INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_ENG_INST) 5 + 100 min (>L:C310_SW_LIGHTS_ENG_INST) (L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Engine Instrument Lighting DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_ENG_INST) 5 - 0 max (>L:C310_SW_LIGHTS_ENG_INST) (L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Left Switch Panel Lighting INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_SIDE) 5 + 100 min (>L:C310_SW_LIGHTS_SIDE) (L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Left Switch Panel Lighting DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_LIGHTS_SIDE) 5 - 0 max (>L:C310_SW_LIGHTS_SIDE) (L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Front Cabin Light INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FLOOD_CENTER) 5 + 100 min (>L:C310_SW_FLOOD_CENTER) (L:C310_SW_FLOOD_CENTER, enum) (>K:LIGHT_POTENTIOMETER_9_SET) (L:C310_SW_FLOOD_CENTER, enum) if{ (A:CIRCUIT SWITCH ON:53, bool) ! if{ 53 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Front Cabin Light DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FLOOD_CENTER) 5 - 0 max (>L:C310_SW_FLOOD_CENTER) (L:C310_SW_FLOOD_CENTER, enum) (>K:LIGHT_POTENTIOMETER_9_SET) (L:C310_SW_FLOOD_CENTER, enum) ! if{ (A:CIRCUIT SWITCH ON:53, bool) if{ 53 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Forward Cabin Light INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FLOOD_LEFT) 5 + 100 min (>L:C310_SW_FLOOD_LEFT) (L:C310_SW_FLOOD_LEFT, enum) (>K:LIGHT_POTENTIOMETER_8_SET) (L:C310_SW_FLOOD_LEFT, enum) if{ (A:CIRCUIT SWITCH ON:23, bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }"
	},
	"Blackbird/Milviz.Cessna 310R.Lights.Input.C310R Forward Cabin Light DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FLOOD_LEFT) 5 - 0 max (>L:C310_SW_FLOOD_LEFT) (L:C310_SW_FLOOD_LEFT, enum) (>K:LIGHT_POTENTIOMETER_8_SET) (L:C310_SW_FLOOD_LEFT, enum) ! if{ (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Window Defrost INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_DEFROST) 5 + 100 min (>L:C310_SW_DEFROST)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Window Defrost DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_DEFROST) 5 - 0 max (>L:C310_SW_DEFROST)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Temperature Control INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_TEMP_CONTROL) 5 + 100 min (>L:C310_SW_TEMP_CONTROL)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Temperature Control DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_TEMP_CONTROL) 5 - 0 max (>L:C310_SW_TEMP_CONTROL)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Cabin Air Control INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_CABIN_AIR) 5 + 100 min (>L:C310_SW_CABIN_AIR)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Cabin Air Control DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_CABIN_AIR) 5 - 0 max (>L:C310_SW_CABIN_AIR)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Forward Cabin Air Control INC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FWD_CABIN_AIR) 5 + 100 min (>L:C310_SW_FWD_CABIN_AIR)"
	},
	"Blackbird/Milviz.Cessna 310R.Air Conditioning / Pressurisation / Ventilation.Input.C310R Forward Cabin Air Control DEC": {
		"method": "calcCode",
		"code": "(L:C310_SW_FWD_CABIN_AIR) 5 - 0 max (>L:C310_SW_FWD_CABIN_AIR)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R AP HDG HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_PANEL_HEADING_HOLD) }"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R AP NAV HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_NAV1_HOLD) }"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R AP ALT HOLD": {
		"method": "calcCode",
		"code": "(>H:KAP140_PUSH_ALT)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R Altitude INC +100": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_INC)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C319 Altitude DEC -100": {
		"method": "calcCode",
		"code": "100 (>K:AP_ALT_VAR_DEC)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R Altitude INC +1000": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_INC)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R Altitude DEC - 1000": {
		"method": "calcCode",
		"code": "1000 (>K:AP_ALT_VAR_DEC)"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R APR HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_APR_HOLD) }"
	},
	"Blackbird/Milviz.Cessna 310R.Autopilot.Input.C310R AP ON/OFF": {
		"method": "calcCode",
		"code": "(L:C310_SW_AVIONICS) if{ (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) } }"
	},
	"Blackbird/Milviz.Cessna 310R.Controls.Input.Elevator Trim Slow UP": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT, Percent) 163.83 * 81.915 + 16383 min (>K:ELEVATOR_TRIM_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Controls.Input.Elevator Trim Slow DOWN": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT, Percent) 163.83 * 81.915 - -16383 max (>K:ELEVATOR_TRIM_SET)"
	},
	"Blackbird/Milviz.Cessna 310R.Miscellaneous.Input.Pilot Window Shade Up": {
		"method": "calcCode",
		"code": "(L:WindowShadeLeft) 0.05 - 0 max (>L:WindowShadeLeft)"
	},
	"Blackbird/Milviz.Cessna 310R.Miscellaneous.Input.Pilot Window Shade Down": {
		"method": "calcCode",
		"code": "(L:WindowShadeLeft) 0.05 + 1 min (>L:WindowShadeLeft)"
	},
	"Blackbird/Milviz.Cessna 310R.Miscellaneous.Input.Copilot Window Shade Down": {
		"method": "calcCode",
		"code": "(L:WindowShadeLeft) 0.05 + 1 min (>L:WindowShadeLeft)"
	},
	"Blackbird/Milviz.Cessna 310R.Miscellaneous.Input.Copilot Window Shade Up": {
		"method": "calcCode",
		"code": "(L:WindowShadeRight) 0.05 - 0 max (>L:WindowShadeRight)"
	},
	"Fly By Wire.A320.Autopilot.Input.A320NX_APPR_PUSH": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_APPR_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX Autopilot AP 1 Push": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_AP_1_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX Autopilot AP 2 Push": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_AP_2_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX Autopilot ATHR Push": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_ARM)"
	},
	"Microsoft.Generic.Anti-Ice.Input (Potentiometer).Carb Heat Slider": {
		"method": "calcCode",
		"code": "@ 255 - 16383 0 255 - / * 0 max 16383 min (>K:ANTI_ICE_GRADUAL_SET_ENG1)"
	},
	"PMDG.B737-700.Engines.Output.PMDG_B737_IGNITION SELECT Switch": {
		"method": "calcCode",
		"code": "(L:switch_120_73X, number)"
	},
	"Carenado.M20R OVATION.Flight Instrumentation.Output.Standby Vacuum Pump ": {
		"method": "calcCode",
		"code": "(L:M20R_SWITCH_STANDBY_VACUUM)"
	},
	"Just Flight.Piper Arrow III.Autopilot.Input.AutoPilot Mode Increase": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_mode) ++ (>L:AUTOPILOT_mode)"
	},
	"Just Flight.Piper Arrow III.Autopilot.Input.AutoPilot Mode Decrease": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_mode) -- (>L:AUTOPILOT_mode)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 SELCAL HF1": {
		"method": "calcCode",
		"code": "93701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 SELCAL HF2": {
		"method": "calcCode",
		"code": "93801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.Input.PMDGDC6_AP_NEUTRAL": {
		"method": "calcCode",
		"code": "95701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_PositionLights": {
		"method": "calcCode",
		"code": "Steady - onPress: 4008 (>K:ROTOR_BRAKE) onRelease: 4007 (>K:ROTOR_BRAKE)\nFlashing - onPress: 4007 (>K:ROTOR_BRAKE) onRelease: 04008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.Input.PMDGDC6_FUEL_TANK_SELECTOR_1": {
		"method": "calcCode",
		"code": "OFF onPress: 52008 (>K:ROTOR_BRAKE) onRelease: 52007 (>K:ROTOR_BRAKE)\nMAIN onPress: 52007 (>K:ROTOR_BRAKE) onRelease: 52008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.Input.PMDGDC6_FUEL_TANK_SELECTOR_2": {
		"method": "calcCode",
		"code": "OFF - onPress: 52108 (>K:ROTOR_BRAKE) onRelease: 52107 (>K:ROTOR_BRAKE)\nMAIN - onPress: 52107 (>K:ROTOR_BRAKE) onRelease: 52108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.Input.PMDGDC6_FUEL_TANK_SELECTOR_3": {
		"method": "calcCode",
		"code": "OFF - onPress: 52208 (>K:ROTOR_BRAKE) onRelease: 52207 (>K:ROTOR_BRAKE)\nMAIN - onPress: 52207 (>K:ROTOR_BRAKE) onRelease: 52208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Fuel.Input.PMDGDC6_FUEL_TANK_SELECTOR_4": {
		"method": "calcCode",
		"code": "OFF - onPress: 52308 (>K:ROTOR_BRAKE) onRelease: 52307 (>K:ROTOR_BRAKE)\nMAIN - onPress: 52307 (>K:ROTOR_BRAKE) onRelease: 52308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_MIXTURE_1": {
		"method": "calcCode",
		"code": "OFF - onPress: 40008 (>K:ROTOR_BRAKE) onRelease: 40007 (>K:ROTOR_BRAKE)\nRICH - onPress: 40007 (>K:ROTOR_BRAKE) onRelease 40008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_MIXTURE_2": {
		"method": "calcCode",
		"code": "OFF - onPress: 40108 (>K:ROTOR_BRAKE) onRelease: 40107 (>K:ROTOR_BRAKE)\nRICH - onPress: 40107 (>K:ROTOR_BRAKE) onRelease 40108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_MIXTURE_3": {
		"method": "calcCode",
		"code": "OFF - onPress: 40208 (>K:ROTOR_BRAKE) onRelease: 40207 (>K:ROTOR_BRAKE)\nRICH - onPress: 40207 (>K:ROTOR_BRAKE) onRelease 40208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_MIXTURE_4": {
		"method": "calcCode",
		"code": "OFF - onPress: 40308 (>K:ROTOR_BRAKE) onRelease: 40307 (>K:ROTOR_BRAKE)\nRICH - onPress: 40307 (>K:ROTOR_BRAKE) onRelease 40308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_XFEED_LEFT": {
		"method": "calcCode",
		"code": "OFF - onPress: 53907 (>K:ROTOR_BRAKE) onRelease: 53908 (>K:ROTOR_BRAKE)\nALL - onPress: 53908 (>K:ROTOR_BRAKE) onRelease: 53907 (>K:ROTOR_BRAKE)\n"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_XFEED_RIGHT": {
		"method": "calcCode",
		"code": "OFF - onPress: 54007 (>K:ROTOR_BRAKE) onRelease: 54008 (>K:ROTOR_BRAKE)\nALL - onPress: 54008 (>K:ROTOR_BRAKE) onRelease: 54007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_WATER_INJECTION_1": {
		"method": "calcCode",
		"code": "onPress: 2301 (>K:ROTOR_BRAKE) onRelease: 2301 (>:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_WATER_INJECTION_2": {
		"method": "calcCode",
		"code": "onPress: 2401 (>K:ROTOR_BRAKE) onRelease: 2401 (>:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_WATER_INJECTION_3": {
		"method": "calcCode",
		"code": "onPress: 2501 (>K:ROTOR_BRAKE) onRelease: 2501 (>:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Engines.Input.PMDGDC6_WATER_INJECTION_4": {
		"method": "calcCode",
		"code": "onPress: 2601 (>K:ROTOR_BRAKE) onRelease: 2601 (>:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_LANDING_LIGHTS_POSITION": {
		"method": "calcCode",
		"code": "Extend - onPress: 12208 (>K:ROTOR_BRAKE) onRelease: 12207 (>K:ROTOR_BRAKE)\nRetract - onPress: 12207 (>K:ROTOR_BRAKE) onRelease: 12208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_LANDING_LIGHTS": {
		"method": "calcCode",
		"code": "onPress: 12101 (>K:ROTOR_BRAKE) onRelease: 12101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) VHF1": {
		"method": "calcCode",
		"code": "(L:switch_9041_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) VHF2": {
		"method": "calcCode",
		"code": "(L:switch_9042_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) VHF3": {
		"method": "calcCode",
		"code": "(L:switch_9043_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) HF1": {
		"method": "calcCode",
		"code": "(L:switch_9044_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) AM": {
		"method": "calcCode",
		"code": "(L:switch_9045_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 1 (CA) HF2": {
		"method": "calcCode",
		"code": "(L:switch_9046_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 COM Unit 1 (CA) Multi Select  LED": {
		"method": "calcCode",
		"code": "(L:switch_720_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) VHF1": {
		"method": "calcCode",
		"code": "(L:switch_926_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) VHF2": {
		"method": "calcCode",
		"code": "(L:switch_928_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) VHF3": {
		"method": "calcCode",
		"code": "(L:switch_930_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) HF1": {
		"method": "calcCode",
		"code": "(L:switch_932_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) AM": {
		"method": "calcCode",
		"code": "(L:switch_934_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 2 (FO) HF2": {
		"method": "calcCode",
		"code": "(L:switch_936_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) VHF1": {
		"method": "calcCode",
		"code": "(L:switch_955_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) VHF2": {
		"method": "calcCode",
		"code": "(L:switch_957_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) VHF3": {
		"method": "calcCode",
		"code": "(L:switch_959_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) HF1": {
		"method": "calcCode",
		"code": "(L:switch_961_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) AM": {
		"method": "calcCode",
		"code": "(L:switch_963_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 COM Unit 3 (FO) HF2": {
		"method": "calcCode",
		"code": "(L:switch_965_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 COM Unit 3 (FO) Multi Select": {
		"method": "calcCode",
		"code": "(L:switch_945_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 SELCAL VHF1": {
		"method": "calcCode",
		"code": "(L:switch_939_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 SELCAL VHF2": {
		"method": "calcCode",
		"code": "(L:switch_940_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 SELCAL VHF3": {
		"method": "calcCode",
		"code": "(L:switch_941_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 SELCAL HF1": {
		"method": "calcCode",
		"code": "(L:switch_942_73X,number) 0 >"
	},
	"PMDG.B737-700.Radio.PMDG B737 SELCAL HF2": {
		"method": "calcCode",
		"code": "(L:switch_943_73X,number) 0 >"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.CSTR 2 Active": {
		"method": "calcCode",
		"code": "1 (L:A32NX_EFIS_R_OPTION, enum) =="
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_WIPER_CAPT_DEC": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_CAPT) -- 0 max (>L:S_MISC_WIPER_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_WIPER_CAPT_INC": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_CAPT) ++ 2 min (>L:S_MISC_WIPER_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_WIPER_FO_DEC": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_FO) -- 0 max (>L:S_MISC_WIPER_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_OH_WIPER_FO_INC": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_FO) ++ 2 min (>L:S_MISC_WIPER_FO)"
	},
	"Microsoft.Generic.Controls.Input.RUDDER TRIM LEFT": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_LEFT)"
	},
	"Microsoft.Generic.Controls.Input.RUDDER TRIM RIGHT": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_RIGHT)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH Elec Bat1 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_BAT1) ! (>L:S_OH_ELEC_BAT1) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH Elec Bat2 Press": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_BAT2) ! (>L:S_OH_ELEC_BAT2) "
	},
	"Hype Performance Group.H145.Avionics.Input.H145 AVIONICS 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Hype Performance Group.H145.Avionics.Input.H145 AVIONICS 2 ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Hype Performance Group.H145.Avionics.Input.H145 AVIONICS 2 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_2_SET)"
	},
	"Hype Performance Group.H145.Avionics.Input.H145 AVIONICS 1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_1_SET)"
	},
	"Hype Performance Group.H145.Electrical.Input.(DISCONTINUED) H145_SDK_OH_STANDBY_BATTERY ON": {
		"method": "calcCode",
		"code": "1 (>K:H145_SDK_OH_STANDBY_BATTERY_SET)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot ALT Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_ALT)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot HDG Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_HDG)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot VNAV Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VNAV)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot V/L Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VL)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot BLOC Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_BLOC)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot TURB Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_TURB)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot LNAV Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_LNAV)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot VNAV Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VNAV_i, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot VL Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VL_il, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot TURB Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_TURB_il, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot GSL Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_GSL_il, bool)"
	},
	"Just Flight.BAE146.Autopilot.Output.Autopilot BLOC Indication": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_BLOC_il, bool)"
	},
	"Just Flight.BAE146.Navigation.Output.NAV1 Course": {
		"method": "calcCode",
		"code": "(L:MCP_NAV1_dig1, number) 100 * (L:MCP_NAV1_dig2, number) 10 * + (L:MCP_NAV1_dig3, number) +"
	},
	"Just Flight.BAE146.Navigation.Output.NAV2 Course": {
		"method": "calcCode",
		"code": "(L:MCP_NAV2_dig1, number) 100 * (L:MCP_NAV2_dig2, number) 10 * + (L:MCP_NAV2_dig3, number) +"
	},
	"Working Title.CJ4.Air Condition / Pressurization.Output.Pilot fan": {
		"method": "calcCode",
		"code": "(L:PASSENGER_KNOB_AIR_1)"
	},
	"Asobo.CJ4 AAU1.Air Conditioning and Pressurization.Output.Climate Control": {
		"method": "calcCode",
		"code": "(L:WT_CJ4_CLIMATE_CONTROL) "
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot ALT SEL Increment": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob) ++ (>L:MCP_Alt_sel_knob)"
	},
	"Just Flight.BAE146.Autopilot.Input.Autopilot ALT SEL Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob) -- (>L:MCP_Alt_sel_knob)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Master Battery Toggle": {
		"method": "calcCode",
		"code": "(L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool) ! s0 \n  (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool)\nl0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Alternator Left Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR1)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Alternator Right Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ALTERNATOR2)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX_RMP_L_VHF1_BUTTON_PRESSED": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_VHF1_BUTTON_PRESSED)"
	},
	"Microsoft.Generic.Miscellaneous.Output.Blinking LED Medium": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 2 * near 2 %"
	},
	"Microsoft.Generic.Miscellaneous.Output.Blinking LED Slow": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) near 2 % "
	},
	"Microsoft.Generic.Miscellaneous.Output.Blinking LED Fast": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 3 * near 2 %"
	},
	"Just Flight.BAE146.Warning.Input.Master Warning System - Amber Button": {
		"method": "calcCode",
		"code": "1 (>L:L_COAMING_MWS_Amber)"
	},
	"Just Flight.BAE146.Warning.Input.Master Warning System - Red Button": {
		"method": "calcCode",
		"code": "1 (>L:L_COAMING_MWS_Red)"
	},
	"Just Flight.BAE146.Warning.Output.Master Warning System - Red Light": {
		"method": "calcCode",
		"code": "(L:L_COAMING_MWS_Red_il)"
	},
	"Just Flight.BAE146.Warning.Output.Master Warning System - Amber Light": {
		"method": "calcCode",
		"code": "(L:L_COAMING_MWS_Amber_il)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Outer Knob 2": {
		"method": "calcCode",
		"code": "0 (L:switch_466_73X) - 10 div s0\n:1\nl0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Outer Knob 1": {
		"method": "calcCode",
		"code": "10 (L:switch_466_73X) - 10 div s0\n:1\nl0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Outer Knob Auto": {
		"method": "calcCode",
		"code": "20 (L:switch_466_73X) - 10 div s0\n:1\nl0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 N1 Set Outer Knob Both": {
		"method": "calcCode",
		"code": "30 (L:switch_466_73X) - 10 div s0\n:1\nl0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob SET": {
		"method": "calcCode",
		"code": "0 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob AUTO": {
		"method": "calcCode",
		"code": "10 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob V1": {
		"method": "calcCode",
		"code": "20 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob VR": {
		"method": "calcCode",
		"code": "30 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob WT": {
		"method": "calcCode",
		"code": "40 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob VREF": {
		"method": "calcCode",
		"code": "50 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Spd Ref Outer Knob BUG": {
		"method": "calcCode",
		"code": "60 (L:switch_464_73X) - 10 div s0\n:1\nl0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 FD Switch Capt On": {
		"method": "calcCode",
		"code": "(L:switch_378_73X) 100 == if{ 37801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 FD Switch Capt Off": {
		"method": "calcCode",
		"code": "(L:switch_378_73X) 0 == if{ 37801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 FD Switch FO On": {
		"method": "calcCode",
		"code": "(L:switch_407_73X, number) 100 == if{ 40701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 FD Switch FO Off": {
		"method": "calcCode",
		"code": "(L:switch_407_73X, number) 0 == if{ 40701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 MCP A/T Switch On": {
		"method": "calcCode",
		"code": "(L:switch_380_73X) 100 == if{ 38001  (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Autopilot.Input.PMDG B737 MCP A/T Switch Off": {
		"method": "calcCode",
		"code": "(L:switch_380_73X) 0 == if{ 38001  (>K:ROTOR_BRAKE) }"
	},
	"Microsoft.Generic.Avionics.Input.BAROMETRIC STD PRESSURE": {
		"method": "calcCode",
		"code": "(>K:BAROMETRIC_STD_PRESSURE)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak 100 Firewall Fuel Cutoff On": {
		"method": "calcCode",
		"code": "1 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak 100 Firewall Fuel Cutoff Off": {
		"method": "calcCode",
		"code": "0 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"PMDG.B737-700.Electrical.Output.PMDG B737 Ovhd Master Battery Switch": {
		"method": "calcCode",
		"code": "(L:switch_01_73X) 0 >"
	},
	"WB Sim.Cessna 172 Classic.Avionics.Input.C172-analog-transponder-inc": {
		"method": "calcCode",
		"code": "(L:172X_XPNDR_KNOB, Number) 4 < if{\n  (L:172X_XPNDR_KNOB, Number) 1 + (>L:172X_XPNDR_KNOB, Number)\n}"
	},
	"WB Sim.Cessna 172 Classic.Avionics.Input.C172-analog-transponder-dec": {
		"method": "calcCode",
		"code": "(L:172X_XPNDR_KNOB, Number) 0 > if{\n  (L:172X_XPNDR_KNOB, Number) 1 - (>L:172X_XPNDR_KNOB, Number)\n}"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L MINS KNOB BARO": {
		"method": "calcCode",
		"code": "(L:switch_356_73X) 0 == if{ 35601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L MINS KNOB RADIO": {
		"method": "calcCode",
		"code": "(L:switch_356_73X) 0 != if{ 35601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MINS KNOB BARO": {
		"method": "calcCode",
		"code": "(L:switch_412_73X) 0 == if{ 41201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MINS KNOB RADIO": {
		"method": "calcCode",
		"code": "(L:switch_412_73X) 0 != if{ 41201 (>K:ROTOR_BRAKE) }"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_STANDBY_BATTERY_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_STANDBY_BATTERY_ON)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_STANDBY_BATTERY_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_STANDBY_BATTERY_OFF)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_PITOT_1_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_PITOT_1_ON)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_PITOT_1_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_PITOT_1_OFF)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_PITOT_2_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_PITOT_2_ON)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_PITOT_2_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_PITOT_2_OFF)"
	},
	"Hype Performance Group.H145.Electrical.Input.H145_SDK_OH_COCKPIT_LIGHT_REAR_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_COCKPIT_LIGHT_REAR_TOGGLE)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_DAY": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_DAY)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NIGHT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NIGHT)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NVG": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NVG)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_MASTERBRIGHTNESS_INC": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MASTERBRIGHTNESS_INC)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_MASTERBRIGHTNESS_DEC": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MASTERBRIGHTNESS_DEC)"
	},
	"Hype Performance Group.H145.Engines.Input.H145_SDK_ECP_MAIN_1_UP": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_1_UP)"
	},
	"Hype Performance Group.H145.Engines.Input.H145_SDK_ECP_MAIN_1_DOWN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_1_DOWN)"
	},
	"Hype Performance Group.H145.Engines.Input.H145_SDK_ECP_MAIN_2_UP": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_2_UP)"
	},
	"Hype Performance Group.H145.Engines.Input.H145_SDK_ECP_MAIN_2_DOWN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_ECP_MAIN_2_DOWN)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_TABLET_OPENCLOSE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_TABLET_OPENCLOSE)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).CP-PFD brightness-DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:88,percent) 5 - 0 max 88 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).CP-PFD brightness-INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:88,percent) 5 + 100 min 88 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).FO- PFD Brightness-DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:90,percent) 5 - 0 max 90 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).FO- PFD Brightness-INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:90,percent) 5 + 100 min 90 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).CP-MFD brightness-DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:89,percent) 5 - 0 max 89 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).CP-MFD brightness-INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:89,percent) 5 + 100 min 89 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).FO-MFD brightness-DEC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:91,percent) 5 - 0 max 91 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320.Avionics.Input (Potentiometer).FO-MFD brightness-INC": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:91,percent) 5 + 100 min 91 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Cessna 172 Classic.Electrical.Input.C172sp Avionics Bus 1 Switch On": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:39, Bool) != \nif{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:39, Bool) 1 (A:1:BUS CONNECTION ON:4, Bool) != \nif{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.Cessna 172 Classic.Electrical.Input.C172sp Avionics Bus 1 Switch Off": {
		"method": "calcCode",
		"code": "0 (A:CIRCUIT SWITCH ON:39, Bool) != \nif{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:39, Bool) 1 (A:1:BUS CONNECTION ON:4, Bool) != \nif{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.Cessna 172 Classic.Electrical.Input.C172sp Avionics Bus 2 Switch On": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:40, Bool) != \nif{ 40 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:40, Bool) 2 (A:1:BUS CONNECTION ON:5, Bool) != \nif{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.Cessna 172 Classic.Electrical.Input.C172sp Avionics Bus 2 Switch Off": {
		"method": "calcCode",
		"code": "0 (A:CIRCUIT SWITCH ON:40, Bool) != \nif{ 40 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:40, Bool) 2 (A:1:BUS CONNECTION ON:5, Bool) != \nif{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.Cessna 172 Classic.Avionics.Input.C172sp Airspeed True Calibrator Knob Inc": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE CALIBRATE, degrees) ++ 30 min (>A:AIRSPEED TRUE CALIBRATE, degrees)"
	},
	"Asobo.Cessna 172 Classic.Avionics.Input.C172sp Airspeed True Calibrator Knob Dec": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE CALIBRATE, degrees) -- 0 max (>A:AIRSPEED TRUE CALIBRATE, degrees)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Fuel Flow Switch Release": {
		"method": "calcCode",
		"code": "46804 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Fuel Flow Switch Reset": {
		"method": "calcCode",
		"code": "46802 (>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Electrical.Output.BATTERY CONNECTION ON": {
		"method": "calcCode",
		"code": "(A:BATTERY CONNECTION ON, Bool)"
	},
	"Microsoft.Generic.Electrical.Output.BATTERY BREAKER PULLED": {
		"method": "calcCode",
		"code": "(A:BATTERY BREAKER PULLED, Bool)"
	},
	"Microsoft.Generic.Electrical.Output.ELECTRICAL BATTERY ESTIMATED CAPACITY PCT": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY ESTIMATED CAPACITY PCT, Percent)"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX ELEC BAT1 VOLTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_1_POTENTIAL, number)"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX ELEC BAT2 VOLTAGE": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_BAT_2_POTENTIAL, number)"
	},
	"Microsoft.Generic.Gear.Input.ANTISKID BRAKES TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ANTISKID_BRAKES_TOGGLE)"
	},
	"Working Title.CJ4.Autopilot.Input.WT_CJ4_AP_CRS2_PRESSED": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) sp0 (L:WT_CJ4_LNAV_MODE, Number) 2 == if{ \n\t l0 (>K:VOR2_SET) \n} els{ \n\t l0 (>K:VOR1_SET) }"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.A32NX_SPD_MACH_MODE_DISPLAY": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH, Bool)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Autopilot airspeed indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_ap_spd)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Autopilot heading indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_ap_hdg)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Autopilot altitude indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_ap_alt)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Autopilot vertical speed indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_ap_vs)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Nav 1 course indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_nav1_course)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Nav 2 course indication": {
		"method": "calcCode",
		"code": "(L:md_ipc_nav2_course)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_NAV1_CRS_DEC_KNOB": {
		"method": "calcCode",
		"code": "8192 2 + (>L:NAV1_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_NAV1_CRS_INC_KNOB": {
		"method": "calcCode",
		"code": "16384 2 + (>L:NAV1_event,number)"
	},
	"Working Title.CJ4.Autopilot.Input.WT CJ4 AP Disengage Bar Up": {
		"method": "calcCode",
		"code": "1 (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"Working Title.CJ4.Autopilot.Input.WT CJ4 AP Disengage Bar Down": {
		"method": "calcCode",
		"code": "0 (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 2 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2241_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 1 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2242_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 4 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2243_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 3 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2244_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 2 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2245_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 1 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2246_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 1 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2247_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 2 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2248_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 3 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2249_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 4 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2250_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 1 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2251_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 2 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2252_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 4 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2253_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 3 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2254_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 2 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2255_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 1 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2256_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 3 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2257_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 4 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2258_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 5 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2259_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 6 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2260_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 7 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2261_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 8 Extended": {
		"method": "calcCode",
		"code": "(L:switch_2262_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 8 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2263_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 7 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2264_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 6 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2265_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 5 Mid": {
		"method": "calcCode",
		"code": "(L:switch_2266_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 3 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2267_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Flaps 4 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2268_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 5 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2269_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 6 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2270_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 7 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2271_73X,number) 0 >"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 Ovhd LE Dev Slats 8 Transit": {
		"method": "calcCode",
		"code": "(L:switch_2272_73X,number) 0 >"
	},
	"Microsoft.Generic.Avionics.Input.AS1000_PFD_VOL_1_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_VOL_1_INC)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_CAPT_TAKEOVER_PB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FC_CAPT_INST_DISCONNECT) ++ (>L:S_FC_CAPT_INST_DISCONNECT) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_CAPT_TAKEOVER_PB_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FC_CAPT_INST_DISCONNECT) ++ (>L:S_FC_CAPT_INST_DISCONNECT) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FO_TAKEOVER_PB_PUSH": {
		"method": "calcCode",
		"code": "(L:S_FC_FO_INST_DISCONNECT) ++ (>L:S_FC_FO_INST_DISCONNECT) "
	},
	"FenixSim.A320.Flight Controls.Input.FNX320_FC_FO_TAKEOVER_PB_RELEASE": {
		"method": "calcCode",
		"code": "(L:S_FC_FO_INST_DISCONNECT) ++ (>L:S_FC_FO_INST_DISCONNECT) "
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AP ALT VAR": {
		"method": "calcCode",
		"code": "(L:HJET_AP_ALT_VAR,Number)"
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AP VS HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR,Feet/minute)"
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AP AIRSPEED HOLD VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD VAR,Knots)"
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AP HEADING LOCK DIR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR,Degrees)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP HEADING KNOB DEC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP HEADING KNOB INC": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP ALT SEL KNOB DEC": {
		"method": "calcCode",
		"code": "0 100 (>K:2:AP_ALT_VAR_DEC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP ALT SEL KNOB INC": {
		"method": "calcCode",
		"code": "0 100 (>K:2:AP_ALT_VAR_INC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP SPEED KNOB DEC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_DEC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP SPEED KNOB INC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_INC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP VS KNOB DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR, feet/minute) 100 - (>K:AP_VS_SET)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP VS KNOB INC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP VS BUTTON": {
		"method": "calcCode",
		"code": "(L:VS_Pushed,bool) ! (>L:VS_Pushed)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP SPEED BUTTON": {
		"method": "calcCode",
		"code": "(L:FLC_Pushed,bool) ! (>L:FLC_Pushed)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP ALT HOLD BUTTON": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP AT (CSC) BUTTON": {
		"method": "calcCode",
		"code": "(L:CSC Pushed,bool) ! (>L:CSC Pushed)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP CO BUTTON": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) \n(L:XMLVAR_AirSpeedIsInMach,bool) ! (>L:XMLVAR_AirSpeedIsInMach)"
	},
	"FenixSim.A320.Gear.Input.FNX320 MainPanel Brake Fan Button Press": {
		"method": "calcCode",
		"code": "(L:S_MIP_BRAKE_FAN) ! (>L:S_MIP_BRAKE_FAN) "
	},
	"Carenado.C170B.Lights.Input (Potentiometer).C170B_PANEL_LIGHT_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Carenado.C170B.Lights.Input.C170B_MAP_LIGHT_ON": {
		"method": "calcCode",
		"code": "3 1 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_MAP_LIGHT_OFF": {
		"method": "calcCode",
		"code": "3 0 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_RED_CABIN_LIGHT_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_RED_CABIN_LIGHT_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_WHITE_CABIN_LIGHT_ON": {
		"method": "calcCode",
		"code": "2 1 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_WHITE_CABIN_LIGHT_OFF": {
		"method": "calcCode",
		"code": "2 0 (>K:2:CABIN_LIGHTS_SET) "
	},
	"Carenado.C170B.Lights.Input.C170B_MAP_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "3 (>K:TOGGLE_CABIN_LIGHTS)"
	},
	"Carenado.C170B.Lights.Input.C170B_RED_CABIN_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_CABIN_LIGHTS)"
	},
	"Carenado.C170B.Lights.Input.C170B_WHITE_CABIN_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_CABIN_LIGHTS)"
	},
	"Asobo.XCub.Lights.Output.XCUB_PLACARDS_VALUE": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent)"
	},
	"Asobo.XCub.Lights.Input.XCUB_PLACARDS_DIMMER": {
		"method": "calcCode",
		"code": "@ s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 Eng 2 Fire Warn/Disch Handle Up": {
		"method": "calcCode",
		"code": "699101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR/ADF VOR1": {
		"method": "calcCode",
		"code": "0 (L:switch_414_73X) - 50 div s0\n:1\nl0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR/ADF OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_414_73X) - 50 div s0\n:1\nl0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR/ADF ADF1": {
		"method": "calcCode",
		"code": "100 (L:switch_414_73X) - 50 div s0\n:1\nl0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR2/ADF2 OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_368_73X) - 50 div s0\n:1\nl0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS L VOR2/ADF2 ADF2": {
		"method": "calcCode",
		"code": "100 (L:switch_368_73X) - 50 div s0\n:1\nl0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR2/ADF2 VOR2": {
		"method": "calcCode",
		"code": "0 (L:switch_424_73X) - 50 div s0\n:1\nl0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR2/ADF2 OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_424_73X) - 50 div s0\n:1\nl0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR2/ADF2 ADF2": {
		"method": "calcCode",
		"code": "100 (L:switch_424_73X) - 50 div s0\n:1\nl0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"Working Title.CJ4.Autopilot.Output.WT CJ4 AP Airspeed Is in Mach": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_TERR_L_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_TERR_L_ACTIVE,bool) ! (>L:A32NX_EFIS_TERR_L_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX_EFIS_TERR_R_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_TERR_R_ACTIVE,bool) ! (>L:A32NX_EFIS_TERR_R_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.A32NX_EFIS_TERR_R_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_TERR_R_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.A32NX_EFIS_TERR_L_ACTIVE": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_TERR_L_ACTIVE)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Max Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Max Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Med Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Med Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Lo Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Autobrake Lo Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_PILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:0, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:0, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:0, percent over 100) }"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_COPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:1, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:1, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:1, percent over 100) }"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_PILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:3, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:3, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:3, percent over 100) }"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_COPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:4, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:4, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:4, percent over 100) }"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_PILOT_OPEN": {
		"method": "calcCode",
		"code": "1 (>A:INTERACTIVE POINT GOAL:0, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_PILOT_CLOSE": {
		"method": "calcCode",
		"code": "0 (>A:INTERACTIVE POINT GOAL:0, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_COPILOT_OPEN": {
		"method": "calcCode",
		"code": "1 (>A:INTERACTIVE POINT GOAL:1, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_DOOR_COPILOT_CLOSE": {
		"method": "calcCode",
		"code": "0 (>A:INTERACTIVE POINT GOAL:1, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_PILOT_OPEN": {
		"method": "calcCode",
		"code": "1 (>A:INTERACTIVE POINT GOAL:3, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_PILOT_CLOSE": {
		"method": "calcCode",
		"code": "0 (>A:INTERACTIVE POINT GOAL:3, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_COPILOT_OPEN": {
		"method": "calcCode",
		"code": "1 (>A:INTERACTIVE POINT GOAL:4, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_WINDOW_COPILOT_CLOSE": {
		"method": "calcCode",
		"code": "0 (>A:INTERACTIVE POINT GOAL:4, percent over 100)"
	},
	"Carenado.C170B.Interaction.C170B_SUNVISOR_PILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SUNVISOR1, number) 0 == \nif{ 1 (>L:SUNVISOR1, number) } \nels{ 0 (>L:SUNVISOR1, number) }"
	},
	"Carenado.C170B.Interaction.C170B_SUNVISOR_COPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SUNVISOR2, number) 0 == \nif{ 1 (>L:SUNVISOR2, number) } \nels{ 0 (>L:SUNVISOR2, number) }"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_BOTH_ON": {
		"method": "calcCode",
		"code": "16 (>K:FUEL_SELECTOR_SET)"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_LEFT_TANK": {
		"method": "calcCode",
		"code": "2 (>K:FUEL_SELECTOR_SET)"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_RIGHT_TANK": {
		"method": "calcCode",
		"code": "3 (>K:FUEL_SELECTOR_SET)"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_BOTH_OFF": {
		"method": "calcCode",
		"code": "0 (>K:FUEL_SELECTOR_SET)"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_INC": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) s0 0 == \nif{ 2 (>K:FUEL_SELECTOR_SET) } \nels{ l0 2 == if{ 16 (>K:FUEL_SELECTOR_SET) } els{ l0 16 == if{ 3 (>K:FUEL_SELECTOR_SET) } els{ 0 (>K:FUEL_SELECTOR_SET) } } }"
	},
	"Carenado.C170B.Fuel.C170B_FUEL_SELECTOR_DEC": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) s0 0 == \nif{ 3 (>K:FUEL_SELECTOR_SET) } \nels{ l0 3 == if{ 16 (>K:FUEL_SELECTOR_SET) } els{ l0 16 == if{ 2 (>K:FUEL_SELECTOR_SET) } els{ 0 (>K:FUEL_SELECTOR_SET) } } }"
	},
	"Carenado.C170B.Lights.C170B_LIGHTS_LANDING_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_TOGGLE)"
	},
	"Carenado.C170B.Lights.C170B_LIGHTS_BEACON_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_BEACON_LIGHTS)"
	},
	"Carenado.C170B.Lights.Input (Potentiometer).C170B_LIGHTS_NAVIGATION_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_NAV_LIGHTS)"
	},
	"Carenado.C170B.Engines.Input (Potentiometer).C170B_MIXTURE_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:MIXTURE_SET)"
	},
	"Carenado.C170B.Engines.C170B_THROTTLE_SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE_SET)"
	},
	"Carenado.C170B.Gear.C170B_PARKING_BRAKE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PARKING_BRAKES)"
	},
	"Carenado.C170B.Electrical.C170B_BATTERY_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_BATTERY)"
	},
	"Carenado.C170B.Avionics.C170B_RADIO_POWER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AVIONICS_MASTER)"
	},
	"Carenado.C170B.Fuel.C170B_PRIMER_PULL": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_PUSH_PRIMER_BTN)"
	},
	"Carenado.C170B.Interaction.C170B_AIR_VENT_PILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SWITCH_DUMMY_WINDOWS, Bool) 0 == if{ 1 (>L:SWITCH_DUMMY_WINDOWS) } els{ 0 (>L:SWITCH_DUMMY_WINDOWS) }"
	},
	"Carenado.C170B.Interaction.C170B_AIR_VENT_COPILOT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:SWITCH_DUMMY_AIR_TEMP, Bool) 0 == if{ 1 (>L:SWITCH_DUMMY_AIR_TEMP) } els{ 0 (>L:SWITCH_DUMMY_AIR_TEMP) }"
	},
	"Carenado.C170B.Avionics.C170B_GPS_VISIBILITY_TOGGLE": {
		"method": "calcCode",
		"code": "(L:GPS_VIS, Bool) 0 == if{ 1 (>L:GPS_VIS) } els{ 0 (>L:GPS_VIS) }"
	},
	"Carenado.C170B.Engines.C170B_MAGNETO_OFF": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_OFF)"
	},
	"Carenado.C170B.Engines.C170B_MAGNETO_RIGHT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_RIGHT)"
	},
	"Carenado.C170B.Engines.C170B_MAGNETO_LEFT": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_LEFT)"
	},
	"Carenado.C170B.Engines.C170B_MAGNETO_BOTH": {
		"method": "calcCode",
		"code": "(>K:MAGNETO1_BOTH)"
	},
	"Carenado.C170B.Engines.C170B_STARTER_PULL": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STARTER1)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_IDENT": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_CUSTOM_TRANSPONDER_TEST)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_1_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_INC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_1_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1_DEC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_10_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_INC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_10_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_10_DEC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_100_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_INC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_100_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_100_DEC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_1000_INC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_INC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_1000_DEC": {
		"method": "calcCode",
		"code": "(>K:XPNDR_1000_DEC)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_OFF": {
		"method": "calcCode",
		"code": "0 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_SBY": {
		"method": "calcCode",
		"code": "1 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_ON": {
		"method": "calcCode",
		"code": "3 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_ALT": {
		"method": "calcCode",
		"code": "4 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Carenado.C170B.Radio.C170B_TRANSPONDER_TST": {
		"method": "calcCode",
		"code": "2 (>A:TRANSPONDER STATE:1, Enum)"
	},
	"Carenado.C170B.Radio.C170B_COM_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_INC)"
	},
	"Carenado.C170B.Radio.C170B_COM_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_DEC)"
	},
	"Carenado.C170B.Radio.C170B_COM_FREQUENCY_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_INC)"
	},
	"Carenado.C170B.Radio.C170B_COM_FREQUENCY_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_FRACT_DEC)"
	},
	"Carenado.C170B.Radio.C170B_COM_FREQUENCY_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_INC)"
	},
	"Carenado.C170B.Radio.C170B_COM_FREQUENCY_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:COM_RADIO_WHOLE_DEC)"
	},
	"Carenado.C170B.Radio.C170B_COM_STBY_SWAP": {
		"method": "calcCode",
		"code": "(>K:COM_STBY_RADIO_SWAP)"
	},
	"Carenado.C170B.Radio.C170B_NAV_FREQUENCY_FRACT_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_INC)"
	},
	"Carenado.C170B.Radio.C170B_NAV_FREQUENCY_FRACT_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_FRACT_DEC)"
	},
	"Carenado.C170B.Radio.C170B_NAV_FREQUENCY_WHOLE_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_INC)"
	},
	"Carenado.C170B.Radio.C170B_NAV_FREQUENCY_WHOLE_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_WHOLE_DEC)"
	},
	"Carenado.C170B.Radio.C170B_NAV_STBY_SWAP": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP)"
	},
	"Carenado.C170B.Flight Instrumentation.Input.C170B_BAROMETER_INC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_INC)"
	},
	"Carenado.C170B.Flight Instrumentation.Input.C170B_BAROMETER_DEC": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_DEC)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_HEIGHT_SWITCH_DOWN": {
		"method": "calcCode",
		"code": "0 (>L:S_SEAT_HEIGHT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_HEIGHT_SWITCH_DOWN_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_HEIGHT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_HEIGHT_SWITCH_UP": {
		"method": "calcCode",
		"code": "2 (>L:S_SEAT_HEIGHT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_HEIGHT_SWITCH_UP_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_HEIGHT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_DISTANCE_SWITCH_FORWARD": {
		"method": "calcCode",
		"code": "0 (>L:S_SEAT_DISTANCE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_DISTANCE_SWITCH_FORWARD_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_DISTANCE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_DISTANCE_SWITCH_BACKWARDS": {
		"method": "calcCode",
		"code": "2 (>L:S_SEAT_DISTANCE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_CAPT_DISTANCE_SWITCH_BACKWARDS_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_DISTANCE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_HEIGHT_SWITCH_DOWN": {
		"method": "calcCode",
		"code": "0 (>L:S_SEAT_HEIGHT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_HEIGHT_SWITCH_DOWN_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_HEIGHT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_HEIGHT_SWITCH_UP": {
		"method": "calcCode",
		"code": "2 (>L:S_SEAT_HEIGHT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_HEIGHT_SWITCH_UP_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_HEIGHT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_DISTANCE_SWITCH_FORWARD": {
		"method": "calcCode",
		"code": "0 (>L:S_SEAT_DISTANCE_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_DISTANCE_SWITCH_FORWARD_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_DISTANCE_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_DISTANCE_SWITCH_BACKWARDS": {
		"method": "calcCode",
		"code": "2 (>L:S_SEAT_DISTANCE_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320_SEAT_FO_DISTANCE_SWITCH_BACKWARDS_STOP": {
		"method": "calcCode",
		"code": "1 (>L:S_SEAT_DISTANCE_FO)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Master Electrical Bar Toggle ": {
		"method": "calcCode",
		"code": "(L:GENERIC_MASTER_BAR_1, Bool) ! s0 (>L:GENERIC_MASTER_BAR_1, Bool) \nl0 (>H:GENERIC_MASTER_BAR_1, Bool)"
	},
	"Asobo.Longitude.Autopilot.Input.LONGITUDE_AUTOPILOT_ALT_FINE_PUSH": {
		"method": "calcCode",
		"code": "100 1000 (L:XMLVAR_Autopilot_Altitude_Increment) 100 != ? (>L:XMLVAR_Autopilot_Altitude_Increment)"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 XPNDR Select Knob Position": {
		"method": "calcCode",
		"code": "(L:switch_798_73X, number)"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 XPNDR Mode Select Knob Position": {
		"method": "calcCode",
		"code": "(L:switch_800_73X, number)"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 XPNDR ALT SOURCE Knob Position": {
		"method": "calcCode",
		"code": "(L:switch_803_73X, number)"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 FWD Cargo Fire Arm Switch On ": {
		"method": "calcCode",
		"code": "(L:switch_763_73X,number) 0 > "
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 AFT Cargo Fire Arm Switch On": {
		"method": "calcCode",
		"code": "(L:switch_765_73X,number) 0 > "
	},
	"Microsoft.Generic.Engines.Input.SET_FUEL_VALVE_ENG1 ON": {
		"method": "calcCode",
		"code": "1 (>K:SET_FUEL_VALVE_ENG1)\n"
	},
	"Microsoft.Generic.Engines.Input.SET_FUEL_VALVE_ENG1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 FWD DET Select A ": {
		"method": "calcCode",
		"code": "0 (L:switch_760_73X) - 50 div s0\n:1\nl0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 FWD DET Select Norm": {
		"method": "calcCode",
		"code": "50 (L:switch_760_73X) - 50 div s0\n:1\nl0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 FWD DET Select B": {
		"method": "calcCode",
		"code": "100 (L:switch_760_73X) - 50 div s0\n:1\nl0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 AFT DET Select A": {
		"method": "calcCode",
		"code": "0 (L:switch_761_73X) - 50 div s0\n:1\nl0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 AFT DET Select Norm": {
		"method": "calcCode",
		"code": "50 (L:switch_761_73X) - 50 div s0\n:1\nl0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 AFT DET Select B": {
		"method": "calcCode",
		"code": "100 (L:switch_761_73X) - 50 div s0\n:1\nl0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"Asobo.Longitude.Warning.Input.LONGITUDE MASTER WARNING L PRESS": {
		"method": "calcCode",
		"code": "(>K:MASTER_WARNING_ACKNOWLEDGE)"
	},
	"Asobo.Longitude.Warning.Input.LONGITUDE MASTER CAUTION PRESS": {
		"method": "calcCode",
		"code": "(>K:MASTER_CAUTION_ACKNOWLEDGE)"
	},
	"Asobo.Longitude.Lights.Output.Anti-Collision Light": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE,Bool)"
	},
	"Asobo.Longitude.Lights.Output.(A:LIGHT ANTI COLL)": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE,Bool)"
	},
	"Asobo.Longitude.Lights.Input.LONGITUDE_ANTI_COLL_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_STROBE_1) ! s0 (>L:LIGHTING_STROBE_1)\n1 l0 (>K:2:STROBES_SET)"
	},
	"Asobo.Longitude.Lights.Output.(A:LIGHT LOGO ON, Number)": {
		"method": "calcCode",
		"code": "(A:LIGHT LOGO ON, Number)"
	},
	"Working Title.CJ4.Electrical.Output.WT_CJ4_LOW_VOLTS": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MAIN BUS VOLTAGE, volts) 24.5 <="
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_LOW_OIL_PRESSURE": {
		"method": "calcCode",
		"code": "(A:ENG OIL PRESSURE:1, psi) 25 < (A:ENG OIL PRESSURE:2, psi) 25 < ||"
	},
	"Working Title.CJ4.Fuel.Output.WT_CJ4_LOW_FUEL_PRESSURE": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PRESSURE:1, psi) 10 <= (A:GENERAL ENG FUEL PRESSURE:2, psi) 10 <= ||"
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_STARTER_ENGAGED": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, bool) (A:GENERAL ENG STARTER:2, bool) ||"
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_STARTER1_ENGAGED": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, Bool)"
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_STARTER2_ENGAGED": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:2, Bool)"
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_ENG1_RUN": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent) 0 >"
	},
	"Working Title.CJ4.Engine.Output.WT_CJ4_ENG2_RUN": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, Percent) 0 >"
	},
	"Fly By Wire.A320.Warning System.Output.A32NX_GPWS_TERR_OFF": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_TERR_OFF)"
	},
	"Fly By Wire.A320.Warning System.Output.A32NX_GPWS_SYS_OFF": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_SYS_OFF)"
	},
	"Fly By Wire.A320.Warning System.Output.A32NX_GPWS_GS_MODE_OFF": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_GS_OFF)"
	},
	"Fly By Wire.A320.Warning System.Output.A32NX_GPWS_FLAP_MODE_OFF": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_FLAP_OFF)"
	},
	"Fly By Wire.A320.Warning System.Output.A32NX_GPWS_LDG_FLAPS_3_MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_FLAPS3)"
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_CENTER_RED_LED": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER POSITION, percent over 100) 0 > (A:GEAR CENTER POSITION, percent over 100) 1 < &&"
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_LEFT_RED_LED": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT POSITION, percent over 100) 0 > (A:GEAR LEFT POSITION, percent over 100) 1 < &&"
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_RIGHT_RED_LED": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT POSITION, percent over 100) 0 > (A:GEAR RIGHT POSITION, percent over 100) 1 < &&"
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_CENTER_GREEN_LED": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER POSITION, percent over 100) 1 >="
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_LEFT_GREEN_LED": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT POSITION, percent over 100) 1 >="
	},
	"Working Title.CJ4.Controls.Output.WT_CJ4_GEAR_RIGHT_GREEN_LED": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT POSITION, percent over 100) 1 >="
	},
	"Fly By Wire.A320-Dev.Engine.Input.A32NX Ped Eng Mode Select Knob Crank": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_ENG_MODE_SEL)\n0 (>K:TURBINE_IGNITION_SWITCH_SET)"
	},
	"Fly By Wire.A320-Dev.Engine.Input.A32NX Ped Eng Mode Select Knob Norm": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_ENG_MODE_SEL)\n1 (>K:TURBINE_IGNITION_SWITCH_SET1)\n1 (K:TURBINE_IGNITION_SWITCH_SET2)"
	},
	"Fly By Wire.A320-Dev.Engine.Input.A32NX Ped Eng Mode Select Knob Ign/Start": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_ENG_MODE_SEL)\n2 (>K:TURBINE_IGNITION_SWITCH_SET1)\n2 (>K:TURBINE_IGNITION_SWITCH_SET2)\n(>H:A320_Neo_EICAS_2_Ignition_Start) "
	},
	"SimWorks Studios.RV-14.Lights.Input.Flasher Switch for Landing Lights (WigWag) On": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_Switch_Light_WigWag, Bool)"
	},
	"SimWorks Studios.RV-14.Lights.Input.Flasher Switch for Landing Lights (WigWag) Off": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_Switch_Light_WigWag, Bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX Aircond Eng1 Bleed is Off": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO, bool) ! (L:A32NX_OVHD_INTLT_ANN) 0 ==  (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or 1 and (L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX OVHD Aircond Eng2 Bleed is Off": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO, bool) ! (L:A32NX_OVHD_INTLT_ANN) 0 ==  (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or 1 and (L:A32NX_ELEC_AC_2_BUS_IS_POWERED, Bool) and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Output.A32NX Antiice Eng1": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, bool)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Output.A32NX Antiice Eng2": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:2,bool)"
	},
	"Microsoft.Generic.Avionics.Input.AS430_CDI_Push": {
		"method": "calcCode",
		"code": "(>H:AS430_CDI_Push)"
	},
	"Asobo.747-8i.Autopilot.Input.FMC 1 AP SPD Hold": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_SPD)"
	},
	"Asobo.TBM 930.Gear.Input.TBM930_ParkingBrake_Toggle": {
		"method": "calcCode",
		"code": "(L:ParkingBrake_Position) 0 > if{ 0 (>L:ParkingBrake_Position) } els{ 100 (>L:ParkingBrake_Position) }"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX Park Brake LEVER TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_PARK_BRAKE_LEVER_POS) ! (>L:A32NX_PARK_BRAKE_LEVER_POS)"
	},
	"Microsoft.Generic.Avionics.Input.TransponderFUNC": {
		"method": "calcCode",
		"code": "(>H:TransponderFUNC)"
	},
	"Microsoft.Generic.Avionics.Input.TransponderSTARTSTOP": {
		"method": "calcCode",
		"code": "(>H:TransponderSTARTSTOP)"
	},
	"Microsoft.Generic.Avionics.Input.TransponderCRSR": {
		"method": "calcCode",
		"code": "(>H:TransponderCRSR)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU SPEED MANAGED DOT": {
		"method": "calcCode",
		"code": "(L:I_FCU_SPEED_MANAGED)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU HEADING MANAGED DOT": {
		"method": "calcCode",
		"code": "(L:I_FCU_HEADING_MANAGED)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU ALTITUDE MANAGED DOT": {
		"method": "calcCode",
		"code": "(L:I_FCU_ALTITUDE_MANAGED)"
	},
	"Asobo.747-8i.EFIS.Input.B747 8 MFD 1 KNOB AUTOPILOT CTR": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_AUTOPILOT_CTR)"
	},
	"Asobo.747-8i.Engine.Input.ENG1 STARTER ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:1, enum) 15 != if{ \n   15 (K:TURBINE_IGNITION_SWITCH_SET1) }\n(A:GENERAL ENG STARTER:1, bool) ! if{ \n   1 (>K:STARTER1_SET) }\n"
	},
	"Asobo.747-8i.Engine.Input.ENG1 STARTER OFF": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:1, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET1) }\n(A:GENERAL ENG STARTER:1, bool) if{ \n   0 (>K:STARTER1_SET) }\n(K:TOGGLE_STARTER1)"
	},
	"Asobo.747-8i.Engine.Input.ENG2 STARTER ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:2, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET2) }\n(A:GENERAL ENG STARTER:2, bool) ! if{ \n   1 (>K:STARTER2_SET) }"
	},
	"Asobo.747-8i.Engine.Input.ENG2 STARTER OFF": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:2, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET2) }\n(A:GENERAL ENG STARTER:2, bool) if{ \n   0 (>K:STARTER2_SET) }\n(K:TOGGLE_STARTER2)"
	},
	"Asobo.747-8i.Engine.Input.ENG3 STARTER ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:3, enum) 15 != if{ \n   15 (K:TURBINE_IGNITION_SWITCH_SET3) }\n(A:GENERAL ENG STARTER:3, bool) ! if{ \n   1 (>K:STARTER3_SET) }"
	},
	"Asobo.747-8i.Engine.Input.ENG3 STARTER OFF": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:3, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET3) }\n(A:GENERAL ENG STARTER:3, bool) if{ \n   0 (>K:STARTER3_SET) }\n(K:TOGGLE_STARTER3)"
	},
	"Asobo.747-8i.Engine.Input.ENG4 STARTER ON": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:4, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET4) }\n(A:GENERAL ENG STARTER:4, bool) ! if{ \n   1 (>K:STARTER4_SET) }"
	},
	"Asobo.747-8i.Engine.Input.ENG4 STARTER OFF": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:4, enum) 15 != if{\n   15 (K:TURBINE_IGNITION_SWITCH_SET4) }\n(A:GENERAL ENG STARTER:4, bool) if{ \n   0 (>K:STARTER4_SET) }\n(K:TOGGLE_STARTER4)"
	},
	"Asobo.Baron G58.EFIS.Input.AS1000_MFD_RANGE_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_RANGE_INC)"
	},
	"Asobo.Baron G58.EFIS.Input.AS1000_MFD_RANGE_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MFD_RANGE_DEC)"
	},
	"Asobo.Baron G58.EFIS.Input.H:AS1000_PFD_CRS_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CRS_INC)"
	},
	"Asobo.Baron G58.EFIS.Input.AS1000_PFD_CRS_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_PFD_CRS_DEC)"
	},
	"Asobo.B787-10.EFIS.Input.B787 MFD MAP RANGE INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Range_INC)"
	},
	"Asobo.B787-10.EFIS.Input.B787 MFD MAP RANGE DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_Range_DEC)"
	},
	"Asobo.B787-10.EFIS.Input.B787 MFD MAP TERRAIN TOGGLE": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_TERR)"
	},
	"Asobo.B787-10.EFIS.Input.B787 MFD display ENG page": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_ENG)"
	},
	"Asobo.B787-10.EFIS.Input.B787 MFD display SYS page": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_SYS)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MODE ILS": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_NAV_MODE\")"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE  10 Nm": {
		"method": "calcCode",
		"code": "1 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE  20 Nm": {
		"method": "calcCode",
		"code": "2 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE  40 Nm": {
		"method": "calcCode",
		"code": "3 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE  80 Nm": {
		"method": "calcCode",
		"code": "4 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE 160 Nm": {
		"method": "calcCode",
		"code": "5 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.A320.EFIS.Input.A320 MFD MAP RANGE 320 Nm": {
		"method": "calcCode",
		"code": "6 (>L:A320_Neo_MFD_Range)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_HDG_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.B787-10.Engines.Input.B787 ENG1 FUEL VALVE CLOSE": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:1, BOOL) 1 == if{\n1 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.B787-10.Engines.Input.B787 ENG1 FUEL VALVE OPEN": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:1, BOOL) 0 == if{\n1 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.B787-10.Engines.Input.B787 ENG2 FUEL VALVE OPEN": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:2, BOOL) 0 == if{\n2 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.B787-10.Engines.Input.B787 ENG2 FUEL VALVE CLOSE": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:2, BOOL) 1 == if{\n2 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.B787-10.Fuel.Output.B787 FUEL PUMP CENTER 1 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool) 0 =="
	},
	"Asobo.B787-10.Fuel.Output.B787 FUEL PUMP CENTER 2 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:2, Bool) 0 =="
	},
	"Asobo.B787-10.Fuel.Input.B787 FUEL PUMP CENTER 1 SWITCH ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool) 0 == if{ \n1 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.B787-10.Fuel.Input.B787 FUEL PUMP CENTER 1 SWITCH OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool) 1 == if{ \n1 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Eng1_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Eng1)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Eng2_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Eng2)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Eng3_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Eng3)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Eng4_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Eng4)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_To_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_To)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Mct_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Mct)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Tgt_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Tgt)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Desc_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Desc)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Sync_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Sync)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Ctrl_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Ctrl)"
	},
	"Just Flight.BAE146.Autothrust System.Input.TMS_Mstr_Switch": {
		"method": "calcCode",
		"code": "1 (>L:R_TMS_Mstr)"
	},
	"PMDG.DC-6.Autopilot.Input.PMDGDC6_AP_LEVER_OFF": {
		"method": "calcCode",
		"code": "40404 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Autopilot.Input.PMDGDC6_AP_LEVER_ON": {
		"method": "calcCode",
		"code": "40403 (>K:ROTOR_BRAKE)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_TABLET_LIGHTING_OFF": {
		"method": "calcCode",
		"code": "0 (>L:CockpitLighting, enum) \n1 (>L:SetCockpitLights, bool)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_TABLET_LIGHTING_RED": {
		"method": "calcCode",
		"code": "2 (>L:CockpitLighting, enum)\n1 (>L:SetCockpitLights, bool)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_TABLET_LIGHTING_WHITE": {
		"method": "calcCode",
		"code": "1 (>L:CockpitLighting, enum) \n1 (>L:SetCockpitLights, bool)"
	},
	"PMDG.DC-6.Lights.Input.PMDGDC6_TABLET_LIGHTING_FLOOD": {
		"method": "calcCode",
		"code": "3 (>L:CockpitLighting, enum) \n1 (>L:SetCockpitLights, bool)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid Com1/2 Swap Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_COM_Swap_1_2_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid PA Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_PA_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid SPKR Push": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_SPEAKER) \n(>H:AS1000_MID_SPKR_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid MKR MUTE Push": {
		"method": "calcCode",
		"code": "0 (>K:MARKER_BEACON_TEST_MUTE) \n(>H:AS1000_MID_MKR_Mute_Push) "
	},
	"Working Title.G1000 NXi.Radio.Input.Mid DME Push": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_TOGGLE) \n(>H:AS1000_MID_DME_Push) "
	},
	"Working Title.G1000 NXi.Radio.Input.Mid NAV1 Push": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR1_IDENT_TOGGLE) \n(>H:AS1000_MID_NAV_1_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid NAV 2 Push": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR2_IDENT_TOGGLE) \n(>H:AS1000_MID_NAV_2_Push) "
	},
	"Working Title.G1000 NXi.Radio.Input.Mid ADF Push": {
		"method": "calcCode",
		"code": "(>K:RADIO_ADF_IDENT_TOGGLE) \n(>H:AS1000_MID_ADF_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid AUX Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_AUX_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid MAN SQ Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_MAN_SQ_Push)"
	},
	"Working Title.G1000 NXi.Radio.Input.Mid PLAY Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Play_Push)"
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid ICS Isolation PILOT Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Isolate_Pilot_Push) \n(A:INTERCOM MODE, Enum) 0 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (>K:TOGGLE_ICS) } els{ \n (A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ \n   (>K:TOGGLE_ICS) \n   0 (>K:INTERCOM_MODE_SET) } els{ \n\t\t1 2 0 3 (A:INTERCOM MODE, Enum) case (>K:INTERCOM_MODE_SET) } } "
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid ICS Isolation COPLT Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Isolate_Copilot_Push) \n(A:INTERCOM MODE, Enum) 2 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (>K:TOGGLE_ICS) } \nels{ (A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ \n(>K:TOGGLE_ICS) 2 (>K:INTERCOM_MODE_SET) } \nels{ 2 0 1 3 (A:INTERCOM MODE, Enum) case (>K:INTERCOM_MODE_SET) } } "
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid Display Backup Push": {
		"method": "calcCode",
		"code": "(L:AS1000_MID_Display_Backup_Active) ! (>L:AS1000_MID_Display_Backup_Active)"
	},
	"Microsoft.Generic.Avionics.Input (Potentiometer).AUDIO PANEL VOLUME SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:AUDIO_PANEL_VOLUME_SET)"
	},
	"Microsoft.Generic.Avionics.Input.AUDIO PANEL VOLUME DEC": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL VOLUME,Percent) -- 0 max (>K:AUDIO_PANEL_VOLUME_SET) "
	},
	"Microsoft.Generic.Avionics.Input.AUDIO PANEL VOLUME INC": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL VOLUME,Percent) ++ 100 min (>K:AUDIO_PANEL_VOLUME_SET) "
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid PASS COPLT Knob DEC ": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Pass_Copilot_DEC)"
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid PASS COPLT Knob INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_MID_Pass_Copilot_INC)"
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid PASS PILOT Inner Knob DEC": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL VOLUME, percent) -- 0 max (>K:AUDIO_PANEL_VOLUME_SET) "
	},
	"Working Title.G1000 NXi.Avionics.Input.Mid PASS PILOT Inner Knob INC": {
		"method": "calcCode",
		"code": "(A:AUDIO PANEL VOLUME, percent) ++ 100 min (>K:AUDIO_PANEL_VOLUME_SET) "
	},
	"MGharib.HA420.Engines.Input (Potentiometer).HA420 Throttle 1 Set": {
		"method": "calcCode",
		"code": "@ 20.46 / 50 + 50 max 100 min d (>L:HA420_ThrottlePos_L,number) \n50 - 2 * 100 / (>L:THROTTLE1_SET) "
	},
	"MGharib.HA420.Engines.Input (Potentiometer).HA420 Throttle 2 Set": {
		"method": "calcCode",
		"code": "@ 20.46 / 50 + 50 max 100 min d (>L:HA420_ThrottlePos_R,number) \n50 - 2 * 100 / (>L:THROTTLE2_SET)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 1": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_1)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 2": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_2)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 3": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_3)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 4": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_4)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 5": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_5)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 6": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_6)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 7": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_7)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 8": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_8)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 9": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_9)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 10": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_10)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 11": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_11)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 MFD1 Softkey 12": {
		"method": "calcCode",
		"code": "(>H:AS3000_MFD_SOFTKEYS_12)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 1": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_1)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 2": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_2)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 3": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_3)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 4": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_4)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 5": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_5)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 6": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_6)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 7": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_7)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 8": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_8)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 9": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_9)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 10": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_10)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 11": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_11)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 G3000 PFD1 Softkey 12": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_SOFTKEYS_12)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 1": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_1)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 2": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_2)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 3": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_3)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 4": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_4)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 5": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_5)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 6": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_6)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 7": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_7)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 8": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_8)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 9": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_9)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 10": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_10)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 11": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_11)"
	},
	"MGharib.HA420.Avionics.HA420 G3000 PFD2 Softkey 12": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_2_SOFTKEYS_12)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Right Inner Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_BottomKnob_Small_INC)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Right Inner Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_BottomKnob_Small_DEC)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Right Inner Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_BottomKnob_Push)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Left Large Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_TopKnob_Large_INC)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Left Large Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_TopKnob_Large_DEC)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Left Large Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_TopKnob_Large_Push)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Mid Small Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_TopKnob_Small_INC)"
	},
	"MGharib.HA420.Avionics.HA420 TSC L Mid Small Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_TopKnob_Small_DEC)"
	},
	"MGharib.HondaJet HA420.Avionics.Input.HA420 TSC L Mid Small Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_Softkey_2)"
	},
	"MGharib.HA420.Avionics.HA420 TSC R Right Inner Knob Inc": {
		"method": "calcCode",
		"code": "(>H:gauges_ha420_sys_Checklist_scoll_down)"
	},
	"MGharib.HA420.Avionics.HA420 TSC R Right Inner Knob Dec": {
		"method": "calcCode",
		"code": "(>H:gauges_ha420_sys_Checklist_scoll_up)"
	},
	"MGharib.HA420.Avionics.HA420 TSC R Right Inner Knob Push": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) 2 + (>L:mf_PressTime) "
	},
	"MGharib.HA420.Avionics.HA420 TSC R Right Inner Knob Release": {
		"method": "calcCode",
		"code": "(L:mf_PressTime) 0 > if{ \r\n(E:SIMULATION TIME,second) (L:mf_PressTime) < if{ \r\n(>H:gauges_ha420_sys_Checklist_enter) } \r\nels{ (>H:gauges_ha420_sys_Checklist_Longenter) } }\r\n0 (>L:mf_PressTime)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP CRS1 Knob Inc": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) ++ dnor (>K:VOR1_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP CRS1 Knob Dec": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, degree) -- dnor (>K:VOR1_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP CRS1 Knob Push": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP HDG SEL Knob Inc": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"MGharib.HA420.Autopilot.HA420 AP HDG SEL Knob Dec": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"MGharib.HA420.Autopilot.HA420 AP HDG SEL Knob Push": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP SPD SEL Knob Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet) if{ \n   (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n	  (>K:AP_MACH_VAR_INC) }  \n	  els{ (>K:AP_SPD_VAR_INC) } }"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP SPD SEL Knob Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet) if{ \n   (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n	  (>K:AP_MACH_VAR_DEC) }  \n	  els{ (>K:AP_SPD_VAR_DEC) } }"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP SPD SEL Knob Push": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) \n(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) (>L:XMLVAR_AirSpeedIsInMach)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP  VS Wheel Up": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ \r\n(L:XMLVAR_AirSpeedIsInMach) if{ \r\n(A:AUTOPILOT MACH HOLD VAR, number) 1 - 0 max (>K:AP_MACH_VAR_SET) \r\n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET) \r\n} } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ \r\n1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH) \r\n} els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ \r\n(A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 - 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) \r\n} } } "
	},
	"MGharib.HA420.Autopilot.HA420 AP VS Wheel Down": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ \r\n(L:XMLVAR_AirSpeedIsInMach) if{ \r\n(A:AUTOPILOT MACH HOLD VAR, number) 1 + 0 max (>K:AP_MACH_VAR_SET) \r\n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET) \r\n} } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ \r\n1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) \r\n} els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ \r\n(A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) \r\n} } } "
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP CRS2 Knob Inc": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, degree) ++ dnor (>K:VOR2_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP CRS2 Knob Dec": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, degree) -- dnor (>K:VOR2_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP CRS2 Knob Push": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:VOR2_SET)"
	},
	"MGharib.HA420.Autopilot.HA420 AP FD1 button push": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP NAV Button Push": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP HDG Button Push": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_HOLD)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP Master Button Push": {
		"method": "calcCode",
		"code": "(>K:AP_MASTER) \r\n(A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) }"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP YD Button Push": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP VNV Button Push": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP VS Button Push": {
		"method": "calcCode",
		"code": "(>K:AP_VS_HOLD)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP FLC Button Push": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP APR Button Push": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP BANK Button Push": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID, number) 0 == if{ 1 (>K:AP_MAX_BANK_SET) } els{ 0 (>K:AP_MAX_BANK_SET) }"
	},
	"MGharib.HA420.Autopilot.Input.HA420 AP CPL Button Push": {
		"method": "calcCode",
		"code": "(L:CPL Pushed,bool) ! (>L:CPL Pushed,bool)"
	},
	"MGharib.HA420.Autopilot.HA420 AP AFC Servo Pitch push": {
		"method": "calcCode",
		"code": "(L:AFCPITCH Pushed,bool) ! (>L:AFCPITCH Pushed,bool)"
	},
	"MGharib.HA420.Autopilot.HA420 AP AFC Servo Roll push": {
		"method": "calcCode",
		"code": "(L:AFCROLL Pushed,bool) ! (>L:AFCROLL Pushed,bool)"
	},
	"MGharib.HA420.Autopilot.HA420 AP AFC Servo Yaw push": {
		"method": "calcCode",
		"code": "(L:AFCYAW Pushed,bool) ! (>L:AFCYAW Pushed,bool)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_APR_TOGGLE=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_APR_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_FD_TOGGLE=": {
		"method": "calcCode",
		"code": "1 if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_HDG_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_NAV_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV1 LOCK, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_BC_TOGGLE=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BACKCOURSE HOLD, Bool) ! (>K:AP_BC_HOLD)"
	},
	"Asobo.Generic.Radio.Input.AS530_ComVolume_Squelch": {
		"method": "calcCode",
		"code": "(>K:RADIO_COMMNAV1_TEST_TOGGLE)"
	},
	"Asobo.Generic.Radio.Input.AS530_PushID": {
		"method": "calcCode",
		"code": "(>K:RADIO_VOR1_IDENT_TOGGLE)"
	},
	"Asobo.Generic.Radio.Input.AS530_ComVolKnob_Left": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_DEC)"
	},
	"Asobo.Generic.Radio.Input.AS530_ComVolKnob_Right": {
		"method": "calcCode",
		"code": "(>K:COM1_VOLUME_INC)"
	},
	"Asobo.Generic.Radio.Input.NAV1_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV1_VOLUME_DEC)"
	},
	"Asobo.Generic.Radio.Input.NAV1_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:NAV1_VOLUME_INC)"
	},
	"Asobo.Generic.Radio.Input.COM2_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:COM2_VOLUME_DEC)"
	},
	"Asobo.Generic.Radio.Input.COM2_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:COM2_VOLUME_INC)"
	},
	"Asobo.Generic.Radio.Input.NAV2_VOLUME_DEC": {
		"method": "calcCode",
		"code": "(>K:NAV2_VOLUME_DEC)"
	},
	"Asobo.Generic.Radio.Input.NAV2_VOLUME_INC": {
		"method": "calcCode",
		"code": "(>K:NAV2_VOLUME_INC)"
	},
	"Working Title.G1000 NXi.Autopilot.Input.PFD AP Push": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ \n   (>K:AP_MASTER) \n   (A:AUTOPILOT MASTER, Bool) ! if{ \n	  (>H:Generic_Autopilot_Manual_Off) } \n	  els{ \n	  (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ \n	  1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } \n(A:AUTOPILOT MASTER, Bool) ! if{ \n\t (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ \n	  1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } "
	},
	"Working Title.G1000 NXi.Autopilot.Input.PFD FD Push": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) ! if{ \n0 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Working Title.G1000 NXi.Autopilot.Input.PFD HDG Push": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Working Title.G1000 NXi.Autopilot.Input.PFD ALT Push": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_NAV_TOGGLE=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV1 LOCK, Bool) ! (>K:AP_NAV1_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_BC_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT BACKCOURSE HOLD, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_BANK_TOGGLE=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID, Number) if{ 0 (>K:AP_MAX_BANK_SET) } els{ 1 (>K:AP_MAX_BANK_SET) }"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_XFR_TOGGLE=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_AP_TOGGLE=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } els{ (A:AUTOPILOT YAW DAMPER, Bool) ! if{ (>K:YAW_DAMPER_TOGGLE) } } } "
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_YD_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_ALT_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_VS_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_VNV_TOGGLE=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_FLC_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_SPD_TOGGLE=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) ! (>L:XMLVAR_AirSpeedIsInMach)"
	},
	"Asobo.TBM 930.Autopilot.Input.=TBM930_Improvements_Mod_AUTOPILOT_LVL_TOGGLE=": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER) (A:AUTOPILOT WING LEVELER, Bool) if{ (A:AUTOPILOT MASTER, Bool) (>O:APStateWhenLevelerEnabled) (A:AUTOPILOT MASTER, Bool) ! if{ (>K:AUTOPILOT_ON) } (>K:AP_PITCH_LEVELER_ON) } els{ (>K:AP_PITCH_LEVELER_OFF) (>O:APStateWhenLevelerEnabled) if{ (>K:AUTOPILOT_ON) } els{ (>K:AUTOPILOT_OFF) } }"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_FD_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_BANK_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID, number)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_XFR_Left_LED=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_PushXFR)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_XFR_Right_LED=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_PushXFR)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_AP_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_YD_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT YAW DAMPER, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_ALT_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_VS_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_VNV_LED=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_FLC_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_SPD_LED=": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Number)"
	},
	"Asobo.TBM 930.Autopilot.Output.=TBM930_Improvements_Mod_AUTOPILOT_LVL_LED=": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT WING LEVELER, Bool)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX Ovhd Aircond Pack 1 Fault LED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_1_PB_HAS_FAULT)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX Ovhd Aircond Pack 2 Fault LED": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_2_PB_HAS_FAULT)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Alt Hold Active": {
		"method": "calcCode",
		"code": "(L:AP_ALT_HOLD_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Heading Hold Active": {
		"method": "calcCode",
		"code": "(L:AP_HEADING_HOLD_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot APP Armed": {
		"method": "calcCode",
		"code": "(L:AP_APP_ARMED)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot FLCH Active": {
		"method": "calcCode",
		"code": "(L:AP_FLCH_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot VNAV Armed": {
		"method": "calcCode",
		"code": "(L:AP_VNAV_ARMED)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot SPD Active": {
		"method": "calcCode",
		"code": "(L:AP_SPD_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot VS Active": {
		"method": "calcCode",
		"code": "(L:AP_VS_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot SPD INTV Active": {
		"method": "calcCode",
		"code": "(L:AP_SPEED_INTERVENTION_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot VNAV Active": {
		"method": "calcCode",
		"code": "(L:AP_VNAV_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot LNAV Armed": {
		"method": "calcCode",
		"code": "(L:AP_LNAV_ARMED)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot LOC Armed": {
		"method": "calcCode",
		"code": "(L:AP_LOC_ARMED)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot LNAV Active": {
		"method": "calcCode",
		"code": "(L:AP_LNAV_ACTIVE)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Engage L ": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_1_Status)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Engage C": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_2_Status)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Engage R": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_3_Status)"
	},
	"Salty.747-8i.Autopilot.Input.Autopilot Speed Knob Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n\t1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } \nels{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } "
	},
	"Salty.747-8i.Autopilot.Input.Autopilot Speed Knob Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n\t1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } \nels{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } "
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX RCDR CVR TEST PRESS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_RCDR_TEST)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX RCDR CVR TEST RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_RCDR_TEST)"
	},
	"Asobo.Cessna 172.Autopilot.Input.C_172_AP_HDG_INC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_INC)"
	},
	"Asobo.Cessna 172.Autopilot.Input.C_172_AP_HDG_DEC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_DEC)"
	},
	"Asobo.Cessna 172.Autopilot.Input.C_172_AP_ALT_INC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_INC)"
	},
	"Asobo.Cessna 172.Autopilot.Input.C_172_AP_ALT_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_DEC)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Battery Master On": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Battery Master Off": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cessna 152.Electrical.Output.C152 Safety Indicator Low Voltage": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL BATTERY LOAD:1, amp) 0 >"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX Ovhd Press Mode Select Man Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO) ! (L:A32NX_OVHD_INTLT_ANN) 0 ==\n(L:A32NX_ELEC_DC_2_BUS_IS_POWERED,Bool) and or 1 and \n(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) \n(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and\n(L:A32NX_OVHD_INTLT_ANN,Number) 2 == if{ 0.1 } els{ 1 } *"
	},
	"Microsoft.Generic.Navigation.Input.ADF VOLUME INC": {
		"method": "calcCode",
		"code": "(>K:ADF_VOLUME_INC)"
	},
	"Microsoft.Generic.Navigation.Input.ADF VOLUME DEC": {
		"method": "calcCode",
		"code": "(>K:ADF_VOLUME_DEC)"
	},
	"Microsoft.Generic.Navigation.Input (Potentiometer).ADF VOLUME SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:ADF_VOLUME_SET)"
	},
	"Asobo.Cessna 152.Navigation.Input.C152 ADF Mode Selector BFO": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_ADF_Mode)"
	},
	"Asobo.Cessna 152.Navigation.Input.C152 ADF Mode Selector REC": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_ADF_Mode)"
	},
	"Asobo.Cessna 152.Navigation.Input.C152 ADF Mode Selector ADF": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_ADF_Mode)"
	},
	"Asobo.Cessna 152.Navigation.Input.C152 ADF Mode Selector TEST": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_ADF_Mode)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU L Selector ENG PRI": {
		"method": "calcCode",
		"code": "0 (L:switch_336_73X) - 50 div s0\n:1\nl0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU L Selector NORM": {
		"method": "calcCode",
		"code": "50 (L:switch_336_73X) - 50 div s0\n:1\nl0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU L Selector ND": {
		"method": "calcCode",
		"code": "100 (L:switch_336_73X) - 50 div s0\n:1\nl0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU R Selector ENG PRI": {
		"method": "calcCode",
		"code": "0 (L:switch_441_73X) - 50 div s0\n:1\nl0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU R Selector NORM": {
		"method": "calcCode",
		"code": "50 (L:switch_441_73X) - 50 div s0\n:1\nl0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 Lower DU R Selector ND": {
		"method": "calcCode",
		"code": "100 (L:switch_441_73X) - 50 div s0\n:1\nl0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"Asobo.Generic.Radio.Input (Potentiometer).NAV1_VOLUME_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / (>K:NAV1_VOLUME_SET_EX1)"
	},
	"Asobo.Generic.Radio.Input (Potentiometer).NAV2_VOLUME_SET": {
		"method": "calcCode",
		"code": "@ 10.23 / (>K:NAV2_VOLUME_SET_EX1)"
	},
	"IniBuilds.A310.Gear.Output.A310 Parking Brake Status": {
		"method": "calcCode",
		"code": "(L:A310_PARKING_BRAKE_STATUS)"
	},
	"IniBuilds.A310.Gear.Input.A310 Landing Gear Lever Down": {
		"method": "calcCode",
		"code": "2 (>L:A310_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A310.Gear.Input.A310 Landing Gear Lever Up": {
		"method": "calcCode",
		"code": "0 (>L:A310_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A310.Gear.Input.A310 Landing Gear Lever Mid": {
		"method": "calcCode",
		"code": "1 (>L:A310_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Speed Knob Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_MANAGED_SPEED_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Speed Knob Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_SELECTED_SPEED_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Speed Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_AIRSPEED_DIAL_UP_COMMAND) "
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Speed Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_AIRSPEED_DIAL_DN_COMMAND) "
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Cabin Lights ON": {
		"method": "calcCode",
		"code": "2 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Cabin Lights OFF": {
		"method": "calcCode",
		"code": "0 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Bool)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Altitude Dial DN": {
		"method": "calcCode",
		"code": "1 (>L:A310_ALTITUDE_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Altitude Dial Up": {
		"method": "calcCode",
		"code": "1 (>L:A310_ALTITUDE_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Altitude Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_ALTITUDE_PULL_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Altitude Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_ALTITUDE_PUSH_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Heading Dial Dn": {
		"method": "calcCode",
		"code": "1 (>L:A310_HEADING_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Heading Dial UP": {
		"method": "calcCode",
		"code": "1 (>L:A310_HEADING_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Heading Select": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_SELECTED_HEADING_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Heading Sync": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_SYNC_HEADING_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP VS Dial DN": {
		"method": "calcCode",
		"code": "1 (>L:A310_VVI_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP VS Dial Up": {
		"method": "calcCode",
		"code": "1 (>L:A310_VVI_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP VS Pull": {
		"method": "calcCode",
		"code": "1 (>L:AP9_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP1 Toggle ": {
		"method": "calcCode",
		"code": "1 (>L:A310_AP1_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP2 Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_AP2_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP ALT HLD Button": {
		"method": "calcCode",
		"code": "1 (>L:AP1_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP LVL CHG": {
		"method": "calcCode",
		"code": "1 (>L:AP2_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP LOC V/L BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:AP6_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP LAND Button": {
		"method": "calcCode",
		"code": "1 (>L:AP7_BUTTON)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 AP ATHR Button": {
		"method": "calcCode",
		"code": "1 (>L:AP8_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Heading Managed": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_MANAGED_HEADING_BUTTON)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_L_BTN_BRT": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_BRIGHTNESS) 7.7 min 0.300 + (>L:A32NX_MCDU_L_BRIGHTNESS)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_L_BTN_DIM": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_L_BRIGHTNESS) 0.8 max 0.300 - (>L:A32NX_MCDU_L_BRIGHTNESS)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_R_BTN_BRT": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_BRIGHTNESS) 7.7 min 0.300 + (>L:A32NX_MCDU_R_BRIGHTNESS)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_R_BTN_DIM": {
		"method": "calcCode",
		"code": "(L:A32NX_MCDU_R_BRIGHTNESS) 0.8 max 0.300 - (>L:A32NX_MCDU_R_BRIGHTNESS)"
	},
	"FenixSim.A320.Autopilot.Output.FNX320 FCU HDG TRK MODE SELECT": {
		"method": "calcCode",
		"code": "(L:I_FCU_TRACK_FPA_MODE)"
	},
	"FenixSim.A320.Autopilot.Output.FNX320 FCU SPD MACH MODE SELECT": {
		"method": "calcCode",
		"code": "(L:I_FCU_MACH_MODE)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP Airspeed Display": {
		"method": "calcCode",
		"code": "(L:A310_Airspeed_Dial)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP HDG Display": {
		"method": "calcCode",
		"code": "(L:A310_HEADING_DIAL)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP Altitude Display ": {
		"method": "calcCode",
		"code": "(L:A310_Altitude_Dial)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP V/S Display": {
		"method": "calcCode",
		"code": "(L:A310_vvi_dial)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP Altitude Hold Light": {
		"method": "calcCode",
		"code": "(L:A310_MCU_ALTTUDE_HOLD_LIGHT, bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP LVL/CH Button LIght": {
		"method": "calcCode",
		"code": "(L:A310_MCU_LEVEL_CHANGE_LIGHT, bool)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP PROFILE Button": {
		"method": "calcCode",
		"code": "1 (>L:AP3_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP HDG SEL Button Light": {
		"method": "calcCode",
		"code": "(L:A310_MCU_HDG_SEL_LIGHT, bool)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP NAV Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_FCU_MANAGED_HEADING_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP NAV Button Light": {
		"method": "calcCode",
		"code": "(L:A310_MCU_NAV_LIGHT, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP V/L Button Light": {
		"method": "calcCode",
		"code": "(L:A310_MCU_LOC_LIGHT, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP LAND Button LIght": {
		"method": "calcCode",
		"code": "(>L:A310_MCU_LAND_LIGHT, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP AP1 Button On": {
		"method": "calcCode",
		"code": "(L:A310_ap1_on, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP AP2 Button On": {
		"method": "calcCode",
		"code": "(L:A310_ap2_on, Bool)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP CWS CMD Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_CWS_COMMAND)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP CWS Button Light": {
		"method": "calcCode",
		"code": "(L:A300DR_cws_light, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP CMD Button Light": {
		"method": "calcCode",
		"code": "(L:A300DR_cmd_light, Bool)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Mode Cpt TEST": {
		"method": "calcCode",
		"code": "0 (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Mode Cpt ROSE": {
		"method": "calcCode",
		"code": "1 (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Mode Cpt ARC": {
		"method": "calcCode",
		"code": "2 (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Mode Cpt MAP": {
		"method": "calcCode",
		"code": "3 (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Mode Cpt PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Range Capt 15": {
		"method": "calcCode",
		"code": "0 (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Range Capt 30": {
		"method": "calcCode",
		"code": "1 (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Range Capt 60": {
		"method": "calcCode",
		"code": "2 (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Range Capt 120": {
		"method": "calcCode",
		"code": "3 (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Range Capt 240": {
		"method": "calcCode",
		"code": "4 (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt CSTR Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_CPT_CSTR_BUTTON)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt WPT Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_CPT_FIXES_BUTTON)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt VOR Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_CPT_VOR_BUTTON)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt NDB Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_CPT_NDB_BUTTON)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt ARPT Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_CPT_ARPT_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt CSTR Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_CSTR_CPTIsPressed, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt WPT Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_WPT_CPTIsPressed, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt VOR Button Light": {
		"method": "calcCode",
		"code": "(>L:__EFIS_VOR_CPTIsPressed, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt NDB Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_NDB_CPTIsPressed, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt ARPT Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_ARPT_CPTIsPressed, Bool)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt DH Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_DH_COMMAND)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt FPA Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_FPA_COMMAND)"
	},
	"IniBuilds.A310.EFIS.Output.A310 EFIS Cpt DH Button Light": {
		"method": "calcCode",
		"code": "(L:A310_DH_SELECTED, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt FPA Button Light": {
		"method": "calcCode",
		"code": "(L:A310_FPA_SELECTED, Bool)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 EFIS Cpt FPA display": {
		"method": "calcCode",
		"code": "(L:A310_FPA_SET)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt DH Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_FPA_DH_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Cpt DH Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_FPA_DH_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt PFD Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_60) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_60) \nl0 60 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt PFD Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_60) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_60) \nl0 60 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ND Brightness Outer Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_61) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_61) \nl0 61 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ND Brightness Outer Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_61) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_61) \nl0 61 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ND Brightness Inner Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_12) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_12) \nl0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ND Brightness Inner Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_12) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_12) \nl0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FD/FPV  Switch Capt OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FD/FPV  Switch Capt ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FD/FPV  Switch Capt UP": {
		"method": "calcCode",
		"code": "2 (>L:A310_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Selected Nav Capt Switch VOR": {
		"method": "calcCode",
		"code": "0 (>L:A310_efis_selected_nav_capt)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Selected Nav Capt Switch NAV": {
		"method": "calcCode",
		"code": "1 (>L:A310_efis_selected_nav_capt)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS Selected Nav Capt Switch ILS": {
		"method": "calcCode",
		"code": "2 (>L:A310_efis_selected_nav_capt)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 Autoland Light Test Switch": {
		"method": "calcCode",
		"code": "(L:A310_AUTOLAND_LIGHT_TEST) ! (>L:A310_AUTOLAND_LIGHT_TEST)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 Takeoff Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_takeoff_toggle)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 Stop Rudder Input Test Button": {
		"method": "calcCode",
		"code": "(L:A310_STOP_RUDDER_INPUT_TEST_BUTTON) ! (>L:A310_STOP_RUDDER_INPUT_TEST_BUTTON)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Strobe On": {
		"method": "calcCode",
		"code": "0 (>L:A310_POTENTIOMETER_24)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Strobe Auto": {
		"method": "calcCode",
		"code": "1 (>L:A310_POTENTIOMETER_24)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Strobe Off": {
		"method": "calcCode",
		"code": "2 (>L:A310_POTENTIOMETER_24)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Beacon On": {
		"method": "calcCode",
		"code": "1 (>L:A310_BEACON_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Beacon Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_BEACON_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Rwy Turnoff L On": {
		"method": "calcCode",
		"code": "1 (>L:A310_RWY_TURNOFF_L_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Rwy Turnoff L Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_RWY_TURNOFF_L_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Rwy Turnoff R On": {
		"method": "calcCode",
		"code": "1 (>L:A310_RWY_TURNOFF_R_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Rwy Turnoff R Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_RWY_TURNOFF_R_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nav Logo 2": {
		"method": "calcCode",
		"code": "0 (>L:A310_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nav Logo 1": {
		"method": "calcCode",
		"code": "1 (>L:A310_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nav Logo Off": {
		"method": "calcCode",
		"code": "2 (>L:A310_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nose Light TO": {
		"method": "calcCode",
		"code": "0 (>L:A310_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nose Light TAXI": {
		"method": "calcCode",
		"code": "1 (>L:A310_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Nose Light OFF": {
		"method": "calcCode",
		"code": "2 (>L:A310_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light L ON": {
		"method": "calcCode",
		"code": "0 (>L:A310_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light L OFF": {
		"method": "calcCode",
		"code": "1 (>L:A310_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light L RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:A310_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light R ON": {
		"method": "calcCode",
		"code": "0 (>L:A310_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light R OFF": {
		"method": "calcCode",
		"code": "2 (>L:A310_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Landing  Light R RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:A310_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Wing Light On": {
		"method": "calcCode",
		"code": " 1 (>L:A310_WING_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Extlt Wing Light Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_WING_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Start 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_STARTER) ! (>L:A310_ENG1_STARTER)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Start 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_STARTER) ! (>L:A310_ENG2_STARTER)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Ignition Knob B": {
		"method": "calcCode",
		"code": "0 (>L:A310_eng_ignition_switch)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Ignition Knob A": {
		"method": "calcCode",
		"code": "1 (>L:A310_eng_ignition_switch)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Ignition Knob Crank": {
		"method": "calcCode",
		"code": "2 (>L:A310_eng_ignition_switch)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Ignition Knob Off": {
		"method": "calcCode",
		"code": "3 (>L:A310_eng_ignition_switch)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd Engine Ignition Knob Cont Relight": {
		"method": "calcCode",
		"code": "4 (>L:A310_eng_ignition_switch)"
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd APU Master Switch Toggle": {
		"method": "calcCode",
		"code": "(L:A310_apu_master_switch) ! (>L:A310_apu_master_switch) "
	},
	"IniBuilds.A310.Engines.Input.A310 Ovhd APU Start Button": {
		"method": "calcCode",
		"code": "(L:A310_apu_master_switch, Bool) if{ 1 (>L:A310_APU_START_BUTTON) }"
	},
	"IniBuilds.A310.Engines.Input.A310 APU Fuel Pump Override Button": {
		"method": "calcCode",
		"code": "(L:A300_APU_FUEL_OVRD) ! (>L:A300_APU_FUEL_OVRD)"
	},
	"IniBuilds.A310.Autothrust System.Output.A310 A/THR Button Light": {
		"method": "calcCode",
		"code": "(L:A310_at_on,BOOL)"
	},
	"JPLogistics.Cessna 152.Lights.Input (Potentiometer).Panel Light Axis": {
		"method": "calcCode",
		"code": "@ 655.35 / 5 max 100 min s0 \nl0 (>L:LIGHTING_POTENTIOMETER_5, Number) \nlo 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"JPLogistics.Cessna 152.Lights.Input (Potentiometer).Radio Light Axis": {
		"method": "calcCode",
		"code": "@ 655.35 / 5 max 100 min s0 \nl0 (>L:LIGHTING_POTENTIOMETER_6, Number) \nlo 6 (>K:2:LIGHT_POTENTIOMETER_SET) "
	},
	"JPLogistics.Cessna 152.Lights.Input (Potentiometer).Night Nav Light Axis": {
		"method": "calcCode",
		"code": "@ 655.35 / s0 0 max 100 min \nl0 (>L:LIGHTING_GLARESHIELD_1, Number) \nl0 1 r (>K:2:GLARESHIELD_LIGHTS_SET) \nl0 1 r (>K:LIGHT_POTENTIOMETER_4_SET) "
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Cabin Pilot": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min s0 \nl0 (>L:LIGHTING_CABIN_1, Number) \nl0 1 r (>K:2:CABIN_LIGHTS_SET) \nl0 1 r (>K:LIGHT_POTENTIOMETER_10_SET)\n"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Cabin Copilot": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min s0 \nl0 (>L:LIGHTING_CABIN_2, Number) \nl0 2 r (>K:2:CABIN_LIGHTS_SET) \nl0 2 r (>K:LIGHT_POTENTIOMETER_11_SET)\n"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Cabin Passengers": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min s0 \nl0 (>L:LIGHTING_CABIN_1, Number) \nl0 3 r (>K:2:CABIN_LIGHTS_SET) \nl0 3 r (>K:LIGHT_POTENTIOMETER_12_SET)\n"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Glareshield": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Panel": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min (>K:LIGHT_POTENTIOMETER_3_SET)"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Pedestal": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min (>K:LIGHT_POTENTIOMETER_6_SET)\n"
	},
	"WB Sim.Cessna 172 Classic.Lights.Input (Potentiometer).C172-analog-Light Radio": {
		"method": "calcCode",
		"code": "@ 655.35 / 0 max 100 min (>K:LIGHT_POTENTIOMETER_7_SET)\n"
	},
	"IniBuilds.A310.Engines.Input.A310 Throttle Reverse Thrust Toggle": {
		"method": "calcCode",
		"code": "0 (>K:THROTTLE_REVERSE_THRUST_TOGGLE)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Anti Ice Eng 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_ANTI_ICE, Bool) ! (>L:A310_ENG1_ANTI_ICE, Bool) "
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Anti Ice Eng 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_ANTI_ICE, Bool) ! (>L:A310_ENG2_ANTI_ICE, Bool) "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Anti Ice Eng 1 Light On": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_ANTI_ICE, Bool) "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Anti Ice Wing Supply Light On": {
		"method": "calcCode",
		"code": "(L:A310_WING_ANTI_ICE, Bool) "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Anti Ice Wing Mode ALTN On": {
		"method": "calcCode",
		"code": "(L:A310_ANTI_ICE_WING_MODE, Bool) "
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Anti Ice Wing Supply Toggle": {
		"method": "calcCode",
		"code": "(L:A310_WING_ANTI_ICE, Bool) ! (>L:A310_WING_ANTI_ICE, Bool)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Anti Ice Wing ALTN Mode Toggle": {
		"method": "calcCode",
		"code": "(L:A300_ANTI_ICE_WING_MODE, Bool) ! (>L:A300_ANTI_ICE_WING_MODE, Bool)"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Anti Ice Eng 2 Light On": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_ANTI_ICE, Bool) "
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd Capt Wiper Knob Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd Capt Wiper Knob Slow": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd Capt Wiper Knob Fast": {
		"method": "calcCode",
		"code": "2 (>L:A310_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd FO Wiper Knob Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_FO_WIPER_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd FO Wiper Knob Slow": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_WIPER_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd FO Wiper Knob Fast": {
		"method": "calcCode",
		"code": "2 (>L:A310_FO_WIPER_KNOB)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Man V/S Control Up": {
		"method": "calcCode",
		"code": "0 (>L:A310_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Man V/S Control Mid": {
		"method": "calcCode",
		"code": "1 (>L:A310_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Man V/S Control Dn": {
		"method": "calcCode",
		"code": "2 (>L:A310_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Man Press Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CABIN_MAN_PRESS_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Man Press Arrow On": {
		"method": "calcCode",
		"code": "(L:A300DR_CABIN_MAN_PRESS_ARROW)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Man Press On": {
		"method": "calcCode",
		"code": "(L:A300DR_CABIN_MAN_PRESS)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Auto Press Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_CABIN_AUTO_PRESS_ACTUAL) 0.5 + 0 max 10 min (>L:A310_CABIN_AUTO_PRESS_ACTUAL)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Auto Press Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_CABIN_AUTO_PRESS_ACTUAL) 0.5 - 0 max 10 min (>L:A310_CABIN_AUTO_PRESS_ACTUAL)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Press Rate Light": {
		"method": "calcCode",
		"code": "(L:A300DR_CABIN_RATE_LIGHT)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Sys1 Regulator Button": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CABIN_SYS1_REGULATOR_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Sys2 Regulator Button": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CABIN_SYS2_REGULATOR_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Sys1 Regulator is Off": {
		"method": "calcCode",
		"code": "(L:A310_cabin_sys1_regulator, Bool) !"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Sys2 Regulator is Off": {
		"method": "calcCode",
		"code": "(L:A310_cabin_sys2_regulator, Bool) !"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Sys1 Button": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CABIN_SYS1_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Sys2 Button": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CABIN_SYS2_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Sys1 Light On": {
		"method": "calcCode",
		"code": "(L:A310_cabin_sys1, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Sys2 Light On": {
		"method": "calcCode",
		"code": "(L:A310_cabin_sys2, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Fuel Qty Left Outer Tank": {
		"method": "calcCode",
		"code": "(L:A310_FUEL_WEIGHT_LEFT_OUTER, number) 0.00220462 * "
	},
	"IniBuilds.A310.Fuel.Output.A310 Fuel Qty Right Outer Tank": {
		"method": "calcCode",
		"code": "(L:A310_FUEL_WEIGHT_RIGHT_OUTER, number) 0.00220462 * "
	},
	"IniBuilds.A310.Fuel.Output.A310 Fuel Qty Left Inner Tank": {
		"method": "calcCode",
		"code": "(L:A310_FUEL_WEIGHT_LEFT_INNER) 0.00220462 *"
	},
	"IniBuilds.A310.Fuel.Output.A310 Fuel Qty Right Inner Tank": {
		"method": "calcCode",
		"code": "(L:A310_FUEL_WEIGHT_RIGHT_INNER) 0.00220462 *"
	},
	"IniBuilds.A310.Fuel.Output.A310 Fuel Qty Center Tank": {
		"method": "calcCode",
		"code": "(L:A310_FUEL_WEIGHT_CENTER) 0.00220462 *"
	},
	"IniBuilds.A310.Autopilot.Input.A310 SPD/MACH Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_SPD_MACH_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed XFeed Mode Toggle": {
		"method": "calcCode",
		"code": "(L:A300_XBLEED_MODE) ! (>L:A300_XBLEED_MODE)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed XFeed Valve Button": {
		"method": "calcCode",
		"code": "(L:A300_XBLEED_MODE, Bool) if{\n(L:A300_XBLEED) ! (>L:A300_XBLEED) }\n(L:A300_XBLEED) (>L:A300_XBLEED_BUTTON) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed Eng1 Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_BLEED) ! (>L:A310_ENG1_BLEED)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed Eng2 Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_BLEED) ! (>L:A310_ENG2_BLEED)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed Eng1 Valve On": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_BLEED)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed Eng2 Valve On": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_BLEED)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed XFeed Mode ": {
		"method": "calcCode",
		"code": "(L:A300_XBLEED_MODE)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed XFeed Valve Indicator": {
		"method": "calcCode",
		"code": "(L:A300_XBLEED)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key A": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_A)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key B": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_B)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key C": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_C)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key D": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_D)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key E": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_E)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key F": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_F)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key G": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_G)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key H": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_H)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key I": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_I)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key J": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_J)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key K": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_K)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key M": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_M)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key N": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_N)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key O": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_O)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key P": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_P)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key Q": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_Q)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key S": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_S)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key T": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_T)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key U": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_U)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key V": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_V)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key W": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_W)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key X": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_X)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key Y": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_Y)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key Z": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_Z)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key MINUS": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_MINUS)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key PLUS": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_PLUS)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key SLASH": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_SLASH)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key CLR": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_CLR)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 1": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_1)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 2": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_2)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 3": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_3)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 4": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_4)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 5": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_5)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 6": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_6)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 7": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_7)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 8": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_8)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 9": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_9)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key 0": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_0)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key DOT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_DOT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK1L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK2L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK3L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK4L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK5L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK6L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK1R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK2R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK3R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK4R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK5R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_LSK6R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key DIR TO": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_DIR_TO)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key MODE": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_MODE)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key TACT MODE": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_TACT_MODE)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key INIT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_INIT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key REF": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_REF)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_FPLAN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key TO APPR": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_TO_APPR)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key SEC PLAN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_SEC_PLAN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key MENU": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_MENU)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key ENGOUT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_ENGOUT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key PROG": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_PROG)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key UARROW": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_UARROW)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key DOWN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_DOWN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Key NEXT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU1_NEXT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Brightness Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_66) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_66) \nl0 66 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU1 Brightness Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_66) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_66) \nl0 66 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key A": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_A)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key B": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_B)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key C": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_C)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key D": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_D)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key E": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_E)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key F": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_F)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key G": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_G)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key H": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_H)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key I": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_I)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key J": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_J)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key K": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_K)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key M": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_M)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key N": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_N)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key O": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_O)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key P": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_P)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key Q": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_Q)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key S": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_S)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key T": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_T)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key U": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_U)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key V": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_V)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key W": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_W)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key X": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_X)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key Y": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_Y)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key Z": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_Z)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key MINUS": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_MINUS)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key PLUS": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_PLUS)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key SLASH": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_SLASH)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key CLR": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_CLR)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 1": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_1)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 2": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_2)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 3": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_3)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 4": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_4)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 5": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_5)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 6": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_6)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 7": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_7)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 8": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_8)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 9": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_9)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key 0": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_0)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key DOT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_DOT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK1L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK2L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK3L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK4L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK5L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK6L)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK1R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK2R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK3R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK4R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK5R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_LSK6R)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key DIR TO": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_DIR_TO)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key MODE": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_MODE)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key TACT MODE": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_TACT_MODE)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key INIT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_INIT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key REF": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_REF)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_FPLAN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key TO APPR": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_TO_APPR)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key SEC PLAN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_SEC_PLAN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key MENU": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_MENU)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key ENGOUT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_ENGOUT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key PROG": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_PROG)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key UARROW": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_UARROW)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key DOWN": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_DOWN)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Key NEXT": {
		"method": "calcCode",
		"code": "1 (>L:A310_MCDU2_NEXT)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Brightness Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_67) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_67) \nl0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.MCDU.A310 MCDU2 Brightness Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_67) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_67) \nl0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed Eng1 HP Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_bleed_eng1_hp_valve) ! (>L:A310_bleed_eng1_hp_valve)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed Eng2 HP Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_bleed_eng2_hp_valve) ! (>L:A310_bleed_eng2_hp_valve)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed APU Bleed Toggle": {
		"method": "calcCode",
		"code": "(L:A310_apu_bleed) ! (>L:A310_apu_bleed)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed APU Bleed On": {
		"method": "calcCode",
		"code": "1 (>L:A310_apu_bleed)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Air Bleed APU Bleed Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_apu_bleed)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed Eng1 HP Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_bleed_eng1_hp_valve) !"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Air Bleed Eng2 HP Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_bleed_eng2_hp_valve) ! "
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Stby Compass On": {
		"method": "calcCode",
		"code": "1 (>L:A310_STBY_COMPASS_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Stby Compass Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_STBY_COMPASS_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Ann Lt Switch TEST": {
		"method": "calcCode",
		"code": "0 (>L:A310_ANNLT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Ann Lt Switch BRT": {
		"method": "calcCode",
		"code": "1 (>L:A310_ANNLT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Ann Lt Switch DIM": {
		"method": "calcCode",
		"code": "2 (>L:A310_ANNLT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Emer Exit Switch ON": {
		"method": "calcCode",
		"code": "0 (>L:A310_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Emer Exit Switch ARM": {
		"method": "calcCode",
		"code": "1 (>L:A310_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Emer Exit Switch DISARM": {
		"method": "calcCode",
		"code": "2 (>L:A310_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd No Smoking Switch ON": {
		"method": "calcCode",
		"code": "0 (>L:A310_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd No Smoking Switch AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A310_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd No Smoking Switch OFF": {
		"method": "calcCode",
		"code": "2 (>L:A310_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Seatbelts Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_SEATBELTS_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Seatbelts Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_SEATBELTS_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Dome Light Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_DOME_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Dome Light Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_DOME_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Dome Light Brt Switch BRT": {
		"method": "calcCode",
		"code": "1 (>L:A310_DOME_LIGHT_BRT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Dome Light Brt Switch DIM": {
		"method": "calcCode",
		"code": "0 (>L:A310_DOME_LIGHT_BRT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Storm Light Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_STORM_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Storm Light Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_STORM_LIGHT_SWITCH)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Pitch Trim1 ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_pitch_trim1)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Pitch Trim1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_pitch_trim1)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Pitch Trim2 ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_pitch_trim2)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Pitch Trim2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_pitch_trim2)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Yaw Damper 1 ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_yaw_damper1)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Yaw Damper 1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_yaw_damper1)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Yaw Damper 2 ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_yaw_damper2)"
	},
	"IniBuilds.A310.Controls.Input.A310 Ovhd Yaw Damper 2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_yaw_damper2)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd ATS 1 Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_autothrottle_master_switch1)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd ATS 1 Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_autothrottle_master_switch1)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd ATS 2 Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:A310_autothrottle_master_switch2)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd ATS 2 Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_autothrottle_master_switch2)"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd Engine Trim Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_ENG_TRIM_State) ! if{ 1 (>L:__GUARD_ENG_TRIM_State) }\n(L:A310_ENG_TRIM) ! (>L:A310_ENG_TRIM)"
	},
	"IniBuilds.A310.Autothrust System.Output.A310 Ovhd Engine Trim Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_ENG_TRIM) !"
	},
	"IniBuilds.A310.Autothrust System.Input.A310 Ovhd Eng Trim Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_ENG_TRIM_State) ! (>L:__GUARD_ENG_TRIM_State)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Outflow Forward Button Toggle": {
		"method": "calcCode",
		"code": "(L:A300_CABIN_OUTFLOW_FORWARD_BUTTON) ! (>L:A300_CABIN_OUTFLOW_FORWARD_BUTTON) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Outflow After Button Toggle": {
		"method": "calcCode",
		"code": "(L:A300_CABIN_OUTFLOW_AFTER_BUTTON) ! (>L:A300_CABIN_OUTFLOW_AFTER_BUTTON) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Outflow Fwd Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_PRESS_OUTFLOW_FWD_State) ! (>L:__GUARD_PRESS_OUTFLOW_FWD_State)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Cabin Outflow Aft Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_PRESS_OUTFLOW_AFT_State) ! (>L:__GUARD_PRESS_OUTFLOW_AFT_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Left TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_LEFT) ! (>L:A310_INNER_TANK1_LEFT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Left TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_LEFT) ! (>L:A310_INNER_TANK2_LEFT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Right TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_RIGHT) ! (>L:A310_INNER_TANK1_RIGHT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Right TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_RIGHT) ! (>L:A310_INNER_TANK2_RIGHT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Left TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_LEFT) ! (>L:A310_OUTER_TANK1_LEFT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Left TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_LEFT) ! (>L:A310_OUTER_TANK2_LEFT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Right TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_RIGHT) ! (>L:A310_OUTER_TANK1_RIGHT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Right TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_RIGHT) ! (>L:A310_OUTER_TANK2_RIGHT)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Center TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK1) ! (>L:A310_CENTER_TANK1)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Center TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK2) ! (>L:A310_CENTER_TANK2)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Trim TK Pump 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK1) ! (>L:A310_TRIM_TANK1)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Trim TK Pump 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK2) ! (>L:A310_TRIM_TANK2)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Trim TK Mode Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK_MODE) ! (>L:A310_TRIM_TANK_MODE)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Aux Tank Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ACT_TANK) ! (>L:A310_ACT_TANK)\n(L:__AUX_AUTOIsPressed) ! (>L:__AUX_AUTOIsPressed)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Trim TK Iso Valve Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_TRMTK_ISO_State) ! (>L:__GUARD_TRMTK_ISO_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Trim TK Iso Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK_ISOL_VALVE) ! (>L:A310_TRIM_TANK_ISOL_VALVE)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_trim_tank_pump1_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK1, Bool) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_trim_tank_pump2_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK2, Bool) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Mode FWD Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK_MODE, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd TrimTK Mode Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK_MODE_FAULT, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Trim TK Isol Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRIM_TANK_ISOL_VALVE, Bool) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Center TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK1_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Center TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK1, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Center TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK2_low_pressure, Bool) "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Aux Tank Fwd Indicator": {
		"method": "calcCode",
		"code": "(L:A310_ACT_TANK)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Aux Tank Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_ACT_TANK_FAULT)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Center TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CENTER_TANK2, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Left TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Left TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Right TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Right TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Left TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Left TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Right TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Right TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Left TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_LEFT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Left TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_LEFT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Right TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK1_RIGHT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Right TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INNER_TANK2_RIGHT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Left TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_LEFT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Left TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_LEFT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Right TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK1_RIGHT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Right TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OUTER_TANK2_RIGHT, Bool) ! "
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Left TK Iso Valve Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_1_State) ! (>L:__GUARD_FUEL_ISO_1_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Left TK Iso Valve Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_2_State) ! (>L:__GUARD_FUEL_ISO_2_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Right TK Iso Valve Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_3_State) ! (>L:__GUARD_FUEL_ISO_3_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Right TK Iso Valve Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_4_State) ! (>L:__GUARD_FUEL_ISO_4_State)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Left TK Iso Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_outer_tank_left) ! (>L:A310_isolation_valve_outer_tank_left)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Left TK Iso Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_inner_tank_left) ! (>L:A310_isolation_valve_inner_tank_left)"
	},
	"Salty.747-8i.Autopilot.Output.Autopilot Altitude Lock Var": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:3, feet)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Inner Right TK Iso Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_inner_tank_right) ! (>L:A310_isolation_valve_inner_tank_right)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Outer Right TK Iso Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_outer_tank_right) ! (>L:A310_isolation_valve_outer_tank_right)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ovhd Xfeed Transfer Toggle": {
		"method": "calcCode",
		"code": "(L:A310_xfeed_transfer_on) ! (>L:A310_xfeed_transfer_on)"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Left TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_outer_tank_left) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Left TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_inner_tank_left) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Inner Right TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_inner_tank_right) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Outer Right TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_isolation_valve_outer_tank_right) !"
	},
	"IniBuilds.A310.Fuel.Output.A310 Ovhd Xfeed Transfer Indicator": {
		"method": "calcCode",
		"code": "(L:A310_xfeed_transfer_on, Bool) "
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd PTU Blue Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_PTU_blue_status) ! (>L:A310_hyd_PTU_blue_status)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd PTU Blue On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_PTU_blue_status)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd PTU Yellow Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_PTU_yellow_status) ! (>L:A310_hyd_PTU_yellow_status)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd PTU Yellow On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_PTU_yellow_status)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Elec Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_elec_status) ! (>L:A310_hyd_elec_status)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Elec On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_elec_status)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Eng1 Blue Pump Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng1_switch_pos) ! (>L:A310_hyd_eng1_switch_pos)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Eng1 Green Pump Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng1_A_switch_pos) ! (>L:A310_hyd_eng1_A_switch_pos)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Eng2 Green Pump Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng2_B_switch_pos) ! (>L:A310_hyd_eng2_B_switch_pos)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Eng2 Yellow Pump Toggle": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng2_switch_pos) ! (>L:A310_hyd_eng2_switch_pos)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Blue Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_blue_light, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Blue Off Indicator": {
		"method": "calcCode",
		"code": "(A310_hyd_eng1_switch_pos, Bool) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Green Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng1_A_switch_pos) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Green Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_green1_light, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng2 Green Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng2_B_switch_pos) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng2 Green Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_green2_light, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng2 Yellow Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_eng2_switch_pos) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng2 Yellow Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_yellow_light, Bool)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Gen1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_eng1_gen_on) ! (>L:A310_eng1_gen_on)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Apu Gen Toggle": {
		"method": "calcCode",
		"code": "(L:A310_apu_gen_on) ! (>L:A310_apu_gen_on)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Ext Pwr Toggle": {
		"method": "calcCode",
		"code": "(L:A310_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ \n   1 (>K:TOGGLE_EXTERNAL_POWER)\n} els{ (A:EXTERNAL POWER ON:1, Bool) if{ \n	  1 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Gen2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_eng2_gen_on) ! (>L:A310_eng2_gen_on)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Gen2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_elec_gen2_fault, Bool)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Gen2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_eng2_gen_on) !"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Apu Gen Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_apu_gen_on) ! "
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Gen1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_elec_gen1_fault, Bool)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Gen1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_eng1_gen_on, Bool) !"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Ext Pwr Avail": {
		"method": "calcCode",
		"code": "(L:A310_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Ext Power On": {
		"method": "calcCode",
		"code": "(L:A310_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) and"
	},
	"Nemeth Designs.Bell 407.Lights.Input.B407_LDG_LTS_SW_UP": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI ON:1, Number) 1 ==\nif{\n2 (>L:switchLandingLight, Number)\n1 (>K:TAXI_LIGHTS_ON)\n1 (>K:WING_LIGHTS_ON)\n}\n(A:LIGHT TAXI ON:1, Number) 0 ==\nif{\n1 (>L:switchLandingLight, Number)\n1 (>K:TAXI_LIGHTS_ON)\n1 (>K:WING_LIGHTS_OFF)\n}"
	},
	"Nemeth Designs.Bell 407.Lights.Input.B407_LDG_LTS_SW_DN": {
		"method": "calcCode",
		"code": "(A:LIGHT WING ON:1, Number) 1 ==\nif{\n1 (>L:switchLandingLight, Number)\n1 (>K:TAXI_LIGHTS_ON)\n1 (>K:WING_LIGHTS_OFF)\n}\nels{\n0 (>L:switchLandingLight, Number)\n1 (>K:TAXI_LIGHTS_OFF)\n1 (>K:WING_LIGHTS_OFF)\n}"
	},
	"Nemeth Designs.Bell 407.Lights.Input.B407_LDG_LTS_OFF": {
		"method": "calcCode",
		"code": "0 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_OFF) 1 (>K:WING_LIGHTS_OFF)"
	},
	"Nemeth Designs.Bell 407.Lights.Input.B407_LDG_LTS_FWD": {
		"method": "calcCode",
		"code": "1 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_OFF)"
	},
	"Nemeth Designs.Bell 407.Lights.Input.B407_LDG_LTS_BOTH": {
		"method": "calcCode",
		"code": "2 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_ON)\n"
	},
	"IniBuilds.A310.Controls.Input.A310 Ped Spoilers Arm Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPOILERS_ARMED, Bool) ! (L:A310_SPOILERS_HANDLE_POSITION, position 16k) 0 == and \nif{ 1 } els{ 0 } (>K:SPOILERS_ARM_SET) "
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng1 Fuel Cutoff Lever Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_MIXTURE_COMMAND) ! (>L:A310_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng2 Fuel Cutoff Lever Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_MIXTURE_COMMAND) ! (>L:A310_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng1 Fuel Cutoff Lever On": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng1 Fuel Cutoff Lever Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng2 Fuel Cutoff Lever On": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.Fuel.Input.A310 Ped Eng2 Fuel Cutoff Lever Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM Left Display Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_64) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_64) \nl0 64 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM Left Display Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(>L:LIGHTING_POTENTIOMETER_64) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_64) \nl0 64 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM Right Display Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_65)  5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_65) \nl0 65 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM Right Display Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_65) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_65) \nl0 65 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM SGU 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SGU1) ! (>L:A310_SGU1)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM SGU 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SGU2) ! (>L:A310_SGU2)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM ENG Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ENG)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM HYD Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_HYD)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM AC Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ELEC_AC)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM DC Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ELEC_DC)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM BLEED Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_BLEED)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM COND Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_COND)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM PRESS Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_PRESS)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM FUEL Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FUEL)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM APU Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_APU)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM FCTL Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FCTL)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM DOOR Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_DOOR)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM WHEEL Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_WHEEL)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM CLR Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_CLR)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM EWD STS Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_STS)"
	},
	"IniBuilds.A310.ECAM.Input.A310 ECAM EWD RCL Press": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_RCL)"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM ENG Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 1 == \n(L:ECAM_CURRENT_STATUS) 0 != and "
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM HYD Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 2 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM AC Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 3 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM DC Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 4 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM BLEED Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 5 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM COND Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 6 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM PRESS Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 7 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM FUEL Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 8 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM APU Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 9 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM FCTL Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 10 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM DOOR Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 11 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM WHEEL Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ecam_active_page, number) 12 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A310.ECAM.Output.A310 ECAM CLR Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_ECAM_CLR_LIGHT, Bool)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Switch ABOVE": {
		"method": "calcCode",
		"code": "0 (>L:A310_tcas_mode)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Switch N": {
		"method": "calcCode",
		"code": "1 (>L:A310_tcas_mode)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Switch BELOW": {
		"method": "calcCode",
		"code": "2 (>L:A310_tcas_mode)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Range Toggle": {
		"method": "calcCode",
		"code": "(L:A310_tcas_range) ! (>L:A310_tcas_range)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS ALT Switch 1": {
		"method": "calcCode",
		"code": "0 (>L:A310_tcas_alt_system) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS ALT Switch OFF": {
		"method": "calcCode",
		"code": "1 (>L:A310_tcas_alt_system) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS ALT Switch 2": {
		"method": "calcCode",
		"code": "2 (>L:A310_tcas_alt_system) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Selector STBY": {
		"method": "calcCode",
		"code": "0 (>L:A310_tcas_mode_pedestal)"
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Selector XPDR": {
		"method": "calcCode",
		"code": "1 (>L:A310_tcas_mode_pedestal) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Selector TARA": {
		"method": "calcCode",
		"code": "2 (>L:A310_tcas_mode_pedestal) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Mode Selector TA": {
		"method": "calcCode",
		"code": "3 (>L:A310_tcas_mode_pedestal) "
	},
	"IniBuilds.A310.Navigation.Input.A310 TCAS Test Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TCAS_TEST_ACTIVE) ! (>L:A310_TCAS_TEST_ACTIVE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC Ident Toggle": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_TOGGLE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC Select Toggle": {
		"method": "calcCode",
		"code": "(L:A310_tcas_xpdr) ! (>L:A310_tcas_xpdr)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC XPDR Inner Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRANSPONDER_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC XPDR Inner Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRANSPONDER_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC XPDR Outer Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRANSPONDER_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 ATC XPDR Outer Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRANSPONDER_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Output.A310 ATC XPDR Code Display": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, enum)"
	},
	"IniBuilds.A310.Controls.Input.A310 Rudder Trim Reset Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_RESET_RUDDER_TRIM_COMMAND)"
	},
	"IniBuilds.A310.Controls.Input.A310 Rudder Trim Reset Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_RESET_RUDDER_TRIM_COMMAND)"
	},
	"IniBuilds.A310.Controls.Input.A310 Rudder Trim Knob Left": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_LEFT)"
	},
	"IniBuilds.A310.Controls.Input.A310 Rudder Trim Knob Right": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_RIGHT)"
	},
	"IniBuilds.A310.Controls.Output.A310 Total Rudder Trim": {
		"method": "calcCode",
		"code": "(L:A310_TOTAL_RUDDER_TRIM)"
	},
	"IniBuilds.A310.Controls.Output.A310 Rudder Trim Display 1": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRIM_DISPLAY1)"
	},
	"IniBuilds.A310.Controls.Output.A310 Rudder Trim Display 2": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRIM_DISPLAY2)"
	},
	"IniBuilds.A310.Controls.Output.A310 Rudder Trim Display 3": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRIM_DISPLAY3)"
	},
	"IniBuilds.A310.Autopilot.Output.A310 AP PROFILE Button Light": {
		"method": "calcCode",
		"code": "(L:A310_MCU_PROFILE_LIGHT)"
	},
	"Working Title.G1000 NXi.Autopilot.Input.AS1000_PFD_FLC_Push": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"IniBuilds.A310.Warning.Input.A310 Master Warning Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_MASTER_WARNING_ACTIVE)"
	},
	"IniBuilds.A310.Warning.Input.A310 Master Caution Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_MASTER_CAUTION_ACTIVE)"
	},
	"IniBuilds.A310.Warning.Input.A310 GPWS Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_GPWS_PUSH)"
	},
	"IniBuilds.A310.Warning.Input.A310 GPWS Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_GPWS_PUSH)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Altimeter Bug Inc": {
		"method": "calcCode",
		"code": "(L:A310_CPT_ALTIMETER_BUG, Number) 10 + 1000 % (>L:A310_CPT_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Altimeter Bug Dec": {
		"method": "calcCode",
		"code": "(L:A310_CPT_ALTIMETER_BUG, Number) 990 + 1000 % (>L:A310_CPT_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Altimeter Knob STD Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_ALTIMETER_STD_COMMAND)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Altimeter Baro Inc": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro1_Mode)\n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET)\n   0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Altimeter Baro Dec": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro1_Mode)\n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET) \n   0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Clock Mode FAST": {
		"method": "calcCode",
		"code": "0 (>L:A300DR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Clock Mode SLOW": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Clock Mode HLD": {
		"method": "calcCode",
		"code": "2 (>L:A300DR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Clock Mode RUN": {
		"method": "calcCode",
		"code": "3 (>L:A300DR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt Clock Mode STOP": {
		"method": "calcCode",
		"code": "4 (>L:A300DR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt ET/CHRO Start Stop Reset Push": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CHRONO_START_BUTTON)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Cpt ET/CHRO Run Stop Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_ET_TOGGLE_BUTTON)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Stby Altimeter Baro Inc": {
		"method": "calcCode",
		"code": "3 (>K:KOHLSMAN_INC) \n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)\n   0 (>L:XMLVAR_Baro1_Mode)  0 (>L:XMLVAR_Baro2_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 Stby Altimeter Baro Dec": {
		"method": "calcCode",
		"code": "3 (>K:KOHLSMAN_DEC) \n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)\n   0 (>L:XMLVAR_Baro1_Mode)  0 (>L:XMLVAR_Baro2_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Altimeter Baro Inc": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro2_Mode) \n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)\n   0 (>L:XMLVAR_Baro1_Mode)  0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Altimeter Baro Dec": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro2_Mode) \n(L:A310_INSTRUMENTS_LINKED, Bool) if{\n   (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)\n   (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)\n   0 (>L:XMLVAR_Baro1_Mode)  0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Altimeter Knob STD Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_ALTIMETER_STD_COMMAND) "
	},
	"IniBuilds.A310.Gear.Input.A310 Antiskid Switch Norm On": {
		"method": "calcCode",
		"code": "0 (>L:A300DR_brake_system)"
	},
	"IniBuilds.A310.Gear.Input.A310 Antiskid Switch Altn On": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_brake_system)"
	},
	"IniBuilds.A310.Gear.Input.A310 Antiskid Switch Altn Off": {
		"method": "calcCode",
		"code": "2 (>L:A300DR_brake_system)"
	},
	"IniBuilds.A310.Gear.Input.A310 Autobrake Max Button Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_ABRK_HI_COMMAND)"
	},
	"IniBuilds.A310.Gear.Input.A310 Autobrake Med Button Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_ABRK_MED_COMMAND)"
	},
	"IniBuilds.A310.Gear.Input.A310 Autobrake Low Button Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_ABRK_LOW_COMMAND)"
	},
	"IniBuilds.A310.Gear.Output.A310 Autobrake Max Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_AUTOBRAKE_HI_DECEL, Bool)"
	},
	"IniBuilds.A310.Gear.Output.A310 Autobrake Med Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_AUTOBRAKE_MED_DECEL, Bool)"
	},
	"IniBuilds.A310.Gear.Output.A310 Autobrake Low Button Light On": {
		"method": "calcCode",
		"code": "(L:A310_AUTOBRAKE_LOW_DECEL, Bool)"
	},
	"Fly By Wire.A320.Miscellaneous.Output.A32NX_SQUAWK_CODE": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, Number)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Mute Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonAudioMute,bool)\n		  (L:audioMute,bool) ! (>L:audioMute,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Tel Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonAudioTel,bool)\n		  (L:audioTelephoneMode,bool) ! (>L:audioTelephoneMode,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Ics Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonAudioIcs,bool)\n		  (>K:TOGGLE_ICS)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Clock Oatvolt Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonChronoOatVolt,bool)\n		  (L:ChronoOatVolt,bool) ! (>L:ChronoOatVolt,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Mode Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonChronoMode,bool)\n		  (L:ChronoMode,bool) ! (>L:ChronoMode,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Control Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonChronoControl,bool)\n		  (L:Running chrono,bool) ! (>L:Running chrono,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Reset Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonChronoReset,bool)\n		  (L:buttonSound,enum) ++ (>L:buttonSound,enum)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Mute Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonHornMute,bool)\n		  (A:CIRCUIT ON:1,bool) if{ 1 (>L:hornMuted,bool) }\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Insrt Test Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonInstrTest,bool)\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Lcd Test Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonLcdTest,bool)\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Test Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonHornTest,bool)\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Overspeed Test Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonOvrspdTest,bool)\n		  (A:CIRCUIT ON:1,bool) if{ 1 (>L:testOvrspd,bool) }\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Ann Test Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonAnnTest,bool)\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Button Fuel Qty Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonFuelQty,bool)\n			(A:CIRCUIT ON:1,bool) if{ 1 (>L:fuelQtyMode,bool) }\n			(L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Button Fadec Mode Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonFadecMode,bool)\n			(A:CIRCUIT ON:1,bool) if{ (L:fadecMode,bool) ! (>L:fadecMode,bool) }\n			(L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Switch Starter Collective Press": {
		"method": "calcCode",
		"code": "(L:collGripState,enum) 1 == (A:ENG N1 RPM:1,percent) 50 < and if{ 1 (>K:STARTER1_SET) }\n		  1 (>L:switchStarter,bool)"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Button Eng Fire Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonFireTest,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Float Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonFloatTest,bool)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Button Xpndr Vfr Press": {
		"method": "calcCode",
		"code": "1 (>L:buttonXpndrVfr,bool)\n		  (L:buttonXpndrVfrPressed,bool) ! (A:CIRCUIT ON:1,bool) and if{ 1 (>L:xpndrVfr,bool) }\n		  1 (>L:buttonXpndrVfrPressed,bool)\n		  (L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Lever Rotor Brake Press": {
		"method": "calcCode",
		"code": "16383 (>K:AXIS_ROTOR_BRAKE_SET)\n		  (L:leverSound,enum) ++ (>L:leverSound,enum)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Mute Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonAudioMute,bool)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Tel Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonAudioTel,bool)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Ics Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonAudioIcs,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Clock Oatvolt Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonChronoOatVolt,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Mode Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonChronoMode,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Control Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonChronoControl,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Chrono Reset Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonChronoReset,bool)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Mute Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonHornMute,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Insrt Test Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonInstrTest,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Lcd Test Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonLcdTest,bool)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Test Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonHornTest,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Overspeed Test Release": {
		"method": "calcCode",
		"code": "0 (>L:testOvrspd,bool)\n		  0 (>L:buttonOvrspdTest,bool)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Button Ann Test Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonAnnTest,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Button Fuel Qty Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonFuelQty,bool)\n			0 (>L:fuelQtyMode,bool)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Button Fadec Mode Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonFadecMode,bool)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Switch Starter Collective Release": {
		"method": "calcCode",
		"code": "0 (>L:switchStarter,bool)"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Button Eng Fire Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonFireTest,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Float Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonFloatTest,bool)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Button Xpndr Vfr Release": {
		"method": "calcCode",
		"code": "0 (>L:buttonXpndrVfr,bool)\n		  0 (>L:buttonXpndrVfrPressed,bool)\n		  0 (>L:xpndrVfr,bool)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Lever Rotor Brake Release": {
		"method": "calcCode",
		"code": "0 (>K:AXIS_ROTOR_BRAKE_SET)\n		  (L:leverSound,enum) ++ (>L:leverSound,enum)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuel Valve Cover Toggle": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:1,bool) if{ (L:switchFuelValveCover,bool) ! (>L:switchFuelValveCover,bool) }\n			(L:switchCoverSound,number) ++ (>L:switchCoverSound,number)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuel Valve Toggle": {
		"method": "calcCode",
		"code": "(L:switchFuelValveCover,bool) if{ 1 (>K:FUELSYSTEM_VALVE_TOGGLE) }\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Switch Elt Toggle": {
		"method": "calcCode",
		"code": "(>K:ELT_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Switch Primary Compass Mode Toggle": {
		"method": "calcCode",
		"code": "(L:switchPrimaryCompassMode,bool) ! (>L:switchPrimaryCompassMode,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Switch Battery Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_BATTERY)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Pulse Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_RECOGNITION_LIGHTS)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Strobe Light Toggle": {
		"method": "calcCode",
		"code": "(>K:STROBES_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Beacon Light Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_BEACON_LIGHTS)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch Autotrim Toggle": {
		"method": "calcCode",
		"code": "(L:switchAutotrim,bool) ! (>L:switchAutotrim,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Hydraulic.Bell 407 Switch Hydraulic Toggle": {
		"method": "calcCode",
		"code": "1 (>K:HYDRAULIC_SWITCH_TOGGLE)\n			(L:HydSwitchTest,bool) ! (>L:HydSwitchTest,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Switch Particle Sep Toggle": {
		"method": "calcCode",
		"code": "(L:switchParicleSep,bool) ! (>L:switchParicleSep,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch Eng Deice Toggle": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch Pitot Heat Toggle": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch Defog Toggle": {
		"method": "calcCode",
		"code": "(L:switchDefog,bool) ! (>L:switchDefog,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Pos Light Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_NAV_LIGHTS)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Switch Light Caut Mode Toggle": {
		"method": "calcCode",
		"code": "(L:switchCautLtsMode,bool) ! (>L:switchCautLtsMode,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Heater Toggle": {
		"method": "calcCode",
		"code": "(L:switchHeater,bool) ! (>L:switchHeater,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Aft Toggle": {
		"method": "calcCode",
		"code": "(L:switchAircondAft,bool) ! (>L:switchAircondAft,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Fwd Toggle": {
		"method": "calcCode",
		"code": "(L:switchAircondFwd,bool) ! (>L:switchAircondFwd,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch Force Trim Toggle": {
		"method": "calcCode",
		"code": "(L:switchForceTrim,bool) ! (>L:switchForceTrim,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch Turncoord Toggle": {
		"method": "calcCode",
		"code": "(L:switchturnCoord,bool) ! (>L:switchturnCoord,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch Att Gyro Toggle": {
		"method": "calcCode",
		"code": "(L:switchAttGyro,bool) ! (>L:switchAttGyro,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Switch Broadcast Master Toggle": {
		"method": "calcCode",
		"code": "(L:switchBroadcastMaster,bool) ! (>L:switchBroadcastMaster,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Switch Avionics Master Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AVIONICS_MASTER)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuelboost Right Toggle": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_PUMP_TOGGLE)\n			4 (>K:FUELSYSTEM_PUMP_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuelboost Left Toggle": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_PUMP_TOGGLE)\n			3 (>K:FUELSYSTEM_PUMP_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Switch Radio Alt Toggle": {
		"method": "calcCode",
		"code": "(L:switchRadAlt,bool) ! (>L:switchRadAlt,bool)\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Switch Fdr Toggle": {
		"method": "calcCode",
		"code": "(L:switchAuxSys,bool) ! (>L:switchAuxSys,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Mute Toggle": {
		"method": "calcCode",
		"code": "(A:MARKER BEACON TEST MUTE, Bool) ! (>K:MARKER_BEACON_TEST_MUTE)\n			(L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Com2 Xmit Toggle": {
		"method": "calcCode",
		"code": "(>K:COM2_TRANSMIT_SELECT)\n			(L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Com1 Xmit Toggle": {
		"method": "calcCode",
		"code": "(>K:COM1_TRANSMIT_SELECT)\n			(L:buttonSound,number) ++ (>L:buttonSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Logo Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_LOGO_LIGHTS)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Switch Cargo Release Toggle": {
		"method": "calcCode",
		"code": "(L:switchCargoRelease,bool) ! (>L:switchCargoRelease,bool)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Light.Bell 407 Switch Light Taxi Toggle": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_TOGGLE)\n			(L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Knob Att Cage Toggle": {
		"method": "calcCode",
		"code": "(L:knobAttCage,bool) ! (>L:knobAttCage,bool)\n		  (>K:ATTITUDE_CAGE_BUTTON)\n		  (L:knobAttCageSound,enum) ++ (>L:knobAttCageSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Knob Ac Temp Inc": {
		"method": "calcCode",
		"code": "(L:knobAcTemp,celsius) 100 < if{ (L:knobAcTemp,celsius) 2 + (>L:knobAcTemp,celsius) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Copilot Inc": {
		"method": "calcCode",
		"code": "(L:ventKnobCopilot,number) 100 < if{ (L:ventKnobCopilot,number) 4 + (>L:ventKnobCopilot,number) }\n		  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Pilot Inc": {
		"method": "calcCode",
		"code": "(L:ventKnobPilot,number) 100 < if{ (L:ventKnobPilot,number) 4 + (>L:ventKnobPilot,number) }\n		  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Switch Generator Inc": {
		"method": "calcCode",
		"code": "(L:switchGenerator,enum) 0 > if{ (L:switchGenerator,enum) -- (>L:switchGenerator,enum) )\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Cabin Pass Inc": {
		"method": "calcCode",
		"code": "(L:switchLtsCabinPass,enum) 0 > if{ (L:switchLtsCabinPass,enum) -- (>L:switchLtsCabinPass,enum) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Mode Inc": {
		"method": "calcCode",
		"code": "(L:switchAircondMode,enum) 0 > if{ (L:switchAircondMode,enum) -- (>L:switchAircondMode,enum) }\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Knob Light Instr Inc": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4,percent) 0 > if{ (A:LIGHT POTENTIOMETER:4,percent) -- (>K:LIGHT_POTENTIOMETER_4_SET) }"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Rotation Panel Light Inc": {
		"method": "calcCode",
		"code": "(L:panelLightTilt,number) 5 + 100 min (>L:panelLightTilt,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Panel Light Inc": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5,percent) 5 + 100 min (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Landing Inc": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 0 > if{ (L:switchLandingLight,enum) -- (>L:switchLandingLight,enum) }"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Knob Friction Adjust Inc": {
		"method": "calcCode",
		"code": "(L:knobFriction,number) 0 > if{ (L:knobFriction,number) 2 - (>L:knobFriction,number) }"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Knob Defrost Adjust Inc": {
		"method": "calcCode",
		"code": "(L:knobDefrost,number) 0 > if{ (L:knobDefrost,number) 2 - (>L:knobDefrost,number) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Copilot Inc": {
		"method": "calcCode",
		"code": "(L:windowVentCopilot,number) 100 < if{ (L:windowVentCopilot,number) 4 + (>L:windowVentCopilot,number) }\n		  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Pilot Inc": {
		"method": "calcCode",
		"code": "(L:windowVentPilot,number) 0 > if{ (L:windowVentPilot,number) 4 - (>L:windowVentPilot,number) }\n		  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Adf Gauge Inc": {
		"method": "calcCode",
		"code": "(L:adfObs,degrees) -- (>L:adfObs,degrees)\n			(L:adfObs,degrees) 1 < if{ 360 (>L:adfObs,degrees) }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Knob Attitude Bars Inc": {
		"method": "calcCode",
		"code": "(>K:ATTITUDE_BARS_POSITION_DOWN)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Knob Altimeter Feet Inc": {
		"method": "calcCode",
		"code": "(L:kohlsmanKnob,number) -- (>L:kohlsmanKnob,number)\n			(L:kohlsmanKnob,number) 0 < if{ 100 (>L:kohlsmanKnob,number) }\n			(>K:KOHLSMAN_DEC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Vor Obs Inc": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_DEC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Hsi Obs Inc": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_DEC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Hsi Mrk Inc": {
		"method": "calcCode",
		"code": "(L:needleHsiMarker,number) -- (>L:needleHsiMarker,number)\n			(L:needleHsiMarker,number) 0 < if{ 360 (>L:needleHsiMarker,number) }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Grip Copilot Inc": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent) 100 < if{ (L:CollectiveGrip,percent) ++ (>L:CollectiveGrip,percent) }\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Grip Pilot Inc": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent) 100 < if{ \n			15 80 (L:CollectiveGrip,percent) rng if{ (L:CollectiveGrip,percent) 4 + (>L:CollectiveGrip,percent) }\n			els{ (L:CollectiveGrip,percent) ++ (>L:CollectiveGrip,percent) }\n		  }\n		  (L:CollectiveGrip,percent) 163.83 * (>K:PROP_PITCH_SET)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Copilot Inc": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_INCR)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Pilot Inc": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_INCR)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Knob Ac Temp Dec": {
		"method": "calcCode",
		"code": "(L:knobAcTemp,celsius) 0 > if{ (L:knobAcTemp,celsius) 2 - (>L:knobAcTemp,celsius) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Copilot Dec": {
		"method": "calcCode",
		"code": "(L:ventKnobCopilot,number) 0 > if{ (L:ventKnobCopilot,number) 4 - (>L:ventKnobCopilot,number) }\n		  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Pilot Dec": {
		"method": "calcCode",
		"code": "(L:ventKnobPilot,number) 0 > if{ (L:ventKnobPilot,number) 4 - (>L:ventKnobPilot,number) }\n		  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Switch Generator Dec": {
		"method": "calcCode",
		"code": "(L:switchGenerator,enum) 2 < if{ (L:switchGenerator,enum) ++ (>L:switchGenerator,enum) }\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Cabin Pass Dec": {
		"method": "calcCode",
		"code": "(L:switchLtsCabinPass,enum) 2 < if{ (L:switchLtsCabinPass,enum) ++ (>L:switchLtsCabinPass,enum) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Mode Dec": {
		"method": "calcCode",
		"code": "(L:switchAircondMode,enum) 2 < if{ (L:switchAircondMode,enum) ++ (>L:switchAircondMode,enum) )\n		  (L:switchSound,number) ++ (>L:switchSound,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Knob Light Instr Dec": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4,percent) 100 < if{ (A:LIGHT POTENTIOMETER:4,percent) ++ (>K:LIGHT_POTENTIOMETER_4_SET) }"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Rotation Panel Light Dec": {
		"method": "calcCode",
		"code": "(L:panelLightTilt,number) 5 - 0 max (>L:panelLightTilt,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Panel Light Dec": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5,percent) 5 - 0 max (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Landing Dec": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 2 < if{ (L:switchLandingLight,enum) ++ (>L:switchLandingLight,enum) }"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Knob Friction Adjust Dec": {
		"method": "calcCode",
		"code": "(L:knobFriction,number) 100 < if{ (L:knobFriction,number) 2 + (>L:knobFriction,number) }"
	},
	"Microsoft.Bell 407.Miscellaneous.Input.Bell 407 Knob Defrost Adjust Dec": {
		"method": "calcCode",
		"code": "(L:knobDefrost,number) 100 < if{ (L:knobDefrost,number) 2 + (>L:knobDefrost,number) }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Copilot Dec": {
		"method": "calcCode",
		"code": "(L:windowVentCopilot,number) 0 > if{ (L:windowVentCopilot,number) 4 - (>L:windowVentCopilot,number) }\n		  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Pilot Dec": {
		"method": "calcCode",
		"code": "(L:windowVentPilot,number) 100 < if{ (L:windowVentPilot,number) 4 + (>L:windowVentPilot,number) }\n		  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Adf Gauge Dec": {
		"method": "calcCode",
		"code": "(L:adfObs,degrees) ++ (>L:adfObs,degrees)\n			(L:adfObs,degrees) 360 > if{ 1 (>L:adfObs,degrees) }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Knob Attitude Bars Dec": {
		"method": "calcCode",
		"code": "(>K:ATTITUDE_BARS_POSITION_UP)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Knob Altimeter Feet Dec": {
		"method": "calcCode",
		"code": "(L:kohlsmanKnob,number) ++ (>L:kohlsmanKnob,number)\n			(L:kohlsmanKnob,number) 100 > if{ 0 (>L:kohlsmanKnob,number) }\n			(>K:KOHLSMAN_INC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Vor Obs Dec": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_INC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Hsi Obs Dec": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_INC)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob Hsi Mrk Dec": {
		"method": "calcCode",
		"code": "(L:needleHsiMarker,number) ++ (>L:needleHsiMarker,number)\n			(L:needleHsiMarker,number) 360 > if{ 0 (>L:needleHsiMarker,number) }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Grip Copilot Dec": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent) 0 > if{ (L:CollectiveGrip,percent) -- (>L:CollectiveGrip,percent) }\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Grip Pilot Dec": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent) 0 > if{\n			15 80 (L:CollectiveGrip,percent) rng if{ (L:CollectiveGrip,percent) 4 - (>L:CollectiveGrip,percent) }\n			els{ (L:CollectiveGrip,percent) -- (>L:CollectiveGrip,percent) }\n		  }\n		  (L:CollectiveGrip,percent) 163.83 * (>K:PROP_PITCH_SET)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Copilot Dec": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_DECR)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Pilot Dec": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_DECR)\n		  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Mute Lvar": {
		"method": "calcCode",
		"code": "(L:buttonAudioMute,bool)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Tel": {
		"method": "calcCode",
		"code": "(L:buttonAudioTel,bool)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio Ics": {
		"method": "calcCode",
		"code": "(L:buttonAudioIcs,bool)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Knob Actemp": {
		"method": "calcCode",
		"code": "(L:knobAcTemp,celsius)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Copilot": {
		"method": "calcCode",
		"code": "(L:ventKnobCopilot,number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Vent Knob Pilot": {
		"method": "calcCode",
		"code": "(L:ventKnobPilot,number)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuel Valve Cover": {
		"method": "calcCode",
		"code": "(L:switchFuelValveCover,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuel Valve": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:1,bool)"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Switch Elt": {
		"method": "calcCode",
		"code": "(A:ELT ACTIVATED,bool)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Switch Primary Compass adjust": {
		"method": "calcCode",
		"code": "(L:switchPrimaryCompassAdjust,enum)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Switch Primary Compass Mode": {
		"method": "calcCode",
		"code": "(L:switchPrimaryCompassMode,bool)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Compass Needle Ccw": {
		"method": "calcCode",
		"code": "(L:compassAdjustValue,degree)"
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Button Chrono oatVolt": {
		"method": "calcCode",
		"code": "(L:buttonChronoOatVolt,bool) "
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Button Chrono Mode": {
		"method": "calcCode",
		"code": "(L:buttonChronoMode,bool) "
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Button Chrono Contr": {
		"method": "calcCode",
		"code": "(L:buttonChronoControl,bool) "
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Button Chrono Reset": {
		"method": "calcCode",
		"code": "(L:buttonChronoReset,bool) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Pilot": {
		"method": "calcCode",
		"code": "(A:COLLECTIVE POSITION,percent)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Mute": {
		"method": "calcCode",
		"code": "(L:buttonHornMute,bool) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Arm Copilot": {
		"method": "calcCode",
		"code": "(A:COLLECTIVE POSITION,percent)"
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Button Instr Test": {
		"method": "calcCode",
		"code": "(L:buttonInstrTest,bool) "
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Button Lcd Test": {
		"method": "calcCode",
		"code": "(L:buttonLcdTest,bool) "
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Collective Grip Pilot": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent)"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Button Horn Test": {
		"method": "calcCode",
		"code": "(L:buttonHornTest,bool) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Collective Grip Copilot": {
		"method": "calcCode",
		"code": "(L:CollectiveGrip,percent)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Button Overspeed Test": {
		"method": "calcCode",
		"code": "(L:buttonOvrspdTest,bool) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Lever RotorBrkae": {
		"method": "calcCode",
		"code": "(A:ROTOR BRAKE HANDLE POS, percent)"
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Button Annunciator Test": {
		"method": "calcCode",
		"code": "(L:buttonAnnTest,bool) "
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Button Fuel Qty": {
		"method": "calcCode",
		"code": "(L:buttonFuelQty,bool) "
	},
	"Microsoft.Bell 407.Engine.Bell 407 Button Fadec Mode": {
		"method": "calcCode",
		"code": "(L:buttonFadecMode,bool) "
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Switch Battery": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1,bool)"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Switch Generator": {
		"method": "calcCode",
		"code": "(L:switchGenerator,enum) "
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Pulse": {
		"method": "calcCode",
		"code": "(A:LIGHT RECOGNITION,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Strobe": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Beacon": {
		"method": "calcCode",
		"code": "(A:LIGHT BEACON,bool)"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch Autotrim": {
		"method": "calcCode",
		"code": "(L:switchAutotrim,bool)"
	},
	"Microsoft.Bell 407.Hydraulic.Bell 407 Switch Hydraulic": {
		"method": "calcCode",
		"code": "(A:HYDRAULIC SWITCH:1,bool)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Switch Particle Sep": {
		"method": "calcCode",
		"code": "(L:switchParicleSep,bool)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch Eng Deice": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1,bool)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch PitotHeat": {
		"method": "calcCode",
		"code": "(A:PITOT HEAT,bool)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Switch Defog": {
		"method": "calcCode",
		"code": "(L:switchDefog,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Position": {
		"method": "calcCode",
		"code": "(A:LIGHT NAV,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Cabin Pass": {
		"method": "calcCode",
		"code": "(L:switchLtsCabinPass,enum) "
	},
	"Microsoft.Bell 407.Warning.Bell 407 Switch Light Caut Mode": {
		"method": "calcCode",
		"code": "(L:switchCautLtsMode,bool) "
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Heater": {
		"method": "calcCode",
		"code": "(L:switchHeater,bool)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Aft": {
		"method": "calcCode",
		"code": "(L:switchAircondAft,bool)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Fwd": {
		"method": "calcCode",
		"code": "(L:switchAircondFwd,bool)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Switch Aircond Mode": {
		"method": "calcCode",
		"code": "(L:switchAircondMode,enum) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Switch ForceTrim": {
		"method": "calcCode",
		"code": "(L:switchForceTrim,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Knob Light Instr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4,percent)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Switch TurnCoord": {
		"method": "calcCode",
		"code": "(L:switchturnCoord,bool)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Switch AttGyro": {
		"method": "calcCode",
		"code": "(L:switchAttGyro,bool)"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Switch Broadcast Master": {
		"method": "calcCode",
		"code": "(L:switchBroadcastMaster,bool)"
	},
	"Microsoft.Bell 407.Avionics.Bell 407 Switch Avionocs Master": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuelboost Right": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:2,bool)"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Switch Fuelboost Left": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1,bool)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Switch RadioAlt": {
		"method": "calcCode",
		"code": "(L:switchRadAlt,bool)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Switch AuxSys": {
		"method": "calcCode",
		"code": "(L:switchAuxSys,bool)"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio mute": {
		"method": "calcCode",
		"code": "(A:MARKER BEACON TEST MUTE, Bool) "
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio com2 xmit": {
		"method": "calcCode",
		"code": "(A:COM TRANSMIT:2,bool) "
	},
	"Microsoft.Bell 407.Audio.Bell 407 Button Audio com1 xmit": {
		"method": "calcCode",
		"code": "(A:COM TRANSMIT:1,bool) "
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Logo": {
		"method": "calcCode",
		"code": "(A:LIGHT LOGO,bool)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Rotation Light Panel": {
		"method": "calcCode",
		"code": "(L:panelLightTilt,number)"
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Panel": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5,percent) "
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Switch Cargo Release": {
		"method": "calcCode",
		"code": "(L:switchCargoRelease,bool) "
	},
	"Microsoft.Bell 407.Engine.Bell 407 Switch Starter": {
		"method": "calcCode",
		"code": "(L:switchStarter,bool) "
	},
	"Microsoft.Bell 407.Safety.Bell 407 Button FireTest": {
		"method": "calcCode",
		"code": "(L:buttonFireTest,bool) "
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Switch Float": {
		"method": "calcCode",
		"code": "(L:buttonFloatTest,bool) "
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Taxi": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING,bool) "
	},
	"Microsoft.Bell 407.Lights.Bell 407 Switch Light Landing": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) "
	},
	"Microsoft.Bell 407.Controls.Bell 407 Knob CollFriction Adjust": {
		"method": "calcCode",
		"code": "(L:knobFriction,number)"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Knob Defrost Adjust": {
		"method": "calcCode",
		"code": "(L:knobDefrost,number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Copilot": {
		"method": "calcCode",
		"code": "(L:windowVentCopilot, number)"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Window Vent Pilot": {
		"method": "calcCode",
		"code": "(L:windowVentPilot, number)"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Button Xpndr Vfr": {
		"method": "calcCode",
		"code": "(L:buttonXpndrVfr,bool) "
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Knob ADFgauge": {
		"method": "calcCode",
		"code": "(L:adfObs,degrees)"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Knob AttitudeCage": {
		"method": "calcCode",
		"code": "(L:knobAttCage,bool) "
	},
	"Microsoft.Bell 407.Engine.Bell 407 Button Fadec Visibility": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:fadecMode,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Vor Stripes": {
		"method": "calcCode",
		"code": "(A:NAV TOFROM:2,enum) 0 =="
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Vor From": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV TOFROM:2,enum) 2 == }"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Vor To": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV TOFROM:2,enum) 1 == }"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Hsi Stripes": {
		"method": "calcCode",
		"code": "(A:NAV TOFROM:1,enum) 0 =="
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Hsi From": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV TOFROM:1,enum) 2 == }"
	},
	"Microsoft.Bell 407.Navigation.Bell 407 Flag Hsi To": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV TOFROM:1,enum) 1 == }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Rpm": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ 95 107 (A:ROTOR RPM PCT:1, percent) rng ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Ann Cyclic Centering": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{\n			  (A:SIM ON GROUND,bool) if{\n				-1 1 (A:YOKE X POSITION, percent) rng ! \n				-1 1 (A:YOKE Y POSITION, percent) rng ! or\n			  }\n			  (L:buttonAnnTest,bool) or \n			}"
	},
	"Microsoft.Bell 407.Hydraulic.Bell 407 Ann Hydraulic System": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:HYDRAULIC PRESSURE:1,psi) 700 < (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Ann Check Instr": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (A:ENG TORQUE PERCENT:1, percent) 95 >\n			  (A:TURB ENG ITT:1, celsius) 710 > or\n			  (A:ENG N1 RPM:1, percent) 105 > or\n			  (L:buttonAnnTest,bool) or \n			}"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Ann Tr Chip": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annTrChip,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Fadec Auto": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:fadecMode,bool) ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Fadec Manual": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:fadecMode,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Fuel Low": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:FUEL TOTAL QUANTITY WEIGHT, lbs) 100 < (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Fuel Valve": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:FUELSYSTEM VALVE SWITCH:1,bool) ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Fuel Filter": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annLeftFuelFilter,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Air Condition / Pressurization.Bell 407 Ann Heater Overtemp": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annHeaterOvertemp,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Start": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (A:GENERAL ENG PCT MAX RPM:1, percent) 50 < if{ (A:GENERAL ENG STARTER ACTIVE:1,bool) } \n			  (L:buttonAnnTest,bool) or \n			}"
	},
	"Microsoft.Bell 407.Anti-Ice.Bell 407 Ann Engine Antiice": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG ANTI ICE:1,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Controls.Bell 407 Ann Pedal Stop": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:switchAuxSys,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Eng Ovrspd": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (A:GENERAL ENG PCT MAX RPM:1, percent) 102 >\n			  (L:initFlag,bool) if{ (A:ENG COMBUSTION:1,bool) ! } or\n			  (L:buttonOvrspdTest,bool) or\n			  (L:buttonAnnTest,bool) or\n			}"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Xmsn Oiltemp": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG OIL TEMPERATURE:1, celsius) 110 > (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Xmsn Oilpress": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG OIL PRESSURE:1, psi) (L:XmsnPressCorr,psi) / 30 < (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Ann Xmsn Chip": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annXmsnChip,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Fadec Degraded": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			(L:fadecMode,bool)\n			(L:initFlag,bool) if{ (A:ENG COMBUSTION:1,bool) ! } or\n			(L:buttonAnnTest,bool) or \n		  }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Restart Fault": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (L:fadecMode,bool)\n			  (L:initFlag,bool) if{ (A:ENG COMBUSTION:1,bool) ! } or\n			  (L:buttonAnnTest,bool) or \n			}"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Right Fuel Xfer": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			(A:FUELSYSTEM TANK LEVEL:2,percent) 1 > if{ (A:FUELSYSTEM PUMP ACTIVE:4,bool) ! } \n			(L:buttonAnnTest,bool) or \n		  }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Left Fuel Xfer": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			(A:FUELSYSTEM TANK LEVEL:2,percent) 1 > if{ (A:FUELSYSTEM PUMP ACTIVE:3,bool) ! }\n		  (L:buttonAnnTest,bool) or\n		  }"
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Ann Litter Door": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annLitterDoor,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Auto Relight": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (A:GENERAL ENG PCT MAX RPM:1, percent) 60 < if{ (A:GENERAL ENG STARTER ACTIVE:1,bool) } \n			  (L:buttonAnnTest,bool) or \n			}"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Ann Engine Fire": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG ON FIRE:1, bool) (L:buttonFireTest,bool) or (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Safety.Bell 407 Ann Engine Out": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (L:initFlag,bool) if{ (A:ENG N1 RPM:1, percent) 55 < (A:ENG COMBUSTION:1,bool) ! or }\n			  (L:buttonAnnTest,bool) or\n			}"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Ann Battery Hot": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annBatteryHot,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Ann Battery Relay": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annBatRelay,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Electrical.Bell 407 Ann Gen Fail": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG GENERATOR ACTIVE:1,bool) ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Engine Chip": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annEngineChip,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Fadec Fail": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			(L:fadecMode,bool)\n			(L:initFlag,bool) if{ (A:ENG COMBUSTION:1,bool) ! } or\n			(L:buttonAnnTest,bool) or\n		  }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Ann Fadec Fault": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ \n			  (L:fadecMode,bool)\n			  (L:initFlag,bool) if{ (A:ENG COMBUSTION:1,bool) ! } or\n			  (L:buttonAnnTest,bool) or\n			}"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Right Boost": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:FUELSYSTEM PUMP ACTIVE:2,bool) ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Ann Left Boost": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:FUELSYSTEM PUMP ACTIVE:1,bool) ! (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Ann Baggage Door": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annBaggaeDoor,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 0 > } els{ 0 }"
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Ann Float Arm": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annFloatArm,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 5 > } els{ 0 }"
	},
	"Microsoft.Bell 407.Miscellaneous.Output.Bell 407 Ann Float Test": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:annFloatTest,bool) (L:buttonAnnTest,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 3": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 10 > }"
	},
	"Microsoft.Bell 407.Warning.Bell 407 Led Elt": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ELT ACTIVATED,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 4": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 15 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Led Turn Rate": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) (L:switchturnCoord,bool) and if{ -45 45 (A:DELTA HEADING RATE, percent) rng ! }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 5": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 20 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Landingcone 2 Visibility": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON:1,bool)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 6": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 25 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Landingcone 1 Visibility": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON:1,bool)"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 7": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 30 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Taxicone 2 Visibility Alt": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 2 =="
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 8": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 35 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Taxicone 2 Visibility": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 2 =="
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 9": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 40 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Taxicone 1 Visibility Alt": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 1 =="
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 10": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 42.5 > }"
	},
	"Microsoft.Bell 407.Flight Instrumentation.Bell 407 Taxicone 1 Visibility": {
		"method": "calcCode",
		"code": "(L:switchLandingLight,enum) 1 =="
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 11": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 45 > }"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Led Navcom Nav2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV SIGNAL:2,number) 10 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 12": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 47.5 > }"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Led Navcom Nav1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:COM TRANSMIT:2,Bool) (A:COM RECEIVE:2,Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 13": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 50 > }"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Led Navcom Com2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:NAV SIGNAL:1,number) 10 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 14": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 52.5 > }"
	},
	"Microsoft.Bell 407.Radio.Bell 407 Led Navcom Com1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:20,bool) if{ (A:COM TRANSMIT:1,Bool) (A:COM RECEIVE:1,Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 15": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 55 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Speaker": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:SPEAKER ACTIVE, Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 16": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 57.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Mute": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:MARKER BEACON TEST MUTE, Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 17": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 60 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Aux": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:XMLVAR_AudioPanel_1) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 18": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 62.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Tel": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:INTERCOM SYSTEM ACTIVE, Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 19": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 65 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Adf": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ADF SOUND:0,bool) (A:ADF SOUND:1,bool) or }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 20": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 67.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Mkr": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:MARKER SOUND,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 21": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 70 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Nav2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:NAV SOUND:2,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 22": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 72.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Nav1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:NAV SOUND:1,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 23": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 75 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Com2 Xmit": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:COM TRANSMIT:2,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 24": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 77.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Com1 Xmit": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:COM TRANSMIT:1,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 25": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 80 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Com2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:COM RECEIVE:2,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 26": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 82.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Com1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:COM RECEIVE:1,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 27": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 85 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Ics Crew": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:INTERCOM MODE, Enum) 2 == }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 28": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 87.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Ics All": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:INTERCOM MODE, Enum) 1 == }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 29": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 90 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Ics Iso": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:INTERCOM MODE, Enum) 0 == }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 30": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 92.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Mkr Lo": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:MARKER BEACON SENSITIVITY HIGH, Bool) ! }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 31": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 95 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Mkr High": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:MARKER BEACON SENSITIVITY HIGH, Bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 32": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 97.5 > }"
	},
	"Microsoft.Bell 407.Audio.Bell 407 Led Audio Mkr Aud": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (L:audioAud,bool) }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 33": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 100 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 34": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 102.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 25": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 31.0 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 35": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 105 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 24": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 30.5 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 36": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 107.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 23": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 30.0 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 37": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 110 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 22": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 28.7 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 38": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 112.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 21": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 27.5 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 39": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 115 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 20": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 26.2 > }"
	},
	"Microsoft.Bell 407.Engine.Bell 407 Lamp Trq 40": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:ENG TORQUE PERCENT:1, percent) (L:torqueCheck,percent) + 120 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 19": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 25.0 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 1": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 1.2 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 18": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 22.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 2": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 2.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 17": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 21.2 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 3": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 3.7 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 16": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 20.0 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 4": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 5.0 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 15": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 18.7 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 5": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 6.2 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 14": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 17.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 6": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 7.5 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 13": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 16.2 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 7": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 8.7 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 12": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 15.0 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 8": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 10.0 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 11": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 13.7 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 9": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 11.2 > }"
	},
	"Microsoft.Bell 407.Fuel.Bell 407 Lamp Fuelpress 10": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:1,bool) if{ (A:GENERAL ENG FUEL PRESSURE:1, psi) (L:fuelPressCheck,psi) + 12.5 > }"
	},
	"IniBuilds.A310.Electrical.Input.Battery 1 On": {
		"method": "calcCode",
		"code": "1 (>L:A310_BAT1_ON)"
	},
	"IniBuilds.A310.Electrical.Input.Battery 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_BAT1_ON)"
	},
	"IniBuilds.A310.Electrical.Input.Battery 2 On": {
		"method": "calcCode",
		"code": "1 (>L:A310_BAT2_ON)"
	},
	"IniBuilds.A310.Electrical.Input.Battery 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_BAT2_ON)"
	},
	"IniBuilds.A310.Electrical.Input.Battery 3 On": {
		"method": "calcCode",
		"code": "1 (>L:A310_BAT3_ON)"
	},
	"IniBuilds.A310.Electrical.Input.Battery 3 Off": {
		"method": "calcCode",
		"code": "0 (>L:A310_BAT3_ON)"
	},
	"IniBuilds.A310.Avionics.Input.A310 TERR Button FO Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TERR_ON_FO) ! (>L:A310_TERR_ON_FO)"
	},
	"IniBuilds.A310.Avionics.Input.A310 TERR Button CPT Toggle": {
		"method": "calcCode",
		"code": "(L:A310_TERR_ON_CPT) ! (>L:A310_TERR_ON_CPT)"
	},
	"IniBuilds.A310.Lights.Input.A310 Map Light Cpt Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_16) 5 + 0 max 100 min (>L:A310_POTENTIOMETER_16)"
	},
	"IniBuilds.A310.Lights.Input.A310 Map Light Cpt Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_16) 5 - 0 max 100 min (>L:A310_POTENTIOMETER_16)"
	},
	"IniBuilds.A310.Lights.Input.A310 Cap & Ctr Inst Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_26) 5 + 0 max 100 min (>L:A310_POTENTIOMETER_26)"
	},
	"IniBuilds.A310.Lights.Input.A310 Cap & Ctr Inst Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_26) 5 - 0 max 100 min (>L:A310_POTENTIOMETER_26)"
	},
	"IniBuilds.A310.Lights.Input.A310 Main Inst Pnl Flood Light Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_25) 5 + 0 min 100 max (>L:A310_POTENTIOMETER_25)"
	},
	"IniBuilds.A310.Lights.Input.A310 Main Inst Pnl Flood Light Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_25) 5 - 0 min 100 max (>L:A310_POTENTIOMETER_25)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt ATT HDG Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_CAPT_ATT_HDG_COMMAND)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt ATT HDG Button FO3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_att_hdg_fo3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt ATT HDG Button Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_att_hdg_sys3, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt ADC Inst Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_adc_inst_fo1) ! (>L:A300DR_capt_switch_adc_inst_fo1)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt ADC Inst FO1 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_adc_inst_fo1, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt ADC Inst Sys2 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_adc_inst_sys2, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt FD Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_fd_fo1) ! (>L:A300DR_capt_switch_fd_fo1)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt FD FO1 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_fd_fo1, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt FD Sys2 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_fd_sys2, Bool)"
	},
	"IniBuilds.A310.EFIS.Input.A310 Cpt EFIS SGU Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_CAPT_SGU_COMMAND)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt EFIS SGU Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_efis_sgu_sys3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt EFIS SGU FO3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_capt_switch_efis_sgu_fo3, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Cpt PFD/ND XFR Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_pfd_nd_xfr) ! (>L:A300DR_pfd_nd_xfr)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Cpt PFD/ND XFR On Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_pfd_nd_xfr, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Capt Terr Mode GPWS Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_terr_mode) ! (>L:A300DR_terr_mode)"
	},
	"IniBuilds.A310.Avionics.Output.A310 Terr Mode GPWS Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_terr_mode, Bool) ! "
	},
	"IniBuilds.A310.Avionics.Output.A310 Terr Mode GPWS Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TERR_MODE_FAULT, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 GPWS Flap Switch Norm": {
		"method": "calcCode",
		"code": "0 (>L:A310_GPWS_FLAP_SWITCH)"
	},
	"IniBuilds.A310.Avionics.Input.A310 GPWS Flap Switch Flap Ovrd": {
		"method": "calcCode",
		"code": "1 (>L:A310_GPWS_FLAP_SWITCH)"
	},
	"IniBuilds.A310.Avionics.Input.A310 GPWS Flap Switch Off": {
		"method": "calcCode",
		"code": "2 (>L:A310_GPWS_FLAP_SWITCH)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS Cpt Console Floor Switch OFF": {
		"method": "calcCode",
		"code": "0 (>K:LIGHT_POTENTIOMETER_8_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS Cpt Console Floor Switch DIM": {
		"method": "calcCode",
		"code": "50 (>K:LIGHT_POTENTIOMETER_8_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS Cpt Console Floor Switch BRT": {
		"method": "calcCode",
		"code": "100 (>K:LIGHT_POTENTIOMETER_8_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS FO Console Floor Switch OFF": {
		"method": "calcCode",
		"code": "0 (>K:LIGHT_POTENTIOMETER_9_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS FO Console Floor Switch DIM": {
		"method": "calcCode",
		"code": "50 (>K:LIGHT_POTENTIOMETER_9_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX EFIS FO Console Floor Switch BRT": {
		"method": "calcCode",
		"code": "100 (>K:LIGHT_POTENTIOMETER_9_SET)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Servo Ctl Blue Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_BLUE_OFF_LIGHT) ! (>L:A310_SERVO_BLUE_OFF_LIGHT) "
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Servo Ctl Green Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_GREEN_OFF_LIGHT) ! (>L:A310_SERVO_GREEN_OFF_LIGHT) "
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Hyd Servo Ctl Yellow Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_YELLOW_OFF_LIGHT) ! (>L:A310_SERVO_YELLOW_OFF_LIGHT) "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Ctl Blue Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_BLUE_OFF_LIGHT) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Green Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_GREEN_OFF_LIGHT) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Eng1 Yellow Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SERVO_YELLOW_OFF_LIGHT) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Blue Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_servo_blue_low_pressure, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Green Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_servo_green_low_pressure, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Yellow Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:A310_hyd_servo_yellow_low_pressure, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Blue Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_B_State) ! (>L:__GUARD_SERVO_B_State)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Green Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_G_State) ! (>L:__GUARD_SERVO_G_State)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Hyd Servo Yellow Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_Y_State) ! (>L:__GUARD_SERVO_Y_State)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Splr/Spd Brk 7 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE7) ! (>L:A310_SPEEDBRAKE7)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Splr/Spd Brk 6 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE6) ! (>L:A310_SPEEDBRAKE6)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Splr/Spd Brk 5 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE5) ! (>L:A310_SPEEDBRAKE5)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Splr/Spd Brk 4 & 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE4_1) ! (>L:A310_SPEEDBRAKE4_1)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Splr/Spd Brk 3 & 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE3_2) ! (>L:A310_SPEEDBRAKE3_2)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Pitch Feel 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL1) ! (>L:A310_PITCH_FEEL1)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Pitch Feel 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL2) ! (>L:A310_PITCH_FEEL2)"
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Rud Travel 1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL1) ! (>L:A310_RUDDER_TRAVEL1) "
	},
	"IniBuilds.A310.Hydraulic.Input.A310 Ovhd Rud Travel 2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL2) ! (>L:A310_RUDDER_TRAVEL2) "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 7 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE7, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 6 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE6, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 5 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE5, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 4 & 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE4_1, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 3 & 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE3_2, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 7 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE7_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 6 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE6_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 5 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE5_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 4 & 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE4_1_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Splr/Spd Brk 3 & 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_SPEEDBRAKE3_2_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Pitch Feel 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL1, Bool) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Pitch Feel 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL2, Bool) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Rud Travel 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL1, Bool) !"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Rud Travel 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL2, Bool) ! "
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Pitch Feel 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL1_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Pitch Feel 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PITCH_FEEL2_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Rud Travel 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL1_FAULT, Bool)"
	},
	"IniBuilds.A310.Hydraulic.Output.A310 Ovhd Rud Travel 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_RUDDER_TRAVEL2_FAULT, Bool)"
	},
	"IniBuilds.A310.Lights.Input.A310 MCU Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_28) 5 + 100 min (>L:A310_POTENTIOMETER_28)"
	},
	"IniBuilds.A310.Lights.Input.A310 MCU Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_28) 5 - 0 max (>L:A310_POTENTIOMETER_28)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_3) 5 + 100 min (>L:A310_POTENTIOMETER_3)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_3) 5 - 0 max (>L:A310_POTENTIOMETER_3)"
	},
	"IniBuilds.A310.Lights.Input.A310 Read Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_18) 5 + 100 max (>L:A310_POTENTIOMETER_18) "
	},
	"IniBuilds.A310.Lights.Input.A310 Read Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_18) 5 - 0 min (>L:A310_POTENTIOMETER_18) "
	},
	"IniBuilds.A310.Lights.Input.A310 Cpt Yoke Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_29) 5 + 100 max (>L:A310_POTENTIOMETER_29)"
	},
	"IniBuilds.A310.Lights.Input.A310 Cpt Yoke Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_29) 5 - 0 min (>L:A310_POTENTIOMETER_29)"
	},
	"IniBuilds.A310.Lights.Input.A310 FO Yoke Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_30) 5 + 100 max (>L:A310_POTENTIOMETER_30)"
	},
	"IniBuilds.A310.Lights.Input.A310 FO Yoke Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_30) 5 - 0 min (>L:A310_POTENTIOMETER_30)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_4) 5 + 100 max (>L:A310_POTENTIOMETER_4)"
	},
	"IniBuilds.A310.Lights.Input.A310 Ovhd Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_4) 5 - 0 min (>L:A310_POTENTIOMETER_4)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Landing Elevation Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_landing_elevation, Number) 50 + (>L:A310_landing_elevation, Number)"
	},
	"IniBuilds.A310.Avionics.Input.A310 Landing Elevation Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_landing_elevation, Number) 50 - (>L:A310_landing_elevation, Number)"
	},
	"IniBuilds.A310.Engines.Input.A310 TRP Mode TOGA Press ": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRP_TOGA_BUTTON)"
	},
	"IniBuilds.A310.Engines.Input.A310 TRP Mode MCT Press ": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRP_MCT_BUTTON)"
	},
	"IniBuilds.A310.Engines.Input.A310 TRP Mode CL Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRP_CR_BUTTON)"
	},
	"IniBuilds.A310.Engines.Output.A310 TRP Mode TOGA Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE) 1 =="
	},
	"IniBuilds.A310.Engines.Output.A310 TRP Mode MCT Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE) 2 =="
	},
	"IniBuilds.A310.Engines.Output.A310 TRP Mode CR Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE) 4 =="
	},
	"IniBuilds.A310.Engines.Output.A310 TRP Mode CL Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE) 3 =="
	},
	"PMDG.B737-700.Engines.Input.A310 TRP Auto Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_TRP_AUTO_BUTTON)"
	},
	"PMDG.B737-700.Engines.Output.A310 TRP Auto Button Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE, Number) 5 =="
	},
	"PMDG.B737-700.Engines.Output.A310 TRP FLX TO Button Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TRP_MODE, Number) 6 =="
	},
	"PMDG.B737-700.Engines.Input.A310 TRP FLX TO Button Press": {
		"method": "calcCode",
		"code": "6 (>L:A310_TRP_MODE)"
	},
	"PMDG.B737-700.Engines.Input.A310 TRP Flex Temp Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_FLEX_TEMP_UP_COMMAND)"
	},
	"PMDG.B737-700.Engines.Input.A310 TRP Flex Temp Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_FLEX_TEMP_DN_COMMAND)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS FO CSTR Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_FO_CSTR_BUTTON)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS FO WPT Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_FO_FIXES_BUTTON)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS FO VOR Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_FO_VOR_BUTTON)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS FO NDB Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_FO_NDB_BUTTON)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS FO ARPT Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_EFIS_FO_ARPT_BUTTON)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Mode FO TEST": {
		"method": "calcCode",
		"code": "0 (>L:A310_map_mode_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Mode FO ROSE": {
		"method": "calcCode",
		"code": "1 (>L:A310_map_mode_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Mode FO ARC": {
		"method": "calcCode",
		"code": "2 (>L:A310_map_mode_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Mode FO MAP": {
		"method": "calcCode",
		"code": "3 (>L:A310_map_mode_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Mode FO PLAN": {
		"method": "calcCode",
		"code": "4 (>L:A310_map_mode_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Range FO 15": {
		"method": "calcCode",
		"code": "0 (>L:A310_map_range_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Range FO 30": {
		"method": "calcCode",
		"code": "1 (>L:A310_map_range_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Range FO 60": {
		"method": "calcCode",
		"code": "2 (>L:A310_map_range_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Range FO 120": {
		"method": "calcCode",
		"code": "3 (>L:A310_map_range_fo_switch)"
	},
	"Inibuilds.A310.EFIS.Input.A310 EFIS Range FO 240": {
		"method": "calcCode",
		"code": "4 (>L:A310_map_range_fo_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS FO DH Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_DH_COMMAND)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS FO FPA Button": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_FPA_COMMAND)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS FO DH Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_FPA_DH_KNOB_FO_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.EFIS.Input.A310 EFIS FO DH Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_FPA_DH_KNOB_FO_TURNED_CLOCKWISE)"
	},
	"Microsoft.Generic.Radio.Input.PILOT TRANSMITTER SET": {
		"method": "calcCode",
		"code": "index (>K:PILOT_TRANSMITTER_SET)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Bat1 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_BAT1_ON) ! (>L:A310_BAT1_ON)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Bat2 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_BAT2_ON) ! (>L:A310_BAT2_ON)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec Bat3 Toggle": {
		"method": "calcCode",
		"code": "(L:A310_BAT3_ON) ! (>L:A310_BAT3_ON)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_BAT1_ON, Bool) !"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_BAT2_ON) ! "
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat3 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_BAT3_ON) ! "
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat1 Light On": {
		"method": "calcCode",
		"code": "(L:A310_BAT1_Light)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat2 Light On": {
		"method": "calcCode",
		"code": "(L:A310_BAT2_Light)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec Bat3 Light On": {
		"method": "calcCode",
		"code": "(L:A310_BAT3_Light)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec DC Norm Bus Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_dc_norm_Bus_off)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec AC Bus1 Off": {
		"method": "calcCode",
		"code": "(L:A310_ac_bus1_off)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec AC Bus2 Off": {
		"method": "calcCode",
		"code": "(L:A310_ac_bus2_off)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec AC ESS Bus1 Off": {
		"method": "calcCode",
		"code": "(L:A310_ac_essential_bus_off)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec AC ESS Bus2 Off": {
		"method": "calcCode",
		"code": "(L:A310_ac_essential_bus2_off)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec DC ESS Bus On Bat": {
		"method": "calcCode",
		"code": "(L:A310_dc_essential_on_battery)"
	},
	"IniBuilds.A310.Electrical.Output.A310 Ovhd Elec AC Emergency On Inv": {
		"method": "calcCode",
		"code": "(L:A310_ac_emergency_on_inv)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Isol Valve Left Toggle": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_LEFT) ! (>L:A300_ISOLATION_VALVE_LEFT)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Isol Valve Right Toggle": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_RIGHT) ! (>L:A300_ISOLATION_VALVE_RIGHT)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Isol Valve Left Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_LEFT) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Isol Valve Right Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_RIGHT) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Isol Valve Left Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_LEFT_FAULT, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Isol Valve Right Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_ISOLATION_VALVE_RIGHT_FAULT, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Fwd Cargo Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_6) 5 + 100 min (>L:A310_AIRCOND_LVL_6) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Fwd Cargo Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_6) 5 - 0 max (>L:A310_AIRCOND_LVL_6) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Bulk Cargo Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_5) 5 + 100 min (>L:A310_AIRCOND_LVL_5) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Bulk Cargo Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_5) 5 - 0 max (>L:A310_AIRCOND_LVL_5) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Aft Cabin Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_4) 5 + 100 min (>L:A310_AIRCOND_LVL_4) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Aft Cabin Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_4) 5 - 0 max (>L:A310_AIRCOND_LVL_4) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Mid Cabin Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_3) 5 + 100 min (>L:A310_AIRCOND_LVL_3) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Mid Cabin Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_3) 5 - 0 max (>L:A310_AIRCOND_LVL_3) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Fwd Cabin Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_2) 5 + 100 min (>L:A310_AIRCOND_LVL_2) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Fwd Cabin Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_2) 5 - 0 max (>L:A310_AIRCOND_LVL_2) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Cockpit Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_1) 5 + 100 min (>L:A310_AIRCOND_LVL_1) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Cockpit Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_AIRCOND_LVL_1) 5 - 0 max (>L:A310_AIRCOND_LVL_1) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cargo Fwd": {
		"method": "calcCode",
		"code": "0 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cargo Bulk": {
		"method": "calcCode",
		"code": "1 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector CRT": {
		"method": "calcCode",
		"code": "2 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cabin Aft": {
		"method": "calcCode",
		"code": "3 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cabin Mid": {
		"method": "calcCode",
		"code": "4 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cabin Fwd": {
		"method": "calcCode",
		"code": "5 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pressure Selector Cockpit": {
		"method": "calcCode",
		"code": "6 (>L:A310_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Hot Air Supply Toggle": {
		"method": "calcCode",
		"code": "(L:A300_HOT_AIR_SUPPLY_ON) ! (>L:A300_HOT_AIR_SUPPLY_ON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Hot Air Supply Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_HOT_AIR_SUPPLY_ON, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Hot Air Supply Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_HOT_AIR_SUPPLY_FAULT, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pack Valve 1 Press": {
		"method": "calcCode",
		"code": "(L:A300_PACK1_BUTTON) ! (>L:A300_PACK1_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Pack Valve 2 Press": {
		"method": "calcCode",
		"code": "(L:A300_PACK2_BUTTON) ! (>L:A300_PACK2_BUTTON)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Pack Valve 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PACK1_BUTTON, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Pack Valve 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PACK1_FAULT, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Pack Valve 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PACK2_BUTTON, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Pack Valve 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PACK2_FAULT, Bool) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Pack Pressure Pointer": {
		"method": "calcCode",
		"code": "(L:A310_eng1_producing_bleed_psi, Number)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Econ Flow Toggle": {
		"method": "calcCode",
		"code": "(L:A310_econ_flow_selected) ! (>L:A310_econ_flow_selected) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Econ Flow On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_econ_flow_selected) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Max Cool Toggle": {
		"method": "calcCode",
		"code": "(L:A310_max_cool) ! (>L:A310_max_cool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Max Cool On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_max_cool, Bool) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Ram Air Button Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_RAM_AIR_State) ! (>L:__GUARD_RAM_AIR_State)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Compt Ram Air Toggle": {
		"method": "calcCode",
		"code": "(L:A300_RAM_AIR_ON) ! (>L:A300_RAM_AIR_ON) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Ram Air Open": {
		"method": "calcCode",
		"code": "(L:A310_bleed_ram_air_open, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Compt Ram Air On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_RAM_AIR_ON, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Outflow After Percent": {
		"method": "calcCode",
		"code": "(L:A310_cabin_outflow_aft_percent, Number)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Cabin Outflow Forward Percent": {
		"method": "calcCode",
		"code": "(L:A310_cabin_outflow_forward_percent, Number)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Bleed Pack1 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_bleed_pack1_percent, number) 0.5 >"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Bleed Pack2 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_bleed_pack2_percent, number) 0.5 >"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS L State Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_IRS1_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS L State Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS1_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS L State Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:A310_IRS1_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS R State Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_IRS2_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS R State Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS2_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS R State Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:A310_IRS2_STATE)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS L Align Mode On": {
		"method": "calcCode",
		"code": "(L:A310_IRS1_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS L On Battery On": {
		"method": "calcCode",
		"code": "(L:A310_IRS1_ON_BATTERY, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS L Battery Warning On": {
		"method": "calcCode",
		"code": "(L:A310_IRS1_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS L IRS Warning On": {
		"method": "calcCode",
		"code": "(L:A310_IRS1_IRS_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS C State Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_IRS3_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS C State Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS3_STATE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS C State Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:A310_IRS3_STATE)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS R Align Mode On": {
		"method": "calcCode",
		"code": "(L:A310_IRS2_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS R On Battery On": {
		"method": "calcCode",
		"code": "(L:A310_IRS2_ON_BATTERY, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS R Battery Warning": {
		"method": "calcCode",
		"code": "(L:A310_IRS2_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS R IRS Warning On": {
		"method": "calcCode",
		"code": "(L:A310_IRS2_IRS_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS C Align Mode On": {
		"method": "calcCode",
		"code": "(L:A310_IRS3_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS C On Battery On": {
		"method": "calcCode",
		"code": "(L:A310_IRS3_ON_BATTERY, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS C Battery Warning": {
		"method": "calcCode",
		"code": "(L:A310_IRS3_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS C IRS Warning On": {
		"method": "calcCode",
		"code": "(L:A310_IRS3_IRS_WARNING, Bool)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 5 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_5_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 1 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_1_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 2 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_2_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 3 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_3_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 4 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_4_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 6 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_6_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 7 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_7_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 8 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_8_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_9_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 9 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_9_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS ENT Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_ENT_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS 0 Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_0_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS CLR Key": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_CLR_BUTTON)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS ENT Key Light": {
		"method": "calcCode",
		"code": "(L:A310_IRS_ENT_LIGHT, Bool)"
	},
	"IniBuilds.A310.Navigation.Output.A310 Ovhd IRS CLR Key Light": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_CLR_LIGHT)"
	},
	"IniBuilds.A310.Navigation.Input.A310 IRS Mode Knob TEST": {
		"method": "calcCode",
		"code": "0 (>L:A310_IRS_MODE_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 IRS Mode Knob TK GS": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_MODE_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 IRS Mode Knob PPOS": {
		"method": "calcCode",
		"code": "2 (>L:A310_IRS_MODE_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 IRS Mode Knob WIND": {
		"method": "calcCode",
		"code": "3 (>L:A310_IRS_MODE_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 IRS Mode Knob HDG STS": {
		"method": "calcCode",
		"code": "4 (>L:A310_IRS_MODE_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS Sys Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_IRS_SYS_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS Sys Knob 1": {
		"method": "calcCode",
		"code": "1 (>L:A310_IRS_SYS_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS Sys Knob 2": {
		"method": "calcCode",
		"code": "2 (>L:A310_IRS_SYS_KNOB)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Ovhd IRS Sys Knob 3": {
		"method": "calcCode",
		"code": "3 (>L:A310_IRS_SYS_KNOB)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd CVRD Test Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A300_CVRD_TEST)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd CVRD Test Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A300_CVRD_TEST)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Ovhd Cockpit Door Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_COCKPIT_DOOR_COMMAND)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector Bus1": {
		"method": "calcCode",
		"code": "0 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector Bus2": {
		"method": "calcCode",
		"code": "1 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector ESS": {
		"method": "calcCode",
		"code": "2 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector EMER": {
		"method": "calcCode",
		"code": "3 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector Gen1": {
		"method": "calcCode",
		"code": "4 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector Gen2": {
		"method": "calcCode",
		"code": "5 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector APU Gen": {
		"method": "calcCode",
		"code": "6 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec AC Bus Selector Ext Pwr": {
		"method": "calcCode",
		"code": "7 (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector Bat1": {
		"method": "calcCode",
		"code": "0 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector Bat2": {
		"method": "calcCode",
		"code": "1 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector Bat3": {
		"method": "calcCode",
		"code": "2 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector ESS": {
		"method": "calcCode",
		"code": "3 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector TR1": {
		"method": "calcCode",
		"code": "4 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector TR2": {
		"method": "calcCode",
		"code": "5 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310 Ovhd Elec DC Bus Selector ESS Bus": {
		"method": "calcCode",
		"code": "7 (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Agent1 Disch Button": {
		"method": "calcCode",
		"code": "(L:A300DR_engine1_agent1_disch) ! (>L:A300DR_engine1_agent1_disch)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Agent2 Disch Button": {
		"method": "calcCode",
		"code": "(L:A300DR_engine1_agent2_disch) ! (>L:A300DR_engine1_agent2_disch)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Agent1 Disch Button": {
		"method": "calcCode",
		"code": "(L:A300DR_engine2_agent1_disch) ! (>L:A300DR_engine2_agent1_disch)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Agent2 Disch Button": {
		"method": "calcCode",
		"code": "(L:A300DR_engine2_agent2_disch) ! (>L:A300DR_engine2_agent2_disch)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Agent Disch": {
		"method": "calcCode",
		"code": "(L:A310_APU_AGENT1_DISCH) ! (>L:A310_APU_AGENT1_DISCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Latch Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_FIRE_LATCH) ! (>L:A310_ENG1_FIRE_LATCH) \n(L:A310_ENG1_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_ENG1) }"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Latch Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_FIRE_LATCH) ! (>L:A310_ENG2_FIRE_LATCH) \n(L:A310_ENG2_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_ENG2) }"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire API Fire Latch Toggle": {
		"method": "calcCode",
		"code": "(L:A310_APU_FIRE_LATCH) ! (>L:A310_APU_FIRE_LATCH)\n(L:A310_APU_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_APU) }"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Handle Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_eng1_fire_handle_BUTTON)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Handle Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_eng2_fire_handle_BUTTON)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Handle Pull": {
		"method": "calcCode",
		"code": "1 (>L:A310_apu_fire_handle_BUTTON)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Loop A Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_LOOP_A_STATE) ! (>L:A310_ENG1_LOOP_A_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Loop B Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG1_LOOP_B_STATE) ! (>L:A310_ENG1_LOOP_B_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Loop A Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_LOOP_A_STATE) ! (>L:A310_ENG2_LOOP_A_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Loop B Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ENG2_LOOP_B_STATE) ! (>L:A310_ENG2_LOOP_B_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Loop A Toggle": {
		"method": "calcCode",
		"code": "(L:A310_APU_LOOP_A_STATE) ! (>L:A310_APU_LOOP_A_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Loop B Toggle": {
		"method": "calcCode",
		"code": "(L:A310_APU_LOOP_B_STATE) ! (>L:A310_APU_LOOP_B_STATE)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Loop Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENGINE1_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Loop Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENGINE1_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Loop Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENGINE2_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Loop Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENGINE2_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Loop Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_APU_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Loop Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_APU_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A310.Safety.Input.A310 Ovhd Oxygen Low Pressure Supply Toggle": {
		"method": "calcCode",
		"code": "(L:A310_OXYGEN_LOW_PRESSURE_SUPPLY) ! (>L:A310_OXYGEN_LOW_PRESSURE_SUPPLY) "
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Probe Heat Capt Toggle": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_CAPT) ! (>L:A300_PROBE_HEAT_CAPT) "
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Probe Heat Standby Toggle": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_STANDBY) ! (>L:A300_PROBE_HEAT_STANDBY)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Probe Heat FO Toggle": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_COPILOT) ! (>L:A300_PROBE_HEAT_COPILOT) "
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Window Heater Left Lat Toggle": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT1) ! (>L:A300_WINDOW_HEAT1)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Window Heater Left WSLO Toggle": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT2) ! (>L:A300_WINDOW_HEAT2)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Window Heater Right WSLO Toggle": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT3) ! (>L:A300_WINDOW_HEAT3)"
	},
	"IniBuilds.A310.Anti-Ice.Input.A310 Ovhd Window Heater Right Lat Toggle": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT4) ! (>L:A300_WINDOW_HEAT4)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack1 Mode Toggle": {
		"method": "calcCode",
		"code": "(L:A310_bleed_pack1_mode) ! (>L:A310_bleed_pack1_mode)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack2 Mode Toggle": {
		"method": "calcCode",
		"code": "(L:A310_bleed_pack2_mode) ! (>L:A310_bleed_pack2_mode)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack1 Man Ctl Switch Hot Press": {
		"method": "calcCode",
		"code": "0 (>L:A310_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack1 Man Ctl Switch Release": {
		"method": "calcCode",
		"code": "1 (>L:A310_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack1 Man Ctl Switch Cold Press": {
		"method": "calcCode",
		"code": "2 (>L:A310_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack2 Man Ctl Switch Hot Press": {
		"method": "calcCode",
		"code": "0 (>L:A310_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack2 Man Ctl Switch Release": {
		"method": "calcCode",
		"code": "1 (>L:A310_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Pack2 Man Ctl Switch Cold Press": {
		"method": "calcCode",
		"code": "2 (>L:A310_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Squib Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENG1_SQUIB_TEST)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng1 Squib Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENG1_SQUIB_TEST)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Squib Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_ENG2_SQUIB_TEST)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire Eng2 Squib Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_ENG2_SQUIB_TEST)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Squib Test Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_APU_SQUIB_TEST)"
	},
	"IniBuilds.A310.Fire.Input.A310 Ovhd Fire APU Squib Test Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_APU_SQUIB_TEST)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Pedestal PPR ADV Button": {
		"method": "calcCode",
		"code": "(L:A310_PRINTER_ADV_BUTTON) ! (>L:A310_PRINTER_ADV_BUTTON) "
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Pedestal Printer TEST Button": {
		"method": "calcCode",
		"code": "(L:A310_PRINTER_TEST_BUTTON) ! (>L:A310_PRINTER_TEST_BUTTON)"
	},
	"IniBuilds.A310.Miscellaneous.Input.A310 Pedestal Printer ALRTRST Button": {
		"method": "calcCode",
		"code": "(L:A310_PRINTER_ALRTRST_BUTTON) ! (>L:A310_PRINTER_ALRTRST_BUTTON)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Panel Brightness Outer Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_3) 5 + 100 min (>L:A310_POTENTIOMETER_3)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Panel Brightness Outer Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_3) 5 - 0 max (>L:A310_POTENTIOMETER_3)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Ovhd Light Inner Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_4) 5 + 100 min (>L:A310_POTENTIOMETER_4)"
	},
	"IniBuilds.A310.Lights.Input.A310 Pedestal Ovhd Light Inner Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_4) 5 - 0 max (>L:A310_POTENTIOMETER_4)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Sys 1": {
		"method": "calcCode",
		"code": "0 (>L:A310_WXR_SYS)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Sys OFF": {
		"method": "calcCode",
		"code": "1 (>L:A310_WXR_SYS)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Sys 2": {
		"method": "calcCode",
		"code": "2 (>L:A310_WXR_SYS)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Mode OFF": {
		"method": "calcCode",
		"code": "0 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Mode TEST": {
		"method": "calcCode",
		"code": "1 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Mode WX": {
		"method": "calcCode",
		"code": "2 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Mode TURB": {
		"method": "calcCode",
		"code": "3 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.wx": {
		"method": "calcCode",
		"code": "4 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Mode MAP": {
		"method": "calcCode",
		"code": "4 (>L:A310_WXR_MODE)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Gain Inc": {
		"method": "calcCode",
		"code": "(L:A310_WXR_GAIN) ++ (>L:A310_WXR_GAIN)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Gain Dec": {
		"method": "calcCode",
		"code": "(L:A310_WXR_GAIN) -- (>L:A310_WXR_GAIN)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Tilt Inc": {
		"method": "calcCode",
		"code": " (L:A310_WXR_TILT_KNOB) 1.5 + 15 min (>L:A310_WXR_TILT_KNOB)"
	},
	"IniBuilds.A310.Radar.Input.A310 Pedestal WX Radar Tilt Dec": {
		"method": "calcCode",
		"code": " (L:A310_WXR_TILT_KNOB) 1.5 - -15 max (>L:A310_WXR_TILT_KNOB)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Inner Knob Khz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Inner Knob Khz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Outer Knob Mhz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Outer Knob Mhz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Stby Inner Knob Khz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Stby Inner Knob Khz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Stby Outer Knob Mhz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM1 Stby Outer Knob Mhz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF Capt Transfer Right": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF Capt Transfer Left": {
		"method": "calcCode",
		"code": "0 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF Capt Sql Switch On": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF Capt Sql Switch Disable": {
		"method": "calcCode",
		"code": "0- (>L:A310_CPT_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal VHF Capt COM1 Active Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CPT_VHF_TRANSFER_SWITCH, Bool) !"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal VHF Capt COM1 STBY Active Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CPT_VHF_TRANSFER_SWITCH, Bool) "
	},
	"Microsoft.Generic.Gear.Input (Potentiometer).AXIS STEERING SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_STEERING_SET)"
	},
	"Microsoft.Generic.Gear.Input (Potentiometer).STEERING SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:STEERING_SET)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 Inner Knob Khz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 Inner Knob Khz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 Outer Knob Mhz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 Outer Knob Mhz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 STBY Inner Knob Khz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 STBY Inner Knob Khz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_STBY_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 STBY Outer Knob Mhz Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF COM2 STBY Outer Knob Mhz Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_COM2_STBY_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF FO Transfer Left": {
		"method": "calcCode",
		"code": "0 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF FO Transfer Right": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF FO Sql Switch On": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A310.Radio.Input.sql": {
		"method": "calcCode",
		"code": "0 (>L:A310_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF FO Sql Switch Disable": {
		"method": "calcCode",
		"code": "0 (>L:A310_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF Capt Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt VHF1 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF1_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF2 Capt Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_VHF2_CPT_BUTTON)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF3 Capt Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_VHF3_CPT_BUTTON)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal HF1 Capt Toggle": {
		"method": "calcCode",
		"code": "(L:A310_HF1_CAPTAIN) ! (>L:A310_HF1_CAPTAIN) "
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal HF2 Capt Toggle": {
		"method": "calcCode",
		"code": "(L:A310_HF2_CAPTAIN) ! (>L:A310_HF2_CAPTAIN)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal INT Capt Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INT_CAPTAIN) ! (>L:A310_INT_CAPTAIN)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal PA Capt Toggle": {
		"method": "calcCode",
		"code": "(L:A310_PA_CAPTAIN) ! (>L:A310_PA_CAPTAIN)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt VHF2 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF2_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt VHF3 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF3_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt HF1 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_HF1_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt HF2 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_HF2_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt INT Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INT_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal Capt PA Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PA_CAPTAIN, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal VHF FO COM2 Active Indicator": {
		"method": "calcCode",
		"code": "(L:A310_FO_VHF_TRANSFER_SWITCH, Bool) !"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal VHF FO COM2 STBY Active Indicator": {
		"method": "calcCode",
		"code": "(L:A310_FO_VHF_TRANSFER_SWITCH, Bool) "
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF1 FO Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_VHF1_FO_BUTTON)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF2 FO Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_VHF2_FO_BUTTON)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF3 FO Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_VHF3_FO_BUTTON)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal HF1 FO Toggle": {
		"method": "calcCode",
		"code": "(L:A310_HF1_FO) ! (>L:A310_HF1_FO)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal HF2 FO Toggle": {
		"method": "calcCode",
		"code": "(L:A310_HF2_FO) ! (>L:A310_HF2_FO)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal INT FO Toggle": {
		"method": "calcCode",
		"code": "(L:A310_INT_FO) ! (>L:A310_INT_FO)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal PA FO Toggle": {
		"method": "calcCode",
		"code": "(L:A310_PA_FO) ! (>L:A310_PA_FO)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO VHF1 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF1_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO VHF2 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF2_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO VHF3 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VHF3_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO HF1 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_HF1_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO HF2 Indicator": {
		"method": "calcCode",
		"code": "(L:A310_HF2_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO INT Indicator": {
		"method": "calcCode",
		"code": "(L:A310_INT_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Output.A310 Pedestal FO PA Indicator": {
		"method": "calcCode",
		"code": "(L:A310_PA_FO, Bool)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal Cpt Voice Ident Switch Up": {
		"method": "calcCode",
		"code": "0 (>L:A310_CPT_VOICE_IDENT_SWITCH)"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal Cpt Voice Ident Switch Down": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_VOICE_IDENT_SWITCH)"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Probe Heat Capt Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_CAPT) ! "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Probe Heat Standby Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_STANDBY) ! "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Probe Heat FO Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_PROBE_HEAT_COPILOT) ! "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Left Lat Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT1) !"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Left Lat Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT1_FAULT) "
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Left WSLO Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT2) !"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Left WSLO Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT2_FAULT)"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Right WSLO Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT3) !"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Right WSLO Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT3_FAULT)"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Right Lat Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT4) !"
	},
	"IniBuilds.A310.Anti-Ice.Output.A310 Ovhd Window Heater Right Lat Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A300_WINDOW_HEAT4_FAULT)"
	},
	"IniBuilds.A310.Warning.Input.A310 Warning Sys Norm Cancel Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_NORM_CANCEL)"
	},
	"IniBuilds.A310.Warning.Input.A310 Warning Sys Emer Cancel Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_EMER_CANCEL)"
	},
	"IniBuilds.A310.Warning.Input.A310 Warning Sys Emer Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__EMER_GAURD_State) ! (>L:__EMER_GAURD_State)"
	},
	"IniBuilds.A310.Warning.Input.A310 Takeoff Config Test Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_TAKEOFF_CONFIG_PRESSED)"
	},
	"IniBuilds.A310.Warning.Input.A310 Takeoff Config Test Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A310_TAKEOFF_CONFIG_PRESSED)"
	},
	"IniBuilds.A310.Warning.Input.A310 Parking Brake Accu Press Toggle": {
		"method": "calcCode",
		"code": "(L:A310_ACCU_PRESS_BUTTON) ! (>L:A310_ACCU_PRESS_BUTTON)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 Yoke Autopilot Disconnect Push": {
		"method": "calcCode",
		"code": "1 (>K:AUTOPILOT_OFF)"
	},
	"IniBuilds.A310.Controls.Input.A310 Capt Yoke Trim Switch Up": {
		"method": "calcCode",
		"code": "0 (>L:A310_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Controls.Input.A310 Capt Yoke Trim Switch Release": {
		"method": "calcCode",
		"code": "1 (>L:A310_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Controls.Input.A310 Capt Yoke Trim Switch Down": {
		"method": "calcCode",
		"code": "2 (>L:A310_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Lights.Input.A310 FO Inst Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_27) 5 + 100 min (>L:A310_POTENTIOMETER_27)"
	},
	"IniBuilds.A310.Lights.Input.A310 FO Inst Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_27) 5 - 0 max (>L:A310_POTENTIOMETER_27)"
	},
	"IniBuilds.A310.Controls.Input.A310 FO Yoke Trim Switch Up": {
		"method": "calcCode",
		"code": "0 (>L:A310_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Controls.Input.A310 FO Yoke Trim Switch Release": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Controls.Input.A310 FO Yoke Trim Switch Down": {
		"method": "calcCode",
		"code": "2 (>L:A310_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A310.Avionics.Output.A310 TERR Button FO On ND Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TERR_ON_FO)"
	},
	"IniBuilds.A310.Avionics.Output.A310 TERR Button FO Stby Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TERR_STANDBY_FO, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 TERR Button CPT On ND Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TERR_ON_CAPT, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 TERR Button Capt Stby Indicator": {
		"method": "calcCode",
		"code": "(L:A310_TERR_STANDBY_CAPT, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ATT HDG FO Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_ATT_HDG_COMMAND)"
	},
	"IniBuilds.A310.Avionics.Input.A310 ADC Inst FO Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_adc_inst_fo1) ! (>L:A300DR_fo_switch_adc_inst_fo1)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO FD Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_fd_fo1) ! (>L:A300DR_fo_switch_fd_fo1)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO EFIS SGU Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_SGU_COMMAND)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO PFD/ND XFR Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_pfd_nd_xfr) ! (>L:A300DR_pfd_nd_xfr)"
	},
	"IniBuilds.A310.Avionics.Output.A310 ATT HDG FO Button Capt3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_att_hdg_sys3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 ATT HDG FO Button Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_att_hdg_fo3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 ADC Inst FO Sys1 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_adc_inst_fo1, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 ADC Inst FO Capt2 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_adc_inst_sys2, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 FO FD Sys1 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_fd_fo1, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 FO FD Capt2 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_fd_sys2, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 FO EFIS SGU Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_efis_sgu_fo3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 FO EFIS SGU Capt3 Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_fo_switch_efis_sgu_sys3, Bool)"
	},
	"IniBuilds.A310.Avionics.Output.A310 FO PFD/ND XFR On Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_pfd_nd_xfr, Bool)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO Terr Mode GPWS Toggle": {
		"method": "calcCode",
		"code": "(L:A310_terr_mode) ! (>L:A310_terr_mode)"
	},
	"IniBuilds.A310.Lights.Input.A310 Map Light FO Inc": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_17) 5 + 100 min (>L:A310_POTENTIOMETER_17)"
	},
	"IniBuilds.A310.Lights.Input.A310 Map Light FO Dec": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_17) 5 - 0 max (>L:A310_POTENTIOMETER_17)"
	},
	"IniBuilds.A310.Controls.Input.A310 GPWS Landing Toggle": {
		"method": "calcCode",
		"code": "(L:A310_GPWS_LANDING_SWITCH) ! (>L:A310_GPWS_LANDING_SWITCH) "
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt VOR1 Inner Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR1_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt VOR1 Inner Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR1_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt VOR1 Outer Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR1_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt VOR1 Outer Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR1_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt CRS1 Knob Inc": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_INC)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt CRS1 Knob Dec": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_DEC)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal Cpt CRS1 Knob Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_VOR1_FLIP_COMMAND)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Inner Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_ILS_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Inner Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_ILS_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Outer Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_ILS_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Outer Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_ILS_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Course Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_ils_course, number) ++ dnor (>L:A310_ils_course, number)"
	},
	"IniBuilds.A310.Navigation.Input.A310 RMP ILS Course Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_ils_course, number) -- dnor (>L:A310_ils_course, number)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO VOR2 Inner Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR2_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO VOR2 Inner Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR2_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO VOR2 Outer Knob Inc": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR2_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO VOR2 Outer Knob Dec": {
		"method": "calcCode",
		"code": "1 (>L:A310_RMP_VOR2_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO CRS2 Knob Inc": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_INC)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO CRS2 Knob Dec": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_DEC)"
	},
	"IniBuilds.A310.Navigation.Input.A310 Pedestal FO CRS2 Knob Press": {
		"method": "calcCode",
		"code": "1 (>L:A310_VOR2_FLIP_COMMAND)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Gnd Ovrd Toggle": {
		"method": "calcCode",
		"code": "(L:A310_VENT_GND_OVRD) ! (>L:A310_VENT_GND_OVRD)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Gnd Ctl Toggle": {
		"method": "calcCode",
		"code": "(L:A310_VENT_GND_CTL) ! (>L:A310_VENT_GND_CTL)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Cargo Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A310_CARGO_VALVE) ! (>L:A310_CARGO_VALVE)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Gnd Ovrd On Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VENT_GND_OVRD, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Gnd Ctl Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VENT_GND_CTL, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Cargo Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A310_CARGO_VALVE, Bool) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Ovbd Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_vent_outboard_valve) ! (>L:A300DR_vent_outboard_valve) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Vent Ovbd Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_vent_outboard_valve) ! "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Vent Ovbd Valve Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A310_OVERBOARD_VALVE_FAULT, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input.A310 Ovhd Vent Extract Valve Toggle": {
		"method": "calcCode",
		"code": "(L:A300DR_vent_extract_valve) ! (>L:A300DR_vent_extract_valve) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Vent Extract Valve Ovbd Indicator": {
		"method": "calcCode",
		"code": "(L:A300DR_vent_extract_valve, Bool) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Vent Extract Valve Flow Indicator": {
		"method": "calcCode",
		"code": "(L:A310_VENT_EXTRACT_FLOW, Bool)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Output.A310 Ovhd Vent Inboard Valve Light": {
		"method": "calcCode",
		"code": "(L:A310_INBOARD_VALVE_LIGHT, Bool)"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS Baro Setting": {
		"method": "calcCode",
		"code": " (A:KOHLSMAN SETTING HG, inHg)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_VNAV_TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_VS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_BC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_MASTER_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_MASTER)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_HALF_BANK_TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID, number) 1 == if{ 0 (>K:AP_MAX_BANK_SET) } \n   els{ 1 (>K:AP_MAX_BANK_SET) }"
	},
	"Working Title.CJ4.Lights.Output.WT CJ4 Logo Lights On": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LOGO_1)"
	},
	"Working Title.CJ4.Lights.Output.WT CJ4 Nav Lights On": {
		"method": "calcCode",
		"code": "(L:LIGHTING_NAV_1)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_HDG_SYNC": {
		"method": "calcCode",
		"code": "1 (A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_ALT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_HDG_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_FLC_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_FD1_TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_FD2_TOGGLE": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_BARO_1_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) if{ 1 (>H:AP_BARO_Down) } els{ 1 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down) }"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_BARO_3_DEC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_DEC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 - (>L:XMLVAR_Baro2_SavedPressure) } "
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_BARO_3_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_INC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 + (>L:XMLVAR_Baro2_SavedPressure) } "
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_BARO_1_INC": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) if{ 1 (>H:AP_BARO_Up) } els{ 1 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_VS_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } els{ (>K:AP_PITCH_REF_INC_UP) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_VS_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) } els{ (>K:AP_PITCH_REF_INC_DN) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_SPEED_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) }  \nels{   1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } "
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_SPEED_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) }  \nels{   1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } "
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_NAV_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_YD_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:YAW_DAMPER_TOGGLE)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_SPEED_MODE_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_XFR_PRESSED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_1_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_1_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_1_INC_FAST": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 + dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_1_DEC_FAST": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 - dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_2_DEC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_2_DEC_FAST": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 - dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_2_INC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_2_INC_FAST": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 + dnor (>K:VOR2_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_DISC_PRESSED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) if{ 0 (>K:AUTOPILOT_DISENGAGE_SET) } els{ 1 (>K:AUTOPILOT_DISENGAGE_SET) }"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_1_SYNC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == sp0 \n(A:NAV RADIAL:1, degrees) (A:NAV RADIAL:2, degrees) l0 ? 180 + dnor sp1 \n(A:NAV OBS:1, degrees) (A:NAV OBS:2, degrees) l0 ? sp2 \n(A:NAV HAS NAV:1, Bool) (A:NAV HAS NAV:2, Bool) l0 ? sp3 \nl1 l2 l3 ? \nsp0 (A:AUTOPILOT NAV SELECTED, Number) 1 == if{ \n\t l0 (>K:VOR1_SET) \n} els{ \n\t l0 (>K:VOR2_SET) \n}"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_CRS_2_SYNC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV SELECTED, Number) 1 == sp0 \n(A:NAV RADIAL:1, degrees) (A:NAV RADIAL:2, degrees) l0 ? 180 + dnor sp1 \n(A:NAV OBS:1, degrees) (A:NAV OBS:2, degrees) l0 ? sp2 \n(A:NAV HAS NAV:1, Bool) (A:NAV HAS NAV:2, Bool) l0 ? sp3 \nl1 l2 l3 ? \nsp0 (A:AUTOPILOT NAV SELECTED, Number) 1 == if{ \n\t l0 (>K:VOR1_SET) \n} els{ \n\t l0 (>K:VOR2_SET) \n}"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MENU_ADV_1_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_MENU_ADV_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MENU_ADV_1_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_MENU_ADV_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_1_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_DATA_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_1_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_DATA_INC)"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4_LIGHT_PANEL_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 - 0 5 max max 100 min sp0 \n(L:LIGHTING_PANEL_1) 5 - 100 > if{ \n\t1 0 (>K:2:PANEL_LIGHTS_SET) \n} els{ \n\t(A:LIGHT PANEL:1, Bool) ! if{ \n\t\t1 1 (>K:2:PANEL_LIGHTS_SET) \n\t} els{ \n\t\tl0 (>L:LIGHTING_PANEL_1) \n\t\tl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n\t} \n}"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4_LIGHT_PANEL_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 + 0 5 max max 100 min sp0 \n(L:LIGHTING_PANEL_1) 5 + 100 > if{ \n\t1 0 (>K:2:PANEL_LIGHTS_SET) \n} els{ \n\t(A:LIGHT PANEL:1, Bool) ! if{ \n\t\t1 1 (>K:2:PANEL_LIGHTS_SET) \n\t} els{ \n\t\tl0 (>L:LIGHTING_PANEL_1) \n\t\tl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n\t} \n}"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_MSG_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MSG)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_DIR_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DIR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_IDX_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_IDX)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_TUN_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_TUN)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_A_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_A)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_H_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_H)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_O_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_O)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_V_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_V)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_FPLN_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_FPLN)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_B_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_B)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_I_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_I)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_P_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_P)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_W_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_W)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_LEGS_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_LEGS)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_C_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_C)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_J_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_J)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_Q_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Q)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_X_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_X)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_DEPARR_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DEPARR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_D_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_D)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_K_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_K)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_Y_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Y)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_PERF_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PERF)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_E_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_E)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_L_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_L)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_S_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_S)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_Z_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_Z)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_DSPL_MENU_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DSPL_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_F_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_F)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_M_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_M)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_T_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_T)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_SP_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_SP)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_MFD_ADV_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MFD_ADV)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_G_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_G)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_N_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_N)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_U_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_U)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_DIV_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DIV)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_MFD_DATA_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_MFD_DATA)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_7_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_7)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_DOT_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_DOT)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_PREVPAGE_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PREVPAGE)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_8_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_8)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_0_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_0)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_9_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_9)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_PLUSMINUS_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_PLUSMINUS)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_R6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_R6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_EXEC_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_EXEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_NEXTPAGE_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_NEXTPAGE)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_MSG_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_MSG)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DIR_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DIR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_IDX_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_IDX)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_TUN_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_TUN)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_A_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_A)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_H_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_H)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_O_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_O)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_V_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_V)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_FPLN_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_FPLN)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_B_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_B)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_I_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_I)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_P_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_P)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_W_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_W)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_LEGS_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_LEGS)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_C_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_C)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_J_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_J)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_Q_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_Q)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_X_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_X)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DEPARR_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DEPARR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_D_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_D)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_K_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_K)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_Y_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_Y)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_PERF_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_PERF)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_E_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_E)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_L_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_L)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_S_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_S)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_Z_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_Z)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DSPL_MENU_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DSPL_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_F_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_F)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_M_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_M)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_T_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_T)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_SP_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_SP)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_MFD_ADV_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_MFD_ADV)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_G_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_G)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_N_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_N)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_U_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_U)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DIV_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DIV)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_MFD_DATA_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_MFD_DATA)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_7_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_7)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DOT_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DOT)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_PREVPAGE_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_PREVPAGE)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_8_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_8)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_0_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_0)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_9_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_9)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_PLUSMINUS_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_PLUSMINUS)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R1_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R1)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R2_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R2)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R3_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R3)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R4_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R4)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R5_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R5)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_R6_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_R6)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_EXEC_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_EXEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_NEXTPAGE_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_NEXTPAGE)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_CLR_SHORT": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_CLR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_BRT_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_BRT)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_DIM_PUSH": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_DIM)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_2_CLR_LONG": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_2_BTN_CLR_Long)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_CLR_SHORT": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_CLR)"
	},
	"Asobo.CJ4 AAU1.Avionics.CJ4_FMC_1_CLR_LONG": {
		"method": "calcCode",
		"code": "(>H:CJ4_FMC_1_BTN_CLR_Long)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_RANGE_1_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_RANGE_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_RANGE_1_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_RANGE_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_BARO_1_PUSH": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool) 0 == if{ \n  1 (>L:XMLVAR_Baro1_ForcedToSTD, bool) \n  (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure, number) \n  1 (>K:BAROMETRIC_STD_PRESSURE) } \nels{ \n  0 (>L:XMLVAR_Baro1_ForcedToSTD, bool) \n  1 (L:XMLVAR_Baro1_SavedPressure, number) \n  (>K:2:KOHLSMAN_SET) \n  2 (L:XMLVAR_Baro1_SavedPressure, number) \n  (>K:2:KOHLSMAN_SET)\n}"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_MENU_ADV_1_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_MENU_ADV_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_MENU_ADV_1_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_MENU_ADV_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Data_PUSH)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Data_PUSH)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_MENU_ADV_2_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_MENU_ADV_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_MENU_ADV_2_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_MENU_ADV_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_1_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Data_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_1_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Data_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_1_INC_FAST": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Data_INC) (>H:Generic_Upr_1_Data_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_1_DEC_FAST": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Data_DEC) (>H:Generic_Upr_1_Data_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_2_DEC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Data_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_2_DEC_FAST": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Data_DEC) (>H:Generic_Upr_2_Data_DEC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_2_INC": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Data_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_DATA_2_INC_FAST": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Data_INC) (>H:Generic_Upr_2_Data_INC)"
	},
	"Asobo.CJ4 AAU1.Safety.Input.CJ4_MASTER_CAUTION_1_PUSH": {
		"method": "calcCode",
		"code": "(>K:MASTER_CAUTION_ACKNOWLEDGE)"
	},
	"Asobo.CJ4 AAU1.Safety.Input.CJ4_MASTER_WARNING_1_PUSH": {
		"method": "calcCode",
		"code": "(>K:MASTER_WARNING_ACKNOWLEDGE)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_REFS_MENU_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_REFS_MENU) "
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_REFS_MENU_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Push_REFS_MENU) "
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_PFD_MENU_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_PFD_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_PFD_MENU_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_2_Push_PFD_MENU)"
	},
	"Asobo.CJ4 AAU1.Anti-Ice.Input.CJ4_DEICE_PITOT_L_TOGGLE": {
		"method": "calcCode",
		"code": "1 (A:PITOT HEAT SWITCH:1, Bool) ! s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)\n"
	},
	"Asobo.CJ4 AAU1.Anti-Ice.Input.CJ4_DEICE_PITOT_R_TOGGLE": {
		"method": "calcCode",
		"code": "2 (A:PITOT HEAT SWITCH:2, Bool) ! s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_2)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_BATTERY_1_ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } \n0 (>L:XMLVAR_Essential_Bus_ON) \n1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 ==  == if{ \n   2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(L:XMLVAR_Essential_Bus_ON) if{ \n   1 (A:BUS CONNECTION ON:3, Bool) if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n} els{ \n   1 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_BATTERY_1_OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } \n0 (>L:XMLVAR_Essential_Bus_ON) \n1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 ==  == if{ \n   2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(L:XMLVAR_Essential_Bus_ON) if{ \n   1 (A:BUS CONNECTION ON:3, Bool) if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n} els{ \n   1 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_BATTERY_1_EMER": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } \n1 (>L:XMLVAR_Essential_Bus_ON) \n1 (>A:BUS LOOKUP INDEX, Number) \n(A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 ==  == if{ \n   2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n(L:XMLVAR_Essential_Bus_ON) if{ \n   1 (A:BUS CONNECTION ON:3, Bool) if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n} els{ \n   1 (A:BUS CONNECTION ON:3, Bool) ! if{ \n	  1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n   2 (A:BUS CONNECTION ON:3, Bool) if{ \n	  2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_AVIONICS_BUS_1_ON": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) ! if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_AVIONICS_BUS_1_OFF": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_AVIONICS_BUS_1_DISPATCH": {
		"method": "calcCode",
		"code": "1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 1 (>L:XMLVAR_AVIONICS_IsComposite)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_EMERG_LIGHTS_ARMED": {
		"method": "calcCode",
		"code": "1 (>L:CJ4_EMER_LIGHT_ARMED)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_EMERG_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "0 (>L:CJ4_EMER_LIGHT_ARMED)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_ALTERNATOR_1_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_ALTERNATOR_1_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_ALTERNATOR_2_OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4_ELECTRICAL_ALTERNATOR_2_ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Traffic THRT Mode": {
		"method": "calcCode",
		"code": "0 (>L:S_TCAS_RANGE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Traffic ALL Mode": {
		"method": "calcCode",
		"code": "1 (>L:S_TCAS_RANGE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Traffic ABV Mode": {
		"method": "calcCode",
		"code": "2 (>L:S_TCAS_RANGE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder TCAS Traffic BLW Mode": {
		"method": "calcCode",
		"code": "3 (>L:S_TCAS_RANGE)"
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_ALT_SYNC": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Output.KODIAK 100 BOTH FUEL SELECTOR VALVES OFF": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) 0 =="
	},
	"Microsoft.Generic.Gear.Input (Potentiometer).AXIS LEFT BRAKE SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_LEFT_BRAKE_SET)"
	},
	"Microsoft.Generic.Gear.Input (Potentiometer).AXIS RIGHT BRAKE SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_RIGHT_BRAKE_SET)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Front Door Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_front_door) ! (>L:SF50_front_door)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Luggage Door Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_luggage_door) ! (>L:SF50_luggage_door) "
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 VAMS Static Chocks Toggle": {
		"method": "calcCode",
		"code": "(L:sf50_vams_static_chocks) ! (>L:sf50_vams_static_chocks) "
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 VAMS Static Covers Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_vams_static_covers) ! (>L:SF50_vams_static_covers)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 VAMS Static Headphones Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_vams_static_headphones) ! (>L:SF50_vams_static_headphones)"
	},
	"FlightFX.Visionjet SF50.Gear.Input.SF50 Emergency Gear Door Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_gear_alternate_ext, Bool) ! (>L:SF50_gear_alternate_ext, Bool)"
	},
	"FlightFX.Visionjet SF50.Gear.Input.SF50 Emergency Gear Handle Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_gear_alternate_ext_handle, Bool) ! (>L:SF50_gear_alternate_ext_handle) "
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Tank Selector Left": {
		"method": "calcCode",
		"code": "1 (>L:SF50_fuel_selector_left) \n0 (>L:SF50_fuel_selector_right)  0 (>L:SF50_fuel_selector_auto)  "
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Tank Selector Right": {
		"method": "calcCode",
		"code": "1 (>L:SF50_fuel_selector_right)\n0 (>L:SF50_fuel_selector_left)  0 (>L:SF50_fuel_selector_auto)  "
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Tank Selector Auto": {
		"method": "calcCode",
		"code": "1 (>L:SF50_fuel_selector_auto)\n(A:FUEL TANK LEFT MAIN QUANTITY, gallons) (A:FUEL TANK RIGHT MAIN QUANTITY, gallons) > if{\n   2 (>K:FUEL_SELECTOR_SET) } els{ 3  (>K:FUEL_SELECTOR_SET) }\n0 (>L:SF50_fuel_selector_left)  0 (>L:SF50_fuel_selector_right)  "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AT FMS Manual Mode Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet,bool) ! (>L:XMLVAR_SpeedIsManuallySet,bool)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 Bleed Air Switch Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_air_flow_switch, Bool) ! (>L:SF50_air_flow_switch, Bool)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Cockpit TV Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_cockpit_tv, Bool) ! (>L:SF50_cockpit_tv) "
	},
	"FlightFX.Visionjet SF50.Warning.Input.SF50 ECS Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_ecs, Bool) ! (L:SF50_ecs)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 AC Fan Control Inc": {
		"method": "calcCode",
		"code": "(L:SF50_TempFan, number) 0.1 + 0 max 1 min (>L:SF50_TempFan, number)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 AC Fan Control Dec": {
		"method": "calcCode",
		"code": "(L:SF50_TempFan, number) 0.1 - 0 max 1 min (>L:SF50_TempFan, number)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Checklists Scroll Up": {
		"method": "calcCode",
		"code": "(>H:checklist_scroll_up)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Checklists Scroll Down": {
		"method": "calcCode",
		"code": "(>H:checklist_scroll_down)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 Checklists Scroll Select": {
		"method": "calcCode",
		"code": "(>H:checklist_checklist_select)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.Left ceiling light": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.Center ceiling light": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_3)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.Right ceiling light": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2)"
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Pump Knob Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_knob_stop_run, Bool) d ! (>L:SF50_knob_stop_run) \nif{ 0 (>K:ELECT_FUEL_PUMP_SET) }"
	},
	"FlightFX.Visionjet SF50.Engine.Input.SF50 Engine Start Stop Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_knob_stop_run, Bool) if{ 1 (>K:STARTER1_SET) 1 (>K:SET_FUEL_VALVE_ENG1) } \nels{ 0 (>K:STARTER1_SET) 0 (>K:SET_FUEL_VALVE_ENG1) 0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_FMC_1_CLR_OnPress": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (>L:FMC-1-3000-LONGPRESSDELAY)\n(>H:CJ4_FMC_1_BTN_CLR)\n\n"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_FMC_1_CLR_OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:FMC-1-3000-LONGPRESSDELAY) - 0.5 > if{\n(>H:CJ4_FMC_1_BTN_CLR_Long) }\n"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_FMC_2_CLR_OnPress": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (>L:FMC-2-3000-LONGPRESSDELAY)\n(>H:CJ4_FMC_2_BTN_CLR)\n"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_FMC_2_CLR_OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:FMC-2-3000-LONGPRESSDELAY) - 0.5 > if{\n(>H:CJ4_FMC_2_BTN_CLR_Long) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4_SEATBELT_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4_SAFETY_LIGHT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.CJ4_LIGHTS_BELT_ON": {
		"method": "calcCode",
		"code": "(A:CABIN SEATBELTS ALERT SWITCH,Bool)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.CJ4_LIGHTS_SAFETY_ON": {
		"method": "calcCode",
		"code": "(A:CABIN NO SMOKING ALERT SWITCH,Bool)"
	},
	"Asobo.CJ4 AAU1.Anti-Ice.Input.CJ4_DEICE_WING_ENG_L_TOGGLE": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_1) ! s0 (>L:DEICE_Airframe_1) \n(L:DEICE_Airframe_1) ! \n(L:DEICE_Airframe_2) ! and \n(A:STRUCTURAL DEICE SWITCH, Bool) == \nif{ \n\t(>K:TOGGLE_STRUCTURAL_DEICE) \n} \nl0 (A:ENG ANTI ICE:1, Bool) != if{ \n\t (>K:ANTI_ICE_TOGGLE_ENG1) \n}"
	},
	"Asobo.CJ4 AAU1.Anti-Ice.Input.CJ4_DEICE_WING_ENG_R_TOGGLE": {
		"method": "calcCode",
		"code": "(L:DEICE_Airframe_2) ! (>L:DEICE_Airframe_2) \n(L:DEICE_Airframe_1) ! \n(L:DEICE_Airframe_2) ! and \n(A:STRUCTURAL DEICE SWITCH, Bool) == \nif{ \n\t(>K:TOGGLE_STRUCTURAL_DEICE) \n} \n(L:DEICE_Airframe_2) (A:ENG ANTI ICE:2, Bool) != if{ \n\t (>K:ANTI_ICE_TOGGLE_ENG2) \n}"
	},
	"PMDG.B737-700.Controls.Input (Potentiometer).PMDG B737 Flaps Set (Potentiometer)": {
		"method": "calcCode",
		"code": "@ 20 - 10.03 / near 0 max 100 min s0 \nl0 5 < if{ 714101 (>K:ROTOR_BRAKE) quit } \nl0 15 < if{ 714201 (>K:ROTOR_BRAKE) quit }\nl0 35 < if{ 714301 (>K:ROTOR_BRAKE) quit }\nl0 50 < if{ 714401 (>K:ROTOR_BRAKE) quit }\nl0 64 < if{ 714501 (>K:ROTOR_BRAKE) quit }\nl0 75 < if{ 714601 (>K:ROTOR_BRAKE) quit }\nl0 85 < if{ 714701 (>K:ROTOR_BRAKE) quit }\nl0 98 < if{ 714801 (>K:ROTOR_BRAKE) quit }\n714901 (>K:ROTOR_BRAKE)"
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHT_CABIN_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_5) 13 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_5)\n(L:LIGHTING_POTENTIOMETER_5)\n (>K:LIGHT_POTENTIOMETER_5_SET) \n"
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHT_CABIN_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_5) 13 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_5)\n(L:LIGHTING_POTENTIOMETER_5)\n (>K:LIGHT_POTENTIOMETER_5_SET) "
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHT_PANEL_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 - 0 max 100 min s0 \n(>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT PANEL:1, Bool) s2 \n(L:LIGHTING_PANEL_1) 0 > != if{ \n	l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) quit \n}"
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHT_PANEL_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 + 0 max 100 min s0 \n(>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET)\n(A:LIGHT PANEL:1, Bool) s2 \n(L:LIGHTING_PANEL_1) 0 > != if{ \n	l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) quit \n}"
	},
	"Carenado.M20R OVATION.Autopilot.Input.KAS297_VS_INC": {
		"method": "calcCode",
		"code": "(L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{1 (>L:KASVsAltWheelUP) }"
	},
	"Carenado.M20R OVATION.Autopilot.Input.KAS297_VS_DEC": {
		"method": "calcCode",
		"code": "(L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{1 (>L:KASVsAltWheelDN) }"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A320_Neo_FCU_VS_DEC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_DEC)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A320_Neo_FCU_VS_INC": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_VS_INC)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Elevator Trim Dec": {
		"method": "calcCode",
		"code": "67807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Elevator Trim Inc": {
		"method": "calcCode",
		"code": "67808 (>K:ROTOR_BRAKE)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Altimeter Bug Knob Dec": {
		"method": "calcCode",
		"code": "(L:A310_FO_ALTIMETER_BUG, Number) 0 <=\n  if{ (L:A310_FO_ALTIMETER BUG, Number) 1000 + (>L:A310_FO_ALTIMETER BUG,) }\nels{  (L:A310_FO_ALTIMETER BUG, Number) 10 - 1000 % (>L:A310_FO_ALTIMETER BUG) }"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Altimeter Bug Knob Inc": {
		"method": "calcCode",
		"code": "(L:A310_FO_ALTIMETER BUG, Number) 10 + 1000 % (>L:A310_FO_ALTIMETER BUG)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Clock Mode FAST": {
		"method": "calcCode",
		"code": "0 (>L:A300DR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Clock Mode SLOW": {
		"method": "calcCode",
		"code": "1 (>L:A300DR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Clock Mode HLD": {
		"method": "calcCode",
		"code": "2 (>L:A300DR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Clock Mode RUN": {
		"method": "calcCode",
		"code": "3 (>L:A300DR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO Clock Mode SYNC": {
		"method": "calcCode",
		"code": "4 (>L:A300DR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO ET/CHRO Run Stop Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_ET_TOGGLE_BUTTON_FO)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310 FO ET/CHRO Start Stop Reset Push": {
		"method": "calcCode",
		"code": "1 (>L:A310_CHRONO_START_BUTTON_FO)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch  GTC 1 Softkey-1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_1)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 Softkey-2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_2)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 Softkey-3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_SoftKey_3)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 TopKnob Large INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 TopKnob Large DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 TopKnob PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Push)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 LowerKnob INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 LowerKnob DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 TopKnob Small INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 TopKnob Small DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN Perspective Touch GTC 1 LowerKnob PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_BottomKnob_Push)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_NAV__1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_NAV)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_ESC_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_ESC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_ET_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_ET)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_FRMT_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_FRMT)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_TERR_WX_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_TERR_WX)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS3000_TFC_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_Push_TFC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_AS300_AUTO_TILT_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_TILT_PUSH)"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 1 Toggle": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 2 Toggle": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 1 On": {
		"method": "calcCode",
		"code": "1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n\t\t1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 1 Off": {
		"method": "calcCode",
		"code": "0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n\t\t1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 2 On": {
		"method": "calcCode",
		"code": "1 (A:ELECTRICAL MASTER BATTERY:2, Bool) != if{ \n\t\t2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Battery 2 Off": {
		"method": "calcCode",
		"code": "0 (A:ELECTRICAL MASTER BATTERY:2, Bool) != if{ \n\t\t2 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Gen 1 On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! if{ \n\t 1 1 (>K:2:ALTERNATOR_SET) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Gen 1 Off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) if{ \n\t 1 0 (>K:2:ALTERNATOR_SET) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Gen 2 On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) ! if{ \n\t 2 1 (>K:2:ALTERNATOR_SET) }"
	},
	"FlightFX.Visionjet SF50.Electrical.Input.SF50 Elec Gen 2 Off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) if{ \n\t 2 0 (>K:2:ALTERNATOR_SET) }"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Strobe On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Strobe Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Landing On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Landing Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Wing Ice On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_1)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Wing Ice Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_1)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 Master Oxygen On": {
		"method": "calcCode",
		"code": "1 (>L:SF50_oxygen_switch, Bool)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 Master Oxygen Off": {
		"method": "calcCode",
		"code": "0 (>L:SF50_oxygen_switch, Bool)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 Fresh Air Max": {
		"method": "calcCode",
		"code": "1 (>L:SF50_air_flow_switch, Bool)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 Fresh Air Off": {
		"method": "calcCode",
		"code": "0 (>L:SF50_air_flow_switch, Bool)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Probe Heat On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Probe Heat Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Engine On": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, Bool) ! if{ (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Engine Off": {
		"method": "calcCode",
		"code": "(A:ENG ANTI ICE:1, Bool) if{ (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Wing Stab On": {
		"method": "calcCode",
		"code": "1 s0 (A:STRUCTURAL DEICE SWITCH, Bool) s1 != if{ \n\t (>K:TOGGLE_STRUCTURAL_DEICE) } \nl0 (>L:DEICE_Airframe_1)\n1 (>L:XMLVAR_IsDeiceAirFrame)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Wing Stab Off": {
		"method": "calcCode",
		"code": "0 s0 (A:STRUCTURAL DEICE SWITCH, Bool) != if{ \n\t (>K:TOGGLE_STRUCTURAL_DEICE) } \nl0 (>L:DEICE_Airframe_1)\n0 (>L:XMLVAR_IsDeiceAirFrame)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Windshield On": {
		"method": "calcCode",
		"code": "1 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ \n\t (>K:WINDSHIELD_DEICE_TOGGLE) }"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Windshield Off": {
		"method": "calcCode",
		"code": "0 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ \n\t (>K:WINDSHIELD_DEICE_TOGGLE) }"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Windshield High": {
		"method": "calcCode",
		"code": "1 (>L:SF50_deice_high, Bool)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Windshield Norm": {
		"method": "calcCode",
		"code": "0 (>L:SF50_deice_high, Bool)"
	},
	"FlightFX.Visionjet SF50.Anti-Ice.Input.SF50 Antiice Windshield Max Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_deice_max, Bool) ! (>L:SF50_deice_max, Bool)"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Ovhd Cabin 1 Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_1) \nl0 20 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) s2 \n(L:LIGHTING_CABIN_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) quit }"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Ovhd Cabin 1 Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_1) \nl0 20 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) s2 \n(L:LIGHTING_CABIN_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) quit }"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Ovhd Cabin 2 Light Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_2) \nl0 21 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) s2 \n(L:LIGHTING_CABIN_2) 0 > != if{ \n\t l2 ! 2 l0 (>K:2:CABIN_LIGHTS_SET) quit }"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Ovhd Cabin 2 Light Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_2) \nl0 21 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) s2 \n(L:LIGHTING_CABIN_2) 0 > != if{ \n\t l2 ! 2 l0 (>K:2:CABIN_LIGHTS_SET) quit }"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_TopKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_TopKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_TopKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_TopKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_TopKnob_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Push)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_Softkey-1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_1)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_Softkey-2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_2)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_Softkey-3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_SoftKey_3)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_LowerKnob_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_LowerKnob_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_2_LowerKnob_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Push)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_TopKnob_Large_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_TopKnob_Large_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_TopKnob_Large_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_TopKnob_Large_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_TopKnob_Small_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_TopKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_TopKnob_Small_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_TopKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_TopKnob_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_TopKnob_Push)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_Softkey-1": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_SoftKey_1)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_Softkey-2": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_SoftKey_2)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_Softkey-3": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_SoftKey_3)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_LowerKnob_DEC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_BottomKnob_Small_DEC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_LowerKnob_INC": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_BottomKnob_Small_INC)"
	},
	"FlightFX.Visionjet SF50.Avionics.Input.GARMIN_Perspective_Touch_GTC_3_LowerKnob_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_3_BottomKnob_Push)"
	},
	"PMDG.B737-700.Autopilot.Output. PMDG B737 MCP Speed A B Indicator": {
		"method": "calcCode",
		"code": "(L:ngx_SPDsymbols, number)"
	},
	"Got Friends.EA-7 Edgley Optica.Safety.Input.Emergency Locator Transmitter State": {
		"method": "calcCode",
		"code": "(L:ELT_ON) "
	},
	"SimWorks Studios.Kodiak 100.Engine.Input.Kodiak 100 Ignition toggle": {
		"method": "calcCode",
		"code": "(L:SWS_ENGINE_Switch_Ignition_1, Bool) ! (>L:SWS_ENGINE_Switch_Ignition_1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Engine.Input.Kodiak 100 Ignition On": {
		"method": "calcCode",
		"code": "1 (>L:SWS_ENGINE_Switch_Ignition_1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Engine.Input.Kodiak 100 Ignition Off": {
		"method": "calcCode",
		"code": "0 (>L:SWS_ENGINE_Switch_Ignition_1, Bool)"
	},
	"Just Flight.C208 Caravan.Electrical.Input.Starter - Start": {
		"method": "calcCode",
		"code": "2 (>K:1:STARTER1_SET) \n1 (>K:1:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Just Flight.C208 Caravan.Electrical.Input.Starter - OFF": {
		"method": "calcCode",
		"code": "0 (>A:TURB ENG IGNITION SWITCH EX1:1, Enum) \n0 (>L:XMLVAR_Ignition)"
	},
	"Just Flight.C208 Caravan.Electrical.Input.Starter - Motor": {
		"method": "calcCode",
		"code": "1 (>K:1:STARTER1_SET) \n0 (>K:1:TURBINE_IGNITION_SWITCH_SET1)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP FLC Toggle": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) \n(A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP APPR Toggle": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP FD Left Toggle": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP FD Right Toggle": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP FD Right Button Indicator": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:2, Bool)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP FD Left Button Indicator": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP VS Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP VS Button LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool)"
	},
	"Microsoft.Generic.Radio.Input.VOR1_OBI_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, Degrees) 10 - dnor (>K:VOR1_SET)"
	},
	"Microsoft.Generic.Radio.Input.VOR2_OBI_FAST_DEC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, Degrees) 10 - dnor (>K:VOR2_SET)"
	},
	"Microsoft.Generic.Radio.Input.VOR1_OBI_FAST_INC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:1, Degrees) 10 + dnor (>K:VOR1_SET)"
	},
	"Microsoft.Generic.Radio.Input.VOR2_OBI_FAST_INC": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, Degrees) 10 + dnor (>K:VOR2_SET)"
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng1 Starter Press": {
		"method": "calcCode",
		"code": "1 (>L:TOGGLE_STARTER1, Bool)\n1 (>L:STARTER1, Bool)"
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng1 Starter Release": {
		"method": "calcCode",
		"code": "0 (>L:TOGGLE_STARTER1, Bool)\n0 (>L:STARTER1, Bool)"
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng2 Starter Press": {
		"method": "calcCode",
		"code": "1 (>L:TOGGLE_STARTER2, Bool)\n1 (>L:STARTER2, Bool)"
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng2 Starter Release": {
		"method": "calcCode",
		"code": "0 (>L:TOGGLE_STARTER2, Bool)\n0 (>L:STARTER2, Bool)"
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng1 Prime  Press": {
		"method": "calcCode",
		"code": " 0 (>L:GENERIC_Momentary_PRIMER_SWITCH) \n(>K:TOGGLE_PRIMER1) \n(>H:GENERIC_Momentary_PRIMER_SWITCH) "
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng Prime  Release": {
		"method": "calcCode",
		"code": "1 (>L:GENERIC_Momentary_PRIMER_SWITCH) \n(>H:GENERIC_Momentary_PRIMER_SWITCH) "
	},
	"Flysimware.Cessna 414A.Engines.Input.C414A Eng2 Prime  Press": {
		"method": "calcCode",
		"code": "2 (>L:GENERIC_Momentary_PRIMER_SWITCH) \n(>K:TOGGLE_PRIMER2) \n(>H:GENERIC_Momentary_PRIMER_SWITCH)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 1 Low": {
		"method": "calcCode",
		"code": "0 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 0 == if{ \n\t\t (>K:TOGGLE_ELECT_FUEL_PUMP1) \t} \n(>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) "
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 1 Off": {
		"method": "calcCode",
		"code": "1 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 1 == if{ \n	 (>K:TOGGLE_ELECT_FUEL_PUMP1) } \n(>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 1 High": {
		"method": "calcCode",
		"code": "2 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 0 == if{ \n	(>K:TOGGLE_ELECT_FUEL_PUMP1) } \n(>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 2 Low": {
		"method": "calcCode",
		"code": "0 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 0 == if{ \n\t\t (>K:TOGGLE_ELECT_FUEL_PUMP2) } \n(>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 2 Off": {
		"method": "calcCode",
		"code": "1 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 1 == if{ \n\t\t (>K:TOGGLE_ELECT_FUEL_PUMP2) } \n(>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Aux Fuel Pump 2 High": {
		"method": "calcCode",
		"code": "2 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) \n(A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 0 == if{ \n\t\t (>K:TOGGLE_ELECT_FUEL_PUMP2) } \n(>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Rudder Trim Angle": {
		"method": "calcCode",
		"code": "(L:A32NX_HYD_RUDDER_TRIM_FEEDBACK_ANGLE)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RADIO FRACT DEC": {
		"method": "calcCode",
		"code": "(>K:COM3_RADIO_FRACT_DEC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RADIO FRACT INC": {
		"method": "calcCode",
		"code": "(>K:COM3_RADIO_FRACT_INC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RADIO WHOLE DEC": {
		"method": "calcCode",
		"code": "(>K:COM3_RADIO_WHOLE_DEC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RADIO WHOLE INC": {
		"method": "calcCode",
		"code": "(>K:COM3_RADIO_WHOLE_INC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RADIO SWAP": {
		"method": "calcCode",
		"code": "(>K:COM3_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RECEIVE SELECT": {
		"method": "calcCode",
		"code": "(>K:COM3_RECEIVE_SELECT) "
	},
	"Microsoft.Generic.Radio.Input.COM3 VOLUME SET": {
		"method": "calcCode",
		"code": "(>K:COM3_VOLUME_SET)"
	},
	"Microsoft.Generic.Radio.Input.COM3 VOLUME INC": {
		"method": "calcCode",
		"code": "(>K:COM3_VOLUME_INC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 VOLUME DEC": {
		"method": "calcCode",
		"code": "(>K:COM3_VOLUME_DEC)"
	},
	"Microsoft.Generic.Radio.Input.COM3 STBY RADIO SET": {
		"method": "calcCode",
		"code": "(>K:COM3_STBY_RADIO_SET)"
	},
	"Microsoft.Generic.Radio.Input.COM3 STBY RADIO SET HZ": {
		"method": "calcCode",
		"code": "(>K:COM3_STBY_RADIO_SET_HZ)"
	},
	"FenixSim.A320.Flight Controls.Input (Potentiometer).FNX320 Flaps Lever Set": {
		"method": "calcCode",
		"code": "@ 255.75 / near 0  max 4 min (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input (Potentiometer).FNX320 Speed Brake Lever Set": {
		"method": "calcCode",
		"code": "@ 15 - 336 / 0 max 3 min (>L:A_FC_SPEEDBRAKE)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_UPR_MENU_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_UPR_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_UPR_MENU_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_UPR_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_LWR_MENU_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_LWR_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_LWR_MENU_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_LWR_MENU)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_ENG_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_ENG)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_ENG_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_ENG)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_ESC_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_ESC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_ESC_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_ESC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_TERR_WX_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_TERR_WX)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_TERR_WX_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_TERR_WX)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_TFC_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_TFC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_TFC_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_TFC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_1_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_MEM1)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_1_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_MEM1)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_1_1_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Hold_MEM1)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_1_2_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Hold_MEM1)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_2_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_MEM2)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_2_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_MEM2)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_2_1_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Hold_MEM2)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_2_2_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Hold_MEM2)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_3_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_MEM3)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_3_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_MEM3)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_3_1_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Hold_MEM3)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_MEM_3_2_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Hold_MEM3)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_SYS_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_Push_SYS)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_SYS_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_Push_SYS)"
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_ENG": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX ECAM ACTIVE PAGE BLEED": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_ELEC": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_HYD": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_FUEL": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_APU": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 6 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_COND": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_DOOR": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 == "
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_WHEEL": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 ==\n"
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_F_CTL": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 =="
	},
	"Fly By Wire.A320.ECAM.Output.A32NX_ECAM_ACTIVE_PAGE_STS": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 =="
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM ENG Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 != if{  \n   0 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM BLEED Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 != if{  \n   1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM PRESS Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 != if{  \n   2 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM ELEC Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 != if{  \n   3 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM HYD Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 != if{  \n   4 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM FUEL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 != if{  \n   5 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM APU Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 6 != if{  \n   6 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM COND Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 != if{  \n   7 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM DOOR Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 != if{  \n   8 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM WHEEL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 != if{  \n   9 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM FCTL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 != if{  \n   10 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM ALL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_ECAM_ALL_Push_IsDown)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM ALL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_ECAM_ALL_Push_IsDown)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM STS Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 != if{  \n   11 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM TOCONFIG Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM EMERCANC Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_EMERCANC)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM CLR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM CLR2 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR2)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input.A32NX ECAM RCL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_RCL)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_APCP_IAS_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_APCP_IAS_TOGGLE)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK1L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK1L, Number) ++ (>L:ASCRJ_MCDU1_LSK1L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK2L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK2L, Number) ++ (>L:ASCRJ_MCDU1_LSK2L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK3L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK3L, Number) ++ (>L:ASCRJ_MCDU1_LSK3L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK4L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK4L, Number) ++ (>L:ASCRJ_MCDU1_LSK4L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK5L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK5L, Number) ++ (>L:ASCRJ_MCDU1_LSK5L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK6L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK6L, Number) ++ (>L:ASCRJ_MCDU1_LSK6L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK1R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK1R, Number) ++ (>L:ASCRJ_MCDU1_LSK1R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK2R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK2R, Number) ++ (>L:ASCRJ_MCDU1_LSK2R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK3R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK3R, Number) ++ (>L:ASCRJ_MCDU1_LSK3R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK4R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK4R, Number) ++ (>L:ASCRJ_MCDU1_LSK4R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK5R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK5R, Number) ++ (>L:ASCRJ_MCDU1_LSK5R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LSK6R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LSK6R, Number) ++ (>L:ASCRJ_MCDU1_LSK6R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_MSG": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_MSG, Number) ++ (>L:ASCRJ_MCDU1_MSG)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_DIR_INTC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_DIR_INTC, Number) ++ (>L:ASCRJ_MCDU1_DIR_INTC)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_FPLN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_FPLN, Number) ++ (>L:ASCRJ_MCDU1_FPLN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_DEP_ARR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_DEP_ARR, Number) ++ (>L:ASCRJ_MCDU1_DEP_ARR)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_HOLD": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_HOLD, Number) ++ (>L:ASCRJ_MCDU1_HOLD)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_UP": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_UP, Number) ++ (>L:ASCRJ_MCDU1_UP)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_PREV_PAGE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_PREV_PAGE, Number) ++ (>L:ASCRJ_MCDU1_PREV_PAGE)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_NEXT_PAGE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_NEXT_PAGE, Number) ++ (>L:ASCRJ_MCDU1_NEXT_PAGE)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_INDEX": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_INDEX, Number) ++ (>L:ASCRJ_MCDU1_INDEX)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_FIX": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_FIX, Number) ++ (>L:ASCRJ_MCDU1_FIX)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_LEGS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_LEGS, Number) ++ (>L:ASCRJ_MCDU1_LEGS)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_SEC_FPLN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_SEC_FPLN, Number) ++ (>L:ASCRJ_MCDU1_SEC_FPLN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_VNAV": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_VNAV, Number) ++ (>L:ASCRJ_MCDU1_VNAV)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_DOWN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_DOWN, Number) ++ (>L:ASCRJ_MCDU1_DOWN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_MCDU_MENU": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_MCDU_MENU, Number) ++ (>L:ASCRJ_MCDU1_MCDU_MENU)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_EXEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_EXEC, Number) ++ (>L:ASCRJ_MCDU1_EXEC)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_RADIO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_RADIO, Number) ++ (>L:ASCRJ_MCDU1_RADIO)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_PROG": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_PROG, Number) ++ (>L:ASCRJ_MCDU1_PROG)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_PERF": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_PERF, Number) ++ (>L:ASCRJ_MCDU1_PERF)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_MFD_DATA": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_MFD_DATA, Number) ++ (>L:ASCRJ_MCDU1_MFD_DATA)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_MFD_MENU": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_MFD_MENU, Number) ++ (>L:ASCRJ_MCDU1_MFD_MENU)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_MFD_ADV": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_MFD_ADV, Number) ++ (>L:ASCRJ_MCDU1_MFD_ADV)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_0": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_0, Number) ++ (>L:ASCRJ_MCDU1_0)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_1": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_1, Number) ++ (>L:ASCRJ_MCDU1_1)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_2": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_2, Number) ++ (>L:ASCRJ_MCDU1_2)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_3": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_3, Number) ++ (>L:ASCRJ_MCDU1_3)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_4": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_4, Number) ++ (>L:ASCRJ_MCDU1_4)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_5": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_5, Number) ++ (>L:ASCRJ_MCDU1_5)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_6": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_6, Number) ++ (>L:ASCRJ_MCDU1_6)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_7": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_7, Number) ++ (>L:ASCRJ_MCDU1_7)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_8": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_8, Number) ++ (>L:ASCRJ_MCDU1_8)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_9": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_9, Number) ++ (>L:ASCRJ_MCDU1_9)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_PLUS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_PLUS, Number) ++ (>L:ASCRJ_MCDU1_PLUS)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_PERIOD": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_PERIOD, Number) ++ (>L:ASCRJ_MCDU1_PERIOD)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_A": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_A, Number) ++ (>L:ASCRJ_MCDU1_A)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_B": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_B, Number) ++ (>L:ASCRJ_MCDU1_B)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_C": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_C, Number) ++ (>L:ASCRJ_MCDU1_C)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_D": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_D, Number) ++ (>L:ASCRJ_MCDU1_D)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_E": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_E, Number) ++ (>L:ASCRJ_MCDU1_E)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_F": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_F, Number) ++ (>L:ASCRJ_MCDU1_F)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_G": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_G, Number) ++ (>L:ASCRJ_MCDU1_G)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_H": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_H, Number) ++ (>L:ASCRJ_MCDU1_H)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_I": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_I, Number) ++ (>L:ASCRJ_MCDU1_I)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_J": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_J, Number) ++ (>L:ASCRJ_MCDU1_J)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_K": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_K, Number) ++ (>L:ASCRJ_MCDU1_K)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_L, Number) ++ (>L:ASCRJ_MCDU1_L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_M": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_M, Number) ++ (>L:ASCRJ_MCDU1_M)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_N": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_N, Number) ++ (>L:ASCRJ_MCDU1_N)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_O": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_O, Number) ++ (>L:ASCRJ_MCDU1_O)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_P": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_P, Number) ++ (>L:ASCRJ_MCDU1_P)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_Q": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_Q, Number) ++ (>L:ASCRJ_MCDU1_Q)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_R, Number) ++ (>L:ASCRJ_MCDU1_R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_S": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_S, Number) ++ (>L:ASCRJ_MCDU1_S)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_T": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_T, Number) ++ (>L:ASCRJ_MCDU1_T)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_U": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_U, Number) ++ (>L:ASCRJ_MCDU1_U)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_V": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_V, Number) ++ (>L:ASCRJ_MCDU1_V)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_W": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_W, Number) ++ (>L:ASCRJ_MCDU1_W)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_X": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_X, Number) ++ (>L:ASCRJ_MCDU1_X)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_Y": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_Y, Number) ++ (>L:ASCRJ_MCDU1_Y)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_Z": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_Z, Number) ++ (>L:ASCRJ_MCDU1_Z)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_SP": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_SP, Number) ++ (>L:ASCRJ_MCDU1_SP)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_DEL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_DEL, Number) ++ (>L:ASCRJ_MCDU1_DEL)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_SLASH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_SLASH, Number) ++ (>L:ASCRJ_MCDU1_SLASH)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU1_CLR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU1_CLR, Number) ++ (>L:ASCRJ_MCDU1_CLR)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK1L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK1L, Number) ++ (>L:ASCRJ_MCDU2_LSK1L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK2L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK2L, Number) ++ (>L:ASCRJ_MCDU2_LSK2L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK3L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK3L, Number) ++ (>L:ASCRJ_MCDU2_LSK3L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK4L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK4L, Number) ++ (>L:ASCRJ_MCDU2_LSK4L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK5L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK5L, Number) ++ (>L:ASCRJ_MCDU2_LSK5L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK6L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK6L, Number) ++ (>L:ASCRJ_MCDU2_LSK6L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK1R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK1R, Number) ++ (>L:ASCRJ_MCDU2_LSK1R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK2R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK2R, Number) ++ (>L:ASCRJ_MCDU2_LSK2R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK3R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK3R, Number) ++ (>L:ASCRJ_MCDU2_LSK3R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK4R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK4R, Number) ++ (>L:ASCRJ_MCDU2_LSK4R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK5R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK5R, Number) ++ (>L:ASCRJ_MCDU2_LSK5R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LSK6R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LSK6R, Number) ++ (>L:ASCRJ_MCDU2_LSK6R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_MSG": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_MSG, Number) ++ (>L:ASCRJ_MCDU2_MSG)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_DIR_INTC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_DIR_INTC, Number) ++ (>L:ASCRJ_MCDU2_DIR_INTC)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_FPLN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_FPLN, Number) ++ (>L:ASCRJ_MCDU2_FPLN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_DEP_ARR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_DEP_ARR, Number) ++ (>L:ASCRJ_MCDU2_DEP_ARR)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_HOLD": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_HOLD, Number) ++ (>L:ASCRJ_MCDU2_HOLD)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_UP": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_UP, Number) ++ (>L:ASCRJ_MCDU2_UP)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_PREV_PAGE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_PREV_PAGE, Number) ++ (>L:ASCRJ_MCDU2_PREV_PAGE)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_NEXT_PAGE": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_NEXT_PAGE, Number) ++ (>L:ASCRJ_MCDU2_NEXT_PAGE)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_INDEX": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_INDEX, Number) ++ (>L:ASCRJ_MCDU2_INDEX)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_FIX": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_FIX, Number) ++ (>L:ASCRJ_MCDU2_FIX)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_LEGS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_LEGS, Number) ++ (>L:ASCRJ_MCDU2_LEGS)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_SEC_FPLN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_SEC_FPLN, Number) ++ (>L:ASCRJ_MCDU2_SEC_FPLN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_VNAV": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_VNAV, Number) ++ (>L:ASCRJ_MCDU2_VNAV)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_DOWN": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_DOWN, Number) ++ (>L:ASCRJ_MCDU2_DOWN)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_MCDU_MENU": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_MCDU_MENU, Number) ++ (>L:ASCRJ_MCDU2_MCDU_MENU)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_EXEC": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_EXEC, Number) ++ (>L:ASCRJ_MCDU2_EXEC)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_RADIO": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_RADIO, Number) ++ (>L:ASCRJ_MCDU2_RADIO)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_PROG": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_PROG, Number) ++ (>L:ASCRJ_MCDU2_PROG)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_PERF": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_PERF, Number) ++ (>L:ASCRJ_MCDU2_PERF)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_MFD_DATA": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_MFD_DATA, Number) ++ (>L:ASCRJ_MCDU2_MFD_DATA)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_MFD_MENU": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_MFD_MENU, Number) ++ (>L:ASCRJ_MCDU2_MFD_MENU)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_MFD_ADV": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_MFD_ADV, Number) ++ (>L:ASCRJ_MCDU2_MFD_ADV)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_0": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_0, Number) ++ (>L:ASCRJ_MCDU2_0)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_1": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_1, Number) ++ (>L:ASCRJ_MCDU2_1)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_2": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_2, Number) ++ (>L:ASCRJ_MCDU2_2)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_3": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_3, Number) ++ (>L:ASCRJ_MCDU2_3)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_4": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_4, Number) ++ (>L:ASCRJ_MCDU2_4)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_5": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_5, Number) ++ (>L:ASCRJ_MCDU2_5)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_6": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_6, Number) ++ (>L:ASCRJ_MCDU2_6)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_7": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_7, Number) ++ (>L:ASCRJ_MCDU2_7)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_8": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_8, Number) ++ (>L:ASCRJ_MCDU2_8)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_9": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_9, Number) ++ (>L:ASCRJ_MCDU2_9)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_PLUS": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_PLUS, Number) ++ (>L:ASCRJ_MCDU2_PLUS)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_PERIOD": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_PERIOD, Number) ++ (>L:ASCRJ_MCDU2_PERIOD)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_A": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_A, Number) ++ (>L:ASCRJ_MCDU2_A)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_B": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_B, Number) ++ (>L:ASCRJ_MCDU2_B)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_C": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_C, Number) ++ (>L:ASCRJ_MCDU2_C)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_D": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_D, Number) ++ (>L:ASCRJ_MCDU2_D)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_E": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_E, Number) ++ (>L:ASCRJ_MCDU2_E)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_F": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_F, Number) ++ (>L:ASCRJ_MCDU2_F)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_G": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_G, Number) ++ (>L:ASCRJ_MCDU2_G)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_H": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_H, Number) ++ (>L:ASCRJ_MCDU2_H)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_I": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_I, Number) ++ (>L:ASCRJ_MCDU2_I)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_J": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_J, Number) ++ (>L:ASCRJ_MCDU2_J)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_K": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_K, Number) ++ (>L:ASCRJ_MCDU2_K)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_L": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_L, Number) ++ (>L:ASCRJ_MCDU2_L)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_M": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_M, Number) ++ (>L:ASCRJ_MCDU2_M)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_N": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_N, Number) ++ (>L:ASCRJ_MCDU2_N)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_O": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_O, Number) ++ (>L:ASCRJ_MCDU2_O)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_P": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_P, Number) ++ (>L:ASCRJ_MCDU2_P)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_Q": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_Q, Number) ++ (>L:ASCRJ_MCDU2_Q)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_R": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_R, Number) ++ (>L:ASCRJ_MCDU2_R)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_S": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_S, Number) ++ (>L:ASCRJ_MCDU2_S)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_T": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_T, Number) ++ (>L:ASCRJ_MCDU2_T)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_U": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_U, Number) ++ (>L:ASCRJ_MCDU2_U)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_V": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_V, Number) ++ (>L:ASCRJ_MCDU2_V)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_W": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_W, Number) ++ (>L:ASCRJ_MCDU2_W)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_X": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_X, Number) ++ (>L:ASCRJ_MCDU2_X)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_Y": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_Y, Number) ++ (>L:ASCRJ_MCDU2_Y)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_Z": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_Z, Number) ++ (>L:ASCRJ_MCDU2_Z)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_SP": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_SP, Number) ++ (>L:ASCRJ_MCDU2_SP)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_DEL": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_DEL, Number) ++ (>L:ASCRJ_MCDU2_DEL)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_SLASH": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_SLASH, Number) ++ (>L:ASCRJ_MCDU2_SLASH)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.ASCRJ_MCDU2_CLR": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_CLR, Number) ++ (>L:ASCRJ_MCDU2_CLR)"
	},
	"Aerosoft.CRJ 550-700-1000.MCDU.Input.ASCRJ_MCDU2_I": {
		"method": "calcCode",
		"code": "(L:ASCRJ_MCDU2_I, Number) ++ (>L:ASCRJ_MCDU2_I)"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4_LIGHTS_PULSE_ON_TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_RECOGNITION_1) ! s0 (>L:LIGHTING_RECOGNITION_1) \n1 l0 (>K:2:RECOGNITION_LIGHTS_SET)  \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n3 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Safety.Input.CJ4_LIGHTS_PASS_BELT_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.CJ4 AAU1.Safety.Input.CJ4_LIGHTS_PASS_SAFETY_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_NAVIGATION": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_LNAV)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_VERTICALSPEED": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_VSPEED)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_LOCALIZER": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_APPROACH": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_HEADING": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_HEADING_HOLD)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_ALTITUDE": {
		"method": "calcCode",
		"code": "{ 1 (>L:AP_ALT_HOLD_ACTIVE) } ++ { 0 (>L:AP_VS_ACTIVE) }"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_FLIGHTLEVELCHANGE": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_FLCH)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_AUTOTHROTTLE - Hold": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_ARM)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_VERTICALNAVIGATION": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_VNAV)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_AUTOPILOT": {
		"method": "calcCode",
		"code": "(>K:AP_MASTER)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_FLIGHTDIRECTOR - On": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_ALT_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_DEC)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_ALT_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_VAR_INC)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_SPD_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_DEC)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_SPD_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_SPD_VAR_INC)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_VS_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_DEC)"
	},
	"Asobo.B787-10.Autopilot.Input.AP_VS_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_DISENGAGE - On": {
		"method": "calcCode",
		"code": "1 (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_DISENGAGE - Off": {
		"method": "calcCode",
		"code": "0 (>K:AUTOPILOT_DISENGAGE_SET)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_AUTOTHROTTLE_ARM - On": {
		"method": "calcCode",
		"code": "{ 0 == (>K:AUTO_THROTTLE_ARM) } ++ { 1 (>L:AS01B_AUTO_THROTTLE_ARM_STATE) }"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_AUTOTHROTTLE_ARM - Off": {
		"method": "calcCode",
		"code": "{ 1 == (>K:AUTO_THROTTLE_ARM) } ++ { 0 (>L:AS01B_AUTO_THROTTLE_ARM_STATE) }"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_SWITCH_FLIGHTDIRECTOR - Off": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"WB Sim.Cessna 152X.Interaction.Input.C152X-Door-Pilot-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_DOOR_PILOT, Bool) ! (>L:C152X_DOOR_PILOT, Bool)"
	},
	"WB Sim.Cessna 152X.Interaction.Input.C152X-Door-Copilot-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_DOOR_COPILOT, Bool) ! (>L:C152X_DOOR_COPILOT, Bool)"
	},
	"WB Sim.Cessna 152X.Autopilot.Input.C152X-Instruments-AP-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_APVIZ, Number) ! (>L:C152X_APVIZ, Number)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX.FCU_HDG_PUSH": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX.FCU_HDG_PULL": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_HDG_PULL)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX.FCU_SPD_PUSH": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A32NX.FCU_SPD_PULL": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_SPD_PULL)"
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Pump Knob Off": {
		"method": "calcCode",
		"code": "(L:SF50_knob_stop_run, Bool) if{ \n   0 (L:SF50_knob_stop_run, Bool)\n   0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"FlightFX.Visionjet SF50.Fuel.Input.SF50 Fuel Pump Knob Run": {
		"method": "calcCode",
		"code": "1 (>L:SF50_knob_stop_run, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Speed Ref Wheel Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n\t(A:AUTOPILOT MACH HOLD VAR:0, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) \n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR:0, knots) 1 + (>K:2:AP_SPD_VAR_SET) } "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Speed Ref Wheel Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n\t(A:AUTOPILOT MACH HOLD VAR:0, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) \n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR:0, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } "
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_HEADING_SEL": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_HEADING_SEL)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP HDG Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP NAV Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP APR Toggle": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Heading Sync": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP HDG Knob Inc": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP HDG Knob Dec": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Button Toggle": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) !  if{ (>K:AP_MASTER)\n\t(A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } } "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP FD Toggle": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_ALTITUDE_INTERVENTION": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_ALT_INTERVENTION)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP LVL Button Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER)\n(A:AUTOPILOT WING LEVELER, Bool) if{\n   (A:AUTOPILOT MASTER, Bool) s0 ! if{ \n	  (>K:AUTOPILOT_ON) }\n   (>K:AP_PITCH_LEVELER_ON) } els{ \n	  (>K:AP_PITCH_LEVELER_OFF) \nl0 if{ (>K:AUTOPILOT_ON) } els{ (>K:AUTOPILOT_OFF) } }\n"
	},
	"Fly By Wire.A320-Dev.Lights.Input.All Exterior Lights - Park/Parking": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_STROBE_0)\n1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)\n0 1 (>K:2:BEACON_LIGHTS_SET)\n0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)\n0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)\n0 s0 (>L:LIGHTING_TAXI_2) \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_3) \n1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_1) \n0 1 r (>K:2:LANDING_LIGHTS_SET) \n0 1 r (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.All Exterior Lights - Taxi": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_STROBE_0)\n1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)\n0 1 (>K:2:BEACON_LIGHTS_SET)\n0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)\n0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)\n1 s0 (>L:LIGHTING_TAXI_2) \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_3) \n1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n1 (>L:LIGHTING_LANDING_1) \n0 1 r (>K:2:LANDING_LIGHTS_SET) \n1 1 r (>K:2:TAXI_LIGHTS_SET)\n\n"
	},
	"Fly By Wire.A320-Dev.Lights.Input.All Exterior Lights - Take Off": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)\n0 1 (>K:2:BEACON_LIGHTS_SET)\n0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)\n0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)\n0 s0 (>L:LIGHTING_TAXI_2) \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)\n0 (>L:LIGHTING_LANDING_2)\n0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)\n0 (>L:LIGHTING_LANDING_3) \n0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)\n0 (>L:LIGHTING_LANDING_1) \n1 1 r (>K:2:LANDING_LIGHTS_SET) \n0 1 r (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.All Exterior Lights - In Flight": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)\n0 1 (>K:2:BEACON_LIGHTS_SET)\n0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)\n0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)\n0 s0 (>L:LIGHTING_TAXI_2) \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_3) \n1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_1) \n0 1 r (>K:2:LANDING_LIGHTS_SET) \n0 1 r (>K:2:TAXI_LIGHTS_SET)"
	},
	"Asobo.C208 Caravan.Lights.Input.Left Flood Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:5, Percent) 1 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.C208 Caravan.Lights.Input.Left Flood Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Glareshield_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:5, Percent) 1 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.C208 Caravan.Lights.Input.Right Flood Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:6, Percent) 1 - 0 max 6 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.C208 Caravan.Lights.Input.Right Flood Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Glareshield_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:6, Percent) 1 + 100 min 6 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Pedestal Flood Light Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:7, Percent) 1 - 0 max 7 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Pedestal Flood Light Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Glareshield_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:7, Percent) 1 + 100 min 7 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Pilot instrument Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Panel_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:2, Percent) 1 + 100 min 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Pilot instrument Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, Percent) 1 - 0 max 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Copilot instrument Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Panel_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:3, Percent) 1 + 100 min 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Copilot instrument Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent) 1 - 0 max 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Circuit Breakers Light Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Glareshield_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:8, Percent) 1 + 100 min 8 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Circuit Breakers Light Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:8, Percent) 1 - 0 max 8 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Engine Instruments Light Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Panel_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:4, Percent) 1 + 100 min 4 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Engine Instruments Light Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4, Percent) 1 - 0 max 4 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Radio Panels Backlight Incr": {
		"method": "calcCode",
		"code": "1 (>K:2:Panel_LIGHTS_SET)\n(A:LIGHT POTENTIOMETER:9, Percent) 1 + 100 min 9 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Radio Panels Backlight Decr": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:9, Percent) 1 - 0 max 9 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.NAV Lights ON": {
		"method": "calcCode",
		"code": "1 (>K:2:NAV_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.NAV Lights OFF": {
		"method": "calcCode",
		"code": "0 (>K:2:NAV_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.Beacon Light ON": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.Beacon Light OFF": {
		"method": "calcCode",
		"code": "0 (>K:BEACON_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.Strobes Lights ON": {
		"method": "calcCode",
		"code": "1 (>K:2:STROBES_SET)"
	},
	"Just Flight.C208 Caravan.Lights.Input.Strobes Lights OFF": {
		"method": "calcCode",
		"code": "0 (>K:2:STROBES_SET)"
	},
	"Just Flight.C208 Caravan.Autopilot.Input.AP Master TOGGLE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (A:AUTOPILOT MASTER, bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }"
	},
	"Just Flight.C208 Caravan.Autopilot.Input.GPS/NAV Autopilot Source TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_GPS_DRIVES_NAV1)"
	},
	"Just Flight.C208 Caravan.Autopilot.Input.AP LNAV MODE (BENDIX KAP 140)": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Just Flight.C208 Caravan.Autopilot.Input.AP V/S DN BUTTON (KAP 140)": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_DN)"
	},
	"Just Flight.C208 Caravan.Autopilot.Input.AP V/S UP BUTTON (KAP 140)": {
		"method": "calcCode",
		"code": "(>H:KAP140_Push_UP)"
	},
	"Just Flight.C208 Caravan.Anti-Ice.Input.A/ICE PITOT HEAT 1-2 ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)\n2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)"
	},
	"Just Flight.C208 Caravan.Anti-Ice.Input.A/ICE PITOT HEAT 1-2 OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)\n2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)"
	},
	"Just Flight.C208 Caravan.Anti-Ice.Input.Windshield MODE": {
		"method": "calcCode",
		"code": "0 (>L:var_windshieldDeiceMode)"
	},
	"Just Flight.C208 Caravan.Anti-Ice.Input.PROPELLER DEICE MODE": {
		"method": "calcCode",
		"code": "0 (>L:var_propDeiceMode)"
	},
	"Just Flight.C208 Caravan.Light.Input.Cabin Light ON": {
		"method": "calcCode",
		"code": "1 (>K:2:CABIN_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Light.Input.Cabin Light OFF": {
		"method": "calcCode",
		"code": "0 (>K:2:CABIN_LIGHTS_SET)"
	},
	"Just Flight.C208 Caravan.Flight Controls.Input.FUEL Tanks Selector Both ON": {
		"method": "calcCode",
		"code": "1 (>K:FUEL_SELECTOR_SET)"
	},
	"Just Flight.C208 Caravan.Fuel.Input.FUEL Tanks Selector Both OFF": {
		"method": "calcCode",
		"code": "0 (>K:FUEL_SELECTOR_SET)"
	},
	"Just Flight.C208 Caravan.Fuel.Input.Fuel Boost MODE": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Just Flight.C208 Caravan.Flight Controls.Input.FUEL Condition Lever": {
		"method": "calcCode",
		"code": "1 (>K:SET_FUEL_VALVE_ENG1)\n"
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHTING_GLARESHIELD_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 - 0 max 100 min \ns0 (>L:LIGHTING_GLARESHIELD_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT GLARESHIELD:1, Bool) s2 \n(L:LIGHTING_GLARESHIELD_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit \n}"
	},
	"Carenado.M20R OVATION.Lights.Input.LIGHTING_GLARESHIELD_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 + 0 max 100 min \ns0 (>L:LIGHTING_GLARESHIELD_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT GLARESHIELD:1, Bool) s2 \n(L:LIGHTING_GLARESHIELD_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit \n}"
	},
	"Carenado.M20R OVATION.Autopilot.Input.KFC150_Gauge_TEST_OnPress": {
		"method": "calcCode",
		"code": "1 (>L:Gauge_TEST_KFC150)"
	},
	"Microsoft.Generic.Avionics.Output.KAP140_ALT_ALERTER": {
		"method": "calcCode",
		"code": "(L:KAP140_ALT_ALERTER, Number)"
	},
	"Carenado.M20R OVATION.Autopilot.Input.KFC150_Gauge_TEST_OnRelease": {
		"method": "calcCode",
		"code": "0 (>L:Gauge_TEST_KFC150)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD STROBE LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_STROBE_0, Number) ++ 3 % s0 (>L:LIGHTING_STROBE_0, Number) \nl0 0 == if{ 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) quit }\nl0 1 == if{ 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) quit }\n0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD BEACON LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT BEACON, bool) ! (>K:BEACON_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OVHD RUNWAY TURNOFF LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI:2, Bool) ! sp0 \n2 l0 (>K:2:TAXI_LIGHTS_SET) \n3 l0 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH NOSE LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_1, Number) ++ 3 % s0 (>L:LIGHTING_LANDING_1)\nl0 0 == if{\t 1 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET) quit }\nl0 1 == if{\t 0 1 r (>K:2:LANDING_LIGHTS_SET) 1 1 r (>K:2:TAXI_LIGHTS_SET) quit }\n0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET) "
	},
	"Fly By Wire.A320-Dev.Lights.Input.LANDING LIGHTS L TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_2, Number) 0 == if{ \n\t2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n} els{ \n\t(L:LIGHTING_LANDING_2, Number) 1 == if{ \n\t\t0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)\n\t} els{ \n\t\t1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n\t} \n}"
	},
	"Fly By Wire.A320-Dev.Lights.Input.LANDING LIGHTS R TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_3, Number) 0 == if{ \n\t2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n} els{ \n\t(L:LIGHTING_LANDING_3, Number) 1 == if{ \n\t\t0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)\n\t} els{ \n\t\t1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n\t} \n}"
	},
	"Fly By Wire.A320-Dev.Lights.Input.LANDING LIGHTS L+R TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_2, Number) 0 == if{ \n\t2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n\t2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n} els{ \n\t(L:LIGHTING_LANDING_2, Number) 1 == if{ \n\t\t0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)\n\t\t0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)\n\t} els{ \n\t\t1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n\t\t1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)\n\t} \n}"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TCAS MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_SWITCH_TCAS_POSITION, Number) ++ 3 % (>L:A32NX_SWITCH_TCAS_POSITION, Number)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TCAS MODE STANDBY": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_SWITCH_TCAS_POSITION)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TCAS MODE TA": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_SWITCH_TCAS_POSITION)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TCAS MODE TARA": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_SWITCH_TCAS_POSITION)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TRANSPONDER MODE AUTO": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_TRANSPONDER_MODE)"
	},
	"Fly By Wire.A320-Dev.Navigation.Input.TRANSPONDER MODE": {
		"method": "calcCode",
		"code": "(L:A32NX_TRANSPONDER_MODE, Number) ++ 3 % (>L:A32NX_TRANSPONDER_MODE, Number)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.RADAR PWS TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_SWITCH_RADAR_PWS_POSITION) ! (>L:A32NX_SWITCH_RADAR_PWS_POSITION)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER SYSTEM 1": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_A320_WEATHERRADAR_SYS)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER SYSTEM OFF": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_A320_WEATHERRADAR_SYS)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER SYSTEM 2": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_A320_WEATHERRADAR_SYS)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER SYSTEM 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WEATHERRADAR_SYS) ! (>L:XMLVAR_A320_WEATHERRADAR_SYS)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER MODE WX": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_A320_WEATHERRADAR_MODE)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER MODE WX+T": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_A320_WEATHERRADAR_MODE)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER MODE TURB": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_A320_WEATHERRADAR_MODE)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER MODE MAP": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_A320_WEATHERRADAR_MODE)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER MODE TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WEATHERRADAR_MODE, Number) ++ 4 % (>L:XMLVAR_A320_WEATHERRADAR_MODE, Number)"
	},
	"Fly By Wire.A320-Dev.Radar.Input.WEATHER SYSTEM 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WEATHERRADAR_SYS) 1 == if{ 2 (>L:XMLVAR_A320_WEATHERRADAR_SYS) } els{ 1 (>L:XMLVAR_A320_WEATHERRADAR_SYS) }"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_RWY_TURNOFF_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_RWY_TURNOFF) ! (>L:S_OH_EXT_LT_RWY_TURNOFF)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_STROBE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_STROBE, Number) ++ 3 % (>L:S_OH_EXT_LT_STROBE, Number)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NAVLOGO_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_NAV_LOGO, Number) ++ 3 % (>L:S_OH_EXT_LT_NAV_LOGO, Number)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_L_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_LANDING_L, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_L, Number)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_R_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_LANDING_R, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_R, Number)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_LANDING_BOTH_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_LANDING_L, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_L, Number)\n(L:S_OH_EXT_LT_LANDING_R, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_R, Number)"
	},
	"FenixSim.A320.Lights.Input.FNX320_LIGHT_NOSE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_OH_EXT_LT_NOSE, Number) ++ 3 % (>L:S_OH_EXT_LT_NOSE, Number)"
	},
	"FenixSim.A320.Radar.Input.FNX320 WX System Switch 1 Toggle": {
		"method": "calcCode",
		"code": "(L:S_WR_SYS) ! (>L:S_WR_SYS)"
	},
	"FenixSim.A320.Radar.Input.FNX320 WX System Switch 2 Toggle": {
		"method": "calcCode",
		"code": "(L::S_WR_SYS) 1 == if{ 2 (>L::S_WR_SYS) } els{ 1 (>L::S_WR_SYS) }"
	},
	"FenixSim.A320.Radar.Input.FNX320 WX PWS OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_WR_PRED_WS)"
	},
	"FenixSim.A320.Radar.Input.FNX320 WX PWS ON": {
		"method": "calcCode",
		"code": "1 (>L:S_WR_PRED_WS)"
	},
	"FenixSim.A320.Radar.Input.FNX320 WX PWS TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_WR_PRED_WS) ! (>L:S_WR_PRED_WS)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_RightKnob_Large_INC)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_1_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_DATA_PUSH)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_2_PUSH": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_DATA_PUSH)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_1_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_1_DATA_PUSH_LONG)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.CJ4_MFD_DATA_2_HOLD": {
		"method": "calcCode",
		"code": "(>H:Generic_Lwr_2_DATA_PUSH_LONG)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP SPD IAS Mach Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) \n(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) (>L:XMLVAR_AirSpeedIsInMach)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP SPD Knob Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet) if{  \n\t(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n\t\t1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) \n\t} els{ \n\t\t1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) \n\t} "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP SPD Knob Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet) if{  \n\t(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ \n\t\t1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) \n\t} els{ \n\t\t1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) \n\t} "
	},
	"Asobo.CJ4 AAU1.Autopilot.Input.CJ4_AUTOPILOT_APPR_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Working Title.CJ4.Autopilot.Output.CJ4 TEST OUTPUT": {
		"method": "calcCode",
		"code": "(L:CJ4_TESTING,number) 3 ==\n(L:CJ4_SOME_MORE_TESTING,BOOL) or\n(L:more testing with Lvars, number) 365 < and \n"
	},
	"Microsoft.Generic.Warning System.Output.Master Warning Active": {
		"method": "calcCode",
		"code": "(A:MASTER WARNING ACTIVE,bool)"
	},
	"Microsoft.Generic.Warning System.Output.Master Caution Active": {
		"method": "calcCode",
		"code": "(A:MASTER CAUTION ACTIVE,bool)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Middle_Knob_Button": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_2_MiddleKnob_Push)\n"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_RightKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_RightKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_RightKnob_Small_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_RightKnob_Small_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_RightKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_RightKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_RightKnob_Large_INC)"
	},
	"Microsoft.Generic.Warning System.Output.Vacuum Warning": {
		"method": "calcCode",
		"code": "(A:WARNING VACUUM, Bool)"
	},
	"Microsoft.Generic.Warning System.Output.Oil Pressure Warning": {
		"method": "calcCode",
		"code": "(A:WARNING OIL PRESSURE, Bool)"
	},
	"Microsoft.Generic.Warning System.Output.Low Voltage Warning": {
		"method": "calcCode",
		"code": "(A:WARNING VOLTAGE, Bool)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Inner_Knob_Button_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 2 + (>L:myTimer)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Right_Inner_Knob_Button_Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:myTimer) < if{\n(>H:AS3000_TSC_Vertical_2_RightKnob_Push) } \nels{ (>H:AS3000_TSC_Vertical_2_RightKnob_Push_Long) } "
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Middle_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_MiddleKnob_Dec)\n"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Middle_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_MiddleKnob_Inc)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Middle_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_MiddleKnob_Inc)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Middle_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_MiddleKnob_Dec)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Middle_Knob_Button": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_1_MiddleKnob_Push)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_3_Middle_Knob_Button": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_3_MiddleKnob_Push)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Pan_X_Right": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_1_Joystick_Right)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Pan_X_Left": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_1_Joystick_Left)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Pan_Y_Up": {
		"method": "calcCode",
		"code": "(>AS3000_TSC_Vertical_1_Joystick_Up)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Pan_Y_Down": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_Joystick_Down)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Pan_X_Left": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_2_Joystick_Left)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Pan_X_Right": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_2_Joystick_Right)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Pan_Y_Down": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_Joystick_Down)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Pan_Y_Up": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_Joystick_Up)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Zoom_Inc": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_1_Joystick_INC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Range_Zoom_Dec": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_1_Joystick_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Dec": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_3_Joystick_DEC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Zoom_Inc": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_2_Joystick_INC)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Range_Zoom_Dec": {
		"method": "calcCode",
		"code": " (>H:AS3000_TSC_Vertical_2_Joystick_DEC)"
	},
	"IniBuilds.A310.Autopilot.Input.A310 AP Auto Throttle": {
		"method": "calcCode",
		"code": "1 (>L:AP8_BUTTON)"
	},
	"Microsoft.Generic.Safety.Input.ELT ON": {
		"method": "calcCode",
		"code": "1 (>K:ELT_ON) "
	},
	"Microsoft.Generic.Safety.Input.ELT OFF": {
		"method": "calcCode",
		"code": "1 (>K:ELT_OFF) "
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A320_Neo_FCU_DEC_Heading": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_HDG_DEC_Heading)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Input.A320_Neo_FCU_INC_Heading": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_HDG_INC_Heading)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Inner_Knob_Button_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 2 + (>L:myTimer)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Right_Inner_Knob_Button_Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:myTimer) < if{\n(>H:AS3000_TSC_Vertical_1_RightKnob_Push) } \nels{ (>H:AS3000_TSC_Vertical_1_RightKnob_Push_Long) } "
	},
	"JPLogistics.Cessna 152.Interaction.Input.Open Pilot Door": {
		"method": "calcCode",
		"code": "(L:C152X_DOOR_PILOT, 0) ! (>L:C152X_DOOR_PILOT, 1)\n(L:C152X_DOOR_PILOT, 1) ! (>L:C152X_DOOR_PILOT, 0)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-window-pilot-handle-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_WINDOW_HANDLE_Pilot, Number) ! (>L:C152X_WINDOW_HANDLE_Pilot, Number)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-window-copilot-handle-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_WINDOW_HANDLE_Copilot, Number) ! (>L:C152X_WINDOW_HANDLE_Copilot, Number)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-visor-copilot-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_COPILOT_VISOR, Number) 0 == if{ 16384 (>L:C152X_COPILOT_VISOR, Number) } els{ 0 (>L:C152X_COPILOT_VISOR, Number) }"
	},
	"Fly By Wire.A320-Dev.Autopilot System.Output.A32NX_LED_FD_Left": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, bool) 100 *"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_1_Joystick_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_Joystick_Push)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_2_Joystick_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_Joystick_Push)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_3_Joystick_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_Push)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_4_Joystick_Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_Push)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-visor-copilot-axis-down": {
		"method": "calcCode",
		"code": "(L:C152X-visor-copilot-axis) 16384 max 0 min (>A:LIGHT LOGO:5, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.Input.ENG1 Reverse": {
		"method": "calcCode",
		"code": "ASCRJ_TQ_REVERSE_1_ANIM"
	},
	"Aerosoft.CRJ 550-700-1000.Engines.Input.ENG2 Reverse": {
		"method": "calcCode",
		"code": "ASCRJ_TQ_REVERSE_2_ANIM"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Pan_X_Left": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_Left)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Pan_X_Right": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_Right)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Pan_Y_Down": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_Down)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Pan_Y_Up": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_Up)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_Joystick_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Middle_Knob_Button": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_MiddleKnob_Push)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Middle_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_MiddleKnob_Dec)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Middle_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_MiddleKnob_Inc)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Right_Inner_Knob_Button_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 2 + (>L:myTimer)"
	},
	"Asobo.Longitude.Avionics.Input.AS3000_TSC_Vertical_3_Right_Inner_Knob_Button_Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:myTimer) < if{\n(>H:AS3000_TSC_Vertical_3_RightKnob_Push) } \nels{ (>H:AS3000_TSC_Vertical_3_RightKnob_Push_Long) } "
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Right_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_RightKnob_Small_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Right_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_RightKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Right_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_RightKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_3_Right_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_3_RightKnob_Large_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Pan_X_Left": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_Left)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Pan_X_Right": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_Right)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Pan_Y_Down": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_Down)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Pan_Y_Up": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_Up)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Zoom_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Joystick_Range_Zoom_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_Joystick_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Middle_Knob_Button": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_MiddleKnob_Push)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Middle_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_MiddleKnob_Dec)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Middle_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_MiddleKnob_Inc)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Inner_Knob_Button_Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 2 + (>L:myTimer)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Inner_Knob_Button_Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:myTimer) < if{\n(>H:AS3000_TSC_Vertical_4_RightKnob_Push) } \nels{ (>H:AS3000_TSC_Vertical_4_RightKnob_Push_Long) } "
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_RightKnob_Small_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_RightKnob_Small_INC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_RightKnob_Large_DEC)"
	},
	"Asobo.Longitude.Avionics.AS3000_TSC_Vertical_4_Right_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_4_RightKnob_Large_INC)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L VOR Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_VOR_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_NAV_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L ILS Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_ILS_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L MLS Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_MLS_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L ADF Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_ADF_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L BFO Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_BFO_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_NAV_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R VOR Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_VOR_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R ILS Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_ILS_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R MLS Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_MLS_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R ADF Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_ADF_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R BFO Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_BFO_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R VHF1 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_VHF1_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R VHF2 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_VHF2_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R VHF3 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_VHF3_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R HF1 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_HF1_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R HF2 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_HF2_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP R AM Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_R_AM_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L VHF3 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_VHF3_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L HF1 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_HF1_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L HF2 Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_HF12_BUTTON_PRESSED)"
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L AM Button Press": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_AM_BUTTON_PRESSED)"
	},
	"Asobo.DA62.Engine.Input.DA62_ENGINE_START_LEFT_PRESS": {
		"method": "calcCode",
		"code": "1 (>K:SET_STARTER1_HELD)\n1 (>L:ELECTRICAL_Starter_1)"
	},
	"Asobo.DA62.Engine.Input.DA62_ENGINE_START_RIGHT_PRESS": {
		"method": "calcCode",
		"code": "1 (>K:SET_STARTER2_HELD)\n1 (>L:ELECTRICAL_Starter_2)"
	},
	"Asobo.DA62.Engine.Input.DA62_ENGINE_START_LEFT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>K:SET_STARTER1_HELD)\n0 (>K:STARTER1_SET)\n0 (>L:ELECTRICAL_Starter_1) "
	},
	"Asobo.DA62.Engine.Input.DA62_ENGINE_START_RIGHT_RELEASE": {
		"method": "calcCode",
		"code": "0 (>K:SET_STARTER2_HELD)\n0 (>K:STARTER2_SET)\n0 (>L:ELECTRICAL_Starter_2) "
	},
	"Asobo.TBM 930.Autopilot.Input.VS increase": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_INC)"
	},
	"Asobo.TBM 930.Autopilot.Input.VS decrease": {
		"method": "calcCode",
		"code": "(>K:AP_VS_VAR_DEC)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 Landing Lights Toggle": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_1) 0 != s0 if{ \n   0 (>L:LIGHTING_LANDING_1) \n   1 (>K:LANDING_LIGHTS_SET) \n   0 (>K:TAXI_LIGHTS_SET) \n} els{ \n   2 (>L:LIGHTING_LANDING_1) \n   0 (>K:LANDING_LIGHTS_SET) \n   0 (>K:TAXI_LIGHTS_SET) } \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } \nels{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t(A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n\t(A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n\t17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 Taxi Lights Toggle": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_1) 1 != if{ \n   1 (>L:LIGHTING_LANDING_1) \n   0 (>K:LANDING_LIGHTS_SET) \n   1 (>K:TAXI_LIGHTS_SET) \n} els{ \n   2 (>L:LIGHTING_LANDING_1) \n   0 (>K:LANDING_LIGHTS_SET) \n   0 (>K:TAXI_LIGHTS_SET) } \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } \nels{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) \n\t(A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n\t(A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n\t17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Microsoft.Generic.Avionics.Input.TRANSPONDER STATE": {
		"method": "calcCode",
		"code": "state (>A:TRANSPONDER STATE, enum)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP HDG Knob Inc": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP HDG Knob Dec": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP HDG Sync Press": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.LEFT SIDE WIPER OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_LSP_WIPER)\n"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.LEFT SIDE WIPER INT": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_LSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.LEFT SIDE WIPER SLOW": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_LSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.LEFT SIDE WIPER FAST": {
		"method": "calcCode",
		"code": "3 (>L:ASCRJ_LSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.RIGHT SIDE WIPER OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_RSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.RIGHT SIDE WIPER INT": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_RSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.RIGHT SIDE WIPER SLOW": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_RSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Miscellaneous.Output.RIGHT SIDE WIPER FAST": {
		"method": "calcCode",
		"code": "3 (>L:ASCRJ_RSP_WIPER)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 1 Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_IRS1_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 2 Knob OFF": {
		"method": "calcCode",
		"code": "0 (>L:ASCRJ_IRS2_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 1 Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_IRS1_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 2 Knob NAV": {
		"method": "calcCode",
		"code": "1 (>L:ASCRJ_IRS2_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 1 Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_IRS1_KNOB)"
	},
	"Aerosoft.CRJ 550-700-1000.Navigation.Output.IRS 2 Knob ATT": {
		"method": "calcCode",
		"code": "2 (>L:ASCRJ_IRS2_KNOB)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_INC_inHg_0.01": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 0.01 + 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_INC_inHg_0.1": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 0.1 + 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_INC_inHg_1": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 1 + 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_DEC_inHg_0.01": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 0.01 - 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_DEC_inHg_0.1": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 0.1 - 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Avionics.Input.BARO_DEC_inHg_1": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1, inHg) 1 - 33.8639 * 16 * (>K:KOHLSMAN_SET)"
	},
	"Asobo.CJ4 AAU1.Unsorted.Input.Hide Pilot and Co-Pilot Yokes": {
		"method": "calcCode",
		"code": "(L:XMLVAR_YokeHidden1, number) 0 == if{ 1 (>L:XMLVAR_YokeHidden1, number) 1 (>L:XMLVAR_YokeHidden2, number) }"
	},
	"Asobo.CJ4 AAU1.Unsorted.Input.Display Pilot and Co-Pilot Yoke": {
		"method": "calcCode",
		"code": "(L:XMLVAR_YokeHidden1, number) 1 == if{ 0 (>L:XMLVAR_YokeHidden1, number) 0 (>L:XMLVAR_YokeHidden2, number) }"
	},
	"Got Friends.EA-7 Edgley Optica.Safety.Input.Emergency Locator Transmitter On": {
		"method": "calcCode",
		"code": "1 (>L:ELT_ON) "
	},
	"Got Friends.EA-7 Edgley Optica.Safety.Input.Emergency Locator Transmitter Arm": {
		"method": "calcCode",
		"code": "0 (>L:ELT_ON) "
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Input.Rotate Nacelles Up": {
		"method": "calcCode",
		"code": "(>K:INC_COWL_FLAPS4)"
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Input.Rotate Nacelles Down": {
		"method": "calcCode",
		"code": "(>K:DEC_COWL_FLAPS4)"
	},
	"Miltech Simulations.MV22B Osprey.Electrical.Output.MV22B APU State": {
		"method": "calcCode",
		"code": "(>L:MARYADI0363)"
	},
	"Miltech Simulations.MV22B Osprey.Electrical.Output.MV22B APU Off LED": {
		"method": "calcCode",
		"code": "(>L:MARYADI0367)"
	},
	"Miltech Simulations.MV22B Osprey.Electrical.Output.MV22B APU Run LED State": {
		"method": "calcCode",
		"code": "(L:MARYADI0366, number)"
	},
	"Miltech Simulations.MV22B Osprey.Engine.Output.MV22B Left Engine Mode": {
		"method": "calcCode",
		"code": "(L:MARYADI0345, number)"
	},
	"Miltech Simulations.MV22B Osprey.Engine.Output.MV22B Right Engine Mode": {
		"method": "calcCode",
		"code": "(L:MARYADI0346, number)"
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Output.MV22B Hydraulics 1 Pressure": {
		"method": "calcCode",
		"code": "(L:V22_HYDRAULIC1, number)"
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Output.MV22B Hydraulics 2 State": {
		"method": "calcCode",
		"code": "(L:V22_HYDRAULIC2)"
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Output.MV22B Hydraulics 3 State": {
		"method": "calcCode",
		"code": "(L:V22_HYDRAULIC3)"
	},
	"Miltech Simulations.MV22B Osprey.Avionics.Input.MV22B Copilot Left MFD Off/Brightness": {
		"method": "calcCode",
		"code": "0 (>L:MARYADI0024)"
	},
	"Miltech Simulations.MV22B Osprey.Avionics.Input.MV22B Co-pilot Right MFD Off/Brightness": {
		"method": "calcCode",
		"code": "0 (>L:MARYADI0049)"
	},
	"Miltech Simulations.MV22B Osprey.Avionics.Input.MV22B CDU Off/Brightness": {
		"method": "calcCode",
		"code": "0 (>L:MARYADI0209)"
	},
	"Miltech Simulations.MV22B Osprey.Avionics.Input.MV22B Captain Left MFD Off/Brightness": {
		"method": "calcCode",
		"code": "0 (>L:MARYADI0074)"
	},
	"Miltech Simulations.MV22B Osprey.Avionics.Input.MV22B Captain Right MFD Off/Brightness": {
		"method": "calcCode",
		"code": "0 (>L:MARYADI0099)"
	},
	"Miltech Simulations.MV22B Osprey.Hydraulic.Output.Nacelle Rotation Angle": {
		"method": "calcCode",
		"code": "(L:NacellesRotation)"
	},
	"Miltech Simulations.MV22B Osprey.Engine.Input.MV22B Toggle Rotor Brake": {
		"method": "calcCode",
		"code": "(L:MARYADI0344) ! (>L:MARYADI0344)"
	},
	"Miltech Simulations.MV22B Osprey.Interaction.Input.MV22B Cargo Door Toggle": {
		"method": "calcCode",
		"code": "(L:MARYADI0380) ! (>L:MARYADI0380)"
	},
	"Miltech Simulations.MV22B Osprey.Interaction.Input.MV22B Toggle Side Door Open/Close": {
		"method": "calcCode",
		"code": "(L:MARYADI0382) ! (>L:MARYADI0382)"
	},
	"Miltech Simulations.MV22B Osprey.Interaction.Input.MV22B Toggle Door Mode (Manual/Auto)": {
		"method": "calcCode",
		"code": "(L:MARYADI0381) ! (>L:MARYADI0381)"
	},
	"Miltech Simulations.MV22B Osprey.Lights.Input (Potentiometer).MV22B Cockpit Dome Light": {
		"method": "calcCode",
		"code": "(>L:MARYADI0377)"
	},
	"Miltech Simulations.MV22B Osprey.Lights.Input (Potentiometer).MV22B Cockpit Green/NVG Light": {
		"method": "calcCode",
		"code": "(>L:MARYADI0378)"
	},
	"Miltech Simulations.MV22B Osprey.Lights.Input (Potentiometer).MV22B Primary Pilot Light": {
		"method": "calcCode",
		"code": "(>L:MARYADI0370)"
	},
	"Miltech Simulations.MV22B Osprey.Lights.Input (Potentiometer).MV22B Primary Overhead lighting": {
		"method": "calcCode",
		"code": "(>L:MARYADI0369)"
	},
	"Miltech Simulations.MV22B Osprey.Lights.Input (Potentiometer).MV22B Primary Co-pilot Light": {
		"method": "calcCode",
		"code": "(>L:MARYADI0368)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320_MIP_LIGHTING_FLOOD_MAIN_POT": {
		"method": "calcCode",
		"code": "@ 65535 / 0 max 1 min (>L:A_MIP_LIGHTING_FLOOD_MAIN)"
	},
	"Asobo.CJ4 AAU1.Engines.Input (Potentiometer).CJ4 Throttle 1 Set": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min s0 (>K:THROTTLE1_SET)\nl0 163.83 / (>L:XMLVAR_ThrottlePosition_1, percent)"
	},
	"Asobo.CJ4 AAU1.Engines.Input (Potentiometer).CJ4 Throttle 2 Set": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min s0 (>K:THROTTLE2_SET)\nl0 163.83 / (>L:XMLVAR_ThrottlePosition_2, percent)"
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead SEC1 Press": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) "
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead SEC2 Press": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) "
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead SEC3 Press": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) "
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead FAC1 Press": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) "
	},
	"Fly By Wire.A320-Dev.Controls.Input.A32NX Overhead FAC2 Press": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) "
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead ELAC1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Asobo.A320.Radar.Input.WEATHER MODE TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_A320_WEATHERRADAR_MODE, Number) ++ 4 % (>L:XMLVAR_A320_WEATHERRADAR_MODE, Number)"
	},
	"Asobo.A320.Radar.Input.WEATHER MODE MAP": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_A320_WEATHERRADAR_MODE)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead ELAC2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead SEC1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead SEC2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead SEC3 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead FAC1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead FAC2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) !"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhed ELAC1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_1_DIGITAL_OP_VALIDATED, Bool) ! (L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool)  and"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX Overhead ELAC2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ELAC_2_DIGITAL_OP_VALIDATED, Bool) ! (L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool)  and"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_ALT_ARM": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_MODE_ARM_ON)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_SELECTED_ALT_VAR": {
		"method": "calcCode",
		"code": "(L:CUSTOM_AP_ALT_VAR_SET_ENGLISH)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_SELECTED_VS_VAR": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) sp0 l0 '%d ft/min' (F:Format)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_VS_ENG": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD,Bool)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KFC150_ALT_HOLD": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK,Bool)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_INFO_CAPT": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, bool) (A:Indicated Altitude, feet) 100 / near 100 * (A:AUTOPILOT ALTITUDE LOCK VAR, feet) - abs 30 > and"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_INFO_ALERT": {
		"method": "calcCode",
		"code": "(A:Indicated Altitude, feet) 100 / near 100 * (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) - abs 1000 < (A:Indicated Altitude, feet) 100 / near 100 * (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) - abs 300 > and (L:GAUGE_ANUM_TEST, number) 1 == or"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_INFO_VS_ENG_POS": {
		"method": "calcCode",
		"code": "(L:GAUGE_ALT_ALERT_MODE) (A:AUTOPILOT VERTICAL HOLD,Bool) and (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) sp0 l0 '%d ft/min' (F:Format) 0 > and"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_INFO_VS_ENG_NEG": {
		"method": "calcCode",
		"code": "(L:GAUGE_ALT_ALERT_MODE) (A:AUTOPILOT VERTICAL HOLD,Bool) and (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) sp0 l0 '%d ft/min' (F:Format) 0 < and"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KFC150_GAUGE_TEST": {
		"method": "calcCode",
		"code": "(L:Gauge_TEST_KFC150)"
	},
	"Carenado.M20R OVATION.Autopilot.Output.KAS297b_ALT_OR_VS_MODE_SELECTED": {
		"method": "calcCode",
		"code": "(L:GAUGE_ALT_ALERT_MODE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R APP": {
		"method": "calcCode",
		"code": "0 (L:switch_415_73X) - 10 div s0\n:1\nl0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R VOR": {
		"method": "calcCode",
		"code": "10 (L:switch_415_73X) - 10 div s0\n:1\nl0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MAP": {
		"method": "calcCode",
		"code": "20 (L:switch_415_73X) - 10 div s0\n:1\nl0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R PLN": {
		"method": "calcCode",
		"code": "30 (L:switch_415_73X) - 10 div s0\n:1\nl0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 5": {
		"method": "calcCode",
		"code": "0 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 10": {
		"method": "calcCode",
		"code": "10 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 20": {
		"method": "calcCode",
		"code": "20 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 40": {
		"method": "calcCode",
		"code": "30 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 80": {
		"method": "calcCode",
		"code": "40 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 160": {
		"method": "calcCode",
		"code": "50 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 320": {
		"method": "calcCode",
		"code": "60 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RANGE 640": {
		"method": "calcCode",
		"code": "70 (L:switch_417_73X) - 10 div s0\n:1\nl0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R RST": {
		"method": "calcCode",
		"code": "41301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R BARO KNOB IN": {
		"method": "calcCode",
		"code": "(L:switch_422_73X) 0 != if{ 42201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R BARO KNOB HPA": {
		"method": "calcCode",
		"code": "(L:switch_422_73X) 0 == if{ 42201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R FPV": {
		"method": "calcCode",
		"code": "41901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MTRS": {
		"method": "calcCode",
		"code": "42001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MINS ENC Dec": {
		"method": "calcCode",
		"code": "41108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R MINS ENC Inc": {
		"method": "calcCode",
		"code": "41107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R BARO ENC Inc": {
		"method": "calcCode",
		"code": "42107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.EFIS.Input.PMDG B737 EFIS R BARO ENC Dec": {
		"method": "calcCode",
		"code": "42108 (>K:ROTOR_BRAKE)"
	},
	"Asobo.CJ4 AAU1.Avionics.Input.AS3000_PUSH_SELECT_1": {
		"method": "calcCode",
		"code": "(>H:Generic_Upr_1_DATA_PUSH) "
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-visor-pilot-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_PILOT_VISOR, Number) 0 == if{ 16384 (>L:C152X_PILOT_VISOR, Number) } els{ 0 (>L:C152X_PILOT_VISOR, Number) }"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-Copilot-door-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_DOOR_COPILOT, Number) ! (>L:C152X_DOOR_COPILOT, Number)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-Pilot-Door-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_DOOR_PILOT, Number) ! (>L:C152X_DOOR_PILOT, Number)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-Pilot-Window-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_PILOT_WINDOW, Number) 0 == if{ 16384 (>L:C152X_PILOT_WINDOW, Number) }  els{ 0 (>L:C152X_PILOT_WINDOW, Number) }"
	},
	"JPLogistics.Cessna 152X.Interaction.Input.C152X-Copilot-Window-toggle": {
		"method": "calcCode",
		"code": "(L:C152X_COPILOT_WINDOW, Number) 0 == if{ 16384 (>L:C152X_COPILOT_WINDOW, Number) }  els{ 0 (>L:C152X_COPILOT_WINDOW, Number) }"
	},
	"IniBuilds.A310.Radio.Input.A310 Pedestal VHF FO Toggle": {
		"method": "calcCode",
		"code": "1 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng L Fuel Run Stop Button Press": {
		"method": "calcCode",
		"code": "(L:WT_Longitude_Engine_Run:1) if{ \n   0 (>L:WT_Longitude_Engine_Run:1) 0 (>K:MIXTURE1_SET) \n   (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:STARTER1_SET) } }\nels{ 1 (>L:WT_Longitude_Engine_Run:1) 16384 (>K:MIXTURE1_SET) }"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng R Fuel Run Stop Button Press": {
		"method": "calcCode",
		"code": "(L:WT_Longitude_Engine_Run:2) if{ \n   0 (>L:WT_Longitude_Engine_Run:2) 0 (>K:MIXTURE2_SET) \n   (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:STARTER2_SET) } }\nels{ 1 (>L:WT_Longitude_Engine_Run:2) 16384 (>K:MIXTURE2_SET) }"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Eng L Fuel Button LED Run On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent) 0 >"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Eng R Fuel Button LED Run On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, Percent) 0 >"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng L Starter Button Press": {
		"method": "calcCode",
		"code": " (>K:TOGGLE_STARTER1)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng R Starter Button Press": {
		"method": "calcCode",
		"code": " (>K:TOGGLE_STARTER2) "
	},
	"Asobo.Longitude.Engines.Output.Longitude Eng L Fuel Button Stop Led On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:1, percent) 0 == (A:GENERAL ENG STARTER:1, bool) (A:GENERAL ENG STARTER:2, bool)  or ! and"
	},
	"Asobo.Longitude.Engines.Output.Longitude Eng R Fuel Button Stop Led On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MIXTURE LEVER POSITION:2, percent) 0 == (A:GENERAL ENG STARTER:1, bool) (A:GENERAL ENG STARTER:2, bool)  or ! and"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Speed Ref Man Press": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SpeedIsManuallySet,bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP Speed Ref FMS Press": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SpeedIsManuallySet,bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP AT Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER:1, Bool) if{\n   (>K:AUTO_THROTTLE_ARM)\n  1 (>K:AP_PANEL_SPEED_SET)\n(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ \n  1 (>K:FLIGHT_LEVEL_CHANGE_ON) }\n(A:AIRSPEED INDICATED, Knot) (>K:AP_SPD_VAR_SET) }"
	},
	"Asobo.Longitude.Lights.Input.Longitude Lights PAX SAFTY Toggle": {
		"method": "calcCode",
		"code": "(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.Longitude.Lights.Input.Longitude Lights SEAT BELTS Toggle": {
		"method": "calcCode",
		"code": "(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP L CRS Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_INC)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP L CRS Knob Dec": {
		"method": "calcCode",
		"code": " (>H:AS3000_PFD_1_CRS_DEC) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP L CRS Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_PUSH)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP R CRS Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_INC)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP R CRS Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_DEC)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP R CRS Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_CRS_PUSH)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP VS Wheel Down": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100  - (>K:2:AP_VS_VAR_SET_ENGLISH) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP VS Wheel Up": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP SPD Mode MAN": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SpeedIsManuallySet)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP SPD Mode FMS": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SpeedIsManuallySet)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Control Panel 1 Baro Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_BARO_INC)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Control Panel 1 Baro Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_PFD_1_BARO_DEC) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Baro 1 Knob Inc": {
		"method": "calcCode",
		"code": "3 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Baro 1 Knob Dec": {
		"method": "calcCode",
		"code": " 3 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Baro 1 Sync Push": {
		"method": "calcCode",
		"code": "3 (>K:BAROMETRIC)"
	},
	"Asobo.Longitude.Anti-Ice.Input.Left Engine De-Ice Toggle": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1)"
	},
	"Asobo.Longitude.Anti-Ice.Input.Right Engine De-Ice": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG2)"
	},
	"Asobo.Longitude.Anti-Ice.Input.Pitot Heat Toggle": {
		"method": "calcCode",
		"code": "(>K:2:PITOT_HEAT_Toggle)"
	},
	"Asobo.Longitude.Anti-Ice.Input.Wing De_Ice": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STRUCTURAL_DEICE) "
	},
	"Asobo.Longitude.Anti-Ice.Output.Stabilizer De-Ice ON": {
		"method": "calcCode",
		"code": " (L:WT_LNG_STAB_AI)"
	},
	"Asobo.Longitude.Anti-Ice.Output.Pitot Heat ON": {
		"method": "calcCode",
		"code": "(L:WT_LNG_PITOT_HEAT)"
	},
	"Asobo.Longitude.Gear.Output.Parking Brake ON indicator": {
		"method": "calcCode",
		"code": "(L:WT_LNG_PARKING_BRAKE)"
	},
	"Asobo.Longitude.Electrical.Output.Bus_Tie Closed Indicator": {
		"method": "calcCode",
		"code": " (L:WT_LNG_BUS_TIE_CONN)\n"
	},
	"Asobo.Longitude.Lights.Output.Seat Belt Indicator ON": {
		"method": "calcCode",
		"code": "(A:CABIN SEATBELTS ALERT SWITCH, Bool)"
	},
	"Asobo.Longitude.Lights.Output.NO SMOKING LIGHT IS ON": {
		"method": "calcCode",
		"code": "(A:CABIN NO SMOKING ALERT SWITCH, Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT APPROACH ACTIVE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH ACTIVE, bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT APPROACH ARM": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH ARM, Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT APPROACH CAPTURED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH CAPTURED, Bool)"
	},
	"Microsoft.Generic.Autopilot.Output.AUTOPILOT APPROACH IS LOCALIZER": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH IS LOCALIZER, Bool)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS L FD Button Press": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS R FD Button Press": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_FD) ++ (>L:S_FCU_EFIS2_FD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS L LS Button Press": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_LS) ++ (>L:S_FCU_EFIS1_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS R LS Button Press": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_LS) ++ (>L:S_FCU_EFIS2_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS L Baro Knob Pull": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_BARO_STD) ++ (>L:S_FCU_EFIS1_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS L Baro Knob Push": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS1_BARO_STD) -- (>L:S_FCU_EFIS1_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS R Baro Knob Pull": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_BARO_STD) ++ (>L:S_FCU_EFIS2_BARO_STD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS R Baro Knob Push": {
		"method": "calcCode",
		"code": "(L:S_FCU_EFIS2_BARO_STD) -- (>L:S_FCU_EFIS2_BARO_STD)"
	},
	"PMDG.B737-700.Hydraulic.Output.PMDG B737 Standby Hyd Low Quantity": {
		"method": "calcCode",
		"code": "(L:switch_84_73X) 0 !="
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF3_Push": {
		"method": "calcCode",
		"code": " 1 (>L:S_PED_RMP1_VHF3) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF1_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_VHF1) "
	},
	"FenixSim.A320.MCDU.Input.FNX320_RMP1_KEY_VHF1_RELEASE": {
		"method": "calcCode",
		"code": "0 (L:S_PED_RMP1_VHF1) "
	},
	"FenixSim.A320.MCDU.Input.FNX320_RMP1_KEY_VHF2_PUSH": {
		"method": "calcCode",
		"code": "1 (L:S_PED_RMP1_VHF2) "
	},
	"FenixSim.A320.MCDU.Input.FNX320_RMP1_KEY_VHF2_RELEASE": {
		"method": "calcCode",
		"code": "0 (L:S_PED_RMP1_VHF2) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF1_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_VHF1) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF2_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_VHF2) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF2_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_VHF2) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VHF3_RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_VHF3) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_HF1_Push": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_HF1) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_HF1_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_HF1) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_HF2_Push": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_HF2) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_HF2_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_HF2) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_AM_Push": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_AM) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_AM_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_AM) "
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP1 Power Switch ON": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_POWER)"
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP1 Power Switch OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_POWER)"
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_NAV_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_NAV) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_NAV_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_NAV) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VOR_Push": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_VOR) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_VOR_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_VOR) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_LS_PUSH": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP1_ILS) ++ (>L:S_PED_RMP1_ILS) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_LS_Release": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP1_ILS) ++ (>L:S_PED_RMP1_ILS) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_GLS_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_MLS) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_GLS_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_MLS) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_ADF_Push": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_ADF) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_ADF_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_ADF) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_BFO_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP1_BFO) "
	},
	"FenixSim.A320.Radio.Input.FNX320_RMP1_KEY_BFO_Release": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP1_BFO) "
	},
	"Asobo.CJ4 AAU1.Avionics.Output.CJ4 Baro 1 STD": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD, bool)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 ECAM Lower Display Brightness": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_L)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 ECAM Upper Display Brightness": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_U)"
	},
	"Fly By Wire.A320-Dev.Electrical.Output.A32NX Ovhd Elec Bus Tie Off Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO) !"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input.READING_LIGHT_PILOT": {
		"method": "calcCode",
		"code": "(L:SWS_LIGHTING_Switch_Light_Cabin_1, Bool)  !  (>L:SWS_LIGHTING_Switch_Light_Cabin_1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input.READING_LIGHT_COPILOT": {
		"method": "calcCode",
		"code": "(L:SWS_LIGHTING_Switch_Light_Cabin_2, Bool)  !  (>L:SWS_LIGHTING_Switch_Light_Cabin_2, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input (Potentiometer).OVERHEAD_LIGHT_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_11) 5 - 0 max d (>L:LIGHTING_POTENTIOMETER_11) 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input (Potentiometer).OVERHEAD_LIGHT_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_11) 5 + 100 min d (>L:LIGHTING_POTENTIOMETER_11) 11 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Lnav Tracked Leg Index": {
		"method": "calcCode",
		"code": "(L:WTAP_Lnav_Tracked_Leg_Index)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Lnav Is Tracking": {
		"method": "calcCode",
		"code": "(L:WTAP_LNav_Is_Tracking)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Leg Distance Remaining": {
		"method": "calcCode",
		"code": "(L:WTAP_Lnav_Leg_Distance_Remaining)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Lnav Vector Distance Remaining": {
		"method": "calcCode",
		"code": "(L:WTAP_LNav_Vector_Distance_Remaining)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Lnav Leg Distance Along": {
		"method": "calcCode",
		"code": "(L:WTAP_LNav_Leg_Distance_Along)"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 1 Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) l0 0 > != if{ 1 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 1 Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_1) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:1, Bool) l0 0 > != if{ 1 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 2 Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_2) \nl0 6 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) l0 0 > != if{ 2 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 2 Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_2) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_2) \nl0 6 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:2, Bool) l0 0 > != if{ 2 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 3 Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_3) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_3) \nl0 4 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:3, Bool) l0 0 > != if{ 3 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 Light Cabin 3 Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_CABIN_3) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_3) \nl0 4 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT CABIN:3, Bool) l0 0 > != if{ 3 l0 (>K:2:CABIN_LIGHTS_SET) }"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX EFIS R PFD LS BUTTON PUSH": {
		"method": "calcCode",
		"code": "1 (>H:A320_Neo_PFD_BTN_LS_2, boolean)"
	},
	"MGharib.HA420.Avionics.Input.HA420 TSC L Range Zoom Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_Joystick_INC) "
	},
	"MGharib.HA420.Avionics.Input.HA420 TSC L Range Zoom Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_2_Joystick_DEC) "
	},
	"MGharib.HA420.Avionics.Input.HA420 TSC R Range Zoom Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_Joystick_INC) "
	},
	"MGharib.HA420.Avionics.Input.HA420 TSC R Range Zoom Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Vertical_1_Joystick_DEC) "
	},
	"Microsoft.Generic.Radio.Input.ADF1 Swap Freq": {
		"method": "calcCode",
		"code": "(>K:ADF1_RADIO_SWAP)"
	},
	"SimWorks Studios.Kodiak 100.Autopilot.Input.Kodiak 100 AP VS control DN": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{\n	(L:XMLVAR_AirSpeedIsInMach, Bool) if{\n		(A:AUTOPILOT MACH HOLD VAR, Number) 1 + 0 max (>K:AP_MACH_VAR_SET)\n	} els{\n		(A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET)\n	}\n} els{\n	(A:AUTOPILOT VERTICAL HOLD:1, Bool) if{\n		1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH)\n	} els{\n		(A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16348 * (>K:AP_PITCH_REF_SET)\n	}\n}"
	},
	"SimWorks Studios.Kodiak 100.Autopilot.Input.Kodiak 100 AP VS control UP": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{\n	(L:XMLVAR_AirSpeedIsInMach, Bool) if{\n		(A:AUTOPILOT MACH HOLD VAR, Number) 1 - 0 max (>K:AP_MACH_VAR_SET)\n	} els{\n		(A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET)\n	}\n} els{\n	(A:AUTOPILOT VERTICAL HOLD:1, Bool) if{\n		1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH)\n	} els{\n		(A:AUTOPILOT PITCH HOLD REF, degrees) -0.2 + 25 / 1 min -1 max 16348 * (>K:AP_PITCH_REF_SET)\n	}\n}"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP ALT Knob Inc": {
		"method": "calcCode",
		"code": "0 (L:XMLVAR_Autopilot_Altitude_Increment) (>K:2:AP_ALT_VAR_INC) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP ALT Knob Dec": {
		"method": "calcCode",
		"code": "0 (L:XMLVAR_Autopilot_Altitude_Increment) (>K:2:AP_ALT_VAR_DEC)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_ENGINE_STARTE_ON": {
		"method": "calcCode",
		"code": "1 (>K:SET_STARTER1_HELD)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_ENGINE_START_OFF": {
		"method": "calcCode",
		"code": "0 (>K:SET_STARTER1_HELD)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_MAGNETO_OFF": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_MAGNETO_RIGHT": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_MAGNETO_LEFT": {
		"method": "calcCode",
		"code": "3 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.Bonanza G36.Electrical.Input.G36_MAGNETO_BOTH": {
		"method": "calcCode",
		"code": "3 (>L:BKSQ_IgnitionPosition_1)"
	},
	"FSReborn.Sting S4.Engine.Input.Toggle PropAuto Switch": {
		"method": "calcCode",
		"code": "(L:FSR_S4_PropAutoSwitch, Number) ! (>L:FSR_S4_PropAutoSwitch, Number)"
	},
	"Asobo.Cessna 172.Lights.Input (Potentiometer).C172 DIMMING STBY IND Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10 / near 0 max 100 min s0 (>L:LIGHTING_PANEL_1) \nl0 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET) \n1 l0 (>K:2:PANEL_LIGHTS_SET)"
	},
	"Asobo.Cessna 172.Lights.Input (Potentiometer).C172 DIMMING SW CB PANELS Knob Set": {
		"method": "calcCode",
		"code": "@ 20 - 10 / near 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_3) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Asobo.Cessna 172.Lights.Input (Potentiometer).C172 DIMMING AVIONICS Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10 / near  0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_4) \nl0 4 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO PFD Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_62) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_62) \nl0 62 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO PFD Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_62) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_62) \nl0 62 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO ND Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_63) 5 + 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_63) \nl0 63 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input.A310 FO ND Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_63) 5 - 0 max 100 min \ns0 (>L:LIGHTING_POTENTIOMETER_63) \nl0 63 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"FSReborn.Sting S4.Engine.Input.Choke Toggle Inc Dec": {
		"method": "calcCode",
		"code": "(L:FSR_ENGINE_Lever_Choke_Position, Number) s0 (L:FSRChoke) s1 l0 0 == if{ l1 0 == if{ 50 s2 } els{ 50 s2 } 0 s1 } l0 50 == if{ l1 0 == if{ 100 s2 } els{ 0 s2 } } l0 100 == if{ l1 0 == if{ 50 s2 } els{ 50 s2 } 50 s1 } l2 (>L:FSR_ENGINE_Lever_Choke_Position, Number) l1 (>L:FSRChoke)"
	},
	"FSReborn.Sting S4.Engine.Input.Heating Toggle": {
		"method": "calcCode",
		"code": "(L:CABIN_Hotair_Lever_Position, Number) 0 == if{ 100 (>L:CABIN_Hotair_Lever_Position, Number) } els{ 0 (>L:CABIN_Hotair_Lever_Position, Number) }"
	},
	"FSReborn.Sting S4.Fuel.Input.Fuel Switch": {
		"method": "calcCode",
		"code": "(L:FSR_S4_FUEL_Switch_Valve_1, Number) 0 == if{ 1 (>L:FSR_S4_FUEL_Switch_Valve_1, Number) } els{ 0 (>L:FSR_S4_FUEL_Switch_Valve_1, Number) }"
	},
	"Asobo.CJ4 AAU1.Air Conditioning and Pressurization.Input.PASSENGER_CLIMATE_CONTROL_OFF": {
		"method": "calcCode",
		"code": "0 (>L:WT_CJ4_CLIMATE_CONTROL)"
	},
	"Asobo.CJ4 AAU1.Air Conditioning and Pressurization.Input.PASSENGER_CLIMATE_CONTROL_NORM": {
		"method": "calcCode",
		"code": "1 (>L:WT_CJ4_CLIMATE_CONTROL)"
	},
	"Asobo.CJ4 AAU1.Air Conditioning and Pressurization.Input.PASSENGER_CLIMATE_CONTROL_COMP_ON": {
		"method": "calcCode",
		"code": "2 (>L:WT_CJ4_CLIMATE_CONTROL)"
	},
	"Fly By Wire.A320-Dev.Lights.Input (Potentiometer).A32NX PED FLOOD LT MAIN PNL Knob Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 83 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Working Title.G1000 NXi.Radio.Output.Active PFD COM index": {
		"method": "calcCode",
		"code": "(L:AS1000_PFD_SelectedComIndex, Number)"
	},
	"Working Title.G1000 NXi.Radio.Output.Active PFD NAV index": {
		"method": "calcCode",
		"code": "(L:AS1000_PFD_SelectedNavIndex, Number)"
	},
	"PMDG.B737-700.Controls.Input.PMDG B737 Rudder Trim Knob Release": {
		"method": "calcCode",
		"code": "81104 (>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Unsorted.Input.SET_PAUSE_ON": {
		"method": "calcCode",
		"code": "(>K:SET_PAUSE_ON)"
	},
	"Microsoft.Generic.Unsorted.Input.SET_PAUSE_OFF": {
		"method": "calcCode",
		"code": "(>K:SET_PAUSE_OFF)"
	},
	"Fly By Wire.A320.Controls.Input.A32NX OVHD FLTCTL FAC 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_1_PUSHBUTTON_PRESSED) "
	},
	"Fly By Wire.A320.Anti-Ice.Input.A32NX OVHD ANTIICE WING TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STRUCTURAL_DEICE)\n(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) "
	},
	"Fly By Wire.A320.Anti-Ice.Input.A32NX OVHD PROBE WINDOW HEAT TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_MAN_PITOT_HEAT,Bool) ! (>L:A32NX_MAN_PITOT_HEAT)\n(L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) "
	},
	"Just Flight.AnalogBaron.Gear.Input.LANDING_GAR_LEVER": {
		"method": "calcCode",
		"code": "p0 0 max 1 min s0 (>K:GEAR_SET) 10 (>L:LANDING_GEAR_Gear)"
	},
	"Black Square.AnalogBaron.Gear.Input.LANDING_GEAR_LEVER": {
		"method": "calcCode",
		"code": "p0 0 max 1 min s0 (>K:GEAR_SET) 10 (>L:LANDING_GEAR_Gear)"
	},
	"PMDG.B737-700.Radio.Output.PMDG B737 XPNDR Code": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, number)"
	},
	"Black Square.AnalogBaron.Controls.Input.PARKING_BRAKES_ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Black Square.AnalogBaron.Controls.Input.PARKING_BRAKES_OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"Black Square.AnalogBaron.Controls.Input.FLAPS_UP": {
		"method": "calcCode",
		"code": "(>K:FLAPS_UP)"
	},
	"Black Square.AnalogBaron.Controls.Input.FLAPS_APP": {
		"method": "calcCode",
		"code": "(>K:FLAPS_1)"
	},
	"Black Square.AnalogBaron.Controls.Input.FLAPS_FULL": {
		"method": "calcCode",
		"code": "(>K:FLAPS_3)"
	},
	"Black Square.AnalogBaron.Anti-Ice.Input.PITOT_HEAT_ON": {
		"method": "calcCode",
		"code": "(>K:PITOT_HEAT_ON)"
	},
	"FSReborn.Sting S4.Environment.Input.Canopy Open Close Toggle": {
		"method": "calcCode",
		"code": "(L:CanopyLeftHandle_Position, Number) 0 == if{ 100 (>L:CanopyLeftHandle_Position, Number) } els{ 0 (>L:CanopyLeftHandle_Position, Number) }"
	},
	"FSReborn.Sting S4.Safety.Input.Emergency Parachute Pull": {
		"method": "calcCode",
		"code": "(L:BRS_Chute_Lever_Position, Number) 0 == if{ 100 (>L:BRS_Chute_Lever_Position, Number) }"
	},
	"Microsoft.Generic.Radio.Input.TOGGLE_ICS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_ICS)"
	},
	"FenixSim.A320.Safety.Output.FNX320 OH Fire Eng1 Button LED": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG1_BUTTON)"
	},
	"FenixSim.A320.Safety.Output.FNX320 OH Fire Eng2 Button LED": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_ENG2_BUTTON)"
	},
	"FenixSim.A320.Safety.Output.FNX320 OH Fire APU Button LED": {
		"method": "calcCode",
		"code": "(L:I_OH_FIRE_APU_BUTTON)"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL MODE SEL PRESS": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_MODE_SEL) ! (L:S_OH_FUEL_MODE_SEL)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH ELEC EXT PWR RELEASE": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EXT_PWR) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_EXT_PWR) }"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR GND CTL Press": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_GND_CTL) ++ (>L:S_OH_RCRD_GND_CTL)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR GND CTL Release": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_GND_CTL) ++ (>L:S_OH_RCRD_GND_CTL)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR CVR ERASE Press": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_ERASE) ** (>L:S_OH_RCRD_ERASE)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR CVR ERASE Release": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_ERASE) ** (>L:S_OH_RCRD_ERASE)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR CVR TEST Press": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_TEST) ++ (>L:S_OH_RCRD_TEST)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH RCDR CVR TEST Release": {
		"method": "calcCode",
		"code": "(L:S_OH_RCRD_TEST) ++ (>L:S_OH_RCRD_TEST)"
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH EMER ELEC MAN ON Cover Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_MAN_ON_Cover) ! (>L:S_OH_ELEC_EMER_GEN_MAN_ON_Cover) "
	},
	"FenixSim.A320.Electrical.Input.FNX320 OH EMER ELEC TEST Cover Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_ELEC_EMER_GEN_TEST_Cover) ! (>L:S_OH_ELEC_EMER_GEN_TEST_Cover)"
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Hot Air Aft Cargo Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_HOT_AIR_AFT_CARGO) ! (>L:S_OH_PNEUMATIC_HOT_AIR_AFT_CARGO)"
	},
	"FenixSim.A320.Pneumatic.Input.FNX320 Pneumatic Cargo Aft Isol Valve Toggle": {
		"method": "calcCode",
		"code": "(L:S_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE) ! (>L:S_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE)"
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Smoke Test Button Press": {
		"method": "calcCode",
		"code": "(L:S_OH_CARGO_SMOKE_TEST) ++ (>L:S_OH_CARGO_SMOKE_TEST) "
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Smoke Test Button Release": {
		"method": "calcCode",
		"code": "(L:S_OH_CARGO_SMOKE_TEST) s0 2 % 0 != if{ l0 ++ (>L:S_OH_CARGO_SMOKE_TEST) } "
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Disc 1 Agent 1": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_CARGO_DISC_1_OLD_LAYOUT)"
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Disc 1 Agent 2": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_CARGO_DISC_1_OLD_LAYOUT)"
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Disc 2 Agent 1": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_CARGO_DISC_2_OLD_LAYOUT)"
	},
	"FenixSim.A320.Safety.Input.FNX320 OH Cargo Disc 2 Agent 2": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_CARGO_DISC_2_OLD_LAYOUT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH FO RAIN RPLNT Button Press": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_REPELLENT_FO) ++ (>L:S_MISC_WIPER_REPELLENT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH FO RAIN RPLNT Button Release": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_REPELLENT_FO) ++ (>L:S_MISC_WIPER_REPELLENT_FO)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH CAPT RAIN RPLNT Button Press": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_REPELLENT_CAPT) ++ (>L:S_MISC_WIPER_REPELLENT_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH CAPT RAIN RPLNT Button Release": {
		"method": "calcCode",
		"code": "(L:S_MISC_WIPER_REPELLENT_CAPT) ++ (>L:S_MISC_WIPER_REPELLENT_CAPT)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.Input.Passenger Door Left Closed": {
		"method": "calcCode",
		"code": "0 (>L:DOOR_MAIN_DOOR_POS, Number)"
	},
	"Aerosoft.CRJ 550-700-1000.Passengers/Crew.Input.Passenger Door Left Open": {
		"method": "calcCode",
		"code": "100 (>L:DOOR_MAIN_DOOR_POS, Number)"
	},
	"Microsoft.Generic.Radio.Input.Marker Beacon Sensitivity High": {
		"method": "calcCode",
		"code": "(>K:MARKER_BEACON_SENSITIVITY_HIGH)\n"
	},
	"Microsoft.Generic.Radio.Input.Marker Beacon Sensitivity low": {
		"method": "calcCode",
		"code": "(>K:MARKER_BEACON_SENSITIVITY_LOW)"
	},
	"Microsoft.Generic.Radio.Input.Marker Beacon Test / Mute": {
		"method": "calcCode",
		"code": "(>K:MARKER_BEACON_TEST_MUTE)"
	},
	"Microsoft.Generic.Radio.Input.Intercom Mode Set": {
		"method": "calcCode",
		"code": "int (>K:INTERCOM_MODE_SET)"
	},
	"Black Square.AnalogBaron.Electrical.Input.RIGHT_ALTERNATOR_ON": {
		"method": "calcCode",
		"code": "(L:BKSQ_alternatorSwitch_R bool) ! (>L:BKSQ_alternatorSwitch_R, bool)"
	},
	"Black Square.AnalogBaron.Electrical.Input.RIGHT_ALTERNATOR_OFF": {
		"method": "calcCode",
		"code": "(L:BKSQ_alternatorSwitch_R bool) 0 (>L:BKSQ_alternatorSwitch_R, bool)"
	},
	"Black Square.AnalogBaron.Electrical.Input.LEFT_ALTERNATOR_ON": {
		"method": "calcCode",
		"code": "(L:BKSQ_alternatorSwitch_L bool) ! (>L:BKSQ_alternatorSwitch_L, bool)"
	},
	"Black Square.AnalogBaron.Electrical.Input.LEFT_ALTERNATOR_OFF": {
		"method": "calcCode",
		"code": "(L:BKSQ_alternatorSwitch_L bool) 0 (>L:BKSQ_alternatorSwitch_L, bool)"
	},
	"Black Square.AnalogBaron.Engine.Input.PROPELLER_SYNC": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_PROPELLER_SYNC)"
	},
	"Fly By Wire.A320-Dev.Fuel.Input.A32NX OVHD FUEL MODE SEL PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_FUEL_MODESEL_MANUAL) ! s0 (>L:A32NX_OVHD_FUEL_MODESEL_MANUAL) \n1 l0 + sp0\nl0 4 (>K:2:FUELSYSTEM_JUNCTION_SET)\nl0 5 (>K:2:FUELSYSTEM_JUNCTION_SET)\n(L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed)"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL MODE SEL MAN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_FUEL_MODESEL_MANUAL) (L:A32NX_OVHD_INTLT_ANN) 0 == (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or (L:A32NX_OVHD_INTLT_ANN, Number) 2 == if{ 0.1 } els{ 1 } *  "
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL MODE SEL FAULT ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM TANK WEIGHT:1, pound) 550 > \n(A:FUELSYSTEM TANK WEIGHT:2, pound) 11000 < \n(A:FUELSYSTEM TANK WEIGHT:3, pound) 11000 < or and \n(L:A32NX_OVHD_INTLT_ANN) 0 == (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or \n(L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool) and \n(L:A32NX_OVHD_INTLT_ANN, Number) 2 == if{ 0.1 } els{ 1 } *"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Left CLR Release": {
		"method": "calcCode",
		"code": "60204 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.FMS.Input.PMDG B737 FMS Right CLR Release": {
		"method": "calcCode",
		"code": "67404 (>K:ROTOR_BRAKE)"
	},
	"Asobo.TBM 930.Lights.Input (Potentiometer).TBM930 Ovhd Panel Light Knob Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min s0\nl0 0.9 / 5 max 100 min 14 (>K:2:LIGHT_POTENTIOMETER_SET)\nl0 0 > if{ \n   (A:LIGHT PANEL, Bool) ! (A:LIGHT PEDESTRAL, Bool) ! or if{ \n	  1 (>K:PANEL_LIGHTS_SET) 1 (>K:PEDESTRAL_LIGHTS_SET) }  }\nl0 90 > if{ 0 (>K:PANEL_LIGHTS_SET) 0 (>K:PEDESTRAL_LIGHTS_SET) }\n(A:LIGHT POTENTIOMETER:14, Percent) sp0 \nl0 14 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) \nl0 19 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) "
	},
	"Microsoft.Generic.Miscellaneous.Input.Toggle Catering": {
		"method": "calcCode",
		"code": "(>K:REQUEST_CATERING)"
	},
	"Microsoft.Generic.Miscellaneous.Input.Toggle Luggage / Baggage": {
		"method": "calcCode",
		"code": "(>K:REQUEST_LUGGAGE)"
	},
	"PMDG.B737-700.Gear.Output.PMDG B737 Antiskid Inop Indicator On": {
		"method": "calcCode",
		"code": "(L:switch_4611_73X) 0 >"
	},
	"FenixSim.A320.Controls.Input.FNX320 PED Rudder Trim Knob Left Press": {
		"method": "calcCode",
		"code": "0 (>L:S_FC_RUDDER_TRIM)"
	},
	"FenixSim.A320.Controls.Input.FNX320 PED Rudder Trim Knob Center Release": {
		"method": "calcCode",
		"code": "1 (>L:S_FC_RUDDER_TRIM)"
	},
	"FenixSim.A320.Controls.Input.FNX320 PED Rudder Trim Knob Right Press": {
		"method": "calcCode",
		"code": "2 (>L:S_FC_RUDDER_TRIM)"
	},
	"Microsoft.Cessna 172.Warning.Input.Annunciator Switch ON": {
		"method": "calcCode",
		"code": "(>K:ANNUNCIATOR_SWITCH_ON)"
	},
	"Microsoft.Cessna 172.Warning.Input.Annunciator Switch OFF": {
		"method": "calcCode",
		"code": "(>K:ANNUNCIATOR_SWITCH_OFF)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP Selected Heading": {
		"method": "calcCode",
		"code": "(L:MSATR_SEL_HDG)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT BEACON OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_BEACON)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT BEACON ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_BEACON)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT STROBE OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_STROBE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT STROBE ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_STROBE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT TAXI TO OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_TAXI_TO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT TAXI TO ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_TAXI_TO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT DOME BRT": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ILTS_DOME)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT DOME DIM": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ILTS_DOME)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT DOME OFF": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_ILTS_DOME)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_LDG_LEFT) \n0 (>L:MSATR_ELTS_LDG_RIGHT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_LDG_LEFT) \n1 (>L:MSATR_ELTS_LDG_RIGHT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR BRK OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_PARK_EMER_BRK)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR BRK EMER": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_PARK_EMER_BRK)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR BRK PARK": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_PARK_EMER_BRK)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT INTEG PED INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_MIP_PED_KNOB, enum) ++ 5 min (>L:MSATR_ILTS_MIP_PED_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT INTEG PED DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_MIP_PED_KNOB, enum) -- 0 max (>L:MSATR_ILTS_MIP_PED_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT INTEG OVH INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_OVHD_KNOB, enum) ++ 5 min (>L:MSATR_ILTS_OVHD_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT INTEG OVH DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_OVHD_KNOB, enum) -- 0 max (>L:MSATR_ILTS_OVHD_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT FLOOD INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_FLOOD_KNOB, enum) 5 + 100 min (>L:MSATR_ILTS_FLOOD_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT FLOOD DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_FLOOD_KNOB, enum) 5 - 0 max (>L:MSATR_ILTS_FLOOD_KNOB, enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR SEAT BELT SIGN SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CABS_SEAT_BELTS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR SEAT BELT SIGN SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CABS_SEAT_BELTS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP HDG BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_HDG)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP HDG DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_SEL_HDG) 1 - dnor (>L:MSATR_SEL_HDG) 1 (>L:MSATR_SEL_HDG_CHANGED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP HDG INC": {
		"method": "calcCode",
		"code": "(L:MSATR_SEL_HDG) 1 + dnor (>L:MSATR_SEL_HDG) 1 (>L:MSATR_SEL_HDG_CHANGED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP HDG SYNC": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_SEL_HDG_SYNC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP ALT INC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_ALTSEL_DELTA) ++ (>L:MSATR_FGCP_ALTSEL_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP ALT DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_ALTSEL_DELTA) -- (>L:MSATR_FGCP_ALTSEL_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP VS BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_VS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP VS NOSE UP": {
		"method": "calcCode",
		"code": "(L:MSATR_FCGP_PITCH_WHEEL_DELTA) ++ (>L:MSATR_FCGP_PITCH_WHEEL_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP VS NOSE DN": {
		"method": "calcCode",
		"code": "(L:MSATR_FCGP_PITCH_WHEEL_DELTA) -- (>L:MSATR_FCGP_PITCH_WHEEL_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP ALT BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_ALT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP APP BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_APP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP BC BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_BC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP CPL BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_CPL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP FD1 BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_FD1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP FD2 BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_FD2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP IAS BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_IAS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP NAV BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_NAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SPD HLD BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_SPDHLD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP STBY BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_STBY)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP VNAV BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_VNAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP YD BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_YD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR NW STEERING OFF": {
		"method": "calcCode",
		"code": "(L:MSATR_Switch_NW_STEERING_cover) 1 == if{ 1 (>L:MSATR_NW_STEERING) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR NW STEERING ON": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_NW_STEERING)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR CHRONO CPT": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLCK_CHRONO_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR CHRONO FO": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLCK_CHRONO_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP FGCP AP ENGAGE-DISENGAGE BUTTON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_AP) ! (>L:MSATR_FGCP_AP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Input.MSATR MASTER WARNING RED BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FWS_MASTER_WARN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP AUTOPILOT FD1 BUTTON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_FD1) ! (>L:MSATR_FGCP_FD1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR FGCP AUTOPILOT FD2 BUTTON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_FD2) ! (>L:MSATR_FGCP_FD2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR STANDBY COMPASS UP-DOWN": {
		"method": "calcCode",
		"code": "(L:MSATR_STBY_COMPASS) ! (>L:MSATR_STBY_COMPASS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR GUSTLOCK LEVER SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_GUSTLOCK) ! (>L:MSATR_ENG_GUSTLOCK)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Input.MSATR MASTER CAUTION YELLOW BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FWS_MASTER_CAUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR MASTER CAUTION YELLOW LAMP": {
		"method": "calcCode",
		"code": "(L:MSATR_FWS_MASTER_CAUT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR MASTER WARNING RED LAMP": {
		"method": "calcCode",
		"code": "(L:MSATR_FWS_MASTER_WARN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP Selected Altitude": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_SELALT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP Selected Vertical Speed": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_WHEEL_VALUE)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG REVERSE THRUST ENGAGED": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG REVERSE THRUST ENGAGED, Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG HOBBS ELAPSED TIME:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG HOBBS ELAPSED TIME:index, Seconds)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG FUEL PUMP SWITCH EX1:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH EX1:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG FIRE DETECTED:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FIRE DETECTED:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG COMBUSTION EX1:index": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG COMBUSTION EX1:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.ENG ON FIRE:index": {
		"method": "calcCode",
		"code": "(A:ENG ON FIRE:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.BLEED AIR ENGINE:index": {
		"method": "calcCode",
		"code": "(A:BLEED AIR ENGINE:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.BLEED AIR SOURCE CONTROL:index": {
		"method": "calcCode",
		"code": "(A:BLEED AIR SOURCE CONTROL:index, Enum)"
	},
	"Microsoft.Generic.Engines.Output.TURB ENG IGNITION SWITCH EX1:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG IGNITION SWITCH EX1:index, Enum)"
	},
	"Microsoft.Generic.Engines.Output.TURB ENG LOW IDLE:index": {
		"method": "calcCode",
		"code": "(A:TURB ENG LOW IDLE:index, Percent)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index, Gallons)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG ANTIDETONATION TANK QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ANTIDETONATION TANK QUANTITY:index, Gallons)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG ANTIDETONATION TANK VALVE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ANTIDETONATION TANK VALVE:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG ANTIDETONATION FLOW RATE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ANTIDETONATION FLOW RATE:index, Gallons per hour)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG CYLINDER HEALTH:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG CYLINDER HEALTH:index, Percent over 100)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG DETONATING:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG DETONATING:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG ENGINE MASTER SWITCH:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ENGINE MASTER SWITCH:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG GLOW PLUG ACTIVE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG GLOW PLUG ACTIVE:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG NITROUS TANK QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG NITROUS TANK QUANTITY:index, Gallons)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG NITROUS TANK MAX QUANTITY:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG NITROUS TANK MAX QUANTITY:index, Gallons)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG NITROUS TANK VALVE:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG NITROUS TANK VALVE:index, Bool)"
	},
	"Microsoft.Generic.Engines.Output.RECIP ENG SUPERCHARGER ACTIVE GEAR:index": {
		"method": "calcCode",
		"code": "(A:RECIP ENG SUPERCHARGER ACTIVE GEAR:index, Number)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG IDLE GATE TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_IDLE_GATE) ! (>L:MSATR_ENG_IDLE_GATE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG IDLE GATE GND PULL": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENG_IDLE_GATE)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG IDLE GATE FLT PUSH": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_IDLE_GATE)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Navigation.Input.MSATR MFD CPT RANGE INC +": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_INC_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Navigation.Input.MSATR MFD CPT RANGE DEC -": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_DEC_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Navigation.Input.MSATR MFD FO RANGE DEC -": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_DEC_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Navigation.Input.MSATR MFD FO RANGE INC +": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_INC_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR NO DEVICE SIGN SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CABS_NO_DEVICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR NO DEVICE SIGN SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CABS_NO_DEVICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input (Potentiometer).MSATR THROTTLE1 LEVER SET": {
		"method": "calcCode",
		"code": "@ 23.8348 * 8000 - -8000 max 16383 min (>K:THROTTLE1_AXIS_SET_EX1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input (Potentiometer).MSATR THROTTLE2 LEVER SET": {
		"method": "calcCode",
		"code": "@ 23.8348 * 8000 - -8000 max 16383 min (>K:THROTTLE2_AXIS_SET_EX1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Controls.Input (Potentiometer).MSATR FLAPS LEVER SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:FLAPS_SET)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input (Potentiometer).MSATR CONDITION1 LEVER SET": {
		"method": "calcCode",
		"code": "@ 341 / near 0 max 3 min (>L:MSATR_CONDITION1_POS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input (Potentiometer).MSATR CONDITION2 LEVER SET": {
		"method": "calcCode",
		"code": "@ 341 / near 0 max 3 min (>L:MSATR_CONDITION2_POS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR SPD TGT INC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_TGT_DELTA) ++ (>L:MSATR_FGCP_TGT_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR SPD TGT DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_TGT_DELTA) -- (>L:MSATR_FGCP_TGT_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR DH INC": {
		"method": "calcCode",
		"code": "(L:MSATR_DH_SET_1_DELTA) ++ (>L:MSATR_DH_SET_1_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR DH DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_DH_SET_1_DELTA) -- (>L:MSATR_DH_SET_1_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC UP CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_UP_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC DN CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_DN_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC VAL CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_VAL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR RCDR GND CTL Toggle": {
		"method": "calcCode",
		"code": "(L:MSATR_FDR_GNDCTL) ! (>L:MSATR_FDR_GNDCTL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT NAV ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_NAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT NAV OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_NAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LOGO ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_LOGO) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LOGO OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_LOGO) "
	},
	"Asobo.Cessna 152.Navigation.Input.C152 DME SOUND TOGGLE": {
		"method": "calcCode",
		"code": "(>K:RADIO_DME1_IDENT_TOGGLE)"
	},
	"JPLogistics.Cessna 152X.Flight Instrumentation.Input.C152X DME Power Toggle": {
		"method": "calcCode",
		"code": "(L:C152X_DME_POWER) ! (>L:C152X_DME_POWER)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR GEAR ANTISKID TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_ASKID) ! (>L:MSATR_GEAR_ASKID)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG EEC1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC1) ! (>L:MSATR_ENG_EEC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG EEC2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC2) ! (>L:MSATR_ENG_EEC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ATPCS TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ATPCS) ! (>L:MSATR_ATPCS) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 1 PWR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_MPNL_DISP1_PWR) ! (>L:MSATR_MPNL_DISP1_PWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 2 PWR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_MPNL_DISP2_PWR) ! (>L:MSATR_MPNL_DISP2_PWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SPD TGT SEL TOGGLE": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_SPEED_TGT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L1) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L2) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L3) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L4) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L5) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L6) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R1) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R2) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R3) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R4) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R5) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R6) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_MENU) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key PREV Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_PREV) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key NEXT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_NEXT) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key RMS Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_RMS) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_FPLN) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key DTO Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_DTO) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key PERF Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_PERF) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key MSG Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_MSG) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key EXEC Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_EXEC) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key BLANK Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_BLANK) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key PROG Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_PROG) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key DATA Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_DATA) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key VNAV Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_VNAV) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key MRK Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_MRK) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key BRT_UP Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_BRT_UP) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key BRT_DN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_BRT_DN) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key A Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_A) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key B Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_B) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key C Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_C) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key D Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_D) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key E Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_E) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key F Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_F) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key G Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_G) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key H Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_H) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key I Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_I) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key J Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_J) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key K Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_K) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key L Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_L) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key M Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_M) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key N Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_N) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key O Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_O) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key P Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_P) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key Q Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_Q) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key R Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_R) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key S Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_S) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key T Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_T) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key U Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_U) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key V Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_V) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key W Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_W) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key X Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_X) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key Y Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_Y) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key Z Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_Z) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_SLASH) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key SPACE Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_SPACE) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key CLR Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key CLR Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU1_CLR) 1 (>L:MSATR_MCDU1_INPUT) }\nels{\n   1 (>L:MSATR_MCDU1_CLR_LONG) 1 (>L:MSATR_MCDU1_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_1) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_2) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_3) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_4) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_5) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_6) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_7) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_8) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_9) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_0) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key PERIOD Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_PERIOD) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 Key PLUSMINUS Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU1_PLUSMINUS) 1 (>L:MSATR_MCDU1_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 FAIL LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_FAIL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 MSG LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_MSG_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 POS LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_POS_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 OFST LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_OFST_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 SPARE1 LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_SPARE1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 SPARE2 LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_SPARE2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 MENU LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_MENU_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU1 EXEC LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU1_EXEC_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L1) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L2) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L3) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L4) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L5) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L6) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R1) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R2) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R3) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R4) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R5) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R6) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_MENU) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key PREV Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_PREV) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key NEXT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_NEXT) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key RMS Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_RMS) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key FPLN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_FPLN) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key DTO Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_DTO) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key PERF Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_PERF) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key MSG Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_MSG) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key EXEC Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_EXEC) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key BLANK Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_BLANK) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key PROG Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_PROG) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key DATA Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_DATA) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key VNAV Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_VNAV) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key MRK Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_MRK) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key BRT_UP Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_BRT_UP) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key BRT_DN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_BRT_DN) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key A Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_A) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key B Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_B) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key C Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_C) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key D Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_D) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key E Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_E) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key F Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_F) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key G Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_G) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key H Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_H) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key I Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_I) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key J Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_J) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key K Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_K) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key L Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_L) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key M Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_M) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key N Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_N) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key O Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_O) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key P Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_P) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key Q Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_Q) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key R Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_R) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key S Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_S) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key T Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_T) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key U Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_U) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key V Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_V) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key W Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_W) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key X Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_X) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key Y Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_Y) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key Z Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_Z) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_SLASH) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key SPACE Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_SPACE) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key CLR Press": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key CLR Release": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU2_CLR) 1 (>L:MSATR_MCDU2_INPUT) }\nels{\n   1 (>L:MSATR_MCDU2_CLR_LONG) 1 (>L:MSATR_MCDU2_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_1) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_2) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_3) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_4) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_5) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_6) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_7) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_8) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_9) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_0) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key PERIOD Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_PERIOD) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 Key PLUSMINUS Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCDU2_PLUSMINUS) 1 (>L:MSATR_MCDU2_INPUT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 FAIL LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_FAIL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 MSG LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_MSG_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 POS LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_POS_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 OFST LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_OFST_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 SPARE1 LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_SPARE1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 SPARE2 LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_SPARE2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 MENU LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_MENU_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.MSATR MCDU2 EXEC LT": {
		"method": "calcCode",
		"code": "(L:MSATR_MCDU2_EXEC_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 COM": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_COM)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 NAV": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_NAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 SURV": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_SURV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_3)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_4)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_5)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_6)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_7)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_8)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_9)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_0)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_PERIOD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key UP Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_UP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_DOWN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key LEFT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_LEFT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key RIGHT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_RIGHT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key ENTER Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_ENTER)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP1 Key ESC Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP1_ESC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 COM": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_COM)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 NAV": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_NAV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 SURV": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_SURV)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 3 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_3)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 4 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_4)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 5 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_5)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 6 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_6)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 7 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_7)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 8 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_8)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 9 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_9)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_0)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_PERIOD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key UP Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_UP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key DOWN Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_DOWN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key LEFT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_LEFT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key RIGHT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_RIGHT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key ENTER Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_ENTER)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.MSATR MCP2 Key ESC Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MCP2_ESC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.MSATR Cockpit Door Switch Open": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CKPT_DOOR) \n1 (>L:MSATR_CKPT_DOOR_OPEN_TRIGGER)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.MSATR Cockpit Door Switch Close": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CKPT_DOOR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.MSATR Cockpit Door Switch Deny": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_CKPT_DOOR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR Cockpit Door Open Indicator": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR_OPEN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar RCT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_RCT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar TGT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_TGT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar STAB Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_STAB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar SECT Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_SECT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Mode Knob OFF": {
		"method": "calcCode",
		"code": "4 (>L:MSATR_WXR_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Mode Knob SBY": {
		"method": "calcCode",
		"code": "3 (>L:MSATR_WXR_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Mode Knob WX": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_WXR_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Mode Knob GMAP": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Mode Knob TST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_WXR_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Gain Knob Inc": {
		"method": "calcCode",
		"code": "(L:MSATR_WXR_GAIN) ++ 100 min (>L:MSATR_WXR_GAIN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Gain Knob Dec": {
		"method": "calcCode",
		"code": "(L:MSATR_WXR_GAIN) -- 0 max (>L:MSATR_WXR_GAIN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Gain Knob Push": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_WXR_VAR) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Gain Knob Pull": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_WXR_VAR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar Gain Knob Toggle": {
		"method": "calcCode",
		"code": "(L:MSATR_WXR_VAR) ! (>L:MSATR_WXR_VAR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar TILT Knob Inc": {
		"method": "calcCode",
		"code": "(L:MSATR_WXR_TILT) 5 + 100 min (>L:MSATR_WXR_TILT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radar.MSATR Weather Radar TILT Knob Dec": {
		"method": "calcCode",
		"code": "(L:MSATR_WXR_TILT) 5 - 0 max (>L:MSATR_WXR_TILT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.Input.MSATR LEFT MICROPHONE HIDE SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_MICROPHONE_LEFT_HIDDEN) ! (>L:MSATR_MICROPHONE_LEFT_HIDDEN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Radio.Input.MSATR RIGHT MICROPHONE HIDE SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_MICROPHONE_RIGHT_HIDDEN) ! (>L:MSATR_MICROPHONE_RIGHT_HIDDEN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.EFB PAGE CHANGER ENCODER DEC": {
		"method": "calcCode",
		"code": "(L:EFB_ACTUAL_PAGE) -- 1 max (>L:EFB_ACTUAL_PAGE)\n(L:EFB_ACTUAL_PAGE) (>L:MSATR_EFB_SET_PAGE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.EFB PAGE CHANGER ENCODER INC": {
		"method": "calcCode",
		"code": "(L:EFB_ACTUAL_PAGE) ++ 5 min (>L:EFB_ACTUAL_PAGE)\n(L:EFB_ACTUAL_PAGE) (>L:MSATR_EFB_SET_PAGE)\n"
	},
	"FenixSim.A320.Gear.Input (Potentiometer).FNX320 Misc Tiller Capt Steering Set": {
		"method": "calcCode",
		"code": "@ -6.82 / 75 + -75 max 75 min (>L:N_FC_CAPT_TILLER)\n@ -32.0293 * 16383 + -16383 max 16383 min 16383 min (>K:AXIS_STEERING_SET)"
	},
	"FenixSim.A320.Gear.Input (Potentiometer).FNX320 Misc Tiller FO Steering Set": {
		"method": "calcCode",
		"code": "@ -6.82 / 75 + -75 max 75 min (>L:N_FC_FO_TILLER)\n@ -32.0293 * 16383 + -16383 max 16383 min 16383 min (>K:AXIS_STEERING_SET) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START 1 PUSH": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENGS_START1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START 2 PUSH": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENGS_START2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START MODE KNOB START A & B": {
		"method": "calcCode",
		"code": "4 (>L:MSATR_ENGS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START MODE KNOB START B": {
		"method": "calcCode",
		"code": "3 (>L:MSATR_ENGS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START MODE KNOB START A": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_ENGS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START MODE KNOB CRANK": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENGS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG START MODE KNOB OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENGS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG START 1 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_START1_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG START 2 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_START2_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG MAN IGN ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_IGN_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG MAN IGN TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_IGN) ! (>L:MSATR_ENGS_IGN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG START 1 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_START1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG START 2 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_START2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC MASTER BATTERY SWITCH OVRD": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELEC_BAT_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC MASTER BATTERY SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELEC_BAT_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC MASTER BATTERY SWITCH OFF": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_ELEC_BAT_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Input.MSATR FUEL PUMP 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP1) ! (>L:MSATR_FUEL_PUMP1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Input.MSATR FUEL PUMP 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP2) ! (>L:MSATR_FUEL_PUMP2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR FLT COMPT TEMPERATURE ENCODER DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_COMPT_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR FLT COMPT TEMPERATURE ENCODER INC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_COMPT_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN TEMPERATURE ENCODER DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_CABIN_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN TEMPERATURE ENCODER INC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_CABIN_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR FLT COMPT TEMPERATURE AUTO-MAN SEL SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE) ! (>L:MSATR_AIRC_COMPT_TEMP_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN TEMPERATURE AUTO-MAN SEL SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE) ! (>L:MSATR_AIRC_CABIN_TEMP_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR FLT COMPT TEMPERATURE MAN SELECTED ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR FLT COMPT TEMPERATURE OVHT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN TEMPERATURE MAN SELECTED ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN TEMPERATURE OVHT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR RECIRC FAN 1 SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1) ! (>L:MSATR_AIRC_RECIRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR RECIRC FAN 2 SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2) ! (>L:MSATR_AIRC_RECIRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR RECIRC FAN 1 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR RECIRC FAN 2 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR RECIRC FAN 1 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR RECIRC FAN 2 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 1 CPT MODE BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK1_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 1 CPT CHR BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK1_CHR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 1 CPT ET BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK1_ET)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 1 CPT TST BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK1_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 2 FO MODE BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK2_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 2 FO CHR BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK2_CHR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 2 FO ET BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK2_ET)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR CLOCK 2 FO TST BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CLOCK2_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR COMPT SEL FLT - CABIN SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_SEL) ! (>L:MSATR_AIRC_COMPT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR ENGINE TO CONFIG TEST Button - Press": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_TO_CONFIG, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR ENGINE TO CONFIG TEST Button - Release": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENG_TO_CONFIG, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Input.MSATR FUEL XFEED TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_XFEED) ! (>L:MSATR_FUEL_XFEED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL XFEED OFF LT": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_XFEED_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL FEED LOPR 1 INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_FEED_LP1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL FEED LOPR 2 INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_FEED_LP2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL PUMP 1 RUN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP1_RUN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL PUMP 1 OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL PUMP 2 RUN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP2_RUN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL PUMP 2 OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_PUMP2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR MIN CAB LT TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_MINCAB) ! (>L:MSATR_ILTS_MINCAB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR MIN CAB LT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ILTS_MINCAB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR MIN CAB LT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ILTS_MINCAB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR CALLS ATTND PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CALL_ATTND)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR CALLS RESET PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CALL_RESET)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR CALLS MECH PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CALL_MECH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR CALLS MECH RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CALL_MECH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR CAPT WIPER KNOB OFF": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_AICE_WIPER_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR CAPT WIPER KNOB SLOW": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_AICE_WIPER_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR CAPT WIPER KNOB FAST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_AICE_WIPER_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FO WIPER KNOB OFF": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_AICE_WIPER_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FO WIPER KNOB SLOW": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_AICE_WIPER_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FO WIPER KNOB FAST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_AICE_WIPER_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ANNLT SWITCH TEST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ITLS_ANNLT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS VID CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_VID_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PERF CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PERF_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ANNLT SWITCH BRT": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ITLS_ANNLT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS MAP CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_MAP_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS ND CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_ND_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ANNLT SWITCH DIM": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_ITLS_ANNLT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS SYS CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_SYS_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS MISC CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_MISC_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR STBY COMPASS LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_STBY_COMPASS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS BRG1 CPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_BRG1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR STBY COMPASS LIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_STBY_COMPASS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS BRG2 CPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_BRG2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS RNG INC CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_INC_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR STORM LIGHT SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ILTS_STORM)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS RNG DEC CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_DEC_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR STORM LIGHT SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ILTS_STORM)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR EMER EXIT LT ON": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CABS_EMER_EXIT_LTS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR EMER EXIT LT ARM": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CABS_EMER_EXIT_LTS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR EMER EXIT LT DISARM": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_CABS_EMER_EXIT_LTS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS RCL": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RCL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR EMER EXIT LT DISARM INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CABS_EMER_EXIT_LTS_DISARM_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC MENU PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_MENU)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS MAN DEL": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_MAN_DEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS CLR ": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_CLR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS VID FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_VID_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PERF FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PERF_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS MAP FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_MAP_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS ND FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_ND_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS SYS FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_SYS_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS MISC FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_MISC_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS BRG1 FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_BRG1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS BRG2 FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_BRG2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PROP BRAKE SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENGS_PROP_BRK) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PROP BRAKE SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENGS_PROP_BRK) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PROP BRAKE UNLOCK INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_PROP_BRK_UNLK_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PROP BRAKE READY INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_PROP_BRK_READY_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PEC1 Toggle": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC1) ! (>L:MSATR_ENG_PEC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PEC2 Toggle": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC2) ! (>L:MSATR_ENG_PEC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PEC1 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PEC1 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PEC2 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG PEC2 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PEC2_FAULT_LT)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ TO-SPEEDS V1 DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_speedV1, Knots)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ TO-SPEEDS VR DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_speedVR, Knots)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ TO-SPEEDS V2 DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_speedV2, Knots)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT TARGET AIRSPEED DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuSpd, Knots)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT TARGET HEADING DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuHdg,Degrees)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT TARGET ALTITUDE DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuAlt, Feet)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT TARGET VERTICAL SPEED DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuVs, Ft/min)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT VERTICAL SPEED ACTIVE LED": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_isVsActive)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT SPEED DASHED LED": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuSpdDashed)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT HDG DASHED LED": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuHdgDashed)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ AUTOPILOT AUTOPILOT VS DASHED LED": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_fcuVsDashed)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ BAT 1 VOLTAGE DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_bat1)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ BAT 2 VOLTAGE DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_bat2)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ XPDR CODE DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_xpdr)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ CLOCK CHR DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_clockChr)"
	},
	"FenixSim.A320.Flight Instrumentation.Output.FNX320+FENIXQUARTZ CLOCK ET DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_clockEt)"
	},
	"FenixSim.A320.ISIS.Output.FNX320+FENIXQUARTZ ISIS BARO DISPLAY": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_isisBaro)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS RNG INC FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_INC_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS RNG DEC FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_RNG_DEC_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 1 KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_BARO_1_DELTA) -- (>L:MSATR_BARO_1_DELTA) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 1 KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_BARO_1_DELTA) ++ (>L:MSATR_BARO_1_DELTA) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 2 KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_BARO_2_DELTA) -- (>L:MSATR_BARO_2_DELTA) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 2 KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_BARO_2_DELTA) ++ (>L:MSATR_BARO_2_DELTA) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 1 STD MODE TOGGLE": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_BARO_STD_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR BARO 2 STD MODE TOGGLE": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_BARO_STD_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC UP FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_UP_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC DN FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_DN_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.EFIS.Input.MSATR EFIS PROC VAL FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_PROC_VAL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR CAPT LOUD SPEAKER KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_SPEAKER_CPT) 5 + 100 min (>L:MSATR_COMM_SPEAKER_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR CAPT LOUD SPEAKER KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_SPEAKER_CPT) 5 - 0 max (>L:MSATR_COMM_SPEAKER_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR FO LOUD SPEAKER KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_SPEAKER_FO) 5 + 100 min (>L:MSATR_COMM_SPEAKER_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR FO LOUD SPEAKER KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_SPEAKER_FO) 5 - 0 max (>L:MSATR_COMM_SPEAKER_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI MENU BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_IESI_MENU)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI STD BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_IESI_STD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI PLUS BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_IESI_PLUS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI MINUS BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_IESI_MINUS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI SEL BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_IESI_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_IESI_SET_DELTA) -- (>L:MSATR_IESI_SET_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR IESI KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_IESI_SET_DELTA) ++ (>L:MSATR_IESI_SET_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG BOOST BUTTON TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_BOOST) ! (>L:MSATR_ENG_BOOST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR BOOST ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_BOOST_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR BOOST FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_BOOST_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ICE BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ICE) ! (>L:MSATR_AICE_ICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ICE BUTTON ICING INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ICE_ICING_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ICE BUTTON AOA INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ICE_AOA_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR APM BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_APM) ! (>L:MSATR_ENG_APM)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR APM TEST BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_APM_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR APM TEST BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENG_APM_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ICE TEST BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ICE_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ICE TEST BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ICE_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR APM OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_APM_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR APM FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_APM_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR STICK PUSHER SHAKER TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_YOKE_PUSHER_SHAKER) ! (>L:MSATR_YOKE_PUSHER_SHAKER)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR STICK PUSHER SHAKER OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_YOKE_PUSHER_SHAKER_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR STICK PUSHER SHAKER FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_YOKE_PUSHER_SHAKER_FAULT_LT)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR LEFT GEAR UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_LEFT_UNLK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR NOSE GEAR UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_NOSE_UNLK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR RIGHT GEAR UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_RIGHT_UNLK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR LEFT GEAR DOWN ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_LEFT_DOWN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR NOSE GEAR DOWN ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_NOSE_DOWN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR RIGHT GEAR DOWN ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_RIGHT_DOWN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Output.MSATR GEAR ANTISKID OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_GEAR_ASKID_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR GEAR ANTISKID TEST BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_GEAR_ASKID_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Gear.Input.MSATR GEAR ANTISKID TEST BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_GEAR_ASKID_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR DH TOGGLE CAPT Side": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_DH_TOGGLE_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR MDA TOGGLE CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_DH_TOGGLE_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR DH TOGGLE FO Side": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_DH_TOGGLE_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR MDA TOGGLE FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_DH_TOGGLE_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR DOORS CAB OK INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_DOOR_CAB_OK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR DOORS SVCE OK INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_DOOR_SVCE_OK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FLTCTL MFC 1A TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC_1A) ! (>L:MSATR_FCTL_MFC_1A)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FLTCTL MFC 1B TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC_1B) ! (>L:MSATR_FCTL_MFC_1B)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FLTCTL MFC 2A TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC_2A) ! (>L:MSATR_FCTL_MFC_2A)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FLTCTL MFC 2B TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC_2B) ! (>L:MSATR_FCTL_MFC_2B)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 1A OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC1A_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 1A FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC1A_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 1B OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC1B_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 1B FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC1B_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 2A OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC2A_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 2B FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC2B_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 2A FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC2A_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL MFC 2B OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_MFC2B_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL SPLR 1 INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_SPLR1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL SPLR 2 INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_SPLR2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FLTCTL TLU FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FCTL_TLU_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING PROP 1 BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP1_AICE) ! (>L:MSATR_AICE_PROP1_AICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING PROP 2 BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP2_AICE) ! (>L:MSATR_AICE_PROP2_AICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR EFIS PFD-EWD-MFD DISPLAY Button CAPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_DISPLAY1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Input.MSATR EFIS PFD-EWD-MFD DISPLAY Button FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_EFIS_DISPLAY2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING PROP MODE SEL BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP_AICE_MODE) ! (>L:MSATR_AICE_PROP_AICE_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING PROP 1 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP1_AICE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING PROP 2 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP2_AICE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING PROP 1 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP1_AICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING PROP 2 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP2_AICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING PROP MODE ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROP_AICE_MODE_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING MODE SEL AUTO BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_MODE_AUTO) ! (>L:MSATR_AICE_MODE_AUTO) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING MODE SEL AUTO MAN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_MODE_AUTO_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING MODE SEL AUTO FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_MODE_AUTO_FAULT_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING SIDE WINDOWS BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_SIDE_WND) ! (>L:MSATR_AICE_SIDE_WND)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING SIDE WINDOWS ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_SIDE_WND_ON_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING SIDE WINDOWS FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_SIDE_WND_FAULT_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING RUD & L ELEV PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_RUD_AICE) ! (>L:MSATR_AICE_RUD_AICE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR ANTI ICING AIL & R ELEV PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_AIL_AICE) ! (>L:MSATR_AICE_AIL_AICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING RUD & L ELEV ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_RUD_AICE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING RUD & L ELEV FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_RUD_AICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING AIL & R ELEV ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_AIL_AICE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR ANTI ICING AIL & R ELEV FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(>L:MSATR_AICE_AIL_AICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR PULLUP WARNING LAMP": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_GPWS_PULLUP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR GPWS WARNING LAMP": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_GPWS_GPWS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG EEC1 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG EEC2 OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG EEC1 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG EEC2 FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_EEC2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG ATPCS ARM ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ATPCS_ARM_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENG ATPCS OFF ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ATPCS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING ENG 1 BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG1_DEICE) ! (>L:MSATR_AICE_ENG1_DEICE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING ENG 2 BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG2_DEICE) ! (>L:MSATR_AICE_ENG2_DEICE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING ENG 1 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG1_DEICE_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING ENG 2 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG2_DEICE_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING ENG 1 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG1_DEICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING ENG 2 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_ENG2_DEICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING SAT 20 BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_DEICE_MODE) !  (>L:MSATR_AICE_DEICE_MODE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING SAT 20 ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_DEICE_MODE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING AIRFRAME BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FRAME_DEICE) ! (>L:MSATR_AICE_FRAME_DEICE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING AIRFRAME ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FRAME_DEICE_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING AIRFRAME FAULT INDICATOR": {
		"method": "calcCode",
		"code": " (>L:MSATR_AICE_FRAME_DEICE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING AFR AIR BLEED BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FRAME_BLEED) ! (>L:MSATR_AICE_FRAME_BLEED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING AFR AIR BLEED OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FRAME_BLEED_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING AFR AIR BLEED FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FRAME_BLEED_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR DE ICING MODE SEL OVRD BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_DEICE_OVRD) ! (>L:MSATR_AICE_DEICE_OVRD) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING MODE SEL OVRD INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_DEICE_OVRD_OVRDLT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR DE ICING MODE SEL OVRD FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_DEICE_OVRD_FAULT_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE SOURCE SELECT MANUAL": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CPRS_SRCSEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE SOURCE SELECT AUTO": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CPRS_SRCSEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR PROBES HTG CAPT BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_CPT) ! (>L:MSATR_AICE_PROBES_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR PROBES HTG FO BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_FO) ! (>L:MSATR_AICE_PROBES_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR PROBES HTG STBY BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_STBY) ! (>L:MSATR_AICE_PROBES_STBY)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG CAPT OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_CPT_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG FO OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_FO_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG STBY OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_PROBES_STBY_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR WINDSHIELD HTG LEFT BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_LEFT) ! (>L:MSATR_AICE_WSHLD_LEFT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Input.MSATR WINDSHIELD HTG RIGHT BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_RIGHT) ! (>L:MSATR_AICE_WSHLD_RIGHT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR WINDSHIELD HTG LEFT OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_LEFT_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR WINDSHIELD HTG LEFT FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_LEFT_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR WINDSHIELD HTG RIGHT OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_RIGHT_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR WINDSHIELD HTG RIGHT FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_WSHLD_RIGHT_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG CAPT TAT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_CPT_TAT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG FO TAT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FO_TAT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG CAPT PITOT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_CPT_PITOT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG FO PITOT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FO_PITOT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR PROBES HTG STBY PITOT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_STBY_PITOT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE SOURCE SELECT MANUAL ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_SRCSEL_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE INC": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_CAB_RATE) 5 + 100 min (>L:MSATR_CPRS_CAB_RATE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_CAB_RATE) 5 - 0 max (>L:MSATR_CPRS_CAB_RATE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE LANDING ELEV MAN SET DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_LDG_ALT, number) 5 - 0 max (>L:MSATR_CPRS_LDG_ALT)\n(L:MSATR_CPRS_LDG_ALT_DELTA) -- (>L:MSATR_CPRS_LDG_ALT_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE LANDING ELEV MAN SET INC": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_LDG_ALT, number) 5 + 100 max (>L:MSATR_CPRS_LDG_ALT)\n(L:MSATR_CPRS_LDG_ALT_DELTA) ++ (>L:MSATR_CPRS_LDG_ALT_DELTA)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.Kohlsman Set Standard Baro mb": {
		"method": "calcCode",
		"code": "1013.25 16 *  (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.Kohlsman Set mb": {
		"method": "calcCode",
		"code": "@ 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE SOURCE SELECT TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_SRCSEL) ! (>L:MSATR_CPRS_SRCSEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE OUTFLOW TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_OUTFLOW) ! (>L:MSATR_CPRS_OUTFLOW)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE OUTFLOW NORM": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CPRS_OUTFLOW)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE OUTFLOW BKUP": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CPRS_OUTFLOW)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE OURFLOW NORM ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_OUTFLOW_NORM_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE OURFLOW BKUP ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_OUTFLOW_BKUP_LT)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.Kohlsman Set (in Hg)": {
		"method": "calcCode",
		"code": "@ 33.8639 16 * * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE DITCH ON ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_DITCH_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DITCH TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_DITCH) ! (>L:MSATR_CPRS_DITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CPRS_DITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CPRS_DITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DUMP  OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CPRS_DUMP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DUMP ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CPRS_DUMP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE DUMP TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_DUMP) ! (>L:MSATR_CPRS_DUMP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE DUMP ON ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_DUMP_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE MODE TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_MODE) ! (>L:MSATR_CPRS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE MODE OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_CPRS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR CABIN PRESSURE MODE MAN": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_CPRS_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE MODE MAN ANNUNCIATOR": {
		"method": "calcCode",
		"code": "L:MSATR_CPRS_MODE_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE MODE FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_MODE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT TO": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ENG_PWRMGT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT MCT": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_PWRMGT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT CLB": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_ENG_PWRMGT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT CRZ": {
		"method": "calcCode",
		"code": "3 (>L:MSATR_ENG_PWRMGT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR COCKPIT DOOR OPEN ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR_OPEN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR COCKPIT DOOR FAULT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP CPL CPT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CPL_CPT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP CPL FO ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CPL_FO_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP AP ON CPT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_AP_ON_CPT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP AP ON FO ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_AP_ON_FO_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE FM1 CPT Side": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FGCP_SRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE VILS1 CPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_SRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE VILS2 CPT Side": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_FGCP_SRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE FM2 CPT Side": {
		"method": "calcCode",
		"code": "3 (>L:MSATR_FGCP_SRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE FM1 FO Side": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FGCP_SRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE VILS1 FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FGCP_SRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE VILS2 FO Side": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_FGCP_SRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP SOURCE FM2 FO Side": {
		"method": "calcCode",
		"code": "3 (>L:MSATR_FGCP_SRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP COURSE CPT SIDE INC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CRS1, number) 5 + 100 max (>L:MSATR_FGCP_CRS1)\n(L:MSATR_FGCP_CRS1_DELTA) ++ (>L:MSATR_FGCP_CRS1_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP COURSE CPT SIDE DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CRS1, number) 5 - 0 max (>L:MSATR_FGCP_CRS1)\n(L:MSATR_FGCP_CRS1_DELTA) -- (>L:MSATR_FGCP_CRS1_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP CRS FO SIDE DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CRS2, number) 5 - 0 max (>L:MSATR_FGCP_CRS2)\n(L:MSATR_FGCP_CRS2_DELTA) -- (>L:MSATR_FGCP_CRS2_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP CRS FO SIDE INC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_CRS2, number) 5 + 100 max (>L:MSATR_FGCP_CRS2)\n(L:MSATR_FGCP_CRS2_DELTA) ++ (>L:MSATR_FGCP_CRS2_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYDR XFEED PUMP PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_XFEED) ! (>L:MSATR_HYDR_XFEED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR AC WILD ELEC EXT POWER AVAIL ON-OFF SW": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_EXTPWR) ! (>L:MSATR_ACWF_EXTPWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR  ELEC ACWF EXTERNAL POWER AVAIL ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_ACWF_EXTPWR_AVAIL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR GO AROUND BUTTON CPT Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_GA1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ACWF EXTERNAL POWER ON ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_ACWF_EXTPWR_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR GO AROUND BUTTON FO Side": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ENG_GA2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR THRUST REVERSER (One Button)": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG THROTTLE LEVER POSITION:1,Percent) 2 < \n(A:GENERAL ENG THROTTLE LEVER POSITION:2,Percent) 2 < \n(L:MSATR_THROTTLE1_REV) ! and and if{ \n   -16383 (>K:THROTTLE1_AXIS_SET_EX1)\n   -16383 (>K:THROTTLE2_AXIS_SET_EX1) }\nels{ \n   -8000 (>K:THROTTLE1_AXIS_SET_EX1)\n   -8000 (>K:THROTTLE2_AXIS_SET_EX1) }\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP YD ON CPT LIGHT": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_YD_ON_CPT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP YD ON FO LIGHT": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_YD_ON_FO_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR ABLD ENG 1 BLEED BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG1_BLEED) ! (>L:MSATR_ABLD_ENG1_BLEED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR ABLD ENG 2 BLEED BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG2_BLEED) ! (>L:MSATR_ABLD_ENG2_BLEED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR ABLD PACK 1 VALVE BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK1) ! (>L:MSATR_ABLD_PACK1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR ABLD PACK 2 VALVE BUTTON PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK2) ! (>L:MSATR_ABLD_PACK2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR ABLD RAM AIR BUTTON PRESS": {
		"method": "calcCode",
		"code": "(>L:MSATR_ABLD_RAM_AIR) ! (>L:MSATR_ABLD_RAM_AIR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 1 BLEED OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG1_BLEED_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 2 BLEED OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG2_BLEED_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 1 BLEED FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG1_BLEED_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 2 BLEED FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG2_BLEED_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 1 BLEED OVHT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG1_BLEED_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 1 BLEED LEAK INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG1_BLEED_LEAK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT BEACON TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELTS_BEACON) ! (>L:MSATR_ELTS_BEACON)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L1 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L1 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU1_L1) 1 (>L:MSATR_MCDU1_INPUT) }\nels{\n   1 (>L:MSATR_MCDU1_L1_LONG) 1 (>L:MSATR_MCDU1_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L2 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L2 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU1_L2) 1 (>L:MSATR_MCDU1_INPUT) }\nels{\n   1 (>L:MSATR_MCDU1_L2_LONG) 1 (>L:MSATR_MCDU1_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L3 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU1 Key L3 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU1_L3) 1 (>L:MSATR_MCDU1_INPUT) }\nels{\n   1 (>L:MSATR_MCDU1_L3_LONG) 1 (>L:MSATR_MCDU1_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 2 BLEED OVHT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG2_BLEED_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD ENG 2 BLEED LEAK INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_ENG2_BLEED_LEAK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD XVALVE OPEN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_XVALVE_OPEN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD PACK 1 VALVE FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD PACK 2 VALVE FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD PACK 1 VALVE OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD PACK 2 VALVE OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_PACK2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD RAM AIR ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_RAM_AIR_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR ABLD RAM AIR FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ABLD_RAM_AIR_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND FLOW SEL PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_FLOW_SEL) ! (>L:MSATR_AIRC_FLOW_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND FLOW HIGH INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_FLOW_HIGH_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT TEMP KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_COMPT_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT TEMP KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_COMPT_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND CABIN TEMP KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_CABIN_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND CABIN TEMP KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 - 0 max  (>L:MSATR_AIRC_CABIN_TEMP_KNOB)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT SEL TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_SEL) ! (>L:MSATR_AIRC_COMPT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT SEL FLT COMPT": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_AIRC_COMPT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT SEL CABIN": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_AIRC_COMPT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND COMPT TEMP SEL PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE) ! (>L:MSATR_AIRC_COMPT_TEMP_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND CABIN TEMP SEL PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE) ! (>L:MSATR_AIRC_CABIN_TEMP_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND CABIN TEMP SEL MAN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND CABIN TEMP SEL OVHT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_CABIN_TEMP_MODE_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND COMPT TEMP SEL MAN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE_MAN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND COMPT TEMP SEL OVHT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_COMPT_TEMP_MODE_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND RECIRC FAN 1 PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1) ! (>L:MSATR_AIRC_RECIRC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AIRCOND RECIRC FAN 2 PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2) ! (>L:MSATR_AIRC_RECIRC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND RECIRC FAN 1 OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND RECIRC FAN 2 OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND RECIRC FAN 1 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AIRCOND RECIRC FAN 2 FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_AIRC_RECIRC2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR VENT EXHAUST MODE PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_VENT_EXHAUST_MODE) ! (>L:MSATR_VENT_EXHAUST_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR VENT EXHAUST MODE OVRD INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_VENT_EXHAUST_MODE_OVRD_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR VENT EXHAUST MODE FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_VENT_EXHAUST_MODE_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR AVIONICS VENT FAULT INDICATOR": {
		"method": "calcCode",
		"code": " (L:MSATR_OVBD_VALVE_FAULT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AVIONICS VENT FULL OPEN": {
		"method": "calcCode",
		"code": " 2 (>L:MSATR_OVBD_VALVE_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AVIONICS VENT AUTO": {
		"method": "calcCode",
		"code": " 1 (>L:MSATR_OVBD_VALVE_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR AVIONICS VENT FULL CLOSE": {
		"method": "calcCode",
		"code": " 0 (>L:MSATR_OVBD_VALVE_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR OXYGEN MAIN SUPPLY PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_MAIN) ! (>L:MSATR_OXY_MAIN) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR OXYGEN MAIN SUPPLY OFF INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_MAIN_OFF_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR OXYGEN MAIN SUPPLY LOPR INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_MAIN_LOPR_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Input.MSATR OXYGEN PAX SUPPLY PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_PAX) ! (>L:MSATR_OXY_PAX) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR OXYGEN PAX SUPPLY ON INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_PAX_ON_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR OXYGEN PRESSURE GAUGE NEEDLE": {
		"method": "calcCode",
		"code": "(L:MSATR_OXY_PRESSURE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR COMPT SMK TEST PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_SMK_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR COMPT SMK TEST RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_SMK_TEST)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR AFT COMPT LAV DET FANS TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_DET_SEL) ! (>L:MSATR_FIRE_DET_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR AFT COMPT LAV DET FANS ALTN INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_DET_SEL_ALTN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR AFT COMPT LAV DET FANS FAULT INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_DET_SEL_FAULT_LT)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input.CABIN_LIGHT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input.CABIN_LIGHT_ON": {
		"method": "calcCode",
		"code": "2 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Lights.Input.CABIN_LIGHT_NORMAL": {
		"method": "calcCode",
		"code": "1 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L1 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L1 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU2_L1) 1 (>L:MSATR_MCDU2_INPUT) }\nels{\n   1 (>L:MSATR_MCDU2_L1_LONG) 1 (>L:MSATR_MCDU2_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L2 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L2 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU2_L2) 1 (>L:MSATR_MCDU2_INPUT) }\nels{\n   1 (>L:MSATR_MCDU2_L2_LONG) 1 (>L:MSATR_MCDU2_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L3 OnPress (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) 1 + (>L:PressTime) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.MCDU.Input.MSATR MCDU2 Key L3 OnRelease  (short-long press)": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (L:PressTime) < if{\n   1 (>L:MSATR_MCDU2_L3) 1 (>L:MSATR_MCDU2_INPUT) }\nels{\n   1 (>L:MSATR_MCDU2_L3_LONG) 1 (>L:MSATR_MCDU2_INPUT) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR OPEN/CLOSE COCKPIT DOOR 1 SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_COCKPIT_1) ! (>L:MSATR_DOOR_COCKPIT_1) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR OPEN/CLOSE COCKPIT DOOR 2 SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_COCKPIT_2) ! (>L:MSATR_DOOR_COCKPIT_2) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Miscellaneous.Input.MSATR OPEN/CLOSE CABIN DOOR SWITCH": {
		"method": "calcCode",
		"code": "(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_CABIN) ! (>L:MSATR_DOOR_CABIN) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYDR BLUE PUMP PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_BLUE) ! (>L:MSATR_HYDR_BLUE) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR BLUE PUMP LOPR ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_BLUE_LOPR_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR BLUE PUMP OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_BLUE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR BLUE PUMP OVHT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_BLUE_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR BLUE PUMP LOLVL ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_BLUE_LOLVL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYDR AUX PUMP PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_AUX) ! (>L:MSATR_HYDR_AUX)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR AUX PUMP LOPR ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_AUX_LOPR_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR AUX PUMP OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_AUX_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR AUX PUMP OVHT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_AUX_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYDR GREEN PUMP PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_GREEN) ! (>L:MSATR_HYDR_GREEN) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR GREEN PUMP LOPR ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_GREEN_LOPR_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR GREEN PUMP OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_GREEN_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR GREEN PUMP OVHT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_GREEN_OVHT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR GREEN PUMP LOLVL ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_GREEN_LOLVL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Output.MSATR HYDR XFEED PUMP ON ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_HYDR_XFEED_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACW1 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_ACW1_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACW2 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_ACW2_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ACWF BTC PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_BTC) ! (>L:MSATR_ACWF_BTC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACW2 BTC ISOL ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_BTC_ISOL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACW2 BTC GREEN LINE ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_BTC_GREEN_LINE_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ACWF GEN1 PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN1) ! (>L:MSATR_ACWF_GEN1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACWF GEN1 FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACWF GEN1 OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ACWF GEN2 PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN2) ! (>L:MSATR_ACWF_GEN2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACWF GEN2 FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ACWF GEN2 OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACWF_GEN2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE SQUIB TEST 1 PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_SQUIB_TEST_1, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE SQUIB TEST 1 RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_SQUIB_TEST_1, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE SQUIB TEST 2 PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_SQUIB_TEST_2, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE SQUIB TEST 2 RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_SQUIB_TEST_2, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE HANDLE 1 TURN": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_HANDLE_1, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE HANDLE 1 RESET": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_HANDLE_1, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE HANDLE 2 TURN": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_HANDLE_2, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE HANDLE 2 RESET": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_HANDLE_2, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE FAULT 1 TEST": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_FIRE_FIRE_FAULT_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE FIRE 1 TEST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_FIRE_FAULT_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE TEST 1 CENTER": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_FIRE_FAULT_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE FAULT 2 TEST": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_FIRE_FIRE_FAULT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE FIRE 2 TEST": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FIRE_FIRE_FAULT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR MASTER FIRE TEST 2 CENTER": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FIRE_FIRE_FAULT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 1 AGENT 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_1) ! (>L:MSATR_FIRE_AGENT_1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 1 AGENT 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_1) ! (>L:MSATR_FIRE_AGENT_2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 2 AGENT 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_2) ! (>L:MSATR_FIRE_AGENT_1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 2 AGENT 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_2) ! (>L:MSATR_FIRE_AGENT_2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 1 LOOP A TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_1) ! (>L:MSATR_FIRE_LOOP_A_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 1 LOOP B TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_1) ! (>L:MSATR_FIRE_LOOP_B_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 2 LOOP A TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_2) ! (>L:MSATR_FIRE_LOOP_A_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Input.MSATR FIRE 2 LOOP B TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_2) ! (>L:MSATR_FIRE_LOOP_B_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 AGENT 1 DISCH ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_1_DISCH_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 AGENT 2 DISCH ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_1_DISCH_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 AGENT 1 DISCH ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_2_DISCH_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 AGENT 2 DISCH ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_2_DISCH_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 AGENT 1 SQUIB ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_1_SQUIB_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 AGENT 2 SQUIB ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_1_SQUIB_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 AGENT 1 SQUIB ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_1_2_SQUIB_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 AGENT 2 SQUIB ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_AGENT_2_2_SQUIB_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 LOOP A FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 LOOP B FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 LOOP A FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 LOOP B FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 LOOP A OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 1 LOOP B OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 LOOP A OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_A_2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR FIRE 2 LOOP B OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_FIRE_LOOP_B_2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Instrumentation.Output.MSATR CLOCK1 STAT MODE": {
		"method": "calcCode",
		"code": "(L:MSATR_CLOCK1_STAT_MODE)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Controls.Input.MSATR AILERON TRIM L WING DN": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT, percent) 1 - 163.83 * -16383 max 16383 min \n(>K:AILERON_TRIM_SET_EX1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Flight Controls.Input.MSATR AILERON TRIM R WING DN": {
		"method": "calcCode",
		"code": "(A:AILERON TRIM PCT, percent) 1 + 163.83 * -16383 max 16383 min \n(>K:AILERON_TRIM_SET_EX1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT FLOOD POTENTIOMETER": {
		"method": "calcCode",
		"code": "@ -10.23 / 100 + 0 max 100 min (>L:MSATR_ILTS_FLOOD_KNOB, enum)"
	},
	"SimWorks Studios.Kodiak 100.Safety.Input.KODIAK_100_Harness_L_unlock": {
		"method": "calcCode",
		"code": "0 (>L:Lever_Harness_1)"
	},
	"SimWorks Studios.Kodiak 100.Safety.Input.KODIAK_100_Harness_L_lock": {
		"method": "calcCode",
		"code": "1 (>L:Lever_Harness_1)"
	},
	"SimWorks Studios.Kodiak 100.Safety.Input.KODIAK_100_Harness_R_unlock": {
		"method": "calcCode",
		"code": "0 (>L:Lever_Harness_2)"
	},
	"SimWorks Studios.Kodiak 100.Safety.Input.KODIAK_100_Harness_R_lock": {
		"method": "calcCode",
		"code": "1 (>L:Lever_Harness_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS READING FO KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_READING_FO) 5 + 100 min (>L:MSATR_ILTS_READING_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS READING FO KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_READING_FO) 5 - 0 max (>L:MSATR_ILTS_READING_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS READING CPT KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_READING_CPT) 5 + 100 min (>L:MSATR_ILTS_READING_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS READING CPT KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_READING_CPT) 5 - 0 max (>L:MSATR_ILTS_READING_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS CONSOLE CPT INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_CONSOLE_CPT) 5 + 100 min (>L:MSATR_ILTS_CONSOLE_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS CONSOLE CPT DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_CONSOLE_CPT) 5 - 0 max (>L:MSATR_ILTS_CONSOLE_CPT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS CONSOLE FO DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_CONSOLE_FO) 5 - 0 max (>L:MSATR_ILTS_CONSOLE_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR ILTS CONSOLE FO INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ILTS_CONSOLE_FO) 5 + 100 min (>L:MSATR_ILTS_CONSOLE_FO)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR COMM AUDIO 2 SEL PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL2) ! (>L:MSATR_COMM_AUDIO_SEL2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR COMM AUDIO 1 SEL PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL1) ! (>L:MSATR_COMM_AUDIO_SEL1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Output.MSATR COMM AUDIO 1 SEL FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Output.MSATR COMM AUDIO 1 SEL ALTN ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL1_ALTN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Output.MSATR COMM AUDIO 2 SEL FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Output.MSATR COMM AUDIO 2 SEL ALTN ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_COMM_AUDIO_SEL2_ALTN_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Input.MSATR TAWS TERR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_TERR) ! (>L:MSATR_TAWS_TERR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR TAWS TERR OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_TERR_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR TAWS TERR FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_TERR_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR TAWS GPWS FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_TAWS_GPWS_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Warning.Output.MSATR TAWS GPWS OFF ANNUN": {
		"method": "calcCode",
		"code": " (>L:MSATR_TAWS_GPWS_OFF_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP STEEP APP PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STEEP_APP) ! (>L:MSATR_FGCP_STEEP_APP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP STEEP APP ON ANNUN": {
		"method": "calcCode",
		"code": " (>L:MSATR_FGCP_STEEP_APP_ON_LT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR CAPT SWITCHING ATT HDG PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ATTHDG1) ! (>L:MSATR_AHRS_ATTHDG1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FO SWITCHING ATT HDG PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ATTHDG2) ! (>L:MSATR_AHRS_ATTHDG2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR CAPT SWITCHING ATT HDG FO1 ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ATTHDG1_FO1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR CAPT SWITCHING ATT HDG SYS2 ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ATTHDG1_SYS2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR CAPT SWITCHING ADC PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ADC1) ! (>L:MSATR_AHRS_ADC1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR CAPT SWITCHING ADC FO1 ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ADC1_FO1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR CAPT SWITCHING ADC SYS2 ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ADC2_SYS2_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR FO SWITCHING ADC PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ADC2) ! (>L:MSATR_AHRS_ADC2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FO SWITCHING ADC FO1 ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AHRS_ADC2_FO1_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND LEFT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_LDG_LEFT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND LEFT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_LDG_LEFT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND RIGHT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_LDG_RIGHT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT LAND RIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_LDG_RIGHT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN1) ! (>L:MSATR_ELEC_DCGEN1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN2) ! (>L:MSATR_ELEC_DCGEN2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCGEN1 FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN1_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCGEN2 FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN2_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCGEN1 OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN1_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCGEN2 OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCGEN2_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DC SVC UTIL BUS TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DC_SVC_UTIL_BUS) ! (>L:MSATR_ELEC_DC_SVC_UTIL_BUS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCSVCE OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCSVCE_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCSVCE SHED ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCSVCE_SHED_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCBUS1 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCBUS1_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR DCBUS2 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DCBUS2_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC DC LOAD INDICATOR": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DC_LOAD)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC BAT SEL MAIN SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELEC_BAT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC BAT SEL EMER SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELEC_BAT_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC BTC TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_BTC) ! (>L:MSATR_ELEC_BTC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC BTC GREEN LINE ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_BTC_GREEN_LINE_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC BTC ISOL ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_BTC_ISOL_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC EMER BAT CHG TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_EMER_BAT_CHG) ! (>L:MSATR_ELEC_EMER_BAT_CHG)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC EMER BAT CHG OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_EMER_BAT_CHG_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC EMER BAT CHG FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_EMER_BAT_CHG_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC MAIN BAT CHG TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_MAIN_BAT_CHG) ! (>L:MSATR_ELEC_MAIN_BAT_CHG)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC MAIN BAT CHG OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_MAIN_BAT_CHG_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC MAIN BAT CHG FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_MAIN_BAT_CHG_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC TRU TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_TRU) ! (>L:MSATR_ELEC_TRU)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC TRU ARROW ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_TRU_ARROW_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC TRU ON ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_TRU_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC EMER SUPPLY ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_EMER_SUPPLY_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ESS SUPPLY ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_ESS_SUPPLY_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR ELEC STBY BUS TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_STBY_BUS) ! (>L:MSATR_ELEC_STBY_BUS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC STBY UNDV ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_STBY_UNDV_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC STBY OVRD ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_STBY_OVRD_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ACBUS1 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACBUS1_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ACBUS2 BUS OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACBUS2_BUS_OFF_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ACBUS1 INV FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACBUS1_INV_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Output.MSATR ELEC ACBUS2 INV FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_ACBUS2_INV_FAULT_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Fuel.Output.MSATR FUEL XFEED ON LT": {
		"method": "calcCode",
		"code": "(L:MSATR_FUEL_XFEED_ON_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR DOOR CARGO UNLK LT": {
		"method": "calcCode",
		"code": "(L:MSATR_DOOR_CARGO_UNLK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Safety.Output.MSATR DOOR CABIN UNLK LT": {
		"method": "calcCode",
		"code": "(L:MSATR_DOOR_CABIN_UNLK_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FCTL TLU LO SPD SWITCH": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_FCTL_TLU_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FCTL TLU AUTO SWITCH": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_FCTL_TLU_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Output.MSATR FCTL TLU HI SPD SWITCH": {
		"method": "calcCode",
		"code": "2 (>L:MSATR_FCTL_TLU_SWITCH)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR AICE CPT ALPHA ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_CPT_ALPHA_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Anti-Ice.Output.MSATR AICE FO ALPHA ANNUN": {
		"method": "calcCode",
		"code": "(L:MSATR_AICE_FO_ALPHA_LT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.MSATR ENGINE POWER MANAGEMENT KNOB POSITION": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PWRMGT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PWRMGT_2) ++ 3 min s0 (>L:MSATR_ENG_PWRMGT_2) \n(L:MSATR_ENG_PWRMGT_SYNC) if{\n   l0 (>L:MSATR_ENGINE_Knob_PwrMgt_Outer) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PWRMGT_2) -- 0 max s0 (>L:MSATR_ENG_PWRMGT_2)\n(L:MSATR_ENG_PWRMGT_SYNC) if{\n   l0 (>L:MSATR_ENGINE_Knob_PwrMgt_Outer) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR PWR MGT KNOB PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_PWRMGT_SYNC) ! s0 (>L:MSATR_ENG_PWRMGT_SYNC)\nl0 if{ (L:MSATR_ENG_PWRMGT_2) (>L:MSATR_ENGINE_Knob_PwrMgt_Outer)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_1) ! (>L:MSATR_APNL_VHF1_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_1) ! (>L:MSATR_APNL_VHF2_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 INT TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_1) ! (>L:MSATR_APNL_INT_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 PA TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_1) ! (>L:MSATR_APNL_PA_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_1) ! (>L:MSATR_APNL_HF1_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_1) ! (>L:MSATR_APNL_HF2_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VOICE ONLY TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOICE_ONLY_1) ! (>L:MSATR_APNL_VOICE_ONLY_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 INT RAD TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_RAD_1) ! (>L:MSATR_APNL_INT_RAD_1) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF1 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_VHF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF1 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_VHF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF2 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_VHF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VHF2 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_VHF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 INT VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_VOL_1) 5 - 0 max (>L:MSATR_APNL_INT_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 PA VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_VOL_1) 5 - 0 max (>L:MSATR_APNL_PA_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 PA VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_VOL_1) 5 + 100 min (>L:MSATR_APNL_PA_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF1 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_HF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF1 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_HF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF2 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_HF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 HF2 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_HF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 MLS VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MLS_VOL_1) 5 - 0 max (>L:MSATR_APNL_MLS_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 MLS VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MLS_VOL_1) 5 + 100 min (>L:MSATR_APNL_MLS_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VOR1 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR1_VOL_1) 5 - 0 max (>L:MSATR_APNL_VOR1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VOR1 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR1_VOL_1) 5 + 100 min (>L:MSATR_APNL_VOR1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VOR2 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR2_VOL_1) 5 - 0 max (>L:MSATR_APNL_VOR2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 VOR2 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR2_VOL_1) 5 + 100 min (>L:MSATR_APNL_VOR2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 DME1 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME1_VOL_1) 5 - 0 max (>L:MSATR_APNL_DME1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 DME1 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME1_VOL_1) 5 + 100 min (>L:MSATR_APNL_DME1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 DME2 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME2_VOL_1) 5 - 0 max (>L:MSATR_APNL_DME2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 DME2 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME2_VOL_1) 5 + 100 min (>L:MSATR_APNL_DME2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 ADF1 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_ADF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 ADF1 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_ADF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 ADF2 VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_ADF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 ADF2 VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_ADF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 MKR VOL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MKR_VOL_1) 5 - 0 max (>L:MSATR_APNL_MKR_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 MKR VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MKR_VOL_1) 5 + 100 min (>L:MSATR_APNL_MKR_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.Input.MSATR AUDIO PANEL 1 INT VOL KNOB INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_VOL_1) 5 + 100 min (>L:MSATR_APNL_INT_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF1 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VHF1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF2 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VHF2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 INT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_INT_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF1 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_HF1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF2 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_HF2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VOICE ONLY ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VOICE_ONLY_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 PA ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_PA_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 INT RAD ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_INT_RAD_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VHF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VHF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_INT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_HF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_HF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOICE ONLY ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_VOICE_ONLY_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_PA_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT RAD ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_APNL_INT_RAD_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VHF1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VHF2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 INT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_INT_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_HF1_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_HF2_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VOICE ONLY OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VOICE_ONLY_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 PA OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_PA_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 INT_RAD OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_INT_RAD_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VHF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VHF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_INT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_HF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_HF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOICE_ONLY OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_VOICE_ONLY_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_PA_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT RAD OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_APNL_INT_RAD_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_2) ! (>L:MSATR_APNL_VHF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_2) ! (>L:MSATR_APNL_VHF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_2) ! (>L:MSATR_APNL_INT_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_2) ! (>L:MSATR_APNL_HF1_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_2) ! (>L:MSATR_APNL_HF2_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOICE ONLY TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOICE_ONLY_2) ! (>L:MSATR_APNL_VOICE_ONLY_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_2) ! (>L:MSATR_APNL_PA_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT RAD TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_RAD_2) ! (>L:MSATR_APNL_INT_RAD_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_VHF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_VHF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_VOL_2) 5 - 0 max (>L:MSATR_APNL_INT_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_HF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_HF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_VOL_2) 5 - 0 max (>L:MSATR_APNL_PA_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 3 MLS VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MLS_VOL_2) 5 - 0 max (>L:MSATR_APNL_MLS_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR1 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR1_VOL_2) 5 - 0 max (>L:MSATR_APNL_VOR1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR2 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR2_VOL_2) 5 - 0 max (>L:MSATR_APNL_VOR2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME1 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME1_VOL_2) 5 - 0 max (>L:MSATR_APNL_DME1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME2 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME2_VOL_2) 5 - 0 max (>L:MSATR_APNL_DME2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF1 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_ADF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF2 VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_ADF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 MKR VOL DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MKR_VOL_2) 5 - 0 max (>L:MSATR_APNL_MKR_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_VHF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VHF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_VHF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_INT_VOL_2) 5 + 100 min (>L:MSATR_APNL_INT_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_HF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_HF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_HF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_PA_VOL_2) 5 + 100 min (>L:MSATR_APNL_PA_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 3 MLS VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MLS_VOL_2) 5 + 100 min (>L:MSATR_APNL_MLS_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR1 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR1_VOL_2) 5 + 100 min (>L:MSATR_APNL_VOR1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR2 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_VOR2_VOL_2) 5 + 100 min (>L:MSATR_APNL_VOR2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME1 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME1_VOL_2) 5 + 100 min (>L:MSATR_APNL_DME1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME2 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_DME2_VOL_2) 5 + 100 min (>L:MSATR_APNL_DME2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF1 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_ADF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF2 VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_ADF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_ADF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 MKR VOL INC": {
		"method": "calcCode",
		"code": "(L:MSATR_APNL_MKR_VOL_2) 5 + 100 min (>L:MSATR_APNL_MKR_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VHF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VHF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VHF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 INT VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_INT_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_HF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 HF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_HF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 PA VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_PA_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 MLS VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_MLS_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VOR1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VOR1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 VOR2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VOR2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 DME1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_DME1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 DME2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_DME2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 ADF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_ADF1_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 ADF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_ADF2_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 1 MKR VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_MKR_VOL_1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VHF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VHF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VHF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 INT VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_INT_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_HF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 HF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_HF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 PA VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_PA_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 MLS VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_MLS_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VOR1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 VOR2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_VOR2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_DME1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 DME2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_DME2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF1 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_ADF1_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 ADF2 VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_ADF2_VOL_2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Audio.MSATR AUDIO  PANEL 2 MKR VOL SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:MSATR_APNL_MKR_VOL_2)"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 PULSE LIGHT ON": {
		"method": "calcCode",
		"code": "1 sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 \n} els{ \n   0 (>K:LIGHT_POTENTIOMETER_10_SET) \n   (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n   (A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n  17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 PULSE LIGHT OFF": {
		"method": "calcCode",
		"code": "0 sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 \n} els{ \n   0 (>K:LIGHT_POTENTIOMETER_10_SET) \n   (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n   (A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n  17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 PULSE LIGHT TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LOGO_1) ! sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) \n(A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) \n   0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 \n} els{ \n   0 (>K:LIGHT_POTENTIOMETER_10_SET) \n   (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) \n   (A:LIGHT LOGO, Bool) sp0 } \n(A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ \n  17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR_ELEC_DC_EXTPWR ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELEC_DC_EXTPWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR_ELEC_DC_EXTPWR OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELEC_DC_EXTPWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 3 PWR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_MPNL_DISP3_PWR) ! (>L:MSATR_MPNL_DISP3_PWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 4 PWR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_MPNL_DISP4_PWR) ! (>L:MSATR_MPNL_DISP4_PWR) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 5 PWR PRESS": {
		"method": "calcCode",
		"code": "(L:MSATR_MPNL_DISP5_PWR) ! (>L:MSATR_MPNL_DISP5_PWR) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 1 BRT PLUS PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MPNL_DISP1_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 1 BRT MINUS PRESS": {
		"method": "calcCode",
		"code": "-1 (>L:MSATR_MPNL_DISP1_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 2 BRT PLUS PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MPNL_DISP2_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 2 BRT MINUS PRESS": {
		"method": "calcCode",
		"code": "-1 (>L:MSATR_MPNL_DISP1_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 3 BRT PLUS PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MPNL_DISP3_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 3 BRT MINUS PRESS": {
		"method": "calcCode",
		"code": "-1 (>L:MSATR_MPNL_DISP3_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 4 BRT PLUS PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MPNL_DISP4_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 4 BRT MINUS PRESS": {
		"method": "calcCode",
		"code": "-1 (>L:MSATR_MPNL_DISP4_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 5 BRT PLUS PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_MPNL_DISP5_BRT) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Avionics.Input.MSATR MIP SCREEN 5 BRT MINUS PRESS": {
		"method": "calcCode",
		"code": "-1 (>L:MSATR_MPNL_DISP5_BRT) "
	},
	"Asobo.TBM 930.Lights.Input.TBM930 ACCESS LIGHT OFF": {
		"method": "calcCode",
		"code": "18 (A:1:BUS CONNECTION ON:17, Bool) if{ \n18 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.TBM 930.Lights.Input.TBM930 CABIN LIGHT OFF": {
		"method": "calcCode",
		"code": "0 s0\n16 (A:1:BUS CONNECTION ON:15, Bool) l0 != if{  \n   16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } \n19 (A:1:BUS CONNECTION ON:17, Bool) l0 != if{ \n   19 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN1 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELEC_DCGEN1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN1 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELEC_DCGEN1)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN2 ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELEC_DCGEN2)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR DCGEN2 OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELEC_DCGEN2)"
	},
	"Carenado.PA42.Light.Input.Wing Light": {
		"method": "calcCode",
		"code": "sim/cockpit2/switches/generic_lights_switch[52]"
	},
	"Fly By Wire.A320-Dev.Safety.Output.A32NX PED ENG 1 FIRE ANNUN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1,bool) (A:ENG ON FIRE:1, bool) or (L:A32NX_OVHD_INTLT_ANN) 0 == or "
	},
	"Fly By Wire.A320-Dev.Safety.Output.A32NX PED ENG 1 FAULT ANNUN ON": {
		"method": "calcCode",
		"code": "(A:ENG FAILED:1, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or"
	},
	"Fly By Wire.A320-Dev.Safety.Output.A32NX PED ENG 2 FIRE ANNUN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2,bool) (A:ENG ON FIRE:2, bool) or (L:A32NX_OVHD_INTLT_ANN) 0 == or "
	},
	"Fly By Wire.A320-Dev.Safety.Output.A32NX PED ENG 2 FAULT ANNUN ON": {
		"method": "calcCode",
		"code": "(A:ENG FAILED:2, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == or"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP ALT KNOB FAST DEC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_SELALT) 10000 < if{ -1 } els{ -10 } (>L:MSATR_FGCP_ALTSEL_DELTA)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Input.MSATR FGCP ALT KNOB FAST INC": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_SELALT) 9000 < if{ 1 } els{ 10 } (>L:MSATR_FGCP_ALTSEL_DELTA)"
	},
	"WB Sim.Cessna 172 Classic.Fuel.Input (Potentiometer).FUEL TANK SELECT": {
		"method": "calcCode",
		"code": "@  s0 \nl0 190 < if{ 3 (>K:FUEL_SELECTOR_SET) quit } \nl0 425 < if{ quit }\nl0 530 < if{ 1 (>K:FUEL_SELECTOR_SET) quit }\nl0 750 < if{  quit }\n2 (>K:FUEL_SELECTOR_SET)"
	},
	"PMDG.B737-700.EFIS.Output.Mins": {
		"method": "calcCode",
		"code": "(L:switch_356_73X)"
	},
	"Microsoft.Generic.Radio.Input.XPNDR 1 2 DEC": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, Number) 100 / int 10 % 0 == if{ (>K:XPNDR_1000_DEC) } (>K:XPNDR_100_DEC)"
	},
	"Microsoft.Generic.Radio.Input.XPNDR 1 2 INC": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, Number) 100 / int 10 % 7 == if{ (>K:XPNDR_1000_INC) } (>K:XPNDR_100_INC)"
	},
	"Microsoft.Generic.Radio.Input.XPNDR 3 4 DEC": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, number) s0 100 div sp2 \nl0 100 % -- s1 10 % 9 == if{  l1 2 - } els{  l1 }\n0 max 77 min l2 100 * + (>L:mfXPNDR, Number)\n(L:mfXPNDR, BCO16) (>K:XPNDR_SET)  "
	},
	"Microsoft.Generic.Radio.Input.XPNDR 3 4 INC": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, number) s0 100 div sp2 \nl0 100 % ++ s1 10 % 8 == if{  l1 2 + } els{  l1 }\n0 max 77 min l2 100 * + (>L:mfXPNDR, Number)\n(L:mfXPNDR, BCO16) (>K:XPNDR_SET)  "
	},
	"Asobo.747-8i.Autopilot.Input.B747 Autopilot Altitudde Knob Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_ALT_INTERVENTION)"
	},
	"FenixSim.A320.Engines.Input (Potentiometer).FNX320 THROTTLE LEFT LEVER SET": {
		"method": "calcCode",
		"code": "@ 1023 / 3 * 2 + 2 max 5 min (>L:A_FC_THROTTLE_LEFT_INPUT)"
	},
	"FenixSim.A320.Engines.Input (Potentiometer).FNX320 THROTTLE RIGHT LEVER SET": {
		"method": "calcCode",
		"code": "@ 1023 / 3 * 2 + 2 max 5 min (>L:A_FC_THROTTLE_RIGHT_INPUT)"
	},
	"FenixSim.A320.Controls.Input (Potentiometer).FNX320 RUDDER SET": {
		"method": "calcCode",
		"code": "@ 32 * 16383 - -16383 max 16383 min (>K:AXIS_RUDDER_SET)"
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec L MAIN Button Toggle": {
		"method": "calcCode",
		"code": "1 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Asobo.Longitude.Electrical.Output.Longitude Elec L MAIN Button On Annun ": {
		"method": "calcCode",
		"code": "7 (A:1:BUS CONNECTION ON:1, Bool) "
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec L ELEC Button Toggle": {
		"method": "calcCode",
		"code": "1 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Asobo.Longitude.Electrical.Output.Longitude Elec L ELEC Button NORM Annun": {
		"method": "calcCode",
		"code": "5 (A:1:BUS CONNECTION ON:1, Bool)"
	},
	"Asobo.Longitude.Electrical.Output.Longitude Elec R ELEC Button NORM Annun": {
		"method": "calcCode",
		"code": "6 (A:1:BUS CONNECTION ON:2, Bool)"
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec R ELEC Button Toggle": {
		"method": "calcCode",
		"code": "2 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) "
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec R MAIN Button Toggle": {
		"method": "calcCode",
		"code": "2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Asobo.Longitude.Electrical.Output.Longitude Elec R MAIN Button On Annun": {
		"method": "calcCode",
		"code": "8 (A:1:BUS CONNECTION ON:2, Bool)"
	},
	"Asobo.747-8i.Autopilot.Output.AP_APR (APP) (beta)": {
		"method": "calcCode",
		"code": "(L:AP_APR_ARMED)"
	},
	"Asobo.DC-3.Engines.Input (Potentiometer).DC3 DUCKWORKS THROTTLE 1 SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:DUCKWORKS_THROTTLE1_SET)"
	},
	"Asobo.DC-3.Engines.Input (Potentiometer).DC3 DUCKWORKS THROTTLE 2 SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:DUCKWORKS_THROTTLE2_SET)"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Boost Pump L Toggle": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_1_ON) ! (>L:WT_LNG_FUEL_PUMP_1_ON)"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Boost Pump R Toggle": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_2_ON) ! (>L:WT_LNG_FUEL_PUMP_2_ON)"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Gravity XFlow Toggle": {
		"method": "calcCode",
		"code": "(A:SIM ON GROUND, bool) ! if{ \n(L:WT_LNG_GRAVITY_XFLOW_OPEN) ! (>L:WT_LNG_GRAVITY_XFLOW_OPEN) }"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Transfer Selector L Tank": {
		"method": "calcCode",
		"code": "-1 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Transfer Selector Off": {
		"method": "calcCode",
		"code": "0 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)"
	},
	"Asobo.Longitude.Fuel.Input.Longitude Fuel Transfer Selector R Tank": {
		"method": "calcCode",
		"code": "1 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Boost Pump L Norm Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_1_ON) !"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Boost Pump L On Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_1_ON) "
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Boost Pump R Norm Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_2_ON) !"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Boost Pump R On Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_FUEL_PUMP_2_ON)"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Gravity XFlow Closed Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_GRAVITY_XFLOW_OPEN) !"
	},
	"Asobo.Longitude.Fuel.Output.Longitude Fuel Gravity XFlow Open Annun": {
		"method": "calcCode",
		"code": "(L:WT_LNG_GRAVITY_XFLOW_OPEN)"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 Elec Bus Transfer On": {
		"method": "calcCode",
		"code": "0 (L:switch_18_73X, number) == if{ 1801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Electrical.Input.PMDG B737 Elec Bus Transfer Off": {
		"method": "calcCode",
		"code": "100 (L:switch_18_73X, number) == if{ 1801 (>K:ROTOR_BRAKE) }"
	},
	"Asobo.B787-10.Autopilot.Output.AUTOPILOT ALTITUDE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:3,Feet)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT WING ON": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_ELTS_WING)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Input.MSATR LIGHT WING OFF": {
		"method": "calcCode",
		"code": "0 (>L:MSATR_ELTS_WING)"
	},
	"Black Square.Baron G58.Fuel.Input.G58 Fuel Boost Pump R Switch Hi": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:5, Bool) 2 (>L:var_FUEL_Switch_Pump_2, number)"
	},
	"Black Square.Baron G58.Fuel.Input.G58 Fuel Boost Pump R Switch Lo": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:5, Bool) 1 (>L:var_FUEL_Switch_Pump_2, number)"
	},
	"Black Square.Baron G58.Fuel.Input.G58 Fuel Boost Pump R Switch Off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:5, Bool) 0 (>L:var_FUEL_Switch_Pump_2, number)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Air Conditioning and Pressurization.Output.MSATR CABIN PRESSURE LANDING ELEV DISPLAY": {
		"method": "calcCode",
		"code": "(L:MSATR_CPRS_LDG_ALT, number)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) \n(A:AUTOPILOT MASTER, Bool) ! if{ \n(>H:Generic_Autopilot_Manual_Off) \n} els{ \n(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ \n1 (>K:TOGGLE_FLIGHT_DIRECTOR)  } } } "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP NAV Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_NAV1_HOLD)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP HDG Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_HEADING_HOLD)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP APPR Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP ALT Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP FLC Button Press": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) \n(A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP VNAV Button Press": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP VS Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Left FD Button Press": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Right FD Button Press": {
		"method": "calcCode",
		"code": " (A:AUTOPILOT MASTER, Bool) ! if{ 2 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP BANK Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID, number) 1 == if{ 0 } els{ 1 }\n(>K:AP_MAX_BANK_SET)"
	},
	"Microsoft.Generic.Autopilot.Input.AP MAX BANK ANGLE SET": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_ANGLE_SET)"
	},
	"Microsoft.Generic.Autopilot.Input.AP MAX BANK SET": {
		"method": "calcCode",
		"code": "(>K:AP_MAX_BANK_SET)"
	},
	"Asobo.Generic.Flight Controls.Input (Potentiometer).Generic 10k potentiometer Trim": {
		"method": "calcCode",
		"code": "@ -32.0293 * 16383 + -16383 max 16383 min (>K:ELEVATOR_TRIM_SET)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Cruise Alt Inc": {
		"method": "calcCode",
		"code": "21807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Cruise Alt Dec": {
		"method": "calcCode",
		"code": "21808 (>K:ROTOR_BRAKE)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Start Pump On": {
		"method": "calcCode",
		"code": "(L:ovhd_start_pump_switch1) 0 == if{ \n   536870912 0 + (>L:overhead_event,number) }"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Start Pump Off": {
		"method": "calcCode",
		"code": "(L:ovhd_start_pump_switch1) 1 == if{ \n   536870912 0 + (>L:overhead_event,number) }"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Start Pump Toggle": {
		"method": "calcCode",
		"code": "536870912 0 + (>L:overhead_event,number) "
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd L Fuel Heat On ": {
		"method": "calcCode",
		"code": "536870912 2 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd R Fuel Heat On": {
		"method": "calcCode",
		"code": "536870912 3 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Eng L Start Switch Guard Toggle": {
		"method": "calcCode",
		"code": "536870912 4 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Eng L Start Switch Toggle": {
		"method": "calcCode",
		"code": "536870912 5 + (>L:overhead_event, number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Eng R Start Switch Guard Toggle": {
		"method": "calcCode",
		"code": "536870912 6 + (>L:overhead_event,number)"
	},
	"Leonardo.MadDog MD-82.Fuel.Input.MD82 Ovhd Eng R Start Switch Toggle": {
		"method": "calcCode",
		"code": "536870912 7 + (>L:overhead_event, number)"
	},
	"Asobo.B787-10.Fuel.Input.L Pumps Fwd": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool) 0 == if{ \n1 (>K:FUELSYSTEM_PUMP_TOGGLE) }"
	},
	"Asobo.B787-10.EFIS.Input.B787 EFIS Eicas swap": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_2_EICAS)"
	},
	"Asobo.B787-10.Autopilot.Output.AUTOPILOT MASTER LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool)  0 =="
	},
	"Asobo.B787-10.Autopilot.Input.EFIS CANC/RCL": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_CANCRCL)"
	},
	"Fly By Wire.A320.Navigation.Input.A32NX_TRANSPONDER_SYSTEM": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_TRANSPONDER_SYSTEM)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU MSG-": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_MS0MINUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU MSG+": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_MS0PLUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU L1": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_L1)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU L2": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_L2)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU Print": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_PRINT)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU PGE-": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_POEMINUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU PGE+": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_POEPLUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU R1": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_R1)"
	},
	"Fly By Wire.A320.CPDLC.Input.Pilot DCDU R2": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPL_R2)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU MSG-": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_MS0MINUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU MSG+": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_MS0PLUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU L1": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_L1)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU L2": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_L2)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU Print": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_PRINT)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU PGE-": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_POEPLUS)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU R1": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_R1)"
	},
	"Fly By Wire.A320.CPDLC.Input.Co-Pilot DCDU R2": {
		"method": "calcCode",
		"code": "(>H:A32NX_DCDU_BTN_MPR_R2)"
	},
	"All vendors.All Aircraft.Camera.Input.Pilot View - Normal": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n1 (>A:CAMERA SUBSTATE,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Pilot View - Close": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n1 (>A:CAMERA SUBSTATE,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Pilot View - Landing": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n1 (>A:CAMERA SUBSTATE,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Pilot View - Copilot": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n1 (>A:CAMERA SUBSTATE,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - PFD+ND": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - FCU and ECAM (Angled)": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - EFB FO": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - MCDU Captain": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - Dual MCDU Cap + FO": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - PEDESTAL (Angled)": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - OVERHEAD (Angled)": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - UPPER OVERHEAD": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - CB WALL": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Instrument View - EFB CAPTAIN": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n5 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n9 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Left 90 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Rear 180 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Right 90 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Front (Zoom in)": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Left 120 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Left 45 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Right 45 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Quick View - Right 120 Degree": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External View - Default": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n1 (>A:CAMERA SUBSTATE,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 1": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 2": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 3": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 4": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 5": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 6": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 7": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.External Quick View - Quick View 8": {
		"method": "calcCode",
		"code": "3 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Free Camera - Camera Drone": {
		"method": "calcCode",
		"code": "4 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Fin View": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Left Engine": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Right Engine": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Underbelly Close": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Nose gear": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Underbelly Far": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Left Wing Window ": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Right Wing Window": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Left front Window": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Right front Window": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n9 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Rear Top View": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n10 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Rear Left Middle Seat": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n11 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Front Cabin Crew Seat": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n12 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Front Right Middle Seat": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n13 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Front Left Door Enter": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n14 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Passanger Look Aft": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n15 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"All vendors.All Aircraft.Camera.Input.Fixed Camera ShowCase - Passanger look Forward": {
		"method": "calcCode",
		"code": "5 (>A:CAMERA STATE,Enum) \n0 (>A:CAMERA SUBSTATE,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n16 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 vams static storage cover": {
		"method": "calcCode",
		"code": "(L:SF50_vams_static_storage_cover) ! (>L:SF50_vams_static_storage_cover)"
	},
	"PMDG.B737-700.Controls.Input (Potentiometer).PMDG B737 Spoiler Lever Set": {
		"method": "calcCode",
		"code": "@ 20 - 10.03 / near 0 max 100 min s0 \nl0 5 < if{ 679101 (>K:ROTOR_BRAKE) quit }\nl0 10 < if{ 679201 (>K:ROTOR_BRAKE) quit }\nl0 50 < if{ quit }\nl0 70 < if{ 679301 (>K:ROTOR_BRAKE) quit }\nl0 95 < if{ 679401 (>K:ROTOR_BRAKE) quit }\n679501 (>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Miscellaneous.Input.Request Ground Power Unit": {
		"method": "calcCode",
		"code": "(>K:REQUEST_POWER_SUPPLY)"
	},
	"Fly By Wire.A320.EFIS.Output.(L:A32NX_EFIS_L_OPTION)": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_OPTION)"
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec Stby Pwr On": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:3, bool) ! if{ \n\t3 (>K:TOGGLE_MASTER_BATTERY) } \n0 (>L:XMLVAR_STBYBattery_Test) \n\t"
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec Stby Pwr Off": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:3, bool) if{ \n\t3 (>K:TOGGLE_MASTER_BATTERY) \n0 (>L:XMLVAR_STBYBattery_Test) "
	},
	"Asobo.Longitude.Electrical.Input.Longitude Elec Stby Pwr Test": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:3, bool) if{ \n\t3 (>K:TOGGLE_MASTER_BATTERY) } \n1 (>L:XMLVAR_STBYBattery_Test) "
	},
	"All vendors.All Aircraft.Camera.Input.CAMERA ACTION COCKPIT VIEW RESET": {
		"method": "calcCode",
		"code": "1 (>A:CAMERA ACTION COCKPIT VIEW RESET,bool)"
	},
	"All vendors.All Aircraft.Camera.Input.CAMERA ACTION COCKPIT VIEW SAVE": {
		"method": "calcCode",
		"code": "1 (>A:CAMERA ACTION COCKPIT VIEW SAVE:index,Bool)"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX APU MASTER SW PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) "
	},
	"Asobo.King Air 350i.Lights.Input.KA Beacon Lights Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) \nl0 (>L:LIGHTING_BEACON_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Beacon Lights On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) \nl0 (>L:LIGHTING_BEACON_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Strobe Lights Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:STROBES_SET) \nl0 (>L:LIGHTING_STROBE_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Strobe Lights On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:STROBES_SET) \nl0 (>L:LIGHTING_STROBE_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Taxi Lights Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:TAXI_LIGHTS_SET) \nl0 (>L:LIGHTING_TAXI_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Taxi Lights On": {
		"method": "calcCode",
		"code": " 1 s0 1 l0 (>K:2:TAXI_LIGHTS_SET) \nl0 (>L:LIGHTING_TAXI_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Tail Flood Lights Off": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1)"
	},
	"Asobo.King Air 350i.Lights.Input.KA Tail Flood Lights On": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot YD/AP Disc Up": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) if{ \n   0 (>K:AUTOPILOT_DISENGAGE_SET) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot FD FO Button Press": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS2 Knob Inc": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS2 Knob Dec": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot CRS2 Knob Press": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR, degrees) (>K:VOR2_SET)"
	},
	"Asobo.King Air 350i.Autopilot.Input.KA Autopilot Speed Knob Press": {
		"method": "calcCode",
		"code": "(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Left Condition Lever Cut Off": {
		"method": "calcCode",
		"code": "0 (>L:Condition_Lever_CutOff_1) \n0 (>K:SET_FUEL_VALVE_ENG1) \n0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Left Condition Lever Low Idle": {
		"method": "calcCode",
		"code": "1 (>L:Condition_Lever_CutOff_1) \n1 (>K:SET_FUEL_VALVE_ENG1) \n1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Left Condition Lever High Idle": {
		"method": "calcCode",
		"code": "2 (>L:Condition_Lever_CutOff_1) \n1 (>K:SET_FUEL_VALVE_ENG1) \n2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Right Condition Lever Cut Off": {
		"method": "calcCode",
		"code": "0 (>L:Condition_Lever_CutOff_2) \n0 (>K:SET_FUEL_VALVE_ENG2) \n0 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Right Condition Lever Low Idle": {
		"method": "calcCode",
		"code": "1 (>L:Condition_Lever_CutOff_2) \n1 (>K:SET_FUEL_VALVE_ENG2) \n1 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)"
	},
	"Asobo.King Air 350i.Fuel.Input.KA Fuel Right Condition Lever High Idle": {
		"method": "calcCode",
		"code": "2 (>L:Condition_Lever_CutOff_2) \n1 (>K:SET_FUEL_VALVE_ENG2) \n2 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)"
	},
	"Black Square.AnalogBaron.Electrical.Output.BATTERY MASTER ON": {
		"method": "calcCode",
		"code": "1 (>L:var_batteryMasterSwitch)"
	},
	"Black Square.AnalogBaron.Electrical.Output.BATTERY MASTER OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_batteryMasterSwitch)"
	},
	"Black Square.AnalogBaron.Electrical.Input.AVIONIC MASTER ON": {
		"method": "calcCode",
		"code": "1 (>L:var_avionicsMasterSwitch, Bool)\n4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)\n2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)\n3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.AnalogBaron.Electrical.Input.AVIONIC MASTER OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_avionicsMasterSwitch, Bool)\n4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)\n2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)\n3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Fly By Wire.A320-Dev.Warning System.Output.A32NX EFIS GPWS Warning Active Red Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_Warning_Active,bool)"
	},
	"Fly By Wire.A320-Dev.Warning System.Output.A32NX EFIS GPWS Warning Active Amber Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_GPWS_GS_Warning_Active,bool)"
	},
	"Fly By Wire.A320-Dev.Warning System.Input.A32NX EFIS GPWS Test Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_GPWS_TEST)"
	},
	"Fly By Wire.A320-Dev.Warning System.Input.A32NX EFIS GPWS Test Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_GPWS_TEST)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA AVIONIC MASTER ON": {
		"method": "calcCode",
		"code": "1 (>L:var_avionicsMasterSwitch, bool)\n\n4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:17, Bool) ! if{ 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }\n\n2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:19, Bool) ! if{ 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }\n\n3 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:21, Bool) ! if{ 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA AVIONIC MASTER OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_avionicsMasterSwitch, bool)\n\n4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:17, Bool) if{ 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }\n\n2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:19, Bool) if{ 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }\n\n3 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:21, Bool) if{ 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA EXTERNAL POWER ON": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_EXTERNAL_POWER)\n1 (>L:ELECTRICAL_ExternalPower_1)\n1 (>L:ELECTRICAL_ExternalPower_2)\n"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA EXTERNAL POWER OFF": {
		"method": "calcCode",
		"code": "0 (>L:ELECTRICAL_ExternalPower_1)\n0 (>L:ELECTRICAL_ExternalPower_2)\n(>K:TOGGLE_EXTERNAL_POWER)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BATTERY MASTER ON": {
		"method": "calcCode",
		"code": "1 (>L:var_batteryMasterSwitch)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BATTERY MASTER OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_batteryMasterSwitch)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA L ALT RESET": {
		"method": "calcCode",
		"code": "1 (>L:var_genReset_L, bool)\n0 (>L:var_genSwitchPos_L, number)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA L ALT ON": {
		"method": "calcCode",
		"code": "0 (>L:var_genReset_L, bool)\n1 (>L:var_genSwitchPos_L, number)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA L ALT OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_genReset_L, bool)\n2 (>L:var_genSwitchPos_L, number)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 MISC CAPT TRAY TABLE TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_TRAY_TABLE_CAPT) ! (>L:S_TRAY_TABLE_CAPT) "
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 MISC FO TRAY TABLE TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_TRAY_TABLE_FO) ! (>L:S_TRAY_TABLE_FO)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MISC CAPT TRAY TABLE STATUS": {
		"method": "calcCode",
		"code": "(L:S_TRAY_TABLE_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MISC FO TRAY TABLE STATUS": {
		"method": "calcCode",
		"code": "(L:S_TRAY_TABLE_FO)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST CARGO ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_FIRE_TEST_CARGO)"
	},
	"Fly By Wire.A320-Dev.Fire.Input.A32NX FIRE TEST CARGO OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_FIRE_TEST_CARGO)"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng1 Agent1 Discharge Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1, bool) \n(L:A32NX_FIRE_ENG1_AGENT1_Discharge) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng1 Agent2 Dishcarge Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1, bool) \n(L:A32NX_FIRE_ENG1_AGENT2_Discharge) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng2 Agent1 Discharge Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2, bool) \n(L:A32NX_FIRE_ENG2_AGENT1_Discharge) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng2 Agent2 Discharge Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2, bool) \n(L:A32NX_FIRE_ENG2_AGENT2_Discharge) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire APU Agent Discharge Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_APU, bool) \n(L:A32NX_FIRE_APU_AGENT1_Discharge) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng1 Agent1 Squib Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1, bool) \n(L:A32NX_FIRE_BUTTON_ENG1) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng1 Agent2 Squib Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG1, bool) \n(L:A32NX_FIRE_BUTTON_ENG1) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng2 Agent1 Squib Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2, bool) \n(L:A32NX_FIRE_BUTTON_ENG2) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire Eng2 Agent2 Squib Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_ENG2, bool) \n(L:A32NX_FIRE_BUTTON_ENG2) or"
	},
	"Fly By Wire.A320-Dev.Fire.Output.A32NX Fire APU Agent Squib Annun On": {
		"method": "calcCode",
		"code": "(L:A32NX_FIRE_TEST_APU, bool) \n(L:A32NX_FIRE_BUTTON_APU, bool) or"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS CONDITION LEVER 1 SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:AXIS_CONDITION_LEVER_1_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS CONDITION LEVER 2 SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:AXIS_CONDITION_LEVER_2_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS CONDITION LEVER 3 SET": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 min 100 max (>K:AXIS_CONDITION_LEVER_3_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS CONDITION LEVER 4 SET \t": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>K:AXIS_CONDITION_LEVER_4_SET)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER DEC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_DEC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER INC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_INC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION_LEVER_SET": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_SET)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 1 DEC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_1_DEC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 2 DEC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_2_DEC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 3 DEC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_3_DEC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 4 DEC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_4_DEC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 1 INC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_1_INC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 2 INC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_2_INC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 3 INC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_3_INC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 4 INC": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_4_INC)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 1 SET": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_1_SET)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 2 SET": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_2_SET)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 3 SET": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_3_SET)"
	},
	"Microsoft.Generic.Engines.Input.CONDITION LEVER 4 SET": {
		"method": "calcCode",
		"code": "(>K:CONDITION_LEVER_4_SET)"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec External Power  Switch On": {
		"method": "calcCode",
		"code": "1  1 (>K:2:SET_EXTERNAL_POWER)"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec External Power  Switch Off": {
		"method": "calcCode",
		"code": "0  1 (>K:2:SET_EXTERNAL_POWER)"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec Avionics Master Power Switch On": {
		"method": "calcCode",
		"code": "1 s0 (A:CIRCUIT SWITCH ON:26, Bool) != if{ \n\t 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:26, Bool) 4 (A:1:BUS CONNECTION ON:1, Bool) != if{ \n\t1 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec Avionics Master Power Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:CIRCUIT SWITCH ON:26, Bool) != if{ \n\t 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:26, Bool) 4 (A:1:BUS CONNECTION ON:1, Bool) != if{ \n\t1 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec Master Battery Switch On": {
		"method": "calcCode",
		"code": "1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n\t\t 1 (>K:TOGGLE_MASTER_BATTERY) } "
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec Master Battery Switch Off": {
		"method": "calcCode",
		"code": "0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n\t\t 1 (>K:TOGGLE_MASTER_BATTERY) } "
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec L Gen Switch On": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ \n   1 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec L Gen Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ \n   1 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec R Gen Switch On": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ \n   2 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Asobo.King Air 350i.Electrical.Input.KA Elec R Gen Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ \n   2 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Asobo.C208 Caravan.Fuel.Input.C208 Fuel Shutoff Button Pull Off ": {
		"method": "calcCode",
		"code": "0 s0 (>L:ENG FUEL VALVE:1, Bool) \nl0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"Asobo.C208 Caravan.Fuel.Input.C208 Fuel Shutoff Button Push On": {
		"method": "calcCode",
		"code": "0 s0 (>L:ENG FUEL VALVE:1, Bool) \nl0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"Asobo.C208 Caravan.Fuel.Input.C208 Fuel Shutoff Button Toggle": {
		"method": "calcCode",
		"code": "(L:ENG FUEL VALVE:1, Bool) ! s0 (>L:ENG FUEL VALVE:1, Bool) \nl0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }"
	},
	"Asobo.C208 Caravan.Engine.Input.C208 Engine Starter Switch Start": {
		"method": "calcCode",
		"code": "1 s0 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ \n   l0 (>K:TURBINE_IGNITION_SWITCH_SET1) } \n(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } "
	},
	"Asobo.C208 Caravan.Engine.Input.C208 Engine Starter Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ \n   l0 (>K:TURBINE_IGNITION_SWITCH_SET1) } \n(A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD)\n   (>K:TOGGLE_STARTER1) } "
	},
	"Asobo.C208 Caravan.Engine.Input.C208 Engine Starter Switch Motor": {
		"method": "calcCode",
		"code": "0 s5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ \n   l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } \n(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } "
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 1 Toggle": {
		"method": "calcCode",
		"code": "19601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 1 Auto": {
		"method": "calcCode",
		"code": "(L:switch_196_73X) 0 == if{ 19601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 1 Off": {
		"method": "calcCode",
		"code": "(L:switch_196_73X) 0 > if{ 19601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 2 Auto": {
		"method": "calcCode",
		"code": "(L:switch_872_73X) 0 == if{ 87201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input.PMDG B737 Recirc Fan 2 Off": {
		"method": "calcCode",
		"code": "(L:switch_872_73X) 0 > if{ 87201 (>K:ROTOR_BRAKE) }"
	},
	"Just Flight.Piper Arrow III.Lights.Input (Potentiometer).Panel Light Set": {
		"method": "calcCode",
		"code": "@ -6553.5 / 10 + 0 max 10 min s0 (>L:CENTRE_LOWER_panel_light)"
	},
	"Just Flight.Piper Arrow III.Lights.Input (Potentiometer).NAV Light Panel Set": {
		"method": "calcCode",
		"code": "@ -6553.5 / 10 + 0 max 10 min s0 (>L:CENTRE_LOWER_nav_light)"
	},
	"Fly By Wire.A320.ISIS.Input.A32NX ISIS PLUS RELEASE": {
		"method": "calcCode",
		"code": "(>H:A32NX_ISIS_PLUS_RELEASED)"
	},
	"Fly By Wire.A320.ISIS.Input.A32NX ISIS MINUS RELEASE": {
		"method": "calcCode",
		"code": "(>H:A32NX_ISIS_MINUS_RELEASED)"
	},
	"Microsoft.Generic.Radio.Input.NAV1 RADIO SET": {
		"method": "calcCode",
		"code": "[0] (>K:NAV1_RADIO_SET)"
	},
	"Microsoft.Generic.Radio.Input.NAV1 RADIO SET HZ": {
		"method": "calcCode",
		"code": "[0] (>K:NAV1_RADIO_SET_HZ) "
	},
	"Microsoft.Generic.Radio.Input.NAV1 VOLUME SET EX1": {
		"method": "calcCode",
		"code": "[0] (>K:NAV1_VOLUME_SET_EX1)"
	},
	"Microsoft.Generic.Safety.Input.ELT SET": {
		"method": "calcCode",
		"code": "[0] (>K:ELT_SET)"
	},
	"Microsoft.Generic.Safety.Input.ELT TOGGLE": {
		"method": "calcCode",
		"code": "ELT_TOGGLE"
	},
	"Microsoft.Generic.Radio.Input.COM RADIO SET": {
		"method": "calcCode",
		"code": "[0] (>K:COM_RADIO_SET)"
	},
	"Microsoft.Generic.Radio.Input.COM RADIO SET HZ": {
		"method": "calcCode",
		"code": "[0] (>K:COM_RADIO_SET_HZ)"
	},
	"Microsoft.Generic.Radio.Input.COM STBY RADIO SET": {
		"method": "calcCode",
		"code": "[0] (>K:COM_STBY_RADIO_SET)"
	},
	"Microsoft.Generic.Radio.Input.COM STBY RADIO SET HZ": {
		"method": "calcCode",
		"code": "[0] (>K:COM_STBY_RADIO_SET_HZ)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.MSATR_ELEC_DC_EXTPWR Toggle": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_DC_EXTPWR) ! (>L:MSATR_ELEC_DC_EXTPWR)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PROP BRAKE SWITCH LOCK TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_Switch_PROP_BRAKE_Lock) ! s0 (>L:MSATR_Switch_PROP_BRAKE_Lock)\nl0 if{ 5 } els{ 0 } (>L:MSATR_Switch_PROP_BRAKE_Lock_CNT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Input.MSATR ENG PROP BRAKE TOGGLE": {
		"method": "calcCode",
		"code": "(L:MSATR_ENGS_PROP_BRK) ! (>L:MSATR_ENGS_PROP_BRK) "
	},
	"Microsoft.ATR 42-600, ATR 72-600.Electrical.Input.Toggle Battery Power": {
		"method": "calcCode",
		"code": "(L:MSATR_ELEC_BAT_SWITCH, Number) 1 != if{ 1 } els{ 2 }  (>L:MSATR_ELEC_BAT_SWITCH, Number)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Light.Input.Toggle Emergency Lights": {
		"method": "calcCode",
		"code": "(L:MSATR_CABS_EMER_EXIT_LTS, Number) 1 != if{ 1 } els{ 2 }  (>L:MSATR_CABS_EMER_EXIT_LTS, Number)\n"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 AFDS Flood Knob Inc": {
		"method": "calcCode",
		"code": "33807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Lights.Input.PMDG B737 AFDS Flood Knob Dec": {
		"method": "calcCode",
		"code": "33808 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Engines.Input.A32NX PED ENG 1 START LEVER UP": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:1, Bool) ! if{ (>K:TOGGLE_STARTER1) }"
	},
	"Fly By Wire.A320-Dev.Engines.Input.A32NX PED ENG 1 START LEVER DOWN": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) }"
	},
	"Fly By Wire.A320-Dev.Engines.Input.A32NX PED ENG 2 START LEVER UP": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:2, Bool) ! if{ (>K:TOGGLE_STARTER2) }"
	},
	"Fly By Wire.A320-Dev.Engines.Input.A32NX PED ENG 2 START LEVER DOWN": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) }"
	},
	"PMDG.B737-700.Gear.Input (Potentiometer).PMDG B737 GEAR LEVER SET (analog)": {
		"method": "calcCode",
		"code": "@ 20 - 10.03 / near 0 max 100 min sp0\nl0 20 < if{ (>K:GEAR_UP) quit }\nl0 75 < if{\n   30 (L:switch_455_73X) - sp1 \n   l1 0 > if{ 45501 (>K:ROTOR_BRAKE) quit } \n   l1 0 < if{ 45502 (>K:ROTOR_BRAKE) quit } \n   quit }\n(>K:GEAR_DOWN) "
	},
	"Asobo.King Air 350i.Gear.Input.KA Landing Gear Down": {
		"method": "calcCode",
		"code": "1 s0 (>K:GEAR_SET) \nl0 (>L:LANDING_GEAR_Gear)"
	},
	"Asobo.King Air 350i.Gear.Input.KA Landing Gear Up": {
		"method": "calcCode",
		"code": "0 s0 (>K:GEAR_SET) \nl0 (>L:LANDING_GEAR_Gear)"
	},
	"PMDG.B737-700.EFIS.Input (Potentiometer).App, Vor, Map, PLN knob set (analog)": {
		"method": "calcCode",
		"code": "@ 34.1 / near 10 / near 10 * s0\nl0 (L:switch_359_73X) - 10 div s0\n:1\nl0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD EMER ELEC GEN 1 LINE PRESS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON) ! (>L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON)"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD EMER ELEC GEN 1 OFF ANNUN": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON) !"
	},
	"Fly By Wire.A320-Dev.Electrical.Input.A32NX OVHD EMER ELEC GEN 1 FAULT ANNUN": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_HAS_FAULT)"
	},
	"MGharib.HA420.Avionics.Input.HA420 Left Joystick Right": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_Joystick_Right"
	},
	"MGharib.HA420.Avionics.Input.HA420 Left Joystick Left": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_Joystick_Left"
	},
	"MGharib.HA420.Avionics.Input.HA420 Left Joystick Up": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_Joystick_Up"
	},
	"MGharib.HA420.Avionics.Input.HA420 Left Joystick Down": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_Joystick_Down"
	},
	"MGharib.HA420.Avionics.Input.HA420 L Right Outer Knob CCW": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_RightKnob_Large_DEC"
	},
	"MGharib.HA420.Avionics.Input.HA420 L Right Outer Knob CW": {
		"method": "calcCode",
		"code": "H:AS3000_TSC_Vertical_2_RightKnob_Large_INC"
	},
	"Asobo.747-8i.EFIS.Input (Potentiometer).B747 EFIS MFD 1 RANGE KNOB SET": {
		"method": "calcCode",
		"code": "@ 85 / near 0 max 12 min (>L:B747_8_MFD_1_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 EFIS MFD 2 RANGE KNOB DEC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_2_Range) -- 0 max 12 min (>L:B747_8_MFD_2_Range)"
	},
	"Asobo.747-8i.EFIS.Input.B747 EFIS MFD 2 RANGE KNOB INC": {
		"method": "calcCode",
		"code": "(L:B747_8_MFD_2_Range) ++ 0 max 12 min (>L:B747_8_MFD_2_Range)"
	},
	"Asobo.747-8i.EFIS.Input (Potentiometer).B747 EFIS MFD 2 RANGE KNOB SET": {
		"method": "calcCode",
		"code": "@ 85 / near 0 max 12 min (>L:B747_8_MFD_2_Range)"
	},
	"Asobo.B787-10.FMS.Input.FMC_1_BTN_NEXTPAGE": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_BTN_NEXTPAGE)"
	},
	"Asobo.B787-10.FMS.Input.FMC_1_BTN_A": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_BTN_A)"
	},
	"Asobo.B787-10.FMS.Input.FMC_1_BTN_1": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_BTN_1)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH CAPT WIPER KNOB OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_MISC_WIPER_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH CAPT WIPER KNOB SLOW": {
		"method": "calcCode",
		"code": "1 (>L:S_MISC_WIPER_CAPT)"
	},
	"FenixSim.A320.Miscellaneous.Input.FNX320 OH CAPT WIPER KNOB FAST": {
		"method": "calcCode",
		"code": "2 (>L:S_MISC_WIPER_CAPT)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Left Off": {
		"method": "calcCode",
		"code": "0 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_OFF)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Left Right Main": {
		"method": "calcCode",
		"code": "2 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_RIGHT)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Left Left Main": {
		"method": "calcCode",
		"code": "1 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_LEFT)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Right - Left Main": {
		"method": "calcCode",
		"code": "0 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_LEFT)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Right - Off": {
		"method": "calcCode",
		"code": "0 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_LEFT)"
	},
	"Flysimware.Cessna 414A.Fuel.Input.C414A Fuel Selector Right - Right Main": {
		"method": "calcCode",
		"code": "1 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_RIGHT)"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R AMP Meter Select L ALT": {
		"method": "calcCode",
		"code": "0 (>L:C310_ELEC_AMP_KNOB, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R AMP Meter Select R ALT": {
		"method": "calcCode",
		"code": "1 (>L:C310_ELEC_AMP_KNOB, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R AMP Meter Select BAT": {
		"method": "calcCode",
		"code": "2 (>L:C310_ELEC_AMP_KNOB, enum)"
	},
	"Blackbird/Milviz.Cessna 310R.Electrical.Input.C310R AMP Meter Select VOLT": {
		"method": "calcCode",
		"code": "3 (>L:C310_ELEC_AMP_KNOB, enum)"
	},
	"Asobo.Longitude.Anti-Ice.Input.Toggles Stabilizer Anti-Ice": {
		"method": "calcCode",
		"code": "(L:WT_LNG_STAB_AI) 1 == if{ 0 } els{ 1 } (>L:WT_LNG_STAB_AI)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.A32NX FCU HDG TRK  MODE INDICATORS": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE, Bool)"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.A32NX EFIS BARO 1 MODE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) "
	},
	"Asobo.DA40NG.Lights.Input.DA40NG LIGHT FLOOD KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 + 0 max 100 min \ns0 (>L:LIGHTING_GLARESHIELD_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT GLARESHIELD:1, Bool) s2 \n(L:LIGHTING_GLARESHIELD_1) 0 > != if{ \n	 l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit } "
	},
	"Asobo.DA40NG.Lights.Input.DA40NG LIGHT FLOOD KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 - 0 max 100 min \ns0 (>L:LIGHTING_GLARESHIELD_1) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT GLARESHIELD:1, Bool) s2 \n(L:LIGHTING_GLARESHIELD_1) 0 > != if{ \n	 l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit } "
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 BRAKE HYD PRESSURE LEFT NEEDLE": {
		"method": "calcCode",
		"code": "(L:N_HYD_PRESSURE_BRAKE_LEFT)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 BRAKE HYD PRESSURE RIGHT NEEDLE": {
		"method": "calcCode",
		"code": "(L:N_HYD_PRESSURE_BRAKE_RIGHT)"
	},
	"FenixSim.A320.Hydraulic.Output.FNX320 BRAKE HYD ACCU PRESSURE NEEDLE": {
		"method": "calcCode",
		"code": "(L:N_HYD_PRESSURE_BRAKE_ACCU)"
	},
	"Microsoft.Generic.Lights.Input.LOGO LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>K:LOGO_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.LOGO LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>K:LOGO_LIGHTS_SET)"
	},
	"PMDG.B737-700.EFIS.Input (Potentiometer).PMDG B737 EFIS ZOOM BY POT": {
		"method": "calcCode",
		"code": "@ 11.71 / near 10 / near 10 * 70 min s0\nl0 (L:switch_361_73X) - 10 div s0\n:1\nl0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"Fly By Wire.A320.ECAM.Input.A32NX_ECAM_SD_CURRENT_PAGE_NEXT": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b712\u00b7<\u00b7if{\u00b7(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b7\u00b71\u00b7+\u00b7(>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b7}\n"
	},
	"Fly By Wire.A320.ECAM.Input.A32NX_ECAM_SD_CURRENT_PAGE_PREV": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b712\u00b7<\u00b7if{\u00b7(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b7\u00b71\u00b7+\u00b7(>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX,\u00b7Number)\u00b7}\n"
	},
	"Asobo.Baron G58.Fuel.Input.G58 Fuel Selector Left Off": {
		"method": "calcCode",
		"code": "0 (>K:FUEL_SELECTOR_2_SET)"
	},
	"Asobo.Baron G58.Fuel.Input.G58 Fuel Selector Left On": {
		"method": "calcCode",
		"code": "2 (>K:FUEL_SELECTOR_2_SET)"
	},
	"Asobo.Baron G58.Fuel.Input.G58 Fuel Selector Left Xfeed": {
		"method": "calcCode",
		"code": "3 (>K:FUEL_SELECTOR_2_SET)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 OVHD VOICE RECORDER Switch Toggle ": {
		"method": "calcCode",
		"code": "298101 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.Lights.Output.FNX320 OVHD INTEG LIGHT KNOB POSITION": {
		"method": "calcCode",
		"code": "(L:A_OH_LIGHTING_OVD) 100 *"
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP1 POWER SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP1_POWER) ! (>L:S_PED_RMP1_POWER)"
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP2 POWER SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_PED_RMP2_POWER) ! (>L:S_PED_RMP2_POWER)"
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP2 POWER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:S_PED_RMP2_POWER)"
	},
	"FenixSim.A320.Radio.Input.FNX320 RMP2 POWER SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_PED_RMP2_POWER)"
	},
	"Fly By Wire.A320.Lights.Input.Wing Lights ON": {
		"method": "calcCode",
		"code": "0 1 (>K:2:WING_LIGHTS_SET)"
	},
	"Fly By Wire.A320.Lights.Input.Lights Wing OFF": {
		"method": "calcCode",
		"code": "0 0 (>K:2:WING_LIGHTS_SET) "
	},
	"Asobo.Longitude.Autopilot.Input.Longitude AP Baro 1 Force Std Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_ForcedToSTD) 0 == if{ (A:KOHLSMAN SETTING HG,mbar) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>L:XMLVAR_Baro1_ForcedToSTD) } els{ (L:XMLVAR_Baro1_SavedPressure) 0.0625* (>K:1:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_ForcedToSTD) }"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.A32NX OVHD ANTI ICE ENG 1 OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)  if{ \n  0 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)\n   (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.A32NX OVHD ANTI ICE ENG 1 ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)  ! if{ \n  1 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)\n   (>K:ANTI_ICE_TOGGLE_ENG1) }"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.A32NX OVHD ANTI ICE ENG 2 OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)  if{ \n  0 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)\n   (>K:ANTI_ICE_TOGGLE_ENG2) }"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.A32NX OVHD ANTI ICE ENG 2 ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! if{ \n  1 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)\n   (>K:ANTI_ICE_TOGGLE_ENG2) }"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Fuel Tank Selector Right": {
		"method": "calcCode",
		"code": "2 (>L:LEFT_MISC_FUEL_SEL)"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Fuel Tank Selector Left": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_FUEL_SEL)"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Fuel Tank Selector Off": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_FUEL_SEL)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 Nav Select Switch, Select Nav 1": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_NAV_SWITCH)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 Nav Select Switch, Select Nav 2": {
		"method": "calcCode",
		"code": "2 (>L:AUTOPILOT_NAV_SWITCH)"
	},
	"Just Flight.PA28 Warrior II.Warning System.Input.PA-28-161 Annunciator Light Test Press": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_PRESS_TEST_ISDOWN)"
	},
	"Just Flight.PA28 Warrior II.Warning System.Input.PA-28-161 Annunciator Light Test Release": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_PRESS_TEST_ISDOWN)"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Engine Primer Pull": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_LOWER_PRIME)"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Engine Primer Push": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_LOWER_PRIME)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Carb Heat Off": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_OFF)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Carb Heat On": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_ON)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 NAV mode ": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_NAVGPS)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 GPS Mode": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_NAVGPS)"
	},
	"Just Flight.PA28 Warrior II.Miscellaneous.Input.PA-28-161 EFB On": {
		"method": "calcCode",
		"code": "1 (>L:RIGHT_MISC_ICOMM)"
	},
	"Just Flight.PA28 Warrior II.Miscellaneous.Input.PA-28-161 EFB Off": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_MISC_ICOMM)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 DME use NAV 1": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_MISC_DME_NAV)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 DME use NAV 2": {
		"method": "calcCode",
		"code": "1 (>L:RIGHT_MISC_DME_NAV)"
	},
	"Just Flight.PA28 Warrior II.Environment.Input.PA-28-161 Cabin Fan Hi": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_LOWER_FAN)"
	},
	"Just Flight.PA28 Warrior II.Environment.Input.PA-28-161 Cabin Fan Off": {
		"method": "calcCode",
		"code": "1 (>L:RIGHT_LOWER_FAN)"
	},
	"Just Flight.PA28 Warrior II.Environment.Input.PA-28-161 Cabin Fan Lo": {
		"method": "calcCode",
		"code": "2 (>L:RIGHT_LOWER_FAN)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot On": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_onoff)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot Off": {
		"method": "calcCode",
		"code": "2 (>L:AUTOPILOT_onoff)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot HDG": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_hdg)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot NAV": {
		"method": "calcCode",
		"code": " 1 (>L:AUTOPILOT_nav)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot APR": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_apr)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot REV": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_rev)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot Altitude Hold": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_alt)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot VS Hold": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_vs)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot TEST press": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_test_isdown)"
	},
	"Just Flight.PA28 Warrior II.Autopilot.Input.PA-28-161 Autopilot TEST Release": {
		"method": "calcCode",
		"code": "0 (>L:AUTOPILOT_test_isdown)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 OFF": {
		"method": "calcCode",
		"code": "0 (>L:KR85_mode_knob)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 ADF": {
		"method": "calcCode",
		"code": "1 (>L:KR85_mode_knob)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 ANT": {
		"method": "calcCode",
		"code": "2 (>L:KR85_mode_knob)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 BFO": {
		"method": "calcCode",
		"code": "3 (>L:KR85_mode_knob)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A RMT": {
		"method": "calcCode",
		"code": "0 (>L:KN62_MODE_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A FREQ": {
		"method": "calcCode",
		"code": "1 (>L:KN62_MODE_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A GS/T": {
		"method": "calcCode",
		"code": "2 (>L:KN62_MODE_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Off": {
		"method": "calcCode",
		"code": "0 (>L:KN62_POWER)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A On": {
		"method": "calcCode",
		"code": "1 (>L:KN62_POWER)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.GYRO DRIFT SET": {
		"method": "calcCode",
		"code": "(>K:GYRO_DRIFT_SET)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.GYRO DRIFT SET EX1": {
		"method": "calcCode",
		"code": "(>K:GYRO_DRIFT_SET_EX1)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.GYRO DRIFT SYNC TO MAGNETIC COMPASS": {
		"method": "calcCode",
		"code": "(A:MAGNETIC COMPASS, degrees) (>K:GYRO_DRIFT_SET_EX1)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.HEADING GYRO SET": {
		"method": "calcCode",
		"code": "(>K:HEADING_GYRO_SET)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.KOHLSMAN SET": {
		"method": "calcCode",
		"code": "(>K:KOHLSMAN_SET)"
	},
	"Microsoft.Generic.Flight Instrumentation.Input.RESET MAX RPM INDICATOR": {
		"method": "calcCode",
		"code": "(>K:RESET_MAX_RPM_INDICATOR)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Outer Knob Dec": {
		"method": "calcCode",
		"code": "(L:KN62_OUTER_KNOB) -- (>L:KN62_OUTER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Outer Knob Inc": {
		"method": "calcCode",
		"code": "(L:KN62_OUTER_KNOB) ++ (>L:KN62_OUTER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Inner Knob Dec": {
		"method": "calcCode",
		"code": "(L:KN62_INNER_KNOB) -- (>L:KN62_INNER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Inner Knob Inc": {
		"method": "calcCode",
		"code": "(L:KN62_INNER_KNOB) ++ (>L:KN62_INNER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KN 62A Inner Knob Press": {
		"method": "calcCode",
		"code": "(L:KN62_INNER_KNOB_PUSH) ! (>L:KN62_INNER_KNOB_PUSH)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Vol Dec": {
		"method": "calcCode",
		"code": "(L:KR85_VOL_KNOB) 1 - 0 max (>L:KR85_VOL_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Vol Inc": {
		"method": "calcCode",
		"code": "(L:KR85_VOL_KNOB) 1 + 10 min (>L:KR85_VOL_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Left Knob Dec": {
		"method": "calcCode",
		"code": "(L:KR85_LEFT_KNOB) -- (>L:KR85_LEFT_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Left Knob Inc": {
		"method": "calcCode",
		"code": "(L:KR85_LEFT_KNOB) ++ (>L:KR85_LEFT_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Right Inner Knob Dec": {
		"method": "calcCode",
		"code": "(L:KR85_RIGHT_INNER_KNOB) -- (>L:KR85_RIGHT_INNER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Right Inner Knob Inc": {
		"method": "calcCode",
		"code": "(L:KR85_RIGHT_INNER_KNOB) ++ (>L:KR85_RIGHT_INNER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Right Outer Knob Dec": {
		"method": "calcCode",
		"code": "(L:KR85_RIGHT_OUTER_KNOB) -- (>L:KR85_RIGHT_OUTER_KNOB)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 KR 85 Right Outer Knob Inc": {
		"method": "calcCode",
		"code": "(L:KR85_RIGHT_OUTER_KNOB) ++ (>L:KR85_RIGHT_OUTER_KNOB)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Vol_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_LKnobDec)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Vol_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_LKnobInc)"
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Vol_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U1_LKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 1.Navigation.Input.TDS_GTN750U1_Vol_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U1_LKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Vol_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI750U2_LKnobCRSR) \n"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Vol_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_LKnobCRSR) "
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Vol_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_LKnobInc)"
	},
	"TDS Sim.GTNXi 750 2.Navigation.Input.TDS_GTN750U2_Vol_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI750U2_LKnobDec)"
	},
	"Just Flight.PA28 Warrior II.Gear.Input.PA-28-161 Parking Brakes On": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Just Flight.PA28 Warrior II.Gear.Input.PA-28-161 Parking Brakes Off": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Direct_to_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_DTOKEY)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Direct_to_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI650U2_DTOKEY)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Home_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_HomeKEY)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Home_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI650U2_HomeKEY)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Knob_Push_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Knob_Push_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI650U2_RKnobCRSR) "
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Large_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_RKnobOuterDec)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Large_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_RKnobOuterInc)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Small_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_RKnobInnerDec)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Small_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_RKnobInnerInc)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Vol_Dec": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_LKnobDec)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Vol_Inc": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_LKnobInc)"
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Vol_Press": {
		"method": "calcCode",
		"code": "1 (>L:TDSGTNXI650U2_LKnobCRSR) "
	},
	"TDS Sim.GTNXi 650 2.Navigation.Input.TDS_GTN650U2_Vol_Rls": {
		"method": "calcCode",
		"code": "0 (>L:TDSGTNXI650U2_LKnobCRSR) "
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Magneto Off": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_OFF)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Magneto R": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_RIGHT)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Magneto L": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_LEFT)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Magneto Both": {
		"method": "calcCode",
		"code": "(>K:MAGNETO_BOTH)"
	},
	"Just Flight.PA28 Warrior II.Engine.Input.PA-28-161 Magneto Start": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) }"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Battery On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_bat)"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Battery Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_bat)"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Alternator On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_alt)"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Alternator Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_alt)"
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Fuel Pump On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_fuelpump) "
	},
	"Just Flight.PA28 Warrior II.Fuel.Input.PA-28-161 Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_fuelpump) "
	},
	"Just Flight.PA28 Warrior II.Lights.Input.PA-28-161 Landing Light On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_ldg_light)"
	},
	"Just Flight.PA28 Warrior II.Lights.Input.PA-28-161 Landing Light Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_ldg_light)"
	},
	"Just Flight.PA28 Warrior II.Lights.Input.PA-28-161 Anti Col Light On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_anticol_light)"
	},
	"Just Flight.PA28 Warrior II.Lights.Input.PA-28-161 Anti Col Light Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_anticol_light)"
	},
	"Just Flight.PA28 Warrior II.Anti-Ice.Input.PA-28-161 Pitot Heat On": {
		"method": "calcCode",
		"code": "1 (>L:CENTRE_LOWER_pitotheat)"
	},
	"Just Flight.PA28 Warrior II.Anti-Ice.Input.PA-28-161 Pitot Heat Off": {
		"method": "calcCode",
		"code": "0 (>L:CENTRE_LOWER_pitotheat)"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Avionics On": {
		"method": "calcCode",
		"code": "1 (>L:RIGHT_LOWER_avionics_pwr)"
	},
	"Just Flight.PA28 Warrior II.Electrical.Input.PA-28-161 Avionics Off": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_LOWER_avionics_pwr)"
	},
	"Asobo.B787-10.Autopilot.Input.VAR Heading Increase": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_VAR_INC)"
	},
	"Asobo.B787-10.Autopilot.Input.Heading Increase": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_INC) "
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_HDG_INC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_INC)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_HDG_DEC": {
		"method": "calcCode",
		"code": "(>K:HEADING_BUG_DEC)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_HDG_SET": {
		"method": "calcCode",
		"code": "(>K:2:HEADING_BUG_SET)"
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_HDG_SET1": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_HEADING_SEL)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 OVHD Ground Call Button Release": {
		"method": "calcCode",
		"code": "10604 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 OVHD CVR Test Button Press": {
		"method": "calcCode",
		"code": "17801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 OVHD CVR Test Button Release": {
		"method": "calcCode",
		"code": "17804 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 OVHD CVR Erase Button Press": {
		"method": "calcCode",
		"code": "18001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 OVHD CVR Erase Button Release": {
		"method": "calcCode",
		"code": "18004 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Miscellaneous.Output.PMDG B737 OVHD CVR Test LED On": {
		"method": "calcCode",
		"code": "(L:switch_179_73X) 0 >"
	},
	"Asobo.Airliner.EFIS.Input.EFIS PFD FPV PRESS": {
		"method": "calcCode",
		"code": "(L:XMLVAR_FPV_MODE_ACTIVE, Bool) ! (>L:XMLVAR_FPV_MODE_ACTIVE)"
	},
	"PMDG.B737-700.Safety.Input.PMDG B737 OVHD Alt Horn Cutout Button Release": {
		"method": "calcCode",
		"code": "18304 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Anti-Ice.Input.PMDG B737 OVHD Ovht Test Button Release": {
		"method": "calcCode",
		"code": "19904 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Fuel.Output.A32NX OVHD FUEL XFEED ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:3, bool)"
	},
	"Asobo.Airliner.EFIS.Input.EFIS PFD MINS SELECTOR RADIO": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Asobo.Airliner.EFIS.Input.EFIS PFD MINS SELECTOR BARO": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Mins_Selector_Baro)"
	},
	"Black Square.AnalogBonanza.Electrical.Input.Alternator On": {
		"method": "calcCode",
		"code": "1  (>L:BKSQ_alternatorSwitch, bool)"
	},
	"Black Square.AnalogBonanza.Electrical.Input. Alternator Off": {
		"method": "calcCode",
		"code": "0  (>L:BKSQ_alternatorSwitch, bool)"
	},
	"Black Square.AnalogBonanza.Electrical.Input.Standby Alternator On": {
		"method": "calcCode",
		"code": "1  (>L:BKSQ_standbyAlternatorSwitch, bool)"
	},
	"Black Square.AnalogBonanza.Electrical.Input.Standby Alternator Off": {
		"method": "calcCode",
		"code": "0  (>L:BKSQ_standbyAlternatorSwitch, bool)"
	},
	"Black Square.AnalogBonanza.Navigation.Input.KNS-81 KHS Decrease": {
		"method": "calcCode",
		"code": "(>H:KNS81_smallDec)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Range_Capt_Dec": {
		"method": "calcCode",
		"code": "(L:A310_map_range_capt_switch) -- 0 max 4 min (>L:A310_map_range_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Range_Capt_Inc": {
		"method": "calcCode",
		"code": "(L:A310_map_range_capt_switch) ++ 0 max 4 min (>L:A310_map_range_capt_switch)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Alt Knob Inc": {
		"method": "calcCode",
		"code": "3 0 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Alt Knob Dec": {
		"method": "calcCode",
		"code": "3 0 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down) "
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Alt Hold Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_ALT_HOLD)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Loc Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_LOC_HOLD)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Apr Button Press": {
		"method": "calcCode",
		"code": "(>K:AP_APR_HOLD)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP VS Mode Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_VSPEED)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP VS Wheel Up": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + \n(>K:2:AP_VS_VAR_SET_ENGLISH)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP VS Wheel Dn": {
		"method": "calcCode",
		"code": "1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - \n(>K:2:AP_VS_VAR_SET_ENGLISH)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Engage L CMD Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_1) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Engage C CMD Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_2) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Engage R CMD Button Press": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_3) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Disengage Bar Up": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) if{ \n   0 (>K:AUTOPILOT_DISENGAGE_SET) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Disengage Bar Down": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT DISENGAGED, Bool) ! if{ \n   1 (>K:AUTOPILOT_DISENGAGE_SET) \n   0 (>L:XMLVAR_Autopilot_1_Status) \n   0 (>L:XMLVAR_Autopilot_2_Status) \n   0 (>L:XMLVAR_Autopilot_3_Status) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP IAS Mach Knob Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * \n   (>K:2:AP_MACH_VAR_SET) \n} els{ \n   1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max \n   (>K:2:AP_SPD_VAR_SET) } "
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP IAS Mach Knob Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach) if{ \n   1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * \n   (>K:2:AP_MACH_VAR_SET) \n} els{ \n   1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max \n   (>K:2:AP_SPD_VAR_SET) } "
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP THR Button Press": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_THR)"
	},
	"Asobo.747-8i.Autopilot.Input.B7474 AP IAS Mach Sel Button Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_SPEED_MACH_TOGGLE)  (L:XMLVAR_AirSpeedIsInMach) ! if{ \n(>K:AP_MANAGED_SPEED_IN_MACH_ON) \n} els{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP FD Capt Switch On": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP FD Capt Switch Off": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP AT Switch Arm": {
		"method": "calcCode",
		"code": "(L:AS01B_AUTO_THROTTLE_ARM_STATE,Bool) ! if{ \n(>K:AUTO_THROTTLE_ARM) }"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP AT Switch Off": {
		"method": "calcCode",
		"code": "(L:AS01B_AUTO_THROTTLE_ARM_STATE,Bool) if{ \n(>K:AUTO_THROTTLE_ARM) }"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Range_FO_Dec": {
		"method": "calcCode",
		"code": "(L:A310_map_range_fo_switch) -- 0 max 4 min (>L:A310_map_range_fo_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Range_FO_Inc": {
		"method": "calcCode",
		"code": "(L:A310_map_range_fo_switch) ++ 0 max 4 min (>L:A310_map_range_fo_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Mode_Capt_Dec": {
		"method": "calcCode",
		"code": "(L:A310_map_mode_capt_switch) -- 0 max 4 min (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Mode_Capt_Inc": {
		"method": "calcCode",
		"code": "(L:A310_map_mode_capt_switch) ++ 0 max 4 min (>L:A310_map_mode_capt_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Mode_FO_Dec": {
		"method": "calcCode",
		"code": "(L:A310_map_mode_fo_switch) -- 0 max 4 min (>L:A310_map_mode_fo_switch)"
	},
	"IniBuilds.A310.EFIS.Input.A310_EFIS_Mode_FO_Inc": {
		"method": "calcCode",
		"code": "(L:A310_map_mode_fo_switch) ++ 0 max 4 min (>L:A310_map_mode_fo_switch)"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input (Potentiometer).PMDG B737 OVHD Cabin Temp Left Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 3.1774 / 0 max 230 min  (L:switch_191_73X) - 3 div s1\n:1 \nl1 0 > if{ 19107 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\nl1 0 < if{ 19108 (>K:ROTOR_BRAKE) l1 ++ s1 g1 } \n"
	},
	"PMDG.B737-700.Air Condition / Pressurization.Input (Potentiometer).PMDG B737 OVHD Cabin Temp Right Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 3.1774 / 0 max 230 min  (L:switch_192_73X) - 3 div s1\n:1 \nl1 0 > if{ 19207 (>K:ROTOR_BRAKE) l1 -- s1 g1 }\nl1 0 < if{ 19208 (>K:ROTOR_BRAKE) l1 ++ s1 g1 } \n"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Master Avionics On": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:48, Bool) != if{ \n  48 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:48, Bool) 5 (A:1:BUS CONNECTION ON:2, Bool) != if{ \n 2 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:48, Bool) (>O:ELECTRICAL_Avionics_Bus_1_Position)"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Master Avionics Off": {
		"method": "calcCode",
		"code": "0 (A:CIRCUIT SWITCH ON:48, Bool) != if{ \n  48 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:48, Bool) 5 (A:1:BUS CONNECTION ON:2, Bool) != if{ \n 2 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:48, Bool) (>O:ELECTRICAL_Avionics_Bus_1_Position)"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Starter to R": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Starter to L": {
		"method": "calcCode",
		"code": "2 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Starter to Both": {
		"method": "calcCode",
		"code": "4 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.AnalogBonanza.Avionics.Input.Starter to Start": {
		"method": "calcCode",
		"code": "5 (>L:BKSQ_IgnitionPosition_1)"
	},
	"Black Square.AnalogBonanza.Fuel.Input.Aux Fuel Pump HI": {
		"method": "calcCode",
		"code": "2 (>L:var_FUEL_Switch_Pump_1, number)"
	},
	"Black Square.AnalogBonanza.Fuel.Input.Aux Fuel Pump Low": {
		"method": "calcCode",
		"code": "1 (>L:var_FUEL_Switch_Pump_1, number)"
	},
	"Black Square.AnalogBonanza.Fuel.Input.Aux Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>L:var_FUEL_Switch_Pump_1, number)"
	},
	"Asobo.Airliner.EFIS.Input.BAROSET IN (IN/HPA)": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Asobo.Airliner.EFIS.Input.BAROSET HPA (IN/HPA)": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"FSReborn.FSR500.Electrical.Input.Battery On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_BATTERY_SWITCH_ON)"
	},
	"FSReborn.FSR500.Electrical.Input.Battery Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_BATTERY_SWITCH_ON)"
	},
	"FSReborn.FSR500.Electrical.Input.Battery Toggle": {
		"method": "calcCode",
		"code": "(L:FSR_M500_BATTERY_SWITCH_ON) ! (>L:FSR_M500_BATTERY_SWITCH_ON)"
	},
	"FSReborn.FSR500.Avionics.Input.Avionics Master On": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:26, Bool) != if{ \n\t26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:26, Bool) 1 (A:1:BUS CONNECTION ON:2, Bool) != if{ \n\t2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n} \n\n1 (A:CIRCUIT SWITCH ON:27, Bool) != if{ \n\t27 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:27, Bool) 1 (A:1:BUS CONNECTION ON:3, Bool) != if{ \n\t3 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n}"
	},
	"FSReborn.FSR500.Avionics.Input.Avionics Master Off": {
		"method": "calcCode",
		"code": "0  (A:CIRCUIT SWITCH ON:26, Bool) != if{ \n\t26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:26, Bool) 1 (A:1:BUS CONNECTION ON:2, Bool) != if{ \n\t2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n} \n\n0 (A:CIRCUIT SWITCH ON:27, Bool) != if{ \n\t27 (>K:ELECTRICAL_CIRCUIT_TOGGLE) \n} \n(A:CIRCUIT SWITCH ON:27, Bool) 1 (A:1:BUS CONNECTION ON:3, Bool) != if{ \n\t3 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) \n}"
	},
	"FSReborn.FSR500.Electrical.Input.Generator Switch On": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) }  "
	},
	"FSReborn.FSR500.Electrical.Input.Generator Switch Off": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) }  "
	},
	"FSReborn.FSR500.Engine.Input.Push Start": {
		"method": "calcCode",
		"code": "1 (>K:STARTER1_SET)"
	},
	"FSReborn.FSR500.Fuel.Input.Fuel Pump Manual": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"FSReborn.FSR500.Fuel.Input.Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"FSReborn.FSR500.Fuel.Input.Fuel Pump Auto": {
		"method": "calcCode",
		"code": "2 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"FSReborn.FSR500.Engine.Input.Overspeed Gov Test Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_Electrical_Switch_Gov_Test_Cover"
	},
	"FSReborn.FSR500.Engine.Input.Overspeed Gov Test Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_Electrical_Switch_Gov_Test_Cover"
	},
	"FSReborn.FSR500.Engine.Input.Overspeed Gov Test On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_Electrical_Switch_Gov_Test_IsDown)"
	},
	"FSReborn.FSR500.Engine.Input.Overspeed Gov Test Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_Electrical_Switch_Gov_Test_IsDown)"
	},
	"FSReborn.FSR500.Engine.Input.Reverse Lock Out On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_Electrical_Switch_Reverse_Lock)"
	},
	"FSReborn.FSR500.Engine.Input.Reverse Lock Out Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_Electrical_Switch_Reverse_Lock)"
	},
	"FSReborn.FSR500.Warning.Input.Stall Warn Test On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_Electrical_Switch_Stall_Test)"
	},
	"FSReborn.FSR500.Warning.Input.Stall Warn Test Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_Electrical_Switch_Stall_Test)"
	},
	"FSReborn.FSR500.Electrical.Input.Emer On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_EMERGENCY_POWER)"
	},
	"FSReborn.FSR500.Electrical.Input.Emer Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_EMERGENCY_POWER)"
	},
	"FSReborn.FSR500.Electrical.Input.Alternator On": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 1 (>K:2:ALTERNATOR_SET) }  "
	},
	"FSReborn.FSR500.Electrical.Input.Alternator Off": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 0 (>K:2:ALTERNATOR_SET) }  "
	},
	"FSReborn.FSR500.Engine.Input.Start Mode Man/Stop On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_StarterStopButton)"
	},
	"FSReborn.FSR500.Engine.Input.Start Mode Man/Stop Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_StarterStopButton)"
	},
	"FSReborn.FSR500.Engine.Input.Ignition Switch Man": {
		"method": "calcCode",
		"code": "2 (>L:FSR_M500_ENGINE_IGNITION_1)"
	},
	"FSReborn.FSR500.Engine.Input.Ignition Switch Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_ENGINE_IGNITION_1)"
	},
	"FSReborn.FSR500.Engine.Input.Ignition Switch Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_ENGINE_IGNITION_1)"
	},
	"FSReborn.FSR500.Anti-Ice.Input.Windshield Ht Defog": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)"
	},
	"FSReborn.FSR500.Anti-Ice.Input.Windshield Ht Off": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)"
	},
	"FSReborn.FSR500.Anti-Ice.Input.Windshield Ht Anti ice": {
		"method": "calcCode",
		"code": "2 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)"
	},
	"FSReborn.FSR500.Anti-Ice.Input.Pitot Heat Switch On": {
		"method": "calcCode",
		"code": " 1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Pitot Heat Switch Off": {
		"method": "calcCode",
		"code": " 1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Prop Heat Switch On": {
		"method": "calcCode",
		"code": "1 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) } 1 (>L:DEICE_Propeller_1)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Prop Heat Switch Off": {
		"method": "calcCode",
		"code": "0 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) } 0 (>L:DEICE_Propeller_1)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Stall Heat Switch On": {
		"method": "calcCode",
		"code": "3 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_3)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Stall Heat Switch Off": {
		"method": "calcCode",
		"code": "3 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_3)   "
	},
	"FSReborn.FSR500.Anti-Ice.Input.Surf De-Ice Switch On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_DEICE_Switch_Airframe)\n1 (>A:CIRCUIT SWITCH ON:74, bool)\n"
	},
	"FSReborn.FSR500.Anti-Ice.Input.Surf De-Ice Switch Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_DEICE_Switch_Airframe)\n0 (>A:CIRCUIT SWITCH ON:74, bool)\n"
	},
	"FSReborn.FSR500.Lights.Input.Taxi / Rec Lt Pulse": {
		"method": "calcCode",
		"code": "1 0 r (>K:2:TAXI_LIGHTS_SET) 1 1 r (>K:2:RECOGNITION_LIGHTS_SET)\n100 (>K:LIGHT_POTENTIOMETER_26_SET)\n0 (>K:LIGHT_POTENTIOMETER_1_SET)"
	},
	"FSReborn.FSR500.Lights.Input.Taxi / Rec Lt Switch Off": {
		"method": "calcCode",
		"code": "0 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:RECOGNITION_LIGHTS_SET)\n0 (>K:LIGHT_POTENTIOMETER_26_SET)\n100 (>K:LIGHT_POTENTIOMETER_1_SET)"
	},
	"FSReborn.FSR500.Lights.Input.Taxi / Rec Lt Switch Taxi": {
		"method": "calcCode",
		"code": "1 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:RECOGNITION_LIGHTS_SET)\n0 (>K:LIGHT_POTENTIOMETER_26_SET)\n100 (>K:LIGHT_POTENTIOMETER_1_SET)"
	},
	"FSReborn.FSR500.Lights.Input.Landing Light On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1) "
	},
	"FSReborn.FSR500.Lights.Input.Landing Light Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1) "
	},
	"FSReborn.FSR500.Lights.Input.Nav Light On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:NAV_LIGHTS_SET) 1 (>L:LIGHTING_NAV_1)  "
	},
	"FSReborn.FSR500.Lights.Input.Nav Lights Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:NAV_LIGHTS_SET) 0 (>L:LIGHTING_NAV_1)  "
	},
	"FSReborn.FSR500.Lights.Input.Strobe Light On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1)"
	},
	"FSReborn.FSR500.Lights.Input.Strobe Light Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)"
	},
	"FSReborn.FSR500.Lights.Input.Ice Light On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:WING_LIGHTS_SET) 1 (>L:LIGHTING_WING_1)"
	},
	"FSReborn.FSR500.Lights.Input.Ice Light Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:WING_LIGHTS_SET) 0 (>L:LIGHTING_WING_1)"
	},
	"FSReborn.FSR500.Warning.Input.Fire Det / Ann Test On": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_Electrical_Switch_Fire_Test_IsDown)"
	},
	"FSReborn.FSR500.Warning.Input.Fire Det / Ann Test Off": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_Electrical_Switch_Fire_Test_IsDown)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_1_BTN_CLR_Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MCDU_CLR_Pressed)"
	},
	"Fly By Wire.A320.MCDU.Input.A320_Neo_CDU_2_BTN_CLR_Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MCDU_CLR_Pressed)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 MIP INTEG Light Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_PED_LIGHTING_PEDESTAL)"
	},
	"FenixSim.A320.Lights.Output.FNX32 MIP INTEG Light Knob Position": {
		"method": "calcCode",
		"code": "(L:A_PED_LIGHTING_PEDESTAL) 100 *"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness L PFD Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_CO)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness R PFD Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_FO)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness L ND Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_CI)\n"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness R ND Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_FI)\n"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP FD1 ON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_FD1, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP FD2 ON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_FD2, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP NAV MODE ON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_NAV, bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR FGCP VNAV ON": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_VNAV, bool)"
	},
	"Asobo.747-8i.Electrical.Input.STANDBY POWER AUTO": {
		"method": "calcCode",
		"code": "(>B:AIRLINER_Standby_Power_Selector_Auto)"
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_AUTOPILOT_HEADING_DEC": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT HEADING LOCK DIR:3, degrees) 1 - dnor (>K:2:HEADING_BUG_SET) (>H:A320_Neo_CDU_MODE_SELECTED_HEADING)  (>H:A320_Neo_CDU_AP_DEC_HEADING)"
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_AUTOPILOT_HEADING_INC": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT HEADING LOCK DIR:3, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)  (>H:A320_Neo_CDU_MODE_SELECTED_HEADING)  (>H:A320_Neo_CDU_AP_inc_HEADING)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Output.A32NX CHRONO ELAPSED TIME": {
		"method": "calcCode",
		"code": "(L:A32NX_CHRONO_ELAPSED_TIME)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Output.A32NX CHRONO ET ELAPSED TIME": {
		"method": "calcCode",
		"code": "(L:A32NX_CHRONO_ET_ELAPSED_TIME)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX CHRONO ET KNOB RUN": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX CHRONO ET KNOB STP": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)"
	},
	"Fly By Wire.A320-Dev.Miscellaneous.Input.A32NX CHRONO ET KNOB RST": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)"
	},
	"Asobo.Cessna 172.Lights.Output.Backlight CB / Panels": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, Percent) (A:CIRCUIT ON:44, Bool) *"
	},
	"Asobo.Cessna 172.Lights.Output.Backlight STBY Ind": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1, Percent) (A:CIRCUIT ON:44, Bool) *"
	},
	"Asobo.Cessna 172.Lights.Output.Lighting Pedestal": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PEDESTRAL_1) (A:CIRCUIT ON:44, Bool) *"
	},
	"Asobo.Cessna 172.Lights.Output.Backlight Avionics": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_4) (A:CIRCUIT ON:44, Bool) *"
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_FCU_VS_ZERO": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_VS_ZERO)"
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_FCU_VS_DEC": {
		"method": "calcCode",
		"code": "3  (A:AUTOPILOT VERTICAL HOLD VAR:3, feet per minute) 100 -  -6000 max (>K:2:AP_VS_VAR_SET_ENGLISH) (>H:A320_Neo_FCU_VS_DEC) (>H:A320_Neo_FCU_VS_HOLD) "
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_FCV_VS_INC": {
		"method": "calcCode",
		"code": "3  (A:AUTOPILOT VERTICAL HOLD VAR:3, feet per minute) 100 +  6000 min (>K:2:AP_VS_VAR_SET_ENGLISH) (>H:A320_Neo_FCU_VS_INC) (>H:A320_Neo_FCU_VS_HOLD)"
	},
	"Asobo.A320.Autopilot.Input.A320_Neo_CDU_MODE_MANAGED_HEADING": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_CDU_MODE_MANAGED_HEADING)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Airspeed Needle": {
		"method": "calcCode",
		"code": "(L:AirspeedNeedle,mph)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Attitude Indicator Pitch": {
		"method": "calcCode",
		"code": "(A:ATTITUDE INDICATOR PITCH DEGREES:1,degrees)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Attitude Indicator Bank": {
		"method": "calcCode",
		"code": "(A:ATTITUDE INDICATOR BANK DEGREES:1,grad)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Indicated Altitude 100": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE:1,feet) 1000 % 10 / 100 +  "
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Indicated Altitude 1000": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE:1,feet) 10000 % 100 / 100 +"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Indicated Altitude 10000": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE:1,feet) 100000 % 1000 / 100 + "
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Kohlsman Setting InHg": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1,inHg) 28 - 25 *"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Kohlsman Setting HPA": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING HG:1,hectopascals) 950 -"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Turn Knob": {
		"method": "calcCode",
		"code": "(L:ApTurnKnob)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Mode Selector": {
		"method": "calcCode",
		"code": "(L:ApModePushSwitch)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Low Voltage Flag": {
		"method": "calcCode",
		"code": "(L:ApLowVoltageFlag,bool)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Turn Coordinator Needle": {
		"method": "calcCode",
		"code": "(L:TurnCoordNeedle,keyframe)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Inclinometer Ball": {
		"method": "calcCode",
		"code": "(L:InclinometerBall,number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Ready Light": {
		"method": "calcCode",
		"code": "(L:ApRdyLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Alt Light": {
		"method": "calcCode",
		"code": "(L:ApAltLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot St Light": {
		"method": "calcCode",
		"code": "(L:ApStLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Heading Light": {
		"method": "calcCode",
		"code": "(L:ApHdLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot TRK Lo Light": {
		"method": "calcCode",
		"code": "(L:ApTrkLoLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot TRK Hi Light": {
		"method": "calcCode",
		"code": "(L:ApTrkHiLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Trim Up Light": {
		"method": "calcCode",
		"code": "(L:ApTrimUpLight,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Trim Dn Light": {
		"method": "calcCode",
		"code": "(L:ApTrimDnLight,bool)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 HSI Heading": {
		"method": "calcCode",
		"code": "(L:HeadingGyro,degrees)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 HSI Heading Bug": {
		"method": "calcCode",
		"code": "(L:AutopilotHeadingBug,number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 CDI Needle": {
		"method": "calcCode",
		"code": "(L:CdiNeedle,keyframe)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 GSI Needle": {
		"method": "calcCode",
		"code": "(L:GsiNeedle,keyframe)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 HIS Course Needle": {
		"method": "calcCode",
		"code": "(A:NAV OBS1,degrees)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hdg Flag": {
		"method": "calcCode",
		"code": "(L:FlagHDG)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Nav Flag": {
		"method": "calcCode",
		"code": "(L:FlagNAV)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 GSI Flag": {
		"method": "calcCode",
		"code": "(L:FlagGSI,bool)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 To From Needle": {
		"method": "calcCode",
		"code": "(L:ToFromNeedle,enum)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 CDI2 Needle": {
		"method": "calcCode",
		"code": "(L:Cdi2Needle,keyframe)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 GSI2 Needle": {
		"method": "calcCode",
		"code": "(L:Gsi2Needle,keyframe)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 To From 2 Needle": {
		"method": "calcCode",
		"code": "(L:ToFrom2Needle,enum)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 CDI2 Flag": {
		"method": "calcCode",
		"code": "(L:Cdi2Flag,bool)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 GSI2 Flag": {
		"method": "calcCode",
		"code": "(L:Gsi2Flag,enum)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Nav OBS 2": {
		"method": "calcCode",
		"code": "(A:NAV OBS:2,degrees)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Vertical Speed": {
		"method": "calcCode",
		"code": "(L:VerticalSpeed,feet per minute)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Clock Local Hour": {
		"method": "calcCode",
		"code": "(L:ClockLocalTimeHour,hours)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Clock Local Minute": {
		"method": "calcCode",
		"code": "(L:ClockLocalTimeMinute,minutes)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Clock Local Second": {
		"method": "calcCode",
		"code": "(L:ClockLocalTimeSecond,seconds)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng EGT": {
		"method": "calcCode",
		"code": "(L:Eng1_EGTGauge,number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Gauge 1": {
		"method": "calcCode",
		"code": "(L:FuelGauge1,number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Gauge 2": {
		"method": "calcCode",
		"code": "(L:FuelGauge2,number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Gauge 3": {
		"method": "calcCode",
		"code": "(L:FuelGauge3,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Fuel Pressure": {
		"method": "calcCode",
		"code": "(L:Eng1_FuelPressureGauge,psi)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Oil Temp": {
		"method": "calcCode",
		"code": "(L:Eng1_OilTempGauge,fahrenheit)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Oil Pressure": {
		"method": "calcCode",
		"code": "(L:Eng1_OilPressureGauge,psi)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Ammeter 1": {
		"method": "calcCode",
		"code": "(L:Ammeter1,amps)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Ambient Temp": {
		"method": "calcCode",
		"code": "(A:AMBIENT TEMPERATURE,fahrenheit)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng RPM": {
		"method": "calcCode",
		"code": "(L:Eng1_RPM,RPM)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Hour 1000": {
		"method": "calcCode",
		"code": "(L:e1Hour4,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Hour 100": {
		"method": "calcCode",
		"code": "(L:e1Hour3,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Hour 10": {
		"method": "calcCode",
		"code": "(L:e1Hour2,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Hour 1": {
		"method": "calcCode",
		"code": "(L:e1Hour1,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Hour Frac": {
		"method": "calcCode",
		"code": "(L: e1HourFract1,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Fuel Flow": {
		"method": "calcCode",
		"code": "(L:Eng1_GPH,gallons)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Heading Dial": {
		"method": "calcCode",
		"code": "(L:AdfHdgNeedle,degrees)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Heading Needle": {
		"method": "calcCode",
		"code": "(L:Adf1Needle,keyframe)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Manifold Pressure": {
		"method": "calcCode",
		"code": "(L:Eng1_ManifoldPressure,inHg)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng CHT": {
		"method": "calcCode",
		"code": "(L:Eng1_CHTGauge,fahrenheit)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Suction Pressure": {
		"method": "calcCode",
		"code": "(L:Eng1_SuctionPressure,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 AF1 Hour 1000": {
		"method": "calcCode",
		"code": "(L:a1Hour4,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 AF1 Hour 100": {
		"method": "calcCode",
		"code": "(L:a1Hour3,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 AF1 Hour 10": {
		"method": "calcCode",
		"code": "(L:a1Hour2,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 AF1 Hour 1": {
		"method": "calcCode",
		"code": "(L:a1Hour1,number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 AF1 Hour Frac": {
		"method": "calcCode",
		"code": "(L: a1HourFract1,number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Plane Heading Mag": {
		"method": "calcCode",
		"code": "(A:PLANE HEADING DEGREES MAGNETIC,degrees)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Battery 1 Switch": {
		"method": "calcCode",
		"code": "(L:Battery1Switch,bool)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Eng Fuel Pump Switch": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:1,bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Nav Inst Light Switch": {
		"method": "calcCode",
		"code": "(L:NavInstrLightSwitchPct)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Avionics Master Switch": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1,bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Landing Light Left Swtich": {
		"method": "calcCode",
		"code": "(L:LandingLightLeftSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Landing Light Right Switch": {
		"method": "calcCode",
		"code": "(L:LandingLightRightSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Strobe Light Switch": {
		"method": "calcCode",
		"code": "(L:StrobeLightSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Beacon Light Switch": {
		"method": "calcCode",
		"code": "(L:BeaconLightSwitch)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Magneto 1": {
		"method": "calcCode",
		"code": "(L:Magnetos1)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Pitot Heat Switch": {
		"method": "calcCode",
		"code": "(L:PitotHeatSwitch)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Indicator Switch": {
		"method": "calcCode",
		"code": "(L:FuelIndicatorSwitch)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Landing Gear Lever Pos": {
		"method": "calcCode",
		"code": "(L:LandingGearLeverPos,enum)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Selector": {
		"method": "calcCode",
		"code": "(L:FSelComancheLeftState)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Selector": {
		"method": "calcCode",
		"code": "(L:FSelComancheRightState)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Starter Switch": {
		"method": "calcCode",
		"code": "(L:Eng1_StarterSwitch)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Master": {
		"method": "calcCode",
		"code": "(L:ApMaster)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Alt Switch": {
		"method": "calcCode",
		"code": "(L:ApAltSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Autopilot Disconnect": {
		"method": "calcCode",
		"code": "(L:ApDisconnectSwitch)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Parking Brake Position": {
		"method": "calcCode",
		"code": "(L:ParkingBrakePosition,bool)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Throttle Position": {
		"method": "calcCode",
		"code": "(L:Throttle1Position)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Mixture Lever": {
		"method": "calcCode",
		"code": "(L:Eng1_MixtureManualLever)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Prop RPM Lever Position": {
		"method": "calcCode",
		"code": "(L:RPMLever1Position)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Eng Carb Heat Switch": {
		"method": "calcCode",
		"code": "(L:Eng1_CarbHeatSwitch)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer Pump": {
		"method": "calcCode",
		"code": "(L:PrimerPump,percent)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer Screw": {
		"method": "calcCode",
		"code": "(L:PrimerScrew)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer State": {
		"method": "calcCode",
		"code": "(L:PrimerState,enum)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent Left": {
		"method": "calcCode",
		"code": "(L:CabinVentLeftLever)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent Right": {
		"method": "calcCode",
		"code": "(L:CabinVentRightLever)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Window Defrost Knob": {
		"method": "calcCode",
		"code": "(L:WindowDefrosterControlKnob)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Cabin Temp Control": {
		"method": "calcCode",
		"code": "(L:CabinTempControl)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps Lever Pos": {
		"method": "calcCode",
		"code": "(L:LandFlapsPos)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBI": {
		"method": "calcCode",
		"code": "(L:PushToTestMBI)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBI knob": {
		"method": "calcCode",
		"code": "(L:PushToTestMBIKnob)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker Inner Light": {
		"method": "calcCode",
		"code": "(L:MarkerInnerLight,bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBM": {
		"method": "calcCode",
		"code": "(L:PushToTestMBM)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBM Knob": {
		"method": "calcCode",
		"code": "(L:PushToTestMBMKnob)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker Middle Light": {
		"method": "calcCode",
		"code": "(L:MarkerMiddleLight,bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBO": {
		"method": "calcCode",
		"code": "(L:PushToTestMBO)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Push to Test MBO Knob": {
		"method": "calcCode",
		"code": "(L:PushToTestMBOKnob)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker Outer Light": {
		"method": "calcCode",
		"code": "(L:MarkerOuterLight,bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker Audio Switch": {
		"method": "calcCode",
		"code": "(L:AudioSensSwitch)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker Mute Switch": {
		"method": "calcCode",
		"code": "(L:AudioMkrMuteSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM 1/2 Toggle": {
		"method": "calcCode",
		"code": "(L:AudioComSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM 1 Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioCom1HpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM 2 Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioCom2HpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Output.PA24 250 COM Both Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioBothHpSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV 1 Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioNav1HpSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV 2 Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioNav2HpSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 ADF Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioAdf1HpSwitch)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Marker DME Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioMkrHpSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Speaker Button Anim": {
		"method": "calcCode",
		"code": "(L:AudioSpkrSwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM1 Volume Knob": {
		"method": "calcCode",
		"code": "(L:Com1OnOffVolume)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM1 On Off Pull": {
		"method": "calcCode",
		"code": "(L:Com1OnOffPull)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV1 Ident Knob ": {
		"method": "calcCode",
		"code": "(L:Nav1PullIdentVolume)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV1 Ident Pull": {
		"method": "calcCode",
		"code": "(L:Nav1PullIdent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM1 Freq Inner Knob": {
		"method": "calcCode",
		"code": "(L:Com1FreqInnerKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM1 Freq Outer Knob": {
		"method": "calcCode",
		"code": "(L:Com1FreqOuterKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV1 Freq Inner Knob": {
		"method": "calcCode",
		"code": "(L:Nav1FreqInnerKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV1 Freq Outer Knob": {
		"method": "calcCode",
		"code": "(L:Nav1FreqOuterKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM1 Swap Switch": {
		"method": "calcCode",
		"code": "(L:Com1StbySwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV1 Swap Switch": {
		"method": "calcCode",
		"code": "(L:Nav1StbySwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 DME Selector": {
		"method": "calcCode",
		"code": "(L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Active Recall Switch": {
		"method": "calcCode",
		"code": "(L:ActiveRecallSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM2 Volume Knob": {
		"method": "calcCode",
		"code": "(L:Com2OnOffVolume)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM2 On Off Pull": {
		"method": "calcCode",
		"code": "(L:Com2OnOffPull)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV2 Ident Knob": {
		"method": "calcCode",
		"code": "(L:Nav2PullIdentVolume)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV2 Ident Pull": {
		"method": "calcCode",
		"code": "(L:Nav2PullIdent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM2 Freq Inner Knob": {
		"method": "calcCode",
		"code": "(L:Com2FreqInnerKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM2 Freq Outer Knob": {
		"method": "calcCode",
		"code": "(L:Com2FreqOuterKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV2 Freq Inner Knob": {
		"method": "calcCode",
		"code": "(L:Nav2FreqInnerKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV2 Freq Outer Knob": {
		"method": "calcCode",
		"code": "(L:Nav2FreqOuterKnob,percent)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 COM2 Swap Switch": {
		"method": "calcCode",
		"code": "(L:Com2StbySwitch)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 NAV2 Swap Switch": {
		"method": "calcCode",
		"code": "(L:Nav2StbySwitch)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Ident Switch": {
		"method": "calcCode",
		"code": "(L:XpdrIdentSwitch)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Ident Knob": {
		"method": "calcCode",
		"code": "(L:XpdrIdentKnob)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Mode Knob": {
		"method": "calcCode",
		"code": "(L:XpdrModeKnobPos)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Dig 1": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1,number) 1000 / 10 % int 10 *"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Dig 2": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1,number) 100 / 10 % int 10 * "
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Dig 3": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1,number) 10 / 10 % int 10 *  "
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 XPDR Dig 4": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1,number) 10 % int 10 *	   "
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Freq Inner Knob": {
		"method": "calcCode",
		"code": "(L:AdfFreqInnerKnob,percent)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Freq Outer Knob": {
		"method": "calcCode",
		"code": "(L:AdfFreqOuterKnob,percent)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Mode Selector": {
		"method": "calcCode",
		"code": "(L:AdfModeSelectSwitch,enum)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Swap Swich": {
		"method": "calcCode",
		"code": "(L:AdfFrqButton)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Volume Knob": {
		"method": "calcCode",
		"code": "(L:AdfOnOffKnobVolume)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 ADF Reset Button": {
		"method": "calcCode",
		"code": "(L:FrqRstButton)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Landing Gear Motor": {
		"method": "calcCode",
		"code": "(L:BreakerLandingGearMotor)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Landing Gear Indicator": {
		"method": "calcCode",
		"code": "(L:BreakerLandingGearIndicator)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Generator Output": {
		"method": "calcCode",
		"code": "(L:BreakerGeneratorOutput)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Light Nav": {
		"method": "calcCode",
		"code": "(L:BreakerLightNav)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Gauges Engine": {
		"method": "calcCode",
		"code": "(L:BreakerGaugesEngine)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Light Landing": {
		"method": "calcCode",
		"code": "(L:BreakerLightLanding)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Light Beacon": {
		"method": "calcCode",
		"code": "(L:BreakerLightBeacon)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Pitot Heat": {
		"method": "calcCode",
		"code": "(L:BreakerPitotHeat)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Nav Com 2": {
		"method": "calcCode",
		"code": "(L:BreakerNavCom2)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Nav Com 1": {
		"method": "calcCode",
		"code": "(L:BreakerNavCom1)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Warning Stall": {
		"method": "calcCode",
		"code": "(L:BreakerWarningStall)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Starter": {
		"method": "calcCode",
		"code": "(L:BreakerStarter)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 CB Autopilot": {
		"method": "calcCode",
		"code": "(L:BreakerAutopilot)"
	},
	"A2A SIM.Comanche 250.Safety.PA24 250 Stall Warning Light": {
		"method": "calcCode",
		"code": "(L:LightStallWarning,bool)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Landing Gear Indicator": {
		"method": "calcCode",
		"code": "(L:LGlights,enum)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Elevator Trim Handle": {
		"method": "calcCode",
		"code": "(A:ELEVATOR TRIM PCT,percent)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Portable Lamp DragX": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragX)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Portable Lamp DragY": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragY)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Portable Lamp Mode": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Mode)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Portable Lamp Color Switch": {
		"method": "calcCode",
		"code": "(L:PortableLamp_ColourSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Portable Lamp Dimmer": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Dimmer)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Cabin Flood 1 Light Switch": {
		"method": "calcCode",
		"code": "(L:CabinFlood1LightSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Cabin Flood 2 Light Switch": {
		"method": "calcCode",
		"code": "(L:CabinFlood2LightSwitch)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Cabin Red Light Switch": {
		"method": "calcCode",
		"code": "(L:CabinRedLightSwitch)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Left": {
		"method": "calcCode",
		"code": "(L:VisorLeftPercent)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Right": {
		"method": "calcCode",
		"code": "(L:VisorRightPercent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 1 Ring": {
		"method": "calcCode",
		"code": "(L:CabinBallVent1Rotary)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 2 Ring": {
		"method": "calcCode",
		"code": "(L:CabinBallVent2Rotary)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 3 Ring": {
		"method": "calcCode",
		"code": "(L:CabinBallVent3Rotary)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 4 Ring": {
		"method": "calcCode",
		"code": "(L:CabinBallVent4Rotary)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 1 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinBallVent1Nozzle)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 2 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinBallVent2Nozzle)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 3 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinBallVent3Nozzle)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Ball Vent 4 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinBallVent4Nozzle)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Left Latch": {
		"method": "calcCode",
		"code": "(L:WindowLeft)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Right Latch": {
		"method": "calcCode",
		"code": "(L:WindowRight)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Window Left Anim": {
		"method": "calcCode",
		"code": "(L:LittleWindowL,percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Window Right Anim": {
		"method": "calcCode",
		"code": "(L:LittleWindowR,percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 1 Lever": {
		"method": "calcCode",
		"code": "(L:CabinVent1Lever)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 2 Lever": {
		"method": "calcCode",
		"code": "(L:CabinVent2Lever)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 3 Lever": {
		"method": "calcCode",
		"code": "(L:CabinVent3Lever)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 4 Lever": {
		"method": "calcCode",
		"code": "(L:CabinVent4Lever)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 1 Lever Lock": {
		"method": "calcCode",
		"code": "(L:CabinVent1LeverLock)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 2 Lever Lock": {
		"method": "calcCode",
		"code": "(L:CabinVent2LeverLock)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 3 Lever Lock": {
		"method": "calcCode",
		"code": "(L:CabinVent3LeverLock)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 4 Lever Lock": {
		"method": "calcCode",
		"code": "(L:CabinVent4LeverLock)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 1 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinVent1Nozzle,percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 2 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinVent2Nozzle,percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 3 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinVent3Nozzle,percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Cabin Vent 4 Nozzle": {
		"method": "calcCode",
		"code": "(L:CabinVent4Nozzle,percent)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door 1 Handle": {
		"method": "calcCode",
		"code": "(L:Door1Handle,bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door 1 Latch": {
		"method": "calcCode",
		"code": "(L:Door1Latch)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door 1 Anim": {
		"method": "calcCode",
		"code": "(L:ExitOpen1,percent)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Pitot Tube Cover": {
		"method": "calcCode",
		"code": "(L:PitotTubeCover)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Baggage Door": {
		"method": "calcCode",
		"code": "(L:WALKAROUND_BaggageDoor_Click)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Beacon On - Output": {
		"method": "calcCode",
		"code": "(A:LIGHT BEACON ON, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing On": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Taxi On": {
		"method": "calcCode",
		"code": "(A:LIGHT TAXI ON, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Strobe On - Output": {
		"method": "calcCode",
		"code": "(A:LIGHT STROBE ON, bool)"
	},
	"A2A SIM.Comanche 250.Lights.Output.PA24 250 Light Nav On": {
		"method": "calcCode",
		"code": "(A:LIGHT NAV ON, bool)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Alt Use": {
		"method": "calcCode",
		"code": "1 (>L:APAltSwitch, Number) 0 (>L:APAltSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Disconnect Push": {
		"method": "calcCode",
		"code": "1 (>L:ApDisconnectSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Disconnect Release": {
		"method": "calcCode",
		"code": "0 (>L:ApDisconnectSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Disconnect Use": {
		"method": "calcCode",
		"code": "1 (>L:ApDisconnectSwitch, Number) 0 (>L:ApDisconnectSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Master Off": {
		"method": "calcCode",
		"code": "0 (>H:A2A_AP_MASTER) 0 (>L:ApMaster, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Master On": {
		"method": "calcCode",
		"code": "1 (>H:A2A_AP_MASTER) 1 (>L:ApMaster, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Master Toggle": {
		"method": "calcCode",
		"code": "(L:ApMaster, Number) ! d (>H:A2A_AP_MASTER) (>L:ApMaster, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Push": {
		"method": "calcCode",
		"code": "1 (>L:ApModePushSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Release": {
		"method": "calcCode",
		"code": "0 (>L:ApModePushSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Turn Center": {
		"method": "calcCode",
		"code": "0 (>L:ApTurnKnob, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Turn Left": {
		"method": "calcCode",
		"code": "(L:ApTurnKnob, Number) 5 - -50 max (>L:ApTurnKnob, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Turn Right": {
		"method": "calcCode",
		"code": "(L:ApTurnKnob, Number) 5 + 50 min (>L:ApTurnKnob, Number)"
	},
	"A2A SIM.Comanche 250.Autopilot.PA24 250 Ap Mode Use": {
		"method": "calcCode",
		"code": "1 (>L:ApModePushSwitch, Number) 0 (>L:ApModePushSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Avionics Master Off": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH) }"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Avionics Master On": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH) }"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Avionics Master Toggle": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Battery Off": {
		"method": "calcCode",
		"code": "0 (>L:Battery1Switch, Bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Battery On": {
		"method": "calcCode",
		"code": "1 (>L:Battery1Switch, Bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Battery Toggle": {
		"method": "calcCode",
		"code": "(L:Battery1Switch, Bool) ! (>L:Battery1Switch, Bool)"
	},
	"A2A SIM.Comanche 250.Engine.Input.PA24 250 Carbheat Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:Eng1_CarbHeatSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Carbheat Dec": {
		"method": "calcCode",
		"code": "(L:Eng1_CarbHeatSwitch, Number) 10 - 0 max (>L:Eng1_CarbHeatSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Carbheat Inc": {
		"method": "calcCode",
		"code": "(L:Eng1_CarbHeatSwitch, Number) 10 + 100 min (>L:Eng1_CarbHeatSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Carbheat Off": {
		"method": "calcCode",
		"code": "0 (>L:Eng1_CarbHeatSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Carbheat On": {
		"method": "calcCode",
		"code": "100 (>L:Eng1_CarbHeatSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 01 Landing Gear Motor In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerLandingGearMotor, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 01 Landing Gear Motor Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerLandingGearMotor, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 01 Landing Gear Motor Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerLandingGearMotor, bool) ! (>L:BreakerLandingGearMotor, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 02 Landing Gear Indicator In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerLandingGearIndicator, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 02 Landing Gear Indicator Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerLandingGearIndicator, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 02 Landing Gear Indicator Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerLandingGearIndicator, bool) ! (>L:BreakerLandingGearIndicator, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 03 Generator In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerGeneratorOutput, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 03 Generator Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerGeneratorOutput, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 03 Generator Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerGeneratorOutput, bool) ! (>L:BreakerGeneratorOutput, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 04 Light Nav In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerLightNav, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 04 Light Nav Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerLightNav, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 04 Light Nav Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerLightNav, bool) ! (>L:BreakerLightNav, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 05 Gauges Dome In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerGaugesEngine, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 05 Gauges Dome Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerGaugesEngine, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 05 Gauges Dome Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerGaugesEngine, bool) ! (>L:BreakerGaugesEngine, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 06 Light Landing In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerLightLanding, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 06 Light Landing Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerLightLanding, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 06 Light Landing Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerLightLanding, bool) ! (>L:BreakerLightLanding, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 07 Light Beacon In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerLightBeacon, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 07 Light Beacon Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerLightBeacon, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 07 Light Beacon Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerLightBeacon, bool) ! (>L:BreakerLightBeacon, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 08 Pitot In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerPitotHeat, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 08 Pitot Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerPitotHeat, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 08 Pitot Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerPitotHeat, bool) ! (>L:BreakerPitotHeat, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 09 Nav Com 2 In": {
		"method": "calcCode",
		"code": "(L:AvionicsConfiguration, Number) 0 == if{ 1 (>L:BreakerNavCom2, bool) } els{ 1 (>L:BreakerNavCom1, bool) }"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 09 Nav Com 2 Out": {
		"method": "calcCode",
		"code": "(L:AvionicsConfiguration, Number) 0 == if{ 0 (>L:BreakerNavCom2, bool) } els{ 0 (>L:BreakerNavCom1, bool) }"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 09 Nav Com 2 Toggle": {
		"method": "calcCode",
		"code": "(L:AvionicsConfiguration, Number) 0 == if{ (L:BreakerNavCom2, bool) ! (>L:BreakerNavCom2, bool) } els{ (L:BreakerNavCom1, bool) ! (>L:BreakerNavCom1, bool) }"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 10 Nav Com 1 In": {
		"method": "calcCode",
		"code": "(L:AvionicsConfiguration, Number) 0 == if{ 1 (>L:BreakerNavCom1, bool) } els{ 1 (>L:BreakerNavCom2, bool) }"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 10 Nav Com 1 Out": {
		"method": "calcCode",
		"code": "(L:AvionicsConfiguration, Number) 0 == if{ 0 (>L:BreakerNavCom1, bool) } els{ 0 (>L:BreakerNavCom2, bool) }"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 10 Nav Com 1 Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerNavCom2, bool) ! (>L:BreakerNavCom2, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 11 Stall Warning In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerWarningStall, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 11 Stall Warning Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerWarningStall, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 11 Stall Warning Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerWarningStall, bool) ! (>L:BreakerWarningStall, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 12 Starter In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerStarter, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 12 Starter Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerStarter, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 12 Starter Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerStarter, bool) ! (>L:BreakerStarter, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 13 Autopilot In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerAutopilot, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 13 Autopilot Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerAutopilot, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 13 Autopilot Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerAutopilot, bool) ! (>L:BreakerAutopilot, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 14 Gauges Turncoord In": {
		"method": "calcCode",
		"code": "1 (>L:BreakerGaugesTurnCoord, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 14 Gauges Turncoord Out": {
		"method": "calcCode",
		"code": "0 (>L:BreakerGaugesTurnCoord, bool)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Cb 14 Gauges Turncoord Toggle": {
		"method": "calcCode",
		"code": "(L:BreakerGaugesTurnCoord, bool) ! (>L:BreakerGaugesTurnCoord, bool)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.Input.PA24 250 Clima Cabin Heat Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:CabinTempControl, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Heat Dec": {
		"method": "calcCode",
		"code": "(L:CabinTempControl, percent) 5 - 0 max (>L:CabinTempControl, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Heat Inc": {
		"method": "calcCode",
		"code": "(L:CabinTempControl, percent) 5 + 100 min (>L:CabinTempControl, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.Input.PA24 250 Clima Cabin Vent Left Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:CabinVentLeftLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Vent Left Dec": {
		"method": "calcCode",
		"code": "(L:CabinVentLeftLever, percent) 5 - 0 max (>L:CabinVentLeftLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Vent Left Inc": {
		"method": "calcCode",
		"code": "(L:CabinVentLeftLever, percent) 5 + 100 min (>L:CabinVentLeftLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.Input.PA24 250 Clima Cabin Vent Right Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:CabinVentRightLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Vent Right Dec": {
		"method": "calcCode",
		"code": "(L:CabinVentRightLever, percent) 5 - 0 max (>L:CabinVentRightLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Cabin Vent Right Inc": {
		"method": "calcCode",
		"code": "(L:CabinVentRightLever, percent) 5 + 100 min (>L:CabinVentRightLever, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.Input.PA24 250 Clima Windshield Defrost Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:WindowDefrosterControlKnob, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Windshield Defrost Dec": {
		"method": "calcCode",
		"code": "(L:WindowDefrosterControlKnob, percent) 5 - 0 max (>L:WindowDefrosterControlKnob, percent)"
	},
	"A2A SIM.Comanche 250.Air Condition and Pressurization.PA24 250 Clima Windshield Defrost Inc": {
		"method": "calcCode",
		"code": "(L:WindowDefrosterControlKnob, percent) 5 + 100 min (>L:WindowDefrosterControlKnob, percent)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Controls Locks Dismount": {
		"method": "calcCode",
		"code": "0 (>L:ControlsLockLever, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Controls Locks Mount": {
		"method": "calcCode",
		"code": "1 (>L:ControlsLockLever, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Controls Locks Toggle": {
		"method": "calcCode",
		"code": "(L:ControlsLockLever, Number) ! (>L:ControlsLockLever, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Complete Close": {
		"method": "calcCode",
		"code": "1 (>K:PA24-door_latch_unlock) 1 (>K:PA24-door_handle_open) 1 (>K:PA24-door_latch_lock)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Complete Open": {
		"method": "calcCode",
		"code": "1 (>K:PA24-door_latch_unlock) 1 (>K:PA24-door_handle_open)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Complete Toggle": {
		"method": "calcCode",
		"code": "(L:Door1Open, bool) ! if{ 1 (>K:PA24-door_complete_open) } els{ 1 (>K:PA24-door_complete_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Handle Close": {
		"method": "calcCode",
		"code": "(L:Door1Handle, bool) ! (>L:Door1Handle, bool) 0 (>L:Door1Open, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Handle Open": {
		"method": "calcCode",
		"code": "(L:Door1Handle, bool) ! (>L:Door1Handle, bool) (L:Door1Latch, bool) 0 == if{ 1 (>L:Door1Open, bool) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Handle Toggle": {
		"method": "calcCode",
		"code": "(L:Door1Open, bool) 0 == if{ 1 (>K:PA24-door_handle_open) } els{ 1 (>K:PA24-door_handle_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Latch Lock": {
		"method": "calcCode",
		"code": "1 (>L:Door1Latch, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Latch Toggle": {
		"method": "calcCode",
		"code": "(L:Door1Latch, bool) ! (>L:Door1Latch, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Door Latch Unlock": {
		"method": "calcCode",
		"code": "0 (>L:Door1Latch, bool)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Both Push": {
		"method": "calcCode",
		"code": "1 (>L:BUTTON_EDM730_Step, enum) 1 (>L:BUTTON_EDM730_LF, enum)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Both Release": {
		"method": "calcCode",
		"code": "0 (>L:BUTTON_EDM730_Step, enum) 0 (>L:BUTTON_EDM730_LF, enum)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Lf Push": {
		"method": "calcCode",
		"code": "1 (>L:BUTTON_EDM730_LF, enum)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Lf Release": {
		"method": "calcCode",
		"code": "0 (>L:BUTTON_EDM730_LF, enum)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Step Push": {
		"method": "calcCode",
		"code": "1 (>L:BUTTON_EDM730_Step, enum)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Edm 830 Step Release": {
		"method": "calcCode",
		"code": "0 (>L:BUTTON_EDM730_Step, enum)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Ext Wheel Chockl Hide": {
		"method": "calcCode",
		"code": "0 (>L:vis_WheelChockL, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Chock Left Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WheelChockL, Number) ! (>L:vis_WheelChockL, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Chock Right Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WheelChockR, Number) ! (>L:vis_WheelChockR, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Chocks Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WheelChockR, Number) 0 == if{ 1 (>L:vis_WheelChockR, Number) 1 (>L:vis_WheelChockL, Number) } els{ 0 (>L:vis_WheelChockR, Number) 0 (>L:vis_WheelChockL, Number) }"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 External Pitot Toggle": {
		"method": "calcCode",
		"code": "(L:PitotTubeCover, bool) ! (>L:PitotTubeCover, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Tiedown Tail Toggle": {
		"method": "calcCode",
		"code": "(L:vis_Tail_TieDown, Number) ! (>L:vis_Tail_TieDown, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Tiedown Wing Left Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WingLeft_TieDown, Number) ! (>L:vis_WingLeft_TieDown, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Tiedown Wing Right Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WingRight_TieDown, Number) ! (>L:vis_WingRight_TieDown, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 External Tiedowns Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WingRight_TieDown, Number) 0 == if{ 1 (>L:vis_WingRight_TieDown, Number) 1 (>L:vis_WingLeft_TieDown, Number) 1 (>L:vis_Tail_TieDown, Number) } els{ 0 (>L:vis_WingRight_TieDown, Number) 0 (>L:vis_WingLeft_TieDown, Number) 0 (>L:vis_Tail_TieDown, Number) }"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps Axis": {
		"method": "calcCode",
		"code": "(L:PA24-flaps_axis) 0 max 3 min (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps Dec": {
		"method": "calcCode",
		"code": "(L:LandFlapsPos, Number) 1 - 0 max (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps Inc": {
		"method": "calcCode",
		"code": "(L:LandFlapsPos, Number) 1 + 3 min (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps To 0": {
		"method": "calcCode",
		"code": "0 (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps To 09": {
		"method": "calcCode",
		"code": "1 (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps To 18": {
		"method": "calcCode",
		"code": "2 (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Flaps To 27": {
		"method": "calcCode",
		"code": "3 (>L:LandFlapsPos, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Indicator Switch Left Aux": {
		"method": "calcCode",
		"code": "0 (>L:FuelIndicatorSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Indicator Switch Right Aux": {
		"method": "calcCode",
		"code": "1 (>L:FuelIndicatorSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Indicator Switch Toggle": {
		"method": "calcCode",
		"code": "(L:FuelIndicatorSwitch, Number) ! (>L:FuelIndicatorSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Pump On": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Pump Toggle": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Bool) ! (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Down": {
		"method": "calcCode",
		"code": "(L:FSelComancheLeftState, Number) 1 - 0 max (>L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Get Position": {
		"method": "calcCode",
		"code": "(L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Main": {
		"method": "calcCode",
		"code": "2 (>L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Off": {
		"method": "calcCode",
		"code": "0 (>L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Tip": {
		"method": "calcCode",
		"code": "1 (>L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Left Up": {
		"method": "calcCode",
		"code": "(L:FSelComancheLeftState, Number) 1 + 2 min (>L:FSelComancheLeftState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Down": {
		"method": "calcCode",
		"code": "(L:FSelComancheRightState, Number) 1 - 0 max (>L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Get Position": {
		"method": "calcCode",
		"code": "(L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Main": {
		"method": "calcCode",
		"code": "2 (>L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Off": {
		"method": "calcCode",
		"code": "0 (>L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Tip": {
		"method": "calcCode",
		"code": "1 (>L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Fuel.PA24 250 Fuel Tank Right Up": {
		"method": "calcCode",
		"code": "(L:FSelComancheRightState, Number) 1 + 2 min (>L:FSelComancheRightState, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Emergency Extend": {
		"method": "calcCode",
		"code": "1 (>L:EmergencyGearLever, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Emergency Retract": {
		"method": "calcCode",
		"code": "0 (>L:EmergencyGearLever, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Emergency Toggle": {
		"method": "calcCode",
		"code": "(L:EmergencyGearLever, Number) ! (>L:EmergencyGearLever, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Landing Down": {
		"method": "calcCode",
		"code": "2 (>L:LandingGearLeverPos, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Landing Off": {
		"method": "calcCode",
		"code": "1 (>L:LandingGearLeverPos, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Gear Landing Up": {
		"method": "calcCode",
		"code": "0 (>L:LandingGearLeverPos, Number)"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones Nc Off": {
		"method": "calcCode",
		"code": "0 (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 2 == if{ 1 (>L:Headphones, Number) }"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones Nc On": {
		"method": "calcCode",
		"code": "1 (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 1 == if{ 2 (>L:Headphones, Number) }"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones Nc Toggle": {
		"method": "calcCode",
		"code": "(L:NoiseCancellingSwitch, Number) ! (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 2 == if{ 1 (>L:Headphones, Number) } els{ (L:Headphones, Number) 1 == if{ 2 (>L:Headphones, Number) } }"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones Off": {
		"method": "calcCode",
		"code": "0 (>L:Headphones, Number)"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones On": {
		"method": "calcCode",
		"code": "1 (L:NoiseCancellingSwitch, Number) == if{ 2 (>L:Headphones, Number) } els{ 1 (>L:Headphones, Number) }"
	},
	"A2A SIM.Comanche 250.Audio.PA24 250 Headphones Toggle": {
		"method": "calcCode",
		"code": "(L:Headphones, Number) 1 >= if{ 0 (>L:Headphones, Number) } els{ 1 (L:NoiseCancellingSwitch, Number) == if{ 2 (>L:Headphones, Number) } els{ 1 (>L:Headphones, Number) } }"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Course Dec": {
		"method": "calcCode",
		"code": "1 (>K:VOR1_OBI_DEC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Course Inc": {
		"method": "calcCode",
		"code": "1 (>K:VOR1_OBI_INC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Drift Dec": {
		"method": "calcCode",
		"code": "1 (>K:GYRO_DRIFT_DEC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Drift Inc": {
		"method": "calcCode",
		"code": "1 (>K:GYRO_DRIFT_INC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Drift To Magnetic Cheat": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_GYRO_SET)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Heading Dec": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_DEC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Heading Inc": {
		"method": "calcCode",
		"code": "1 (>K:HEADING_BUG_INC)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Heading To Magnetic Cheat": {
		"method": "calcCode",
		"code": "0 (A:PLANE HEADING DEGREES MAGNETIC, Degrees) near (>K:2:HEADING_BUG_SET)"
	},
	"A2A SIM.Comanche 250.Flight Instrumentation.Input.PA24 250 Hsi Knob To Left": {
		"method": "calcCode",
		"code": "(L:HeadingSelectorPush, bool) if{ 1 (>K:GYRO_DRIFT_INC) } els{ 1 (>K:HEADING_BUG_DEC) }"
	},
	"A2A SIM.Comanche 250.Flight Instrumentation.Input.PA24 250 Hsi Knob To Right": {
		"method": "calcCode",
		"code": "(L:HeadingSelectorPush, bool) if{ 1 (>K:GYRO_DRIFT_DEC) } els{ 1 (>K:HEADING_BUG_INC) }"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Mode Gyro": {
		"method": "calcCode",
		"code": "1 (>L:HeadingSelectorPush, bool)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Hsi Mode Heading": {
		"method": "calcCode",
		"code": "0 (>L:HeadingSelectorPush, bool)"
	},
	"A2A SIM.Comanche 250.Flight Instrumentation.Input.PA24 250 Hsi Mode Toggle": {
		"method": "calcCode",
		"code": "(L:HeadingSelectorPush, bool) ! (>L:HeadingSelectorPush, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Ident Dim Axis": {
		"method": "calcCode",
		"code": "(L:PA24-kt76_xpdr_ident_dim_axis) 15 max 100 min (>L:XpdrIdentKnob, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Ident Dim Dec": {
		"method": "calcCode",
		"code": "(L:XpdrIdentKnob, Number) 5 - 15 max (>L:XpdrIdentKnob, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Ident Dim Inc": {
		"method": "calcCode",
		"code": "(L:XpdrIdentKnob, Number) 5 + 100 min (>L:XpdrIdentKnob, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode 0 Off": {
		"method": "calcCode",
		"code": "0 (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode 1 Standby": {
		"method": "calcCode",
		"code": "1 (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode 2 On": {
		"method": "calcCode",
		"code": "2 (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode 3 Alt": {
		"method": "calcCode",
		"code": "3 (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode 4 Tst": {
		"method": "calcCode",
		"code": "4 (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode Axis": {
		"method": "calcCode",
		"code": "(L:PA24-kt76_xpdr_mode_axis) 0 max 4 min (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode Dec": {
		"method": "calcCode",
		"code": "(L:XpdrModeKnobPos, Number) 1 - 0 max (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Kt76 Xpdr Mode Inc": {
		"method": "calcCode",
		"code": "(L:XpdrModeKnobPos, Number) 1 + 4 min (>L:XpdrModeKnobPos, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Beacon Off": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_OFF)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Beacon On": {
		"method": "calcCode",
		"code": "1 (>K:BEACON_LIGHTS_ON)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Beacon Toggle": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_BEACON_LIGHTS)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood Red Off": {
		"method": "calcCode",
		"code": "0 (>L:CabinRedLightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood Red On": {
		"method": "calcCode",
		"code": "1 (>L:CabinRedLightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood Red Toggle": {
		"method": "calcCode",
		"code": "(L:CabinRedLightSwitch, bool) ! (>L:CabinRedLightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood1 Off": {
		"method": "calcCode",
		"code": "0 (>L:CabinFlood1LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood1 On": {
		"method": "calcCode",
		"code": "1 (>L:CabinFlood1LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood1 Toggle": {
		"method": "calcCode",
		"code": "(L:CabinFlood1LightSwitch, bool) ! (>L:CabinFlood1LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood2 Off": {
		"method": "calcCode",
		"code": "0 (>L:CabinFlood2LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood2 On": {
		"method": "calcCode",
		"code": "1 (>L:CabinFlood2LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Flood2 Toggle": {
		"method": "calcCode",
		"code": "(L:CabinFlood2LightSwitch, bool) ! (>L:CabinFlood2LightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Left Off": {
		"method": "calcCode",
		"code": "0 (>L:LandingLightLeftSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Left On": {
		"method": "calcCode",
		"code": "1 (>L:LandingLightLeftSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Left Toggle": {
		"method": "calcCode",
		"code": "(L:LandingLightLeftSwitch, bool) ! (>L:LandingLightLeftSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Right Off": {
		"method": "calcCode",
		"code": "0 (>L:LandingLightRightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Right On": {
		"method": "calcCode",
		"code": "1 (>L:LandingLightRightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Landing Right Toggle": {
		"method": "calcCode",
		"code": "(L:LandingLightRightSwitch, bool) ! (>L:LandingLightRightSwitch, bool)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Nav 100": {
		"method": "calcCode",
		"code": "100 (>L:NavInstrLightSwitchPct, percent)"
	},
	"A2A SIM.Comanche 250.Lights.Input (Potentiometer).PA24 250 Light Nav Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:NavInstrLightSwitchPct, percent)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Nav Dec": {
		"method": "calcCode",
		"code": "(L:NavInstrLightSwitchPct, percent) 10 - 0 max (>L:NavInstrLightSwitchPct, percent)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Nav Inc": {
		"method": "calcCode",
		"code": "(L:NavInstrLightSwitchPct, percent) 10 + 100 min (>L:NavInstrLightSwitchPct, percent)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Nav Off": {
		"method": "calcCode",
		"code": "0 (>L:NavInstrLightSwitchPct, percent)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Nav Toggle": {
		"method": "calcCode",
		"code": "(L:NavInstrLightSwitchPct, percent) 0 > if{ 0 (>L:NavInstrLightSwitchPct, percent) } els{ 100 (>L:NavInstrLightSwitchPct, percent) }"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Colour Red": {
		"method": "calcCode",
		"code": "1 (>L:PortableLamp_ColourSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Colour Toggle": {
		"method": "calcCode",
		"code": "(L:PortableLamp_ColourSwitch, Number) ! (>L:PortableLamp_ColourSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Colour White": {
		"method": "calcCode",
		"code": "0 (>L:PortableLamp_ColourSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Lights.Input.PA24 250 Light Portable Dim Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:PortableLamp_Dimmer, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Dim Dec": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Dimmer, Number) 5 - 0 max (>L:PortableLamp_Dimmer, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Dim Inc": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Dimmer, Number) 5 + 100 min (>L:PortableLamp_Dimmer, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Center": {
		"method": "calcCode",
		"code": "1 (>K:PA24-light_portable_direction_horizontal_center) 1 (>K:PA24-light_portable_direction_vertical_center)"
	},
	"A2A SIM.Comanche 250.Lights.Input.PA24 250 Light Portable Direction Horizontal Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:PortableLamp_Main_DragX, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Horizontal Center": {
		"method": "calcCode",
		"code": "0 (>L:PortableLamp_Main_DragX, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Horizontal Dec": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragX, Number) 5 - -50 max (>L:PortableLamp_Main_DragX, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Horizontal Inc": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragX, Number) 5 + 50 min (>L:PortableLamp_Main_DragX, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Vertical Axis": {
		"method": "calcCode",
		"code": "(L:PA24-light_portable_direction_vertical_axis) -50 max 50 min (>L:PortableLamp_Main_DragY, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Vertical Center": {
		"method": "calcCode",
		"code": "0 (>L:PortableLamp_Main_DragY, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Vertical Dec": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragY, Number) 5 - -50 max (>L:PortableLamp_Main_DragY, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Portable Direction Vertical Inc": {
		"method": "calcCode",
		"code": "(L:PortableLamp_Main_DragY, Number) 5 + 50 min (>L:PortableLamp_Main_DragY, Number)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Strobe Off": {
		"method": "calcCode",
		"code": "1 (>K:STROBES_OFF)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Strobe On": {
		"method": "calcCode",
		"code": "1 (>K:STROBES_ON)"
	},
	"A2A SIM.Comanche 250.Lights.PA24 250 Light Strobe Toggle": {
		"method": "calcCode",
		"code": "1 (>K:STROBES_TOGGLE)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Magneto Both": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO1_SET)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Magneto Left": {
		"method": "calcCode",
		"code": "2 (>K:MAGNETO1_SET)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Magneto Off": {
		"method": "calcCode",
		"code": "0 (>K:MAGNETO1_SET)"
	},
	"A2A SIM.Comanche 250.Electrical.PA24 250 Magneto Right": {
		"method": "calcCode",
		"code": "1 (>K:MAGNETO1_SET)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker All Test": {
		"method": "calcCode",
		"code": "1 (>K:PA24-marker_inner_knob_use) 1 (>K:PA24-marker_outer_knob_use) 1 (>K:PA24-marker_middle_knob_use)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Inner Knob Push": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBI, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Inner Knob Release": {
		"method": "calcCode",
		"code": "0 (>L:PushToTestMBI, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Inner Knob Use": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBI, Number) 0 (>L:PushToTestMBI, Number)"
	},
	"A2A SIM.Comanche 250.Flight Instrumentation.Input.PA24 250 Marker Inner Turn Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:PushToTestMBIKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Inner Turn Left": {
		"method": "calcCode",
		"code": "(L:PushToTestMBIKnob, Number) 5 + 100 min (>L:PushToTestMBIKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Inner Turn Right": {
		"method": "calcCode",
		"code": "(L:PushToTestMBIKnob, Number) 5 - 15 max (>L:PushToTestMBIKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Middle Knob Push": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBM, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Middle Knob Release": {
		"method": "calcCode",
		"code": "0 (>L:PushToTestMBM, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Middle Knob Use": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBM, Number) 0 (>L:PushToTestMBM, Number)"
	},
	"A2A SIM.Comanche 250.Flight Instrumentation.Input.PA24 250 Marker Middle Turn Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:PushToTestMBMKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Middle Turn Left": {
		"method": "calcCode",
		"code": "(L:PushToTestMBMKnob, Number) 5 + 100 min (>L:PushToTestMBMKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Middle Turn Right": {
		"method": "calcCode",
		"code": "(L:PushToTestMBMKnob, Number) 5 - 15 max (>L:PushToTestMBMKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Knob Push": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBO, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Knob Release": {
		"method": "calcCode",
		"code": "0 (>L:PushToTestMBO, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Knob Use": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBO, Number) 0 (>L:PushToTestMBO, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Turn Axis": {
		"method": "calcCode",
		"code": "(L:PA24-marker_outer_turn_axis) 15 max 100 min (>L:PushToTestMBOKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Turn Left": {
		"method": "calcCode",
		"code": "(L:PushToTestMBOKnob, Number) 5 + 100 min (>L:PushToTestMBOKnob, Number)"
	},
	"A2A SIM.Comanche 250.Flight Intrumentation.PA24 250 Marker Outer Turn Right": {
		"method": "calcCode",
		"code": "(L:PushToTestMBOKnob, Number) 5 - 15 max (>L:PushToTestMBOKnob, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Swap Push": {
		"method": "calcCode",
		"code": "1 (>L:Com2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Swap Release": {
		"method": "calcCode",
		"code": "0 (>L:Com2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Swap Use": {
		"method": "calcCode",
		"code": "1 (>L:Com2StbySwitch, bool) 0 (>L:Com2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Volume Axis": {
		"method": "calcCode",
		"code": "(L:PA24-mk12_com_volume_axis) 0 max 100 min d (>L:Com2OnOffVolume, Number) 0 > (>L:Com2OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Volume Dec": {
		"method": "calcCode",
		"code": "(L:Com2OnOffVolume, Number) 5 - 0 max d (>L:Com2OnOffVolume, Number) 0 > (>L:Com2OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Com Volume Inc": {
		"method": "calcCode",
		"code": "(L:Com2OnOffVolume, Number) 5 + 100 min (>L:Com2OnOffVolume, Number) 1 (>L:Com2OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Nav Ident Pull": {
		"method": "calcCode",
		"code": "1 (>L:Nav2PullIdent, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Nav Ident Push Brg": {
		"method": "calcCode",
		"code": "0 (>L:Nav2PullIdent, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Nav Swap Push": {
		"method": "calcCode",
		"code": "1 (>L:Nav2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Nav Swap Release": {
		"method": "calcCode",
		"code": "0 (>L:Nav2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Nav Swap Use": {
		"method": "calcCode",
		"code": "1 (>L:Nav2StbySwitch, bool) 0 (>L:Nav2StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Onoff Pull": {
		"method": "calcCode",
		"code": "1 (>L:Com2OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Onoff Push": {
		"method": "calcCode",
		"code": "0 (>L:Com2OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Mk12 Onoff Push Toggle": {
		"method": "calcCode",
		"code": "(L:Com2OnOffPull, Number) ! (>L:Com2OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Swap Push": {
		"method": "calcCode",
		"code": "1 (>L:Com1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Swap Release": {
		"method": "calcCode",
		"code": "0 (>L:Com1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Swap Use": {
		"method": "calcCode",
		"code": "1 (>L:Com1StbySwitch, bool) 0 (>L:Com1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Volume Axis": {
		"method": "calcCode",
		"code": "(L:PA24-ncs812_com_volume_axis) 0 max 100 min d (>L:Com1OnOffVolume, Number) 0 > (>L:Com1OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Volume Dec": {
		"method": "calcCode",
		"code": "(L:Com1OnOffVolume, Number) 5 - 0 max d (>L:Com1OnOffVolume, Number) 0 > (>L:Com1OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Com Volume Inc": {
		"method": "calcCode",
		"code": "(L:Com1OnOffVolume, Number) 5 + 100 min (>L:Com1OnOffVolume, Number) 1 (>L:Com1OnOff, Number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 0 Frq": {
		"method": "calcCode",
		"code": "0 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 1 Dst": {
		"method": "calcCode",
		"code": "1 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 2 Gs": {
		"method": "calcCode",
		"code": "2 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 3 Tts": {
		"method": "calcCode",
		"code": "3 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 4 Hld": {
		"method": "calcCode",
		"code": "4 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function 5 Hldfrq": {
		"method": "calcCode",
		"code": "5 (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function Dec": {
		"method": "calcCode",
		"code": "(L:DmeFunction) -- 0 max 5 min (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function Get Value": {
		"method": "calcCode",
		"code": "(L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Dme Function Inc": {
		"method": "calcCode",
		"code": "(L:DmeFunction) ++ 0 max 5 min (>L:DmeFunction)"
	},
	"A2A SIM.Comanche 250.Navigation.Input.PA24 250 Ncs812 Nav Ident Pull": {
		"method": "calcCode",
		"code": "1 (>L:Nav1PullIdent, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Nav Ident Push Brg": {
		"method": "calcCode",
		"code": "0 (>L:Nav1PullIdent, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Nav Ident Toggle": {
		"method": "calcCode",
		"code": "(L:Nav1PullIdent, bool) ! (>L:Nav1PullIdent, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Nav Swap Push": {
		"method": "calcCode",
		"code": "1 (>L:Nav1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Nav Swap Release": {
		"method": "calcCode",
		"code": "0 (>L:Nav1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Ncs812 Nav Swap Use": {
		"method": "calcCode",
		"code": "1 (>L:Nav1StbySwitch, bool) 0 (>L:Nav1StbySwitch, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Onoff Pull": {
		"method": "calcCode",
		"code": "1 (>L:Com1OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Onoff Push": {
		"method": "calcCode",
		"code": "0 (>L:Com1OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Ncs812 Onoff Push Toggle": {
		"method": "calcCode",
		"code": "(L:Com1OnOffPull, Number) ! (>L:Com1OnOffPull, Number)"
	},
	"A2A SIM.Comanche 250.Gear.PA24 250 Parking Brake Realistic Toggle": {
		"method": "calcCode",
		"code": "(L:RealisticParkingBrake, Number) 0 == if{ (L:ParkingBrakePosition, bool) ! (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } els{ (L:ParkingBrakePosition, bool) 1 == if{ 0 (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } els{ (L:BrakeLPosition, percent) 25 > (L:BrakeRPosition, percent) 25 > || if{ 1 (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } } }"
	},
	"A2A SIM.Comanche 250.Gear.Input.PA24 250 Parking Brake Toggle": {
		"method": "calcCode",
		"code": "(L:ParkingBrakePosition, bool) ! s0 (>L:ParkingBrakePosition, bool) \nl0 (>L:ParkingBrakeActive, bool) \n(>H:A2A_PARKING_BRAKE_POSITION)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Pitot Heat Off": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_OFF)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Pitot Heat On": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_ON)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Pitot Heat Toggle": {
		"method": "calcCode",
		"code": "1 (>K:PITOT_HEAT_TOGGLE)"
	},
	"A2A SIM.Comanche 250.Anti-Ice.PA24 250 Primer Lock": {
		"method": "calcCode",
		"code": "0 (>L:PrimerState, enum)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer Prime": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_PRIMER1)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer Unlock": {
		"method": "calcCode",
		"code": "1 (>L:PrimerState, enum)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Primer Unlock And Prime": {
		"method": "calcCode",
		"code": "1 (>K:PA24-primer_unlock) 1 (>K:TOGGLE_PRIMER1)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Radio Channel Spacing 25": {
		"method": "calcCode",
		"code": "0 (>L:ComChannelSpacing, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Radio Channel Spacing 833": {
		"method": "calcCode",
		"code": "1 (>L:ComChannelSpacing, bool)"
	},
	"A2A SIM.Comanche 250.Radio.PA24 250 Radio Channel Spacing Toggle": {
		"method": "calcCode",
		"code": "(L:ComChannelSpacing, bool) ! (>L:ComChannelSpacing, bool)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Rudder Trim Neutral": {
		"method": "calcCode",
		"code": "0 (>A:RUDDER TRIM PCT, percent scaler 16k)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Rudder Trim To Left": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM PCT, percent scaler 16k) 100 - -16384 max (>A:RUDDER TRIM PCT, percent scaler 16k)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Rudder Trim To Right": {
		"method": "calcCode",
		"code": "(A:RUDDER TRIM PCT, percent scaler 16k) 100 + 16384 min (>A:RUDDER TRIM PCT, percent scaler 16k)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Starter Push": {
		"method": "calcCode",
		"code": "1 (>H:A2A_ENG1_STARTER_SWITCH) 1 (>L:Eng1_StarterSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Engine.PA24 250 Starter Release": {
		"method": "calcCode",
		"code": "1 (>H:A2A_ENG1_STARTER_SWITCH) 0 (>L:Eng1_StarterSwitch, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Tablet Avionics Config 0 No Gps": {
		"method": "calcCode",
		"code": "0 (>L:AvionicsConfiguration, Number) 0 (>L:AvionicsConfigurationSaved, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Tablet Avionics Config 1 430": {
		"method": "calcCode",
		"code": "1 (>L:AvionicsConfiguration, Number) 1 (>L:AvionicsConfigurationSaved, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Tablet Avionics Config 2 530": {
		"method": "calcCode",
		"code": "2 (>L:AvionicsConfiguration, Number) 2 (>L:AvionicsConfigurationSaved, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Tablet Avionics Config 2 530 430": {
		"method": "calcCode",
		"code": "3 (>L:AvionicsConfiguration, Number) 3 (>L:AvionicsConfigurationSaved, Number)"
	},
	"A2A SIM.Comanche 250.Avionics.PA24 250 Tablet Avionics Config 4 750": {
		"method": "calcCode",
		"code": "4 (>L:AvionicsConfiguration, Number) 4 (>L:AvionicsConfigurationSaved, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Hide": {
		"method": "calcCode",
		"code": "0 (>L:TabletStation, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Depth Axis": {
		"method": "calcCode",
		"code": "(L:PA24-tablet_position_depth_axis) -50 max 25 min (>L:TabletDepthPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Depth Dec": {
		"method": "calcCode",
		"code": "(L:TabletDepthPosition, Number) 5 - -50 max (>L:TabletDepthPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Depth Inc": {
		"method": "calcCode",
		"code": "(L:TabletDepthPosition, Number) 5 + 25 min (>L:TabletDepthPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.Input.PA24 250 Tablet Position Horizontal Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:TabletHorizontalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Horizontal Dec": {
		"method": "calcCode",
		"code": "(L:TabletHorizontalPosition, Number) 5 - 0 max (>L:TabletHorizontalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Horizontal Inc": {
		"method": "calcCode",
		"code": "(L:TabletHorizontalPosition, Number) 5 + 100 min (>L:TabletHorizontalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Reset": {
		"method": "calcCode",
		"code": "-36 (>L:TabletVerticalPosition, Number) 0 (>L:TabletHorizontalPosition, Number) 0 (>L:TabletDepthPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Vertical Axis": {
		"method": "calcCode",
		"code": "(L:PA24-tablet_position_vertical_axis) -39 max 36 min (>L:TabletVerticalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Vertical Dec": {
		"method": "calcCode",
		"code": "(L:TabletVerticalPosition, Number) 5 - -39 max 36 min (>L:TabletVerticalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Position Vertical Inc": {
		"method": "calcCode",
		"code": "(L:TabletVerticalPosition, Number) 5 + -39 max 36 min (>L:TabletVerticalPosition, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Show": {
		"method": "calcCode",
		"code": "1 (>L:TabletStation, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Toggle": {
		"method": "calcCode",
		"code": "(L:TabletStation, Number) ! (>L:TabletStation, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Baggage 050Lbs": {
		"method": "calcCode",
		"code": "50 (>L:BaggageWeight, lbs)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Baggage 100Lbs": {
		"method": "calcCode",
		"code": "100 (>L:BaggageWeight, lbs)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Baggage 150Lbs": {
		"method": "calcCode",
		"code": "150 (>L:BaggageWeight, lbs)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Baggage 200Lbs": {
		"method": "calcCode",
		"code": "200 (>L:BaggageWeight, lbs)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Baggage Axis": {
		"method": "calcCode",
		"code": "(L:PA24-tablet_weight_baggage_axis) 0 max 300 min (>L:BaggageWeight, lbs)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel 0 Light": {
		"method": "calcCode",
		"code": "3 (>L:FuelLeftTipTank, gallon) 15 (>L:FuelLeftWingTank, gallon) 15 (>L:FuelRightWingTank, gallon) 3 (>L:FuelRightTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel 1 Medium": {
		"method": "calcCode",
		"code": "3 (>L:FuelLeftTipTank, gallon) 30 (>L:FuelLeftWingTank, gallon) 30 (>L:FuelRightWingTank, gallon) 3 (>L:FuelRightTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel 2 Heavy": {
		"method": "calcCode",
		"code": "15 (>L:FuelLeftTipTank, gallon) 30 (>L:FuelLeftWingTank, gallon) 30 (>L:FuelRightWingTank, gallon) 15 (>L:FuelRightTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Left Tip Dec": {
		"method": "calcCode",
		"code": "(L:FuelLeftTipTank, gallon) 1 - 0 max (>L:FuelLeftTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Left Tip Inc": {
		"method": "calcCode",
		"code": "(L:FuelLeftTipTank, gallon) 1 + 15 min (>L:FuelLeftTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Left Wing Dec": {
		"method": "calcCode",
		"code": "(L:FuelLeftWingTank, gallon) 1 - 0 max (>L:FuelLeftWingTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Left Wing Inc": {
		"method": "calcCode",
		"code": "(L:FuelLeftWingTank, gallon) 1 + 30 min (>L:FuelLeftWingTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Right Tip Dec": {
		"method": "calcCode",
		"code": "(L:FuelRightTipTank, gallon) 1 - 0 max (>L:FuelRightTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Right Tip Inc": {
		"method": "calcCode",
		"code": "(L:FuelRightTipTank, gallon) 1 + 15 min (>L:FuelRightTipTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Right Wing Dec": {
		"method": "calcCode",
		"code": "(L:FuelRightWingTank, gallon) 1 - 0 max (>L:FuelRightWingTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Fuel Right Wing Inc": {
		"method": "calcCode",
		"code": "(L:FuelRightWingTank, gallon) 1 + 30 min (>L:FuelRightWingTank, gallon)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Seat 1 Toggle": {
		"method": "calcCode",
		"code": "(L:Seat1Character, Number) 0 == if{ 1 (>L:Seat1Character, Number) } els{ 0 (>L:Seat1Character, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Seat 2 Toggle": {
		"method": "calcCode",
		"code": "(L:Seat2Character, Number) 0 == if{ 2 (>L:Seat2Character, Number) } els{ 0 (>L:Seat2Character, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Seat 3 Toggle": {
		"method": "calcCode",
		"code": "(L:Seat3Character, Number) 0 == if{ 3 (>L:Seat3Character, Number) } els{ 0 (>L:Seat3Character, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Tablet Weight Seat 4 Toggle": {
		"method": "calcCode",
		"code": "(L:Seat4Character, Number) 0 == if{ 4 (>L:Seat4Character, Number) } els{ 0 (>L:Seat4Character, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.Input.PA24 250 Visor Left Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:VisorLeftPercent, number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Left Down": {
		"method": "calcCode",
		"code": "(L:VisorLeftPercent, number) 5 + 100 min (>L:VisorLeftPercent, number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Left Up": {
		"method": "calcCode",
		"code": "(L:VisorLeftPercent, number) 5 - 0 max (>L:VisorLeftPercent, number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.Input.PA24 250 Visor Right Axis": {
		"method": "calcCode",
		"code": "@ 15 - 10.0 / 0 max 100 min (>L:VisorRightPercent, number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Right Down": {
		"method": "calcCode",
		"code": "(L:VisorRightPercent, number) 5 + 100 min (>L:VisorRightPercent, number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Visor Right Up": {
		"method": "calcCode",
		"code": "(L:VisorRightPercent, number) 5 - 0 max (>L:VisorRightPercent, number)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Vor1 Course Dec": {
		"method": "calcCode",
		"code": "1 (>K:VOR1_OBI_DEC)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Vor1 Course Inc": {
		"method": "calcCode",
		"code": "1 (>K:VOR1_OBI_INC)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Vor2 Course Dec": {
		"method": "calcCode",
		"code": "1 (>K:VOR2_OBI_DEC)"
	},
	"A2A SIM.Comanche 250.Navigation.PA24 250 Vor2 Course Inc": {
		"method": "calcCode",
		"code": "1 (>K:VOR2_OBI_INC)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 02 Flaps Right": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_FlapR_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 03 Aileron Right": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_AileronR_Drag, Number) "
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 04 Fuel Tip Right Close": {
		"method": "calcCode",
		"code": "0 (>L:FuelTipTankOpeningRightCap, Bool) 0 (>L:FuelTipTankOpeningRight, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 04 Fuel Tip Right Open": {
		"method": "calcCode",
		"code": "1 (>L:FuelTipTankOpeningRight, Bool) 1 (>L:FuelTipTankOpeningRightCap, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 04 Fuel Tip Toggle": {
		"method": "calcCode",
		"code": "(L:FuelTipTankOpeningRight, Bool) 0 == if{ 1 (>K:PA24-walkaround_04_fuel_tip_right_open) } els{ 1 (>K:PA24-walkaround_04_fuel_tip_right_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 05 Bottle Clear": {
		"method": "calcCode",
		"code": "0 (>L:WALKAROUND_BottleR_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 05 Bottle Fill": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_BottleR_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 05 Bottle Toggle": {
		"method": "calcCode",
		"code": "(L:WALKAROUND_BottleR_Drag, Number) 0 > if{ 0 (>L:WALKAROUND_BottleR_Drag, Number) } els{ 100 (>L:WALKAROUND_BottleR_Drag, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 07 Fix Light R": {
		"method": "calcCode",
		"code": "0 (>L:F_LandingLight2, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 08 Toggle Tiedown": {
		"method": "calcCode",
		"code": "(L:vis_WingRight_TieDown, Bool) ! (>L:vis_WingRight_TieDown, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 09 Fuel Right Close": {
		"method": "calcCode",
		"code": "0 (>L:FuelTankOpeningRightCap, Bool) 0 (>L:FuelTankOpeningRight, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 09 Fuel Right Open": {
		"method": "calcCode",
		"code": "1 (>L:FuelTankOpeningRight, Bool) 1 (>L:FuelTankOpeningRightCap, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 09 Fuel Right Toggle": {
		"method": "calcCode",
		"code": "(L:FuelTankOpeningRight, Bool) 0 == if{ 1 (>K:PA24-walkaround_09_fuel_right_open) } els{ 1 (>K:PA24-walkaround_09_fuel_right_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 10 Wheel Chock Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WheelChockR, Bool) ! (>L:vis_WheelChockR, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 11 Bottle Clear": {
		"method": "calcCode",
		"code": "0 (>L:WALKAROUND_BottleC_Drag, Number) 0 (>L:FuelCheckPanel, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 11 Bottle Fill": {
		"method": "calcCode",
		"code": "1 (>L:FuelCheckPanel, Bool) 100 (>L:WALKAROUND_BottleC_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 11 Bottle Fill And Clear": {
		"method": "calcCode",
		"code": "1 (>K:PA24-walkaround_11_bottle_fill) 1 (>K:PA24-walkaround_11_bottle_clear)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 11 Bottle Toggle": {
		"method": "calcCode",
		"code": "(L:FuelCheckPanel, Bool) 0 == if{ 1 (>K:PA24-walkaround_11_bottle_fill) } els{ 1 (>K:PA24-walkaround_11_bottle_clear) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 12 Rag Clean": {
		"method": "calcCode",
		"code": "0 (>L:F_RagIntake, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 13 Oil Close": {
		"method": "calcCode",
		"code": "0 (>L:OilInspectionStick, Bool) 0 (>L:OilInspectionPanel, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 13 Oil Open": {
		"method": "calcCode",
		"code": "1 (>L:OilInspectionPanel, Bool) 1 (>L:OilInspectionStick, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 13 Oil Toggle": {
		"method": "calcCode",
		"code": "(L:OilInspectionStick, Bool) 0 == if{ 1 (>K:PA24-walkaround_13_oil_open) } els{ 1 (>K:PA24-walkaround_13_oil_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 14 Fuel Left Close": {
		"method": "calcCode",
		"code": "0 (>L:FuelTankOpeningLeftCap, Bool) 0 (>L:FuelTankOpeningLeft, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 14 Fuel Left Open": {
		"method": "calcCode",
		"code": "1 (>L:FuelTankOpeningLeft, Bool) 1 (>L:FuelTankOpeningLeftCap, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 14 Fuel Left Toggle": {
		"method": "calcCode",
		"code": "(L:FuelTankOpeningLeft, Bool) 0 == if{ 1 (>K:PA24-walkaround_14_fuel_left_open) } els{ 1 (>K:PA24-walkaround_14_fuel_left_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 15 Wheel Chock Left Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WheelChockL, Bool) ! (>L:vis_WheelChockL, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 16 Pitot Test Start": {
		"method": "calcCode",
		"code": "1 (>L:PitotHeatCheck, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 16 Pitot Test Stop": {
		"method": "calcCode",
		"code": "0 (>L:PitotHeatCheck, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 16 Stall Warn Test Start": {
		"method": "calcCode",
		"code": "1 (>L:Action_StallWarning,bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 16 Stall Warn Test Stop": {
		"method": "calcCode",
		"code": "0 (>L:Action_StallWarning,bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 16 Tie Pitot Toggle": {
		"method": "calcCode",
		"code": "(L:vis_WingLeft_TieDown, Bool) 0 == if{ 1 (>L:vis_WingLeft_TieDown, Bool) 1 (>L:PitotTubeCover, Bool) } els{ 0 (>L:vis_WingLeft_TieDown, Bool) 0 (>L:PitotTubeCover, Bool) } "
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 17 Fix Light L": {
		"method": "calcCode",
		"code": "0 (>L:F_LandingLight1, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 19 Fuel Tip Left Close": {
		"method": "calcCode",
		"code": "0 (>L:FuelTipTankOpeningLeftCap, Bool) 0 (>L:FuelTipTankOpeningLeft, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 19 Fuel Tip Left Open": {
		"method": "calcCode",
		"code": "1 (>L:FuelTipTankOpeningLeft, Bool) 1 (>L:FuelTipTankOpeningLeftCap, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 19 Fuel Tip Left Toggle": {
		"method": "calcCode",
		"code": "(L:FuelTipTankOpeningLeft, Bool) 0 == if{ 1 (>K:PA24-walkaround_19_fuel_tip_left_open) } els{ 1 (>K:PA24-walkaround_19_fuel_tip_left_close) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 20 Bottle Clear": {
		"method": "calcCode",
		"code": "0 (>L:WALKAROUND_BottleL_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 20 Bottle Fill": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_BottleL_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 20 Bottle Toggle": {
		"method": "calcCode",
		"code": "(L:WALKAROUND_BottleL_Drag, Number) 0 > if{ 0 (>L:WALKAROUND_BottleL_Drag, Number) } els{ 100 (>L:WALKAROUND_BottleL_Drag, Number) }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 21 Aileron Left": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_AileronL_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 22 Flaps Left": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_FlapL_Drag, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 23 Static Port Left Clear": {
		"method": "calcCode",
		"code": "0 (>L:F_StaticPort1, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 24 Rudder Elevator": {
		"method": "calcCode",
		"code": "100 (>L:WALKAROUND_Rudder_Drag, Number) 100 (>L:WALKAROUND_Elevator_Drag, Number) "
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 24 Toggle Tiedown Tail": {
		"method": "calcCode",
		"code": "(L:vis_Tail_TieDown, Bool) ! (>L:vis_Tail_TieDown, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 25 Static Port Right Clear": {
		"method": "calcCode",
		"code": "0 (>L:F_StaticPort2, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround 26 Baggage Door Toggle": {
		"method": "calcCode",
		"code": "(L:WALKAROUND_BaggageDoor_Click, Bool) ! (>L:WALKAROUND_BaggageDoor_Click, Bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround Begin": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround End": {
		"method": "calcCode",
		"code": "1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround Next": {
		"method": "calcCode",
		"code": "(A:CAMERA VIEW TYPE AND INDEX:0, Enum) 2 != (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 < or if{ 2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 29 < if{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 1 + (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ 1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Walkaround Previous": {
		"method": "calcCode",
		"code": "(A:CAMERA VIEW TYPE AND INDEX:0, Enum) 2 != (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 < or if{ 2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 29 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 > if{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 1 - (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ 1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } }"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Left Close": {
		"method": "calcCode",
		"code": "0 (>L:WindowLeft, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Left Open": {
		"method": "calcCode",
		"code": "1 (>L:WindowLeft, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Left Toggle": {
		"method": "calcCode",
		"code": "(L:WindowLeft, bool) ! (>L:WindowLeft, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Right Close": {
		"method": "calcCode",
		"code": "0 (>L:WindowRight, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Right Open": {
		"method": "calcCode",
		"code": "1 (>L:WindowRight, bool)"
	},
	"A2A SIM.Comanche 250.Miscellaneous.PA24 250 Window Right Toggle": {
		"method": "calcCode",
		"code": "(L:WindowRight, bool) ! (>L:WindowRight, bool)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Left Hide": {
		"method": "calcCode",
		"code": "1 (>L:YokeLeftVis, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Left Show": {
		"method": "calcCode",
		"code": "0 (>L:YokeLeftVis, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Left Toggle": {
		"method": "calcCode",
		"code": "(L:YokeLeftVis, Number) ! (>L:YokeLeftVis, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Right Hide": {
		"method": "calcCode",
		"code": "1 (>L:YokeRightVis, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Right Show": {
		"method": "calcCode",
		"code": "0 (>L:YokeRightVis, Number)"
	},
	"A2A SIM.Comanche 250.Controls.PA24 250 Yoke Right Toggle": {
		"method": "calcCode",
		"code": "(L:YokeRightVis, Number) ! (>L:YokeRightVis, Number)"
	},
	"Asobo.B787-10.Hydraulic.Input.HYDRAUL PUMP L ELEC": {
		"method": "calcCode",
		"code": " 0 (>L:XMLVAR_HYDRAULICS_DEMAND_LEFT) "
	},
	"Asobo.B787-10.Hydraulic.Input.HYDRAUL ELEC C1": {
		"method": "calcCode",
		"code": " 0 (>L:XMLVAR_HYDRAULICS_C1) "
	},
	"Black Square.AnalogBonanza.Autopilot.Input.Altitude Selector Mode": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, bool) ! (>L:var_VsAdjustMode, bool)"
	},
	"Black Square.AnalogBonanza.Autopilot.Input.Alt/VS Decrease": {
		"method": "calcCode",
		"code": "A:CIRCUIT ON:61,bool) (L:var_AutopilotTest,bool) ! and if{\n(L:var_VsAdjustMode, bool) if{\n  (A:AUTOPILOT ALTITUDE LOCK, bool) if{\n	(>K:AP_PANEL_ALTITUDE_OFF)\n	(>K:AP_PANEL_VS_ON) }\n  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - \n	-3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) }\nels{ 100 (>K:AP_ALT_VAR_DEC) } } "
	},
	"Black Square.AnalogBonanza.Autopilot.Input.Alt/VS Increase": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:61,bool) (L:var_AutopilotTest,bool) ! and if{\n(L:var_VsAdjustMode, bool) if{\n  (A:AUTOPILOT ALTITUDE LOCK, bool) if{\n	(>K:AP_PANEL_ALTITUDE_OFF)\n	(>K:AP_PANEL_VS_ON) }\n  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + \n	-3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) }\nels{ 100 (>K:AP_ALT_VAR_INC) } } "
	},
	"Fly By Wire.A320-Dev.ECAM.Input (Potentiometer).A32NX ECAM Knob Upper Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 92 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.ECAM.Input (Potentiometer).A32NX ECAM Knob Lower Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 93 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.A32NX OVHD ANN LT STATUS": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_INTLT_ANN)"
	},
	"Fly By Wire.A320.CPDLC.Output.ATC MSG Light": {
		"method": "calcCode",
		"code": "(L:A32NX_DCDU_ATC_MSG_WAITING, bool)"
	},
	"Fly By Wire.A320.CPDLC.Input.ATC MSG Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_DCDU_ATC_MSG_ACK)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 1 LS Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 1 LS Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 2 LS Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 2 LS Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_LS)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 1 FD Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 1 FD Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS1_FD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 2 FD Button Press": {
		"method": "calcCode",
		"code": "1 (>L:S_FCU_EFIS2_FD)"
	},
	"FenixSim.A320.EFIS.Input.FNX320 EFIS 2 FD Button Release": {
		"method": "calcCode",
		"code": "0 (>L:S_FCU_EFIS2_FD)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX OH DOME LIGHT DIM": {
		"method": "calcCode",
		"code": "1 (>K:CABIN_LIGHTS_SET) 20 (>K:LIGHT_POTENTIOMETER_7_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).ELEVATOR SET (analog)": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:ELEVATOR_SET)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 Captain Tablet Home Button Press": {
		"method": "calcCode",
		"code": "(>H:CATabHome)"
	},
	"PMDG.B737-700.Miscellaneous.Input.PMDG B737 FO Tablet Home Button Press": {
		"method": "calcCode",
		"code": "(>H:FOTabHome)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 Autopilot Speed Knob Press": {
		"method": "calcCode",
		"code": "(>H:B747_8_FMC_1_AP_SPEED_INTERVENTION)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Ail Trim Center": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ 0 (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Ail Trim Left": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ (A:AILERON TRIM PCT, percent) 0.2 - 163.83 * 16383 min -16383 max (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Ail Trim Right": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ (A:AILERON TRIM PCT, percent) 0.2 + 163.83 * 16383 min -16383 max (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Radar Alt Ccw": {
		"method": "calcCode",
		"code": "(L:var_copilotDecisionHeight, number) (L:var_copilotDecisionHeight, number) 500 < if{ 5 } els{ 50 } - 0 max (>L:var_copilotDecisionHeight, number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Radar Alt Cw": {
		"method": "calcCode",
		"code": "(L:var_copilotDecisionHeight, number) 500 < if{ 5 } els{ 50 } (L:var_copilotDecisionHeight, number) + 2500 min (>L:var_copilotDecisionHeight, number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Radar Test Press": {
		"method": "calcCode",
		"code": "1 (>L:var_RadarAltimeterTest_IsDown, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Radar Test Release": {
		"method": "calcCode",
		"code": "0 (>L:var_RadarAltimeterTest_IsDown, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Altimeter 2 Dec": {
		"method": "calcCode",
		"code": "2 (L:INSTRUMENT_Altimeter_2, Number) 0.3125 - 914 max 1083 min s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_2)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Altimeter 2 Inc": {
		"method": "calcCode",
		"code": "2 (L:INSTRUMENT_Altimeter_2, Number) 0.3125 + 914 max 1083 min s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_2)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Altimeter Baro Dec": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:70, Bool) (A:KOHLSMAN SETTING HG, inHg) 27.0 > and if{ 1 (>K:KOHLSMAN_DEC) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Altimeter Baro Inc": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:70, Bool) (A:KOHLSMAN SETTING HG, inHg) 32.0 < and if{ 1 (>K:KOHLSMAN_INC) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Altimeter Std Press": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:70, Bool) if{ 1 (>K:BAROMETRIC_STD_PRESSURE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Brightness Bright": {
		"method": "calcCode",
		"code": "0 (>L:var_AnnunciatorDim, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Brightness Dim": {
		"method": "calcCode",
		"code": "1 (>L:var_AnnunciatorDim, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Brightness Toggle": {
		"method": "calcCode",
		"code": "(L:var_AnnunciatorDim, Number) ! (>L:var_AnnunciatorDim, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Test 1 Press": {
		"method": "calcCode",
		"code": "1 (>L:var_AnnunciatorTest1, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Test 1 Release": {
		"method": "calcCode",
		"code": " 0 (>L:var_AnnunciatorTest1, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Test 2 Press": {
		"method": "calcCode",
		"code": "1 (>L:var_AnnunciatorTest2, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Annunciator Test 2 Release": {
		"method": "calcCode",
		"code": "0 (>L:var_AnnunciatorTest2, Number)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Ap Trim Master 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_AutopilotMasterSwitch, Number) 0 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Ap Trim Master 2 Ap Off": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Ap Trim Master 3 On": {
		"method": "calcCode",
		"code": "2 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 0 (>L:var_trimsDisabled, Bool)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Ap Trim Master Move Down": {
		"method": "calcCode",
		"code": "(L:BKSQ_AutopilotMasterSwitch, Number) 2 == if{ 1 (>K:BKSQTbm850-ap_trim_master_2_ap_off) } els{ (L:BKSQ_AutopilotMasterSwitch, Number) 1 == if{ 1 (>K:BKSQTbm850-ap_trim_master_1_off) } }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Ap Trim Master Move Up": {
		"method": "calcCode",
		"code": "(L:BKSQ_AutopilotMasterSwitch, Number) 0 == if{ 1 (>K:BKSQTbm850-ap_trim_master_2_ap_off) } els{ (L:BKSQ_AutopilotMasterSwitch, Number) 1 == if{ 1 (>K:BKSQTbm850-ap_trim_master_3_on) } }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest L Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_Armrest_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest L Down": {
		"method": "calcCode",
		"code": "70 (>L:var_Armrest_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest L Full": {
		"method": "calcCode",
		"code": "100 (>L:var_Armrest_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest L Stowed": {
		"method": "calcCode",
		"code": "0 (>L:var_Armrest_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest L Up": {
		"method": "calcCode",
		"code": "30 (>L:var_Armrest_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest R Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_Armrest_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest R Down": {
		"method": "calcCode",
		"code": "70 (>L:var_Armrest_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest R Full": {
		"method": "calcCode",
		"code": "100 (>L:var_Armrest_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest R Stowed": {
		"method": "calcCode",
		"code": "0 (>L:var_Armrest_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Armrest R Up": {
		"method": "calcCode",
		"code": "30 (>L:var_Armrest_R, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Battery Recharge": {
		"method": "calcCode",
		"code": "30 (>A:ELECTRICAL BATTERY VOLTAGE, Volts)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Battery Recharge 25V": {
		"method": "calcCode",
		"code": "25 (>A:ELECTRICAL BATTERY VOLTAGE, Volts)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Bus Tie Cover Close": {
		"method": "calcCode",
		"code": " 0 (>L:var_EssentialBusTieCover, Bool) 0 (>L:var_EssentialBusTieSwitch, Bool) 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Bus Tie Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:var_EssentialBusTieCover, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Bus Tie Cover Toggle": {
		"method": "calcCode",
		"code": " (L:var_EssentialBusTieCover, Bool) ! s0 (>L:var_EssentialBusTieCover, Bool) 0 (>L:var_EssentialBusTieSwitch, Bool) 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C1 Landing Gear": {
		"method": "calcCode",
		"code": "3 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C2 Flaps": {
		"method": "calcCode",
		"code": "4 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C3 Pitch Trim": {
		"method": "calcCode",
		"code": "5 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C4 Ail Trim": {
		"method": "calcCode",
		"code": "6 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C5 Rudder Trim": {
		"method": "calcCode",
		"code": "7 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R1 C6 Ap Trims": {
		"method": "calcCode",
		"code": "8 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C1 Ess Bus 1": {
		"method": "calcCode",
		"code": "(L:var_EssentialBus1_Breaker, Bool) ! (>L:var_EssentialBus1_Breaker, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C10 Inert Sep": {
		"method": "calcCode",
		"code": "15 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C2 Ess Bus 2": {
		"method": "calcCode",
		"code": "(L:var_EssentialBus2_Breaker, Bool) ! (>L:var_EssentialBus2_Breaker, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C3 Flaps Sig": {
		"method": "calcCode",
		"code": "9 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C4 Ldg Gear Cont": {
		"method": "calcCode",
		"code": "10 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C5 Ldg Gear Sig": {
		"method": "calcCode",
		"code": "11 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C6 Audio Cd": {
		"method": "calcCode",
		"code": "12 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C8 Pitot1 Htr": {
		"method": "calcCode",
		"code": "13 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R2 C9 Pitot2 Stall Htr": {
		"method": "calcCode",
		"code": "14 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C1 Advisory 1": {
		"method": "calcCode",
		"code": "16 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C10 Airframe Deice": {
		"method": "calcCode",
		"code": "25 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C2 Advisory 2": {
		"method": "calcCode",
		"code": "17 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C3 Audio Warn": {
		"method": "calcCode",
		"code": "18 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C4 Ap Disc": {
		"method": "calcCode",
		"code": "19 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C5 Ap Alert": {
		"method": "calcCode",
		"code": "20 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C6 Ap Alt Sel": {
		"method": "calcCode",
		"code": "21 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C7 L Windshield Deice": {
		"method": "calcCode",
		"code": "22 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C8 R Windshield Deice": {
		"method": "calcCode",
		"code": "23 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R3 C9 Prop Deice": {
		"method": "calcCode",
		"code": "24 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C1 Engine Indic 1": {
		"method": "calcCode",
		"code": "26 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C10 Nav": {
		"method": "calcCode",
		"code": "35 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C2 Engine Indic 2": {
		"method": "calcCode",
		"code": "27 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C3 Ignition": {
		"method": "calcCode",
		"code": "28 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C4 Pulse System": {
		"method": "calcCode",
		"code": "29 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C5 Ice Light": {
		"method": "calcCode",
		"code": "30 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C6 Strobe": {
		"method": "calcCode",
		"code": "31 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C7 Landing Light Left": {
		"method": "calcCode",
		"code": "32 17 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C8 Taxi": {
		"method": "calcCode",
		"code": "33 19 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R4 C9 Landing Light Right": {
		"method": "calcCode",
		"code": "34 18 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C1 Cabin Bleed": {
		"method": "calcCode",
		"code": "36 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C10 Cabin": {
		"method": "calcCode",
		"code": "16 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C2 Air Cond": {
		"method": "calcCode",
		"code": "37 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C3 Fuel Gage 1": {
		"method": "calcCode",
		"code": "38 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C4 Fuel Gage 2": {
		"method": "calcCode",
		"code": "39 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C5 Fuel Sel": {
		"method": "calcCode",
		"code": "40 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C6 Aux Boost Pump": {
		"method": "calcCode",
		"code": "41 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C7 Instr": {
		"method": "calcCode",
		"code": "42 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C8 Panel Norm": {
		"method": "calcCode",
		"code": "43 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R5 C9 Panel Emer": {
		"method": "calcCode",
		"code": "44 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C1 Elt": {
		"method": "calcCode",
		"code": "54 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C10 Memory Clock": {
		"method": "calcCode",
		"code": "63 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C2 Esi": {
		"method": "calcCode",
		"code": "55 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C3 Eadi": {
		"method": "calcCode",
		"code": "56 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C4 Gyro": {
		"method": "calcCode",
		"code": "57 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C5 Rmi": {
		"method": "calcCode",
		"code": "58 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C6 Adi 2": {
		"method": "calcCode",
		"code": "59 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C7 Hsi 2": {
		"method": "calcCode",
		"code": "60 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C8 Radio Alti2": {
		"method": "calcCode",
		"code": "61 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R6 C9 Access": {
		"method": "calcCode",
		"code": "62 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C10 Xpndr": {
		"method": "calcCode",
		"code": "71 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C2 Radio Alti 1": {
		"method": "calcCode",
		"code": "64 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C3 28Vdc Plugs": {
		"method": "calcCode",
		"code": "65 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C4 Phone Marker": {
		"method": "calcCode",
		"code": "66 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C5 Gps Nav 1": {
		"method": "calcCode",
		"code": "67 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C6 Gnd Clr": {
		"method": "calcCode",
		"code": "68 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C8 Gps Nav 2": {
		"method": "calcCode",
		"code": "69 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R7 C9 Encod Alti": {
		"method": "calcCode",
		"code": "70 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C10 Radio Fan": {
		"method": "calcCode",
		"code": "83 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C2 Nav 1": {
		"method": "calcCode",
		"code": "74 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C3 Nav 2": {
		"method": "calcCode",
		"code": "75 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C4 Adf": {
		"method": "calcCode",
		"code": "78 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C5 Dme": {
		"method": "calcCode",
		"code": "79 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C6 Tas Taws": {
		"method": "calcCode",
		"code": "80 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C7 Rnav": {
		"method": "calcCode",
		"code": "76 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C8 Wsr Cont": {
		"method": "calcCode",
		"code": "81 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Cb R8 C9 Wsr Trsv": {
		"method": "calcCode",
		"code": "82 12 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Co Pilot Off": {
		"method": "calcCode",
		"code": "0 (>L:var_CrewMusicSwitch, bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Co Pilot On": {
		"method": "calcCode",
		"code": "1 (>L:var_CrewMusicSwitch, bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Co Pilot Toggle": {
		"method": "calcCode",
		"code": "(L:var_CrewMusicSwitch, bool) ! (>L:var_CrewMusicSwitch, bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Axis": {
		"method": "calcCode",
		"code": "@ 511 / 0 max 2 min (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Cutoff": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Idle Hi": {
		"method": "calcCode",
		"code": "2 (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Idle Lo": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Move Backward": {
		"method": "calcCode",
		"code": "(L:BKSQ_ConditionLever, Number) 1 - 0 max (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Condition Move Forward": {
		"method": "calcCode",
		"code": "(L:BKSQ_ConditionLever, Number) 1 + 2 min (>L:BKSQ_ConditionLever, Number)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Config Radio1 Gns530": {
		"method": "calcCode",
		"code": "1 (>L:var_radio1Mode, number) 1 (>L:GTN750_INIT_HIDDEN, Bool) 1 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 0 (>L:AS530_1_HIDDEN, Bool) 1 (>L:KX155B_1_HIDDEN, Bool)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Config Radio1 Gtn750": {
		"method": "calcCode",
		"code": "0 (>L:var_radio1Mode, number) 0 (>L:GTN750_INIT_HIDDEN, Bool) 0 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 1 (>L:AS530_1_HIDDEN, Bool) 1 (>L:KX155B_1_HIDDEN, Bool)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Config Radio1 Kx155": {
		"method": "calcCode",
		"code": "2 (>L:var_radio1Mode, number) 1 (>L:GTN750_INIT_HIDDEN, Bool) 1 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 1 (>L:AS530_1_HIDDEN, Bool) 0 (>L:KX155B_1_HIDDEN, Bool)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Config Radio2 Gns530": {
		"method": "calcCode",
		"code": "0 (>L:var_radio2Mode, number) 1 (>L:AS530_2_HIDDEN, Bool) 0 (>L:KX155B_2_HIDDEN, Bool)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Config Radio2 Kx155": {
		"method": "calcCode",
		"code": "1 (>L:var_radio2Mode, number) 0 (>L:AS530_2_HIDDEN, Bool) 1 (>L:KX155B_2_HIDDEN, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Airframe Off": {
		"method": "calcCode",
		"code": "0 (>L:var_airframeDeice, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Airframe On": {
		"method": "calcCode",
		"code": "1 (>L:var_airframeDeice, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Airframe Toggle": {
		"method": "calcCode",
		"code": "(L:var_airframeDeice, Bool) ! (>L:var_airframeDeice, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Inertial Separator Off": {
		"method": "calcCode",
		"code": "0 (>L:var_InertialSeparatorSwitch, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Inertial Separator On": {
		"method": "calcCode",
		"code": "1 (>L:var_InertialSeparatorSwitch, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Inertial Separator Toggle": {
		"method": "calcCode",
		"code": "(L:var_InertialSeparatorSwitch, Bool) ! (>L:var_InertialSeparatorSwitch, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Lights Test Down": {
		"method": "calcCode",
		"code": "1 (>L:var_SwitchesLightTest_IsDown, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Lights Test Up": {
		"method": "calcCode",
		"code": "0 (>L:var_SwitchesLightTest_IsDown, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 1 Off": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_Pitot_1) 1 0 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 1 On": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_Pitot_1) 1 1 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 1 Toggle": {
		"method": "calcCode",
		"code": "(L:DEICE_Pitot_1) ! s0 (>L:DEICE_Pitot_1) 1 l0 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_Pitot_2) 2 0 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 2 On": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_Pitot_2) 2 1 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Pitot 2 Toggle": {
		"method": "calcCode",
		"code": "(L:DEICE_Pitot_2) ! s0 (>L:DEICE_Pitot_2) 2 l0 (>K:2:PITOT_HEAT_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Left Off": {
		"method": "calcCode",
		"code": "0 (>L:var_windshieldHeatSwitch_L, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Left On": {
		"method": "calcCode",
		"code": "1 (>L:var_windshieldHeatSwitch_L, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Left Toggle": {
		"method": "calcCode",
		"code": "(L:var_windshieldHeatSwitch_L, Bool) ! (>L:var_windshieldHeatSwitch_L, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Right Off": {
		"method": "calcCode",
		"code": "0 (>L:var_windshieldHeatSwitch_R, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Right On": {
		"method": "calcCode",
		"code": "1 (>L:var_windshieldHeatSwitch_R, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Windshield Right Toggle": {
		"method": "calcCode",
		"code": "(L:var_windshieldHeatSwitch_R, Bool) ! (>L:var_windshieldHeatSwitch_R, Bool)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Wing Light Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:WING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Wing Light On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:WING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Anti Ice.BS TBM850 Deice Wing Light Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_WING_1, Number) ! (>K:2:WING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Aft Door Close Button": {
		"method": "calcCode",
		"code": "(A:EXIT OPEN:1, Percent) 50 > (L:var_AftLadder, Bool) ! and 2 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:62, Bool) if{ 1 (>L:var_AftDoorLockedLatching, Bool) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Aft Door Toggle": {
		"method": "calcCode",
		"code": "(L:var_AftDoorLockedLatching, Number) 0 == if{ 1 (>L:var_AftDoorLockedLatching, Number) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } els{ (A:EXIT OPEN:1, Percent) 50 > (L:var_AftLadder, Bool) ! and if{ 1 (>L:var_AftDoorLockedLatching, Number) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Aft Door Toggle Full": {
		"method": "calcCode",
		"code": "(A:EXIT OPEN:1, Percent) 0 == if{ 1 (>K:BKSQTbm850-door_aft_door_open) } els{ 1 (>K:BKSQTbm850-door_aft_door_close) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Aft Ladder Toggle": {
		"method": "calcCode",
		"code": "(L:var_AftLadder, Bool) (A:EXIT OPEN:1, Percent) 30 > (L:var_AftLadder, Bool) ! and or if{ (L:var_AftLadder, Bool) ! (>L:var_AftLadder, Bool) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Aft Latch": {
		"method": "calcCode",
		"code": "(L:var_AftDoorLockedLatching, Number) 2 == (L:var_cabinPressureDifferential, PSI) 0.25 < && if{ 0 (>L:var_AftDoorLockedLatching, Number) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Baggage Nose Close": {
		"method": "calcCode",
		"code": "0 (>L:bksq_BaggageDoor, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Baggage Nose Open": {
		"method": "calcCode",
		"code": "1 (>L:bksq_BaggageDoor, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Baggage Nose Toggle": {
		"method": "calcCode",
		"code": "(L:bksq_BaggageDoor, Bool) ! (>L:bksq_BaggageDoor, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Pilot Door Toggle": {
		"method": "calcCode",
		"code": "(L:var_PilotDoorLockedLatching, Number) 0 == if{ 0 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (>L:var_PilotDoorLockedLatching, Number) } els{ (A:EXIT OPEN:0, Percent) 50 > (L:var_PilotLadder, Bool) ! and if{ 0 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (>L:var_PilotDoorLockedLatching, Number) } }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Pilot Door Toggle Full": {
		"method": "calcCode",
		"code": "(A:EXIT OPEN:0, Percent) 0 == if{ 1 (>K:BKSQTbm850-door_pilot_door_open) } els{ 1 (>K:BKSQTbm850-door_pilot_door_close) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Door Pilot Latch": {
		"method": "calcCode",
		"code": "(L:var_PilotDoorLockedLatching, Number) 2 == (L:var_cabinPressureDifferential, PSI) 0.25 < && if{ 0 (>L:var_PilotDoorLockedLatching, Number) }"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Brightness 0": {
		"method": "calcCode",
		"code": "0 (>L:var_EADI_Brightness, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Brightness 100": {
		"method": "calcCode",
		"code": "100 (>L:var_EADI_Brightness, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Brightness Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_EADI_Brightness, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Brightness Dec": {
		"method": "calcCode",
		"code": "(L:var_EADI_Brightness, Number) 5 - 0 max (>L:var_EADI_Brightness, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Brightness Inc": {
		"method": "calcCode",
		"code": "(L:var_EADI_Brightness, Number) 5 + 100 min (>L:var_EADI_Brightness, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Eadi Test Press": {
		"method": "calcCode",
		"code": "1 (>H:EADI_TestButton)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Condition Fan": {
		"method": "calcCode",
		"code": "1 (>L:var_airconState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Condition Move Down": {
		"method": "calcCode",
		"code": "(L:var_airconState, Number) 1 - 0 max (>L:var_airconState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Condition Move Up": {
		"method": "calcCode",
		"code": "(L:var_airconState, Number) 1 + 2 min (>L:var_airconState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Condition Off": {
		"method": "calcCode",
		"code": "0 (>L:var_airconState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Condition On": {
		"method": "calcCode",
		"code": "2 (>L:var_airconState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:var_PressurizationDumpCover, Bool) 0 (>L:var_PressurizationDump, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:var_PressurizationDumpCover, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Cover Toggle": {
		"method": "calcCode",
		"code": "(L:var_PressurizationDumpCover, Bool) ! (>L:var_PressurizationDumpCover, Bool) 0 (>L:var_PressurizationDump, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Switch Off": {
		"method": "calcCode",
		"code": "0 (>L:var_PressurizationDump, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Switch On": {
		"method": "calcCode",
		"code": "(L:var_PressurizationDumpCover, Bool) if{ 1 (>L:var_PressurizationDump, Bool) }"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Dump Switch Toggle": {
		"method": "calcCode",
		"code": "(L:var_PressurizationDumpCover, Bool) if{ (L:var_PressurizationDump, Bool) ! (>L:var_PressurizationDump, Bool) }"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Fan Flow Auto": {
		"method": "calcCode",
		"code": "1 (>L:var_FanSwitch, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Fan Flow Lo": {
		"method": "calcCode",
		"code": "0 (>L:var_FanSwitch, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Fan Flow Toggle": {
		"method": "calcCode",
		"code": "(L:var_FanSwitch, Bool) ! (>L:var_FanSwitch, Bool)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Flow Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_AirFlowSelectorKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Flow Full": {
		"method": "calcCode",
		"code": "100 (>L:var_AirFlowSelectorKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Flow Inc": {
		"method": "calcCode",
		"code": "(L:var_AirFlowSelectorKnob, Number) 1 + 100 min (>L:var_AirFlowSelectorKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Air Flow Off": {
		"method": "calcCode",
		"code": "0 (>L:var_AirFlowSelectorKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Air Valve Auto": {
		"method": "calcCode",
		"code": "1 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Air Valve Hi": {
		"method": "calcCode",
		"code": "2 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Air Valve Move Down": {
		"method": "calcCode",
		"code": "(L:var_bleedState, Number) 1 - 0 max (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Air Valve Move Up": {
		"method": "calcCode",
		"code": "(L:var_bleedState, Number) 1 + 2 min (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Air Valve Off": {
		"method": "calcCode",
		"code": "0 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Auto": {
		"method": "calcCode",
		"code": "1 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Hi": {
		"method": "calcCode",
		"code": "2 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Move Down": {
		"method": "calcCode",
		"code": "(L:var_bleedState, Number) 1 - 0 max (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Move Up": {
		"method": "calcCode",
		"code": "(L:var_bleedState, Number) 1 + 2 min (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Bleed Off Reset": {
		"method": "calcCode",
		"code": "0 (>L:var_bleedState, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Goal 0": {
		"method": "calcCode",
		"code": "0 (>L:var_pressurizationGoal, FT)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Goal 2000": {
		"method": "calcCode",
		"code": "2000 (>L:var_pressurizationGoal, FT)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Goal Axis": {
		"method": "calcCode",
		"code": "@ 10.7527 * 500 - -500 max 10500 min (>L:var_pressurizationGoal, FT)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Goal Dec": {
		"method": "calcCode",
		"code": "(L:var_pressurizationGoal, FT) 100 - -500 max (>L:var_pressurizationGoal, FT)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Goal Inc": {
		"method": "calcCode",
		"code": "(L:var_pressurizationGoal, FT) 100 + -500 max 10500 min (>L:var_pressurizationGoal, FT)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate Axis": {
		"method": "calcCode",
		"code": "@ 1.8084 * 150 + 150 max 2000 min (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate Dec": {
		"method": "calcCode",
		"code": "(L:var_pressurizationClimbRate, Number) 50 - 150 max (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate High": {
		"method": "calcCode",
		"code": "2000 (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate Inc": {
		"method": "calcCode",
		"code": "(L:var_pressurizationClimbRate, Number) 50 + 2000 min (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate Low": {
		"method": "calcCode",
		"code": "150 (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Press Rate Mid": {
		"method": "calcCode",
		"code": "1050 (>L:var_pressurizationClimbRate, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp 15": {
		"method": "calcCode",
		"code": "60 (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp 20": {
		"method": "calcCode",
		"code": "70 (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp 25": {
		"method": "calcCode",
		"code": "80 (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp Axis": {
		"method": "calcCode",
		"code": "@ 51.15 / 60 +  60 max 80 min (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp Dec": {
		"method": "calcCode",
		"code": "(L:var_CabinTemperatureKnob, Number) 1 - 60 max (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Cabin Temp Inc": {
		"method": "calcCode",
		"code": "(L:var_CabinTemperatureKnob, Number) 1 + 80 min (>L:var_CabinTemperatureKnob, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Light Test Down": {
		"method": "calcCode",
		"code": "1 (>L:var_EnvironmentalLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Air Condition and Pressurization.BS TBM850 Ecs Light Test Release": {
		"method": "calcCode",
		"code": "0 (>L:var_EnvironmentalLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Alt Mode Dh Set": {
		"method": "calcCode",
		"code": "0 (>L:var_efisDecisionHeightTest, bool) 1 (>L:var_efisDecisionHeightSet, bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Alt Mode Norm": {
		"method": "calcCode",
		"code": "0 (>L:var_efisDecisionHeightTest, bool) 0 (>L:var_efisDecisionHeightSet, bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Alt Mode Test": {
		"method": "calcCode",
		"code": "1 (>L:var_efisDecisionHeightTest, bool) 1 (>L:var_efisDecisionHeightSet, bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Brightness 0": {
		"method": "calcCode",
		"code": "0 (>L:var_EHSI_Brightness, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Brightness 100": {
		"method": "calcCode",
		"code": "100 (>L:var_EHSI_Brightness, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Brightness Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_EHSI_Brightness, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Brightness Dec": {
		"method": "calcCode",
		"code": "(L:var_EHSI_Brightness, Number) 5 - 0 max (>L:var_EHSI_Brightness, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Brightness Inc": {
		"method": "calcCode",
		"code": "(L:var_EHSI_Brightness, Number) 5 + 100 min (>L:var_EHSI_Brightness, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Arc Mode": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_ArcMode)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Bearing Pointer 1": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_SolidBearing)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Bearing Pointer 2": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_HollowBearing)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Hsi Mode": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_HsiMode)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Nav Source": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_NavSource)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Range Dec": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_RangeDown)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Range Inc": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_RangeUp)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn Ref Tst": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_TestReference)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Btn System Source": {
		"method": "calcCode",
		"code": "1 (>H:EHSI_SystemSource)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Composite Toggle": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:56, Bool) (A:CIRCUIT ON:55, Bool) or if{ (L:var_EfisCompositeMode, Bool) ! (>L:var_EfisCompositeMode, Bool) }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Course Ccw": {
		"method": "calcCode",
		"code": "(L:EFIS_NavigationSource, Number) 0 == if{ 1 (>K:VOR1_OBI_DEC) } els{ (L:EFIS_NavigationSource, Number) 1 == if{ 1 (>K:VOR2_OBI_DEC) } els{ (L:EFIS_NavigationSource, Number) 3 == if{ (L:var_RNAV_OBS, Number) 1 - dnor (>L:var_RNAV_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 4 == if{ (L:var_MLS_OBS, Number) 1 - dnor (>L:var_MLS_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 5 == if{ (L:var_ADF_OBS, Number) 1 - dnor (>L:var_ADF_OBS, number) } } } } }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Course Cw": {
		"method": "calcCode",
		"code": "(L:EFIS_NavigationSource, Number) 0 == if{ 1 (>K:VOR1_OBI_INC) } els{ (L:EFIS_NavigationSource, Number) 1 == if{ 1 (>K:VOR2_OBI_INC) } els{ (L:EFIS_NavigationSource, Number) 3 == if{ (L:var_RNAV_OBS, Number) 1 + 360 % (>L:var_RNAV_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 4 == if{ (L:var_MLS_OBS, Number) 1 + 360 % (>L:var_MLS_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 5 == if{ (L:var_ADF_OBS, Number) 1 + 360 % (>L:var_ADF_OBS, number) } } } } }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dh Dec": {
		"method": "calcCode",
		"code": "(L:var_efisDecisionHeightSet, bool) (L:var_efisDecisionHeightTest, bool) or (A:RADIO HEIGHT, Feet) 2500 < (A:RADIO HEIGHT, Feet) 5 > and or (A:CIRCUIT ON:56, bool) and (A:DECISION HEIGHT, feet) 0 > and if{ 10 (>K:DECREASE_DECISION_HEIGHT) }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dh Inc": {
		"method": "calcCode",
		"code": "(L:var_efisDecisionHeightSet, bool) (L:var_efisDecisionHeightTest, bool) or (A:RADIO HEIGHT, Feet) 2500 < (A:RADIO HEIGHT, Feet) 5 > and or (A:CIRCUIT ON:56, bool) and (A:DECISION HEIGHT, feet) 2500 < and if{ 10 (>K:INCREASE_DECISION_HEIGHT) }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dme Mode Hld": {
		"method": "calcCode",
		"code": "1 (>L:var_efisDmeMode, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dme Mode Move Left": {
		"method": "calcCode",
		"code": "(L:var_efisDmeMode, Number) 1 - 0 max (>L:var_efisDmeMode, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dme Mode Move Right": {
		"method": "calcCode",
		"code": "(L:var_efisDmeMode, Number) 1 + 2 min (>L:var_efisDmeMode, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dme Mode N1": {
		"method": "calcCode",
		"code": "0 (>L:var_efisDmeMode, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Dme Mode N2": {
		"method": "calcCode",
		"code": "2 (>L:var_efisDmeMode, Number)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Master Off": {
		"method": "calcCode",
		"code": "0 (>L:var_EFIS_PowerSwitch, Bool) 0 (>A:CIRCUIT SWITCH ON:56, Bool) 0 (>A:CIRCUIT SWITCH ON:55, Bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Master On": {
		"method": "calcCode",
		"code": "1 (>L:var_EFIS_PowerSwitch, Bool) 1 (>A:CIRCUIT SWITCH ON:56, Bool) 1 (>A:CIRCUIT SWITCH ON:55, Bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Master Toggle": {
		"method": "calcCode",
		"code": "(L:var_EFIS_PowerSwitch, Bool) if{ 1 (>K:BKSQTbm850-efis_master_off) } els{ 1 (>K:BKSQTbm850-efis_master_on) }"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Source Left": {
		"method": "calcCode",
		"code": "0 (>L:var_efisSource, Bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Source Right": {
		"method": "calcCode",
		"code": "1 (>L:var_efisSource, Bool)"
	},
	"Black Square.TBM850.EFIS.BS TBM850 Efis Source Toggle": {
		"method": "calcCode",
		"code": "(L:var_efisSource, Bool) ! (>L:var_efisSource, Bool)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover L Close": {
		"method": "calcCode",
		"code": "(L:var_EngineCover_L, Number) 1 == if{ 1 (>L:var_RudderPedalAdjustment_L, Number) }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover L Open": {
		"method": "calcCode",
		"code": "(L:var_EngineCover_L, Number) 1 != if{ 1 (>L:var_RudderPedalAdjustment_L, Number) }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover L Toggle": {
		"method": "calcCode",
		"code": "1 (>L:var_RudderPedalAdjustment_L, Number)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover R Close": {
		"method": "calcCode",
		"code": "(L:var_EngineCover_R, Number) 1 == if{ 1 (>L:var_RudderPedalAdjustment_R, Number) }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover R Open": {
		"method": "calcCode",
		"code": "(L:var_EngineCover_R, Number) 1 != if{ 1 (>L:var_RudderPedalAdjustment_R, Number) }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Engine Cover R Toggle": {
		"method": "calcCode",
		"code": "1 (>L:var_RudderPedalAdjustment_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Clock Reset": {
		"method": "calcCode",
		"code": "1 (>H:Etm_ClockReset)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Clock Start": {
		"method": "calcCode",
		"code": "1 (>H:Etm_ClockStart)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Clock Stop": {
		"method": "calcCode",
		"code": "1 (>H:Etm_ClockStop)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Dec": {
		"method": "calcCode",
		"code": "1 (>H:Etm_Dec)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Enter Test": {
		"method": "calcCode",
		"code": "1 (>H:Etm_EnterTest)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Inc": {
		"method": "calcCode",
		"code": "1 (>H:Etm_Inc)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Airdata": {
		"method": "calcCode",
		"code": "3 (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Etm": {
		"method": "calcCode",
		"code": "0 (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Fuel": {
		"method": "calcCode",
		"code": "2 (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Nav": {
		"method": "calcCode",
		"code": "1 (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Turn Ccw": {
		"method": "calcCode",
		"code": "(L:var_EtmMode, Number) 1 - 0 max (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Mode Turn Cw": {
		"method": "calcCode",
		"code": "(L:var_EtmMode, Number) 1 + 3 min (>L:var_EtmMode, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Page Down": {
		"method": "calcCode",
		"code": "1 (>H:Etm_PageDown)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Page Up": {
		"method": "calcCode",
		"code": "1 (>H:Etm_PageUp)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Etm Btn Record": {
		"method": "calcCode",
		"code": "1 (>H:Etm_Record)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Exterior Wheel Chocks Off": {
		"method": "calcCode",
		"code": "0 (>L:bksq_WheelChocks, bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Exterior Wheel Chocks On": {
		"method": "calcCode",
		"code": "1 (>L:bksq_WheelChocks, bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Exterior Wheel Chocks Toggle": {
		"method": "calcCode",
		"code": "(L:bksq_WheelChocks, bool) ! (>L:bksq_WheelChocks, bool)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps 850": {
		"method": "calcCode",
		"code": "1 (>L:var_850Mode, Number) 0 (>A:FLAPS HANDLE INDEX:1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Landing": {
		"method": "calcCode",
		"code": "0 (>L:var_850Mode, Number) 2 (>A:FLAPS HANDLE INDEX:1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Lever": {
		"method": "calcCode",
		"code": "(L:BKSQTbm850-flaps_lever) 0 == if{ 1 (>K:BKSQTbm850-flaps_850) } (L:BKSQTbm850-flaps_lever) 1 == if{ 1 (>K:BKSQTbm850-flaps_up) } (L:BKSQTbm850-flaps_lever) 2 == if{ 1 (>K:BKSQTbm850-flaps_take_off) } (L:BKSQTbm850-flaps_lever) 3 == if{ 1 (>K:BKSQTbm850-flaps_landing) }"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Move Backward": {
		"method": "calcCode",
		"code": "(L:var_850Mode, Number) if{ 0 (>L:var_850Mode, Number) } els{ (A:FLAPS HANDLE INDEX:1, Number) 1 + 2 min (>A:FLAPS HANDLE INDEX:1, Number) }"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Move Forward": {
		"method": "calcCode",
		"code": "(A:FLAPS HANDLE INDEX:1, Number) 0 == if{ 1 (>L:var_850Mode, Number) } (A:FLAPS HANDLE INDEX:1, Number) d 1 - 0 max (>A:FLAPS HANDLE INDEX:1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Take Off": {
		"method": "calcCode",
		"code": "0 (>L:var_850Mode, Number) 1 (>A:FLAPS HANDLE INDEX:1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Flaps Up": {
		"method": "calcCode",
		"code": "0 (>L:var_850Mode, Number) 0 (>A:FLAPS HANDLE INDEX:1, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Pump Aux Auto": {
		"method": "calcCode",
		"code": "2 (>L:BKSQ_fuelPumpSwitch, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Pump Aux Move Down": {
		"method": "calcCode",
		"code": "(L:BKSQ_fuelPumpSwitch, Number) 1 - 0 max (>L:BKSQ_fuelPumpSwitch, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Pump Aux Move Up": {
		"method": "calcCode",
		"code": "(L:BKSQ_fuelPumpSwitch, Number) 1 + 2 min (>L:BKSQ_fuelPumpSwitch, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Pump Aux Off": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_fuelPumpSwitch, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Pump Aux On": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_fuelPumpSwitch, Number)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Selector Auto": {
		"method": "calcCode",
		"code": "1 d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Selector Auto Toggle": {
		"method": "calcCode",
		"code": "(L:var_AutoFuelSelectorSwitch, Bool) ! d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Selector Manual": {
		"method": "calcCode",
		"code": "0 d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Shift Press": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:40, Bool) if{ (A:FUEL TANK SELECTOR:1, Enum) 0 != if{ 0 (>L:var_FuelStopDown, Bool) (A:FUEL TANK SELECTOR:1, Enum) 19 == if{ 1 (>K:FUEL_SELECTOR_RIGHT_MAIN) } els{ (A:FUEL TANK SELECTOR:1, Enum) 20 == if{ 1 (>K:FUEL_SELECTOR_LEFT_MAIN) } } (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_fuelSelectTimer, Number) } els{ 600 (>L:var_fuelSelectTimer, Number) } } }"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Tank Selector Off": {
		"method": "calcCode",
		"code": "1 (>L:var_FuelStopDown, bool) 1 (>K:FUEL_SELECTOR_OFF)"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Tank Selector Turn Left": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) 0 == if{ 1 (>K:BKSQTbm850-fuel_tank_selector_right) } els{ 1 (>K:BKSQTbm850-fuel_tank_selector_left) }"
	},
	"Black Square.TBM850.Fuel.BS TBM850 Fuel Tank Selector Turn Right": {
		"method": "calcCode",
		"code": "(A:FUEL TANK SELECTOR:1, Enum) 19 == if{ 1 (>K:BKSQTbm850-fuel_tank_selector_right) } els{ 1 (>K:BKSQTbm850-fuel_tank_selector_off) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gps Message 1 Press": {
		"method": "calcCode",
		"code": "2 (>L:var_gpsMessageButton1Latching, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gps Message 2 Press": {
		"method": "calcCode",
		"code": "2 (>L:var_gpsMessageButton2Latching, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gyro Adjust Ccw": {
		"method": "calcCode",
		"code": "(L:var_GyroSlaveModeSwitch, Bool) (A:CIRCUIT ON:57, Bool) and if{ 1 (>K:GYRO_DRIFT_INC) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gyro Adjust Cw": {
		"method": "calcCode",
		"code": "(L:var_GyroSlaveModeSwitch, Bool) (A:CIRCUIT ON:57, Bool) and if{ 1 (>K:GYRO_DRIFT_DEC) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gyro Mode Free": {
		"method": "calcCode",
		"code": "1 (>L:var_GyroSlaveModeSwitch, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gyro Mode Slave": {
		"method": "calcCode",
		"code": "0 (>L:var_GyroSlaveModeSwitch, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Gyro Mode Toggle": {
		"method": "calcCode",
		"code": "(L:var_GyroSlaveModeSwitch, Bool) ! (>L:var_GyroSlaveModeSwitch, Bool)"
	},
	"Black Square.TBM850.Engine.Input.BS TBM850 Itt Test Down": {
		"method": "calcCode",
		"code": "1 (>L:var_TurbineTempTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Engine.Input.BS TBM850 Itt Test Release": {
		"method": "calcCode",
		"code": "0 (>L:var_TurbineTempTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Alt Dec 100": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>K:BKSQTbm850-KAS297B_altSel_mode_alt_press) } \n1 (>K:BKSQTbm850-KAS297B_altSel_inner_ccw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Alt Dec 1000": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>K:BKSQTbm850-KAS297B_altSel_mode_alt_press) } \n1 (>K:BKSQTbm850-KAS297B_altSel_outer_ccw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Alt Inc 100": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>L:var_VsAdjustMode, Bool) } \n1 (>K:BKSQTbm850-KAS297B_altSel_inner_cw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Alt Inc 1000": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>L:var_VsAdjustMode, Bool) } \n1 (>K:BKSQTbm850-KAS297B_altSel_outer_cw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Inner Ccw": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 1 (>K:AP_PANEL_ALTITUDE_OFF) 1 (>K:AP_PANEL_VS_ON) } 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - -3000 max (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 0 > if{ 100 (>K:AP_ALT_VAR_DEC) } } }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Inner Cw": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 1 (>K:AP_PANEL_ALTITUDE_OFF) 1 (>K:AP_PANEL_VS_ON) } 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 34900 < if{ 100 (>K:AP_ALT_VAR_INC) } } }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Mode Alt Press": {
		"method": "calcCode",
		"code": "0 (>L:var_VsAdjustMode, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Mode Toggle": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) ! (>L:var_VsAdjustMode, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Mode Vs Pull": {
		"method": "calcCode",
		"code": "1 (>L:var_VsAdjustMode, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Outer Ccw": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 1000 - -3000 max (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 900 > if{ 1000 (>K:AP_ALT_VAR_DEC) } } }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Altsel Outer Cw": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 1000 + 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 34000 < if{ 1000 (>K:AP_ALT_VAR_INC) } } }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Btn Arm Press": {
		"method": "calcCode",
		"code": "1 (>K:AP_PANEL_VS_HOLD)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Btn Eng Press": {
		"method": "calcCode",
		"code": "1 (>K:AP_PANEL_VS_HOLD)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Vs Dec 100": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_ccw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Vs Dec 1000": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_ccw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Vs Inc 100": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_cw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kas297B Vs Inc 1000": {
		"method": "calcCode",
		"code": "(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_cw)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode Hld": {
		"method": "calcCode",
		"code": "2 (>L:var_dmeMode, Number) 1 (>H:dmeMode2)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode N1": {
		"method": "calcCode",
		"code": "1 (>L:var_dmeMode, Number) 1 (>H:dmeMode1)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode N2": {
		"method": "calcCode",
		"code": "3 (>L:var_dmeMode, Number) 1 (>H:dmeMode3)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode Off": {
		"method": "calcCode",
		"code": "0 (>L:var_dmeMode, Number) 1 (>H:dmeMode0)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode Turn Ccw": {
		"method": "calcCode",
		"code": "(L:var_dmeMode, Number) 1 - 0 max s0 (>L:var_dmeMode, Number) l0 0 == if{ 1 (>H:dmeMode0) } l0 1 == if{ 1 (>H:dmeMode1) } l0 2 == if{ 1 (>H:dmeMode2) } l0 3 == if{ 1 (>H:dmeMode3) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kdi572 Dme Mode Turn Cw": {
		"method": "calcCode",
		"code": "(L:var_dmeMode, Number) 1 + 3 min s0 (>L:var_dmeMode, Number) l0 0 == if{ 1 (>H:dmeMode0) } l0 1 == if{ 1 (>H:dmeMode1) } l0 2 == if{ 1 (>H:dmeMode2) } l0 3 == if{ 1 (>H:dmeMode3) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Alt": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_ALT_HOLD) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Ap": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ (A:AUTOPILOT MASTER, Bool) if{ 1 (>K:AP_MASTER) (A:AUTOPILOT YAW DAMPER, Bool) if{ 1 (>K:YAW_DAMPER_TOGGLE) } } els{ 1 (>K:AP_MASTER) } }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Apr": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_APR_HOLD) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Bc": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_BC_HOLD) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Dn": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_VS_VAR_DEC) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Fd": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Half Bank": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ (A:AUTOPILOT MAX BANK ID, Number) 1 < if{ 1 (>K:AP_MAX_BANK_SET) } els{ 0 (>K:AP_MAX_BANK_SET) } }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Hdg": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_PANEL_HEADING_HOLD) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Ias": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Nav": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_NAV1_HOLD) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Soft Ride": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ (L:var_autopilotSoftRideMode, Bool) ! (>L:var_autopilotSoftRideMode, Bool) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Test": {
		"method": "calcCode",
		"code": "10 (A:SIM ON GROUND, Bool) 35 * + (>L:var_AutopilotStartupCounter, Number)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Up": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_VS_VAR_INC) }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Kfc325 Yd": {
		"method": "calcCode",
		"code": "(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:YAW_DAMPER_TOGGLE) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Dme": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_dmeHoldButton) (L:var_RNAV_DMEHOLDE, Bool) ! (>L:var_RNAV_DMEHOLDE, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Mode Left Vor": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_vorModeButton)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Mode Right Rnav": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_rnavModeButton)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Req Rad Dist": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_dataButton)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Waypoint Left Use": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_useButton)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Btn Waypoint Right Display": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_displayButton)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Inner Ccw": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_smallDec)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Inner Cw": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_smallInc)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Inner Pull": {
		"method": "calcCode",
		"code": "1 (>L:var_rnavKnobPulled, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Inner Press": {
		"method": "calcCode",
		"code": "0 (>L:var_rnavKnobPulled, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Inner Toggle": {
		"method": "calcCode",
		"code": "(L:var_rnavKnobPulled, Bool) ! (>L:var_rnavKnobPulled, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Outer Ccw": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_bigDec)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Knob Outer Cw": {
		"method": "calcCode",
		"code": "1 (>H:KNS80_bigInc)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Vol Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / near 0 max 100 min s0 (>L:var_RNAV_VOLUME, Number) l0 0 != (>A:CIRCUIT SWITCH ON:76, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Vol Dec": {
		"method": "calcCode",
		"code": "(L:var_RNAV_VOLUME, Number) 5 - 0 max s0 (>L:var_RNAV_VOLUME, Number) l0 0 != (>A:CIRCUIT SWITCH ON:76, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kns80 Vol Inc": {
		"method": "calcCode",
		"code": "(L:var_RNAV_VOLUME, Number) 5 + 100 min s0 (>L:var_RNAV_VOLUME, Number) l0 0 != (>A:CIRCUIT SWITCH ON:76, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Kx155B 1 Spacing Toggle": {
		"method": "calcCode",
		"code": "1 (>H:RADIO1_COM_Freq_Spacing_press)"
	},
	"Black Square.TBM850.Gear.BS TBM850 Landing Gear Down Check Down": {
		"method": "calcCode",
		"code": "1 (>L:var_landingGearDownCheck, Number)"
	},
	"Black Square.TBM850.Gear.BS TBM850 Landing Gear Down Check Release": {
		"method": "calcCode",
		"code": "0 (>L:var_landingGearDownCheck, Number)"
	},
	"Black Square.TBM850.Gear.BS TBM850 Landing Gear Light Test Down": {
		"method": "calcCode",
		"code": "1 (>L:var_landingGearLightTestIlluminate, Number)"
	},
	"Black Square.TBM850.Gear.BS TBM850 Landing Gear Light Test Release": {
		"method": "calcCode",
		"code": "0 (>L:var_landingGearLightTestIlluminate, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Access Off": {
		"method": "calcCode",
		"code": "0 (>L:var_AccessLights_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Access On": {
		"method": "calcCode",
		"code": "1 (>L:var_AccessLights_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Access Toggle": {
		"method": "calcCode",
		"code": "(L:var_AccessLights_Button, Bool) ! (>L:var_AccessLights_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Aft L Toggle": {
		"method": "calcCode",
		"code": "(L:var_CabinLights_Aft_L_Button, Bool) ! (>L:var_CabinLights_Aft_L_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Aft R Toggle": {
		"method": "calcCode",
		"code": "(L:var_CabinLights_Aft_R_Button, Bool) ! (>L:var_CabinLights_Aft_R_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Middle L Toggle": {
		"method": "calcCode",
		"code": "(L:var_CabinLights_Middle_L_Button, Bool) ! (>L:var_CabinLights_Middle_L_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Middle R Toggle": {
		"method": "calcCode",
		"code": "(L:var_CabinLights_Middle_R_Button, Bool) ! (>L:var_CabinLights_Middle_R_Button, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Status": {
		"method": "calcCode",
		"code": " 16 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:15, Bool) (>L:var_CabinLightstatus, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Cabin Toggle": {
		"method": "calcCode",
		"code": "16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Instrument Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_InstrumentLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Instrument Dec": {
		"method": "calcCode",
		"code": "(L:var_InstrumentLightingKnob, number) 4 - 0 max (>L:var_InstrumentLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Instrument Inc": {
		"method": "calcCode",
		"code": "(L:var_InstrumentLightingKnob, number) 4 + 100 min (>L:var_InstrumentLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Instrument Off": {
		"method": "calcCode",
		"code": "0 (>L:var_InstrumentLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Instrument On": {
		"method": "calcCode",
		"code": "100 (>L:var_InstrumentLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Panel Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_PanelLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Panel Dec": {
		"method": "calcCode",
		"code": "(L:var_PanelLightingKnob, number) 4 - 0 max (>L:var_PanelLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Panel Inc": {
		"method": "calcCode",
		"code": "(L:var_PanelLightingKnob, number) 4 + 100 min (>L:var_PanelLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Panel Off": {
		"method": "calcCode",
		"code": "0 (>L:var_PanelLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Panel On": {
		"method": "calcCode",
		"code": "100 (>L:var_PanelLightingKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Left Off": {
		"method": "calcCode",
		"code": "0 (>L:var_ReadingLightSwitch_L, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Left On": {
		"method": "calcCode",
		"code": "1 (>L:var_ReadingLightSwitch_L, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Left Toggle": {
		"method": "calcCode",
		"code": "(L:var_ReadingLightSwitch_L, Bool) ! (>L:var_ReadingLightSwitch_L, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Right Off": {
		"method": "calcCode",
		"code": "0 (>L:var_ReadingLightSwitch_R, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Right On": {
		"method": "calcCode",
		"code": "1 (>L:var_ReadingLightSwitch_R, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Light Int Reading Right Toggle": {
		"method": "calcCode",
		"code": "(L:var_ReadingLightSwitch_R, Bool) ! (>L:var_ReadingLightSwitch_R, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Manual Override Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_emergencyPowerLeverPosition, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Manual Override Dec": {
		"method": "calcCode",
		"code": "(L:var_emergencyPowerLeverPosition, Number) 5 - 0 max (>L:var_emergencyPowerLeverPosition, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Manual Override Full": {
		"method": "calcCode",
		"code": "100 (>L:var_emergencyPowerLeverPosition, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Manual Override Inc": {
		"method": "calcCode",
		"code": "(L:var_emergencyPowerLeverPosition, Number) 5 + 100 min (>L:var_emergencyPowerLeverPosition, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Manual Override Off": {
		"method": "calcCode",
		"code": "0 (>L:var_emergencyPowerLeverPosition, Number)"
	},
	"Black Square.TBM850.Warning.BS TBM850 Master Caution Press": {
		"method": "calcCode",
		"code": "2 (>L:var_masterCautionLatching, Number)"
	},
	"Black Square.TBM850.Warning.BS TBM850 Master Warning Press": {
		"method": "calcCode",
		"code": "2 (>L:var_masterWarningLatching, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:var_MaskMicCover, Bool) 0 (>L:var_MaskMicSwitch, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:var_MaskMicCover, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Cover Toggle": {
		"method": "calcCode",
		"code": "(L:var_MaskMicCover, Bool) ! (>L:var_MaskMicCover, Bool) 0 (>L:var_MaskMicSwitch, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Switch Mask": {
		"method": "calcCode",
		"code": "(L:var_MaskMicCover, Bool) if{ 1 (>L:var_MaskMicSwitch, Bool) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Switch Mask Force": {
		"method": "calcCode",
		"code": "1 (>L:var_MaskMicCover, Bool) 1 (>L:var_MaskMicSwitch, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Switch Norm": {
		"method": "calcCode",
		"code": "0 (>L:var_MaskMicSwitch, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Switch Toggle": {
		"method": "calcCode",
		"code": "(L:var_MaskMicCover, Bool) if{ (L:var_MaskMicSwitch, Bool) ! (>L:var_MaskMicSwitch, Bool) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Microphone Switch Toggle Force": {
		"method": "calcCode",
		"code": "(L:var_MaskMicCover, Bool) ! if{ 1 (>L:var_MaskMicCover, Bool) } \n(L:var_MaskMicSwitch, Bool) ! (>L:var_MaskMicSwitch, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Crash Bar Down": {
		"method": "calcCode",
		"code": "0 (>L:var_crashbar, bool) 0 (>L:BKSQ_SourceSwitch, Number) 0 (>L:BKSQ_GeneratorSwitch, Number) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Crash Bar Toggle": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) 0 == if{ 1 (>K:BKSQTbm850-oh_crash_bar_up) } els{ 1 (>K:BKSQTbm850-oh_crash_bar_down) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Crash Bar Up": {
		"method": "calcCode",
		"code": "1 (>L:var_crashbar, bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) ! if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Generator Main": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 1 (>L:BKSQ_GeneratorSwitch, Number) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Generator Move Down": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ (L:BKSQ_GeneratorSwitch, Number) 1 - 0 max (>L:BKSQ_GeneratorSwitch, Number) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Generator Move Up": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ (L:BKSQ_GeneratorSwitch, Number) 1 + 2 min (>L:BKSQ_GeneratorSwitch, Number) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Generator Off": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 0 (>L:BKSQ_GeneratorSwitch, Number) }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Generator Stby": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 2 (>L:BKSQ_GeneratorSwitch, Number) }"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Adi2 Off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:59, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Adi2 On": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:59, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Adi2 Toggle": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:59, Bool) ! (>A:CIRCUIT SWITCH ON:59, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Gyro Off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:57, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Gyro On": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:57, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Gyro Toggle": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:57, Bool) ! (>A:CIRCUIT SWITCH ON:57, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Hs2 Off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:60, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Hs2 On": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:60, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Hs2 Toggle": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:60, Bool) ! (>A:CIRCUIT SWITCH ON:60, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Rmi Off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:58, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Rmi On": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:58, Bool)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Oh Gyro Rmi Toggle": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:58, Bool) ! (>A:CIRCUIT SWITCH ON:58, Bool)"
	},
	"Black Square.TBM850.Safety.BS TBM850 Oh Horn Down": {
		"method": "calcCode",
		"code": "1 (>L:var_HornTest_IsDown, Number)"
	},
	"Black Square.TBM850.Safety.BS TBM850 Oh Horn Release": {
		"method": "calcCode",
		"code": "0 (>L:var_HornTest_IsDown, Number)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Ignition Auto": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_IgnitionSwitch, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Ignition Move Down": {
		"method": "calcCode",
		"code": "(L:BKSQ_IgnitionSwitch, Bool) 1 - 0 max (>L:BKSQ_IgnitionSwitch, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Ignition Move Up": {
		"method": "calcCode",
		"code": "(L:BKSQ_IgnitionSwitch, Bool) 1 + 2 min (>L:BKSQ_IgnitionSwitch, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Ignition Off": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_IgnitionSwitch, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Ignition On": {
		"method": "calcCode",
		"code": "2 (>L:BKSQ_IgnitionSwitch, Bool)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Emergency Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_EmergencyLightsKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Emergency Dec": {
		"method": "calcCode",
		"code": "(L:var_EmergencyLightsKnob, number) 5 - 0 max (>L:var_EmergencyLightsKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Emergency Full": {
		"method": "calcCode",
		"code": "100 (>L:var_EmergencyLightsKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Emergency Inc": {
		"method": "calcCode",
		"code": "(L:var_EmergencyLightsKnob, number) 5 + 100 min (>L:var_EmergencyLightsKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Emergency Off": {
		"method": "calcCode",
		"code": "0 (>L:var_EmergencyLightsKnob, number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Left Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Left On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Left Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_LANDING_1, Number) ! (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Right Off": {
		"method": "calcCode",
		"code": "2 0 (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Right On": {
		"method": "calcCode",
		"code": "2 1 (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Landing Right Toggle": {
		"method": "calcCode",
		"code": "2 (L:LIGHTING_LANDING_2, Number) ! (>K:2:LANDING_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Nav Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:NAV_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Nav On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:NAV_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Nav Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_NAV_1, Number) ! (>K:2:NAV_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Pulse Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:RECOGNITION_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Pulse On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:RECOGNITION_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Pulse Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_RECOGNITION_1, Number) ! (>K:2:RECOGNITION_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Strobe Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:STROBES_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Strobe On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:STROBES_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Strobe Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_STROBE_1, Number) ! (>K:2:STROBES_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Taxi Off": {
		"method": "calcCode",
		"code": "1 0 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Taxi On": {
		"method": "calcCode",
		"code": "1 1 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Light Taxi Toggle": {
		"method": "calcCode",
		"code": "1 (L:LIGHTING_TAXI_1, Number) ! (>K:2:TAXI_LIGHTS_SET)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Lights Test Down": {
		"method": "calcCode",
		"code": "1 (>L:var_OverheadLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Lights.BS TBM850 Oh Lights Test Release": {
		"method": "calcCode",
		"code": "0 (>L:var_OverheadLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Copilot Off": {
		"method": "calcCode",
		"code": "0 (>L:var_coPilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Copilot On": {
		"method": "calcCode",
		"code": "1 (>L:var_coPilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Copilot Toggle": {
		"method": "calcCode",
		"code": "(L:var_coPilotOxygen, Bool) ! (>L:var_coPilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Pilot Off": {
		"method": "calcCode",
		"code": "0 (>L:var_pilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Pilot On": {
		"method": "calcCode",
		"code": "1 (>L:var_pilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Pilot Toggle": {
		"method": "calcCode",
		"code": "(L:var_pilotOxygen, Bool) ! (>L:var_pilotOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Supply Off": {
		"method": "calcCode",
		"code": "0 (>L:var_oxygenMaster, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Supply On": {
		"method": "calcCode",
		"code": "1 (>L:var_oxygenMaster, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Oxygen Supply Toggle": {
		"method": "calcCode",
		"code": "(L:var_oxygenMaster, Bool) ! (>L:var_oxygenMaster, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Passenger Oxygen Supply Off": {
		"method": "calcCode",
		"code": "0 (>L:var_passengerOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Passenger Oxygen Supply On": {
		"method": "calcCode",
		"code": "1 (>L:var_passengerOxygen, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Oh Passenger Oxygen Supply Toggle": {
		"method": "calcCode",
		"code": "(L:var_passengerOxygen, Bool) ! (>L:var_passengerOxygen, Bool)"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Source Batt": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 1 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Electrical.BS TBM850 Oh Source Gpu": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 2 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Source Move Down": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) (L:BKSQ_SourceSwitch, Number) 0 > if{ (L:BKSQ_SourceSwitch, Number) 1 - (>L:BKSQ_SourceSwitch, Number) (L:BKSQ_SourceSwitch, Number) 1 == if{ 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Source Move Up": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) (L:BKSQ_SourceSwitch, Number) 2 < if{ (L:BKSQ_SourceSwitch, Number) 1 + (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Source Off": {
		"method": "calcCode",
		"code": "(L:var_crashbar, bool) if{ 0 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Starter Off": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Starter On": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Oh Starter Toggle": {
		"method": "calcCode",
		"code": "(L:BKSQ_StarterSwitch, Bool) ! (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Axis": {
		"method": "calcCode",
		"code": "@ 20.0186 * 4096 - -4096 max 16384 min (>K:PROP_PITCH1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Feather": {
		"method": "calcCode",
		"code": "-4096 (>K:PROP_PITCH1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Full": {
		"method": "calcCode",
		"code": "16384 (>K:PROP_PITCH1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Idle": {
		"method": "calcCode",
		"code": "0 (>K:PROP_PITCH1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Overspeed Press": {
		"method": "calcCode",
		"code": "1 (>L:var_propOverspeedTestButton, Number)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Prop Overspeed Release": {
		"method": "calcCode",
		"code": "0 (>L:var_propOverspeedTestButton, Number)"
	},
	"Black Square.TBM850.Radio.BS TBM850 Radio Master Off": {
		"method": "calcCode",
		"code": "(L:var_RadioMasterSwitch, Bool) if{ 0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Radio.BS TBM850 Radio Master On": {
		"method": "calcCode",
		"code": "(L:var_RadioMasterSwitch, Bool) 0 == if{ 1 s0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) l0 != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) l0 != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) l0 != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) l0 != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }"
	},
	"Black Square.TBM850.Radio.BS TBM850 Radio Master Toggle": {
		"method": "calcCode",
		"code": "(L:var_RadioMasterSwitch, Bool) ! s0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) l0 != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) l0 != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) l0 != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) l0 != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Storm Scope Move Down": {
		"method": "calcCode",
		"code": "(L:var_stormScopeSwitch, Number) 1 + 2 min (>L:var_stormScopeSwitch, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Storm Scope Move Up": {
		"method": "calcCode",
		"code": "(L:var_stormScopeSwitch, Number) 1 - 0 max (>L:var_stormScopeSwitch, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Storm Scope Off": {
		"method": "calcCode",
		"code": "2 (>L:var_stormScopeSwitch, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Storm Scope On": {
		"method": "calcCode",
		"code": "1 (>L:var_stormScopeSwitch, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Storm Scope Storm Clear": {
		"method": "calcCode",
		"code": "0 (>L:var_stormScopeSwitch, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Temp Display Cabin Button": {
		"method": "calcCode",
		"code": "(L:var_CabinTempUnitMode, Bool) ! (>L:var_CabinTempUnitMode, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Temp Display Cabin Celsius": {
		"method": "calcCode",
		"code": "1 (>L:var_CabinTempUnitMode, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Temp Display Cabin Fahrenheit": {
		"method": "calcCode",
		"code": "0 (>L:var_CabinTempUnitMode, Bool)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Temp Display Oat Button": {
		"method": "calcCode",
		"code": "1 (>H:FreeAirTempMode)"
	},
	"Black Square.TBM850.Safety.BS TBM850 Terrain Test Press": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:80, Bool) (L:var_AutopilotStartupCounter, Number) 0 == (L:var_TerrainTest, Number) 0 == and and if{ 30 (>L:var_TerrainTest, Number) }"
	},
	"Black Square.TBM850.Safety.BS TBM850 Terrain Warning Lights Press": {
		"method": "calcCode",
		"code": "1 (>L:var_PanelLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Safety.BS TBM850 Terrain Warning Lights Release": {
		"method": "calcCode",
		"code": "0 (>L:var_PanelLightTestButton_IsDown, Number)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Throttle Axis": {
		"method": "calcCode",
		"code": "@ 20.0186 * 4096 - -4096 max 16384 min (>K:THROTTLE1_SET)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Throttle Decrease": {
		"method": "calcCode",
		"code": "1 (>K:THROTTLE_DECR)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Throttle Increase": {
		"method": "calcCode",
		"code": "1 (>K:THROTTLE_INCR)"
	},
	"Black Square.TBM850.Engine.BS TBM850 Throttle Taxi": {
		"method": "calcCode",
		"code": "0 (>K:THROTTLE1_SET)"
	},
	"Black Square.TBM850.Engine.Input.BS TBM850 Toga Press": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_TO_GA)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor L Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_Visor_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor L Down": {
		"method": "calcCode",
		"code": "0 (>L:var_Visor_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor L Side": {
		"method": "calcCode",
		"code": "100 (>L:var_Visor_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor L Stowed": {
		"method": "calcCode",
		"code": "20 (>L:var_Visor_L, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor R Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_Visor_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor R Down": {
		"method": "calcCode",
		"code": "0 (>L:var_Visor_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor R Side": {
		"method": "calcCode",
		"code": "100 (>L:var_Visor_R, Number)"
	},
	"Black Square.TBM850.Miscellaneous.BS TBM850 Visor R Stowed": {
		"method": "calcCode",
		"code": "20 (>L:var_Visor_R, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness 0": {
		"method": "calcCode",
		"code": "0 (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness 100": {
		"method": "calcCode",
		"code": "100 (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness 50": {
		"method": "calcCode",
		"code": "50 (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness Dec": {
		"method": "calcCode",
		"code": "(L:var_RadarBrightness, Number) 5 - 0 max (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Brightness Inc": {
		"method": "calcCode",
		"code": "(L:var_RadarBrightness, Number) 5 + 100 min (>L:var_RadarBrightness, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Left 1 Wx Wxa": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarAlertToggle)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Left 2 Vp": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarProfile)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Left 3 Map": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarMap)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Left 4 Hold": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarHold)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Right 1 Range Inc": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarRangeInc)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Right 2 Range Dec": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarRangeDec)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Right 3 Track Left": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarTrackLeft)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Button Right 4 Track Right": {
		"method": "calcCode",
		"code": "1 (>H:bksq_wradar1_radarTrackRight)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain 0": {
		"method": "calcCode",
		"code": "0 (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain 100": {
		"method": "calcCode",
		"code": "100 (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain 50": {
		"method": "calcCode",
		"code": "50 (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain Dec": {
		"method": "calcCode",
		"code": "(L:var_RadarGain, Number) 5 - 0 max (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Gain Inc": {
		"method": "calcCode",
		"code": "(L:var_RadarGain, Number) 5 + 100 min (>L:var_RadarGain, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Dec": {
		"method": "calcCode",
		"code": "(L:var_radarMode, Number) 1 - 0 max (>L:var_radarMode, Number) (L:var_radarMode, Number) 1 == (A:CIRCUIT SWITCH ON:81, Bool) and if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Inc": {
		"method": "calcCode",
		"code": "(L:var_radarMode, Number) 1 + 5 min (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) 0 == if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Log": {
		"method": "calcCode",
		"code": "5 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Nav": {
		"method": "calcCode",
		"code": "4 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Off": {
		"method": "calcCode",
		"code": "0 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode On": {
		"method": "calcCode",
		"code": "3 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Standby": {
		"method": "calcCode",
		"code": "1 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Mode Test": {
		"method": "calcCode",
		"code": "2 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt 0": {
		"method": "calcCode",
		"code": "50 (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt Dec": {
		"method": "calcCode",
		"code": "(L:var_RadarTilt, Number) 5 - 0 max (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt Inc": {
		"method": "calcCode",
		"code": "(L:var_RadarTilt, Number) 5 + 100 min (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt Minus 15": {
		"method": "calcCode",
		"code": "0 (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Avionics.BS TBM850 Weather Tilt Plus 15": {
		"method": "calcCode",
		"code": "100 (>L:var_RadarTilt, Number)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Yoke Btn Ap Disconnect": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool) if{ 1 (>K:AP_MASTER) 2 (>L:BKSQ_AUTOPILOT_DISCONNECT_SOUND, bool) } els{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) } }"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Yoke Btn Cws Press": {
		"method": "calcCode",
		"code": "1 (>L:var_PilotCws_IsDown, Number)"
	},
	"Black Square.TBM850.Autopilot.BS TBM850 Yoke Btn Cws Release": {
		"method": "calcCode",
		"code": "0 (>L:var_PilotCws_IsDown, Number)"
	},
	"Black Square.TBM850.Controls.Input.BS TBM850 Yoke Btn Rudder Trim Left": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:7, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 22 > and if{ (A:RUDDER TRIM PCT, Percent) 0.2 - 163.83 * 16383 min -16383 max (>K:RUDDER_TRIM_SET_EX1) } (L:var_trimDisabled, bool) ! (>A:CIRCUIT SWITCH ON:7, Bool)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Btn Rudder Trim Right": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:7, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 22 > and if{ (A:RUDDER TRIM PCT, Percent) 0.2 + 163.83 * 16383 min -16383 max (>K:RUDDER_TRIM_SET_EX1) } (L:var_trimDisabled, bool) ! (>A:CIRCUIT SWITCH ON:7, Bool)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Btn Trim Down": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:5, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 21 > and if{ (A:ELEVATOR TRIM PCT, Percent) 0.2 - 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) }"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Btn Trim Up": {
		"method": "calcCode",
		"code": " 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:5, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 21 > and if{ (A:ELEVATOR TRIM PCT, Percent) 0.2 + 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) }"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Left Hide": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_YokeHidden1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Left Show": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_YokeHidden1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Left Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_YokeHidden1, Number) ! (>L:XMLVAR_YokeHidden1, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Left Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_YokeLightKnob_L, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Left Dec": {
		"method": "calcCode",
		"code": "(L:var_YokeLightKnob_L, Number) 5 - 0 max (>L:var_YokeLightKnob_L, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Left Inc": {
		"method": "calcCode",
		"code": "(L:var_YokeLightKnob_L, Number) 5 + 100 min (>L:var_YokeLightKnob_L, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Left Off": {
		"method": "calcCode",
		"code": "0 (>L:var_YokeLightKnob_L, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Left On": {
		"method": "calcCode",
		"code": "100 (>L:var_YokeLightKnob_L, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Right Axis": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:var_YokeLightKnob_R, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Right Dec": {
		"method": "calcCode",
		"code": "(L:var_YokeLightKnob_R, Number) 5 - 0 max (>L:var_YokeLightKnob_R, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Right Inc": {
		"method": "calcCode",
		"code": "(L:var_YokeLightKnob_R, Number) 5 + 100 min (>L:var_YokeLightKnob_R, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Right Off": {
		"method": "calcCode",
		"code": "0 (>L:var_YokeLightKnob_R, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Light Right On": {
		"method": "calcCode",
		"code": "100 (>L:var_YokeLightKnob_R, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Right Hide": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_YokeHidden2, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Right Show": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_YokeHidden2, Number)"
	},
	"Black Square.TBM850.Controls.BS TBM850 Yoke Right Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_YokeHidden2, Number) ! (>L:XMLVAR_YokeHidden2, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Clr": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDERCLR, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Crsr": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDERCRSR, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 0": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER0, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 1": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 2": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER2, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 3": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER3, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 4": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER4, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 5": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER5, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 6": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER6, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Digit 7": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDER7, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Func": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDERFUNC, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Ident": {
		"method": "calcCode",
		"code": "1 (>K:XPNDR_IDENT_ON)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Mode 0 Off": {
		"method": "calcCode",
		"code": "0 (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Mode 1 Standby": {
		"method": "calcCode",
		"code": "1 (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Mode 3 On": {
		"method": "calcCode",
		"code": "3 (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Mode 4 Alt": {
		"method": "calcCode",
		"code": "4 (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Startstop": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDERSTARTSTOP, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Btn Vfr": {
		"method": "calcCode",
		"code": "1 (>H:TRANSPONDERVFR, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Mode Down": {
		"method": "calcCode",
		"code": "4 3 1 0 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Navigation.BS TBM850 Xpdr Mode Up": {
		"method": "calcCode",
		"code": "0 1 3 4 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)"
	},
	"Black Square.TBM850.Warning.Output.BS TBM850 Master Warning Annunciator": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:16,bool) (A:CIRCUIT ON:17, bool) or \n(L:var_masterWarningLatching, number) 1 == and\n(E:SIMULATION TIME, second) 2 * 2 % 1 < and "
	},
	"Black Square.TBM850.Warning.Output.BS TBM850 Master Caution Annunciator": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:16,bool) (A:CIRCUIT ON:17, bool) or \n(L:var_masterCautionLatching, number) 1 == and\n(E:SIMULATION TIME, second) 2 * 2 % 1 < and "
	},
	"Black Square.TBM850.Gear.Output.BS TBM850 Parking Brake Annunciator": {
		"method": "calcCode",
		"code": "(A:BRAKE PARKING INDICATOR, bool)\n(A:CIRCUIT ON:16, bool) (A:CIRCUIT ON:17, bool) or and\n(L:var_AnnunciatorTest1, bool) (A:CIRCUIT ON:16, bool) and \n(L:var_AnnunciatorTest2, bool) (A:CIRCUIT ON:17, bool) and or or"
	},
	"PMDG.B737-700.Controls.Output.PMDG B737 OVHD Yaw Damper Switch Position": {
		"method": "calcCode",
		"code": "(L:switch_63_73X, number)"
	},
	"Asobo.Airliner.EFIS.Input.Asobo Boeing Airliner MINS DEC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_DEC)"
	},
	"Asobo.Airliner.EFIS.Input.Asobo Boeing Airliner MINS INC": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_INC)"
	},
	"Asobo.Airliner.EFIS.Input.Asobo Boeing Airliner MINS RST": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_Mins_Press)"
	},
	"Asobo.Airliner.EFIS.Input.Asobo Boeing Airliner PUSH MTRS": {
		"method": "calcCode",
		"code": "(>H:AS01B_PFD_MTRS)"
	},
	"Asobo.All Aircraft.Autopilot.Output.AUTOPILOT HEADING": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR, degrees)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI AXIS COLLECTIVE SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:AXIS_COLLECTIVE_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI AXIS STEERING SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_STEERING_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI AXIS TAIL ROTOR SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:AXIS_TAIL_ROTOR_SET)"
	},
	"Microsoft.Generic.Controls.Input.HELI COLLECTIVE DECR": {
		"method": "calcCode",
		"code": "(>K:COLLECTIVE_DECR)"
	},
	"Microsoft.Generic.Controls.Input.HELI COLLECTIVE INCR": {
		"method": "calcCode",
		"code": "(>K:COLLECTIVE_INCR)"
	},
	"Microsoft.Generic.Controls.Input.HELI DECREASE HELO GOV BEEP": {
		"method": "calcCode",
		"code": "(>K:DECREASE_HELO_GOV_BEEP)"
	},
	"Microsoft.Generic.Controls.Input.HELI INCREASE HELO GOV BEEP": {
		"method": "calcCode",
		"code": "(>K:INCREASE_HELO_GOV_BEEP)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI SET HELO GOV BEEP": {
		"method": "calcCode",
		"code": " @ 511.5 / 1 - -1 max 1 min (>K:SET_HELO_GOV_BEEP)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI AXIS CYCLIC LATERAL SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_CYCLIC_LATERAL_SET)"
	},
	"Microsoft.Generic.Controls.Input (Potentiometer).HELI AXIS CYCLIC LONGITUDINAL SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_CYCLIC_LONGITUDINAL_SET)"
	},
	"Microsoft.Generic.Controls.Input.HELI CYCLIC LATERAL LEFT": {
		"method": "calcCode",
		"code": "(>K:CYCLIC_LATERAL_LEFT)"
	},
	"Microsoft.Generic.Controls.Input.HELI CYCLIC LATERAL RIGHT": {
		"method": "calcCode",
		"code": "(>K:CYCLIC_LATERAL_RIGHT)"
	},
	"Microsoft.Generic.Controls.Input.HELI CYCLIC LONGITUDINAL DOWN": {
		"method": "calcCode",
		"code": "(>K:CYCLIC_LONGITUDINAL_DOWN)"
	},
	"Microsoft.Generic.Controls.Input.HELI CYCLIC LONGITUDINAL UP": {
		"method": "calcCode",
		"code": "(>K:CYCLIC_LONGITUDINAL_UP)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).AXIS HELICOPTER THROTTLE SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:AXIS_HELICOPTER_THROTTLE_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE CUT": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE_CUT)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE DEC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE_DEC)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE INC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE_INC)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).HELICOPTER THROTTLE SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:HELICOPTER_THROTTLE_SET)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).HELI AXIS ROTOR BRAKE SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:AXIS_ROTOR_BRAKE_SET)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).HELI ROTOR AXIS TAIL ROTOR SET": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:ROTOR_AXIS_TAIL_ROTOR_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR BRAKE OFF": {
		"method": "calcCode",
		"code": "(>K:ROTOR_BRAKE_OFF)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR BRAKE ON": {
		"method": "calcCode",
		"code": "(>K:ROTOR_BRAKE_ON)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR BRAKE SET": {
		"method": "calcCode",
		"code": "(>K:ROTOR_BRAKE_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR BRAKE TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_BRAKE_TOGGLE)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR CLUTCH SWITCH SET": {
		"method": "calcCode",
		"code": "(>K:ROTOR_CLUTCH_SWITCH_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR CLUTCH SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR GOV SWITCH OFF": {
		"method": "calcCode",
		"code": "(>K:ROTOR_GOV_SWITCH_OFF)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR GOV SWITCH ON": {
		"method": "calcCode",
		"code": "(>K:ROTOR_GOV_SWITCH_ON)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR GOV SWITCH SET": {
		"method": "calcCode",
		"code": "(>K:ROTOR_GOV_SWITCH_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR GOV SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(>K:ROTOR_GOV_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR LATERAL TRIM DEC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LATERAL_TRIM_DEC)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR LATERAL TRIM INC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LATERAL_TRIM_INC)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).HELI ROTOR LATERAL TRIM SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:ROTOR_LATERAL_TRIM_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR LONGITUDINAL TRIM DEC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LONGITUDINAL_TRIM_DEC)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR LONGITUDINAL TRIM INC": {
		"method": "calcCode",
		"code": "(>K:ROTOR_LONGITUDINAL_TRIM_INC)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).HELI ROTOR LONGITUDINAL TRIM SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:ROTOR_LONGITUDINAL_TRIM_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELI ROTOR TRIM RESET": {
		"method": "calcCode",
		"code": "(>K:ROTOR_TRIM_RESET)"
	},
	"Microsoft.Generic.Engine.Input.HELI TAIL ROTOR DECR": {
		"method": "calcCode",
		"code": "(>K:TAIL_ROTOR_DECR)"
	},
	"Microsoft.Generic.Engine.Input.HELI TAIL ROTOR INCR": {
		"method": "calcCode",
		"code": "(>K:TAIL_ROTOR_INCR)"
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AUTOPILOT MASTER ON": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool)"
	},
	"MGharib.HJET HA420.Autopilot.Output.HA420 AP VNV MODE ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP FMS MAN Knob FMS": {
		"method": "calcCode",
		"code": "0 (>L:HJET_THROTTLE_MAN, bool)"
	},
	"MGharib.HJET HA420.Autopilot.Input.HA420 AP FMS MAN Knob MAN": {
		"method": "calcCode",
		"code": "1 (>L:HJET_THROTTLE_MAN, bool)"
	},
	"Fly By Wire.A320.Autopilot.Input.EXPED Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_EXPED_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.Input.LOC Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_LOC_PUSH)"
	},
	"Fly By Wire.A320.Autopilot.Input.APPR Push": {
		"method": "calcCode",
		"code": "(>K:A32NX.FCU_APPR_PUSH)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.Adjust GLARESHIELD INTEGRAL Brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 84 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Lights.Input.Adjust GLARESHIELD LCD Brightness": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min 87 (>K:2:LIGHT_POTENTIOMETER_SET)\n"
	},
	"Fly By Wire.A320-Dev.Lights.Input.A32NX OH DOME LIGHT Adjust": {
		"method": "calcCode",
		"code": "@ 10.23 / 7 (>K:2:LIGHT_POTENTIOMETER_SET)\n"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Panel 1 Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 + 0 max 100 min s0 (>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT PANEL:1, Bool) s2 \n(L:LIGHTING_PANEL_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"FlightFX.Visionjet SF50.Lights.Input.SF50 Lights Panel 1 Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 - 0 max 100 min s0 (>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT PANEL:1, Bool) s2 \n(L:LIGHTING_PANEL_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"FlightFX.Visionjet SF50.Lights.Input (Potentiometer).SF50 Lights Panel 1 Set (analog)": {
		"method": "calcCode",
		"code": "@ 10.23 / near 0 max 100 min s0 (>L:LIGHTING_PANEL_1) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET) \n(A:LIGHT PANEL:1, Bool) s2 \n(L:LIGHTING_PANEL_1) 0 > != if{ \n\t l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }"
	},
	"Hype Performance Group.H135.Passengers/Crew.Input.H135_Doors_Rear_OPEN": {
		"method": "calcCode",
		"code": "1 (>L:TOGGLE_DOOR_BACK)"
	},
	"Hype Performance Group.H135.Passengers/Crew.Input.H135_Doors_Rear_CLOSE": {
		"method": "calcCode",
		"code": "0 (>L:TOGGLE_DOOR_BACK)"
	},
	"Hype Performance Group.H135.Passengers/Crew.Input.H135_Doors_Rear_TOGGLE": {
		"method": "calcCode",
		"code": "(L:TOGGLE_DOOR_BACK) ! (>L:TOGGLE_DOOR_BACK)"
	},
	"PMDG.B737-700.Safety.Output.PMDG B737 Speed Trim Fail Light": {
		"method": "calcCode",
		"code": "(L:switch_71_73X, number)"
	},
	"Asobo.CJ4 AAU1.Lights.Output.CJ4 panel backlight brightness": {
		"method": "calcCode",
		"code": "(A:CIRCUIT GENERAL PANEL ON,Bool) (A:LIGHT PANEL:1, Bool) * if{ (L:LIGHTING_PANEL_1) } els{ 0 }\n"
	},
	"Asobo.Longitude.Autopilot.Input.Toggle HDG SYNC Mode": {
		"method": "calcCode",
		"code": "(>H:Garmin_AP_HDG_Sync)"
	},
	"Asobo.Longitude.Autopilot.Output.Longitude AP Half Bank Mode Active": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MAX BANK ID,Number)"
	},
	"Asobo.Airliner.EFIS.Input.B787 MFD Left-Right. RIGHT": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_MFD_Side_1)"
	},
	"Asobo.Airliner.EFIS.Input.B787 MFD Left-Right. LEFT": {
		"method": "calcCode",
		"code": "0(>L:XMLVAR_MFD_Side_1)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_MASTER_TGL_1": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_1_Status) ! (>L:XMLVAR_Autopilot_1_Status) (L:XMLVAR_Autopilot_1_Status) (L:XMLVAR_Autopilot_2_Status) or (A:AUTOPILOT MASTER, Bool) != if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ 0 (>L:XMLVAR_Autopilot_1_Status) (>H:Generic_Autopilot_1_Manual_Off) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_MASTER_TGL_2": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_2_Status) ! (>L:XMLVAR_Autopilot_2_Status) (L:XMLVAR_Autopilot_2_Status) (L:XMLVAR_Autopilot_1_Status) or (A:AUTOPILOT MASTER, Bool) != if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ 0 (>L:XMLVAR_Autopilot_2_Status) (>H:Generic_Autopilot_2_Manual_Off) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_AT_ARM_1": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM:1, Bool) ! 1 (>K:AUTO_THROTTLE_ARM)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_AT_ARM_2": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM:2, Bool) ! 2 (>K:AUTO_THROTTLE_ARM)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_FD_SLCT_1": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) ! 1 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_FD_SLCT_2": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:2, Bool) ! 2 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_HDG_BUG_INC": {
		"method": "calcCode",
		"code": "(L:HDG_AP_VALUE, Degrees) 1 + (>L:HDG_AP_VALUE)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_HDG_BUG_DEC": {
		"method": "calcCode",
		"code": "(L:HDG_AP_VALUE, Degrees) 1 - (>L:HDG_AP_VALUE)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_CRS_BUG_INC": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_INC)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_CRS_BUG_DEC": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_DEC)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_ALT_INC 1000": {
		"method": "calcCode",
		"code": "(L:ALT_AP_VALUE, feet) 60000 < if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 1000 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 100 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 10 + (>L:ALT_AP_VALUE) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_ALT_DEC 1000": {
		"method": "calcCode",
		"code": "(L:ALT_AP_VALUE, feet) 0 > if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 1000 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 100 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 10 - (>L:ALT_AP_VALUE) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_SPD_INC": {
		"method": "calcCode",
		"code": "(L:IAS_AP_VALUE, Knots) 400 < if{ (L:IAS_TENS, Bool) ! if{ (L:IAS_AP_VALUE, Knots) 1 + (>L:IAS_AP_VALUE) } (L:IAS_TENS, Bool) if{ (L:IAS_AP_VALUE, Knots) 10 + (>L:IAS_AP_VALUE) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_SPD_DEC": {
		"method": "calcCode",
		"code": "(L:IAS_AP_VALUE, Knots) 0 > if{ (L:IAS_TENS, Bool) ! if{ (L:IAS_AP_VALUE, Knots) 1 - (>L:IAS_AP_VALUE) } (L:IAS_TENS, Bool) if{ (L:IAS_AP_VALUE, Knots) 10 - (>L:IAS_AP_VALUE) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_RAD_INS_SW": {
		"method": "calcCode",
		"code": "(L:GPS_DRIVES_NAV, Bool) ! (>L:GPS_DRIVES_NAV)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_FD_SW_PILOT": {
		"method": "calcCode",
		"code": "(L:FD_Selector, Bool) ! (>L:FD_Selector)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_IAS_ACQ": {
		"method": "calcCode",
		"code": "(L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (A:AUTOPILOT THROTTLE ARM, Bool) if{ (L:IAS_ACQ, Bool) ! (>L:IAS_ACQ) } (L:IAS_ACQ, Bool) if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:AP_AIRSPEED_ON) } (L:IAS_AP_VALUE, Knots) (>K:AP_SPD_VAR_SET) }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_ALT_HOLD": {
		"method": "calcCode",
		"code": "(L:ALT_ACQ, Bool) if{ 0 (>L:ALT_ACQ) } (L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (>K:AP_ALT_HOLD)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_ALT_ACQ_B": {
		"method": "calcCode",
		"code": "(L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:ALT_ACQ, Bool) ! (>L:ALT_ACQ) (L:ALT_ACQ, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) ! if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:AP_ALT_HOLD_ON) } (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_SPD": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_AIRSPEED_SET) } (L:MAX CLIMB, Bool) ! (L:MAX CRUISE, Bool) ! & if{ (A:AUTOPILOT AIRSPEED HOLD, Bool) ! (>K:AP_AIRSPEED_SET) }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_MACH_HOLD": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool) ! if{ 1 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) ! if{ (>K:AP_MANAGED_SPEED_IN_MACH_ON) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) 0 (>K:AP_MACH_SET) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_MACH_SET) } (A:AUTOPILOT MACH HOLD, Bool) ! (>K:AP_MACH_SET) (A:AUTOPILOT MACH HOLD, Bool) if{ (A:AIRSPEED MACH, Mach) (>AP_MACH_VAR_SET) }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_HDG": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool) ! (>K:AP_HDG_HOLD)  (A:AUTOPILOT HEADING LOCK, Bool) if{ (A:PLANE HEADING DEGREES GYRO, Degrees) (>K:HEADING_BUG_SET) } (L:AP_PANEL_HEADING_HOLD, Bool) if{ 0 (>L:AP_PANEL_HEADING_HOLD) (A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_HDG_HOLD) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_MAX_CLIMB": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:MAX CLIMB, Bool) ! (>L:MAX CLIMB) (L:MAX CLIMB, Bool) if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:FLIGHT_LEVEL_CHANGE) } 400 (>L:IAS_AP_VALUE) 400 (>K:AP_SPD_VAR_SET) } (L:MAX CLIMB, Bool) ! if{ (A:AIRSPEED INDICATED, Knots) 400 > if{ 400 (>K:AP_SPD_VAR_SET) 400 (>L:IAS_AP_VALUE) (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } (A:AIRSPEED INDICATED, Knots) 400 < if{ (A:AIRSPEED INDICATED, Knots) (>L:IAS_AP_VALUE) (L:IAS_AP_VALUE, Knots) (>K:AP_SPD_VAR_SET) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_MAX_CRUISE": {
		"method": "calcCode",
		"code": "(L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) } (L:MAX CRUISE, Bool) ! (>L:MAX CRUISE) (L:MAX CRUISE, Bool) ! if { (A:AUTOPILOT MACH HOLD, Bool) if{ (A:AIRSPEED MACH, Mach) (>AP_MACH_VAR_SET) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_VS": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool) ! (>K:AP_VS_SET) (A:AUTOPILOT VERTICAL HOLD, Bool) if{ (A:VERTICAL SPEED, feet per minute) (>K:AP_VS_VAR_SET_ENGLISH) }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_VOR_LOC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and if{ (>K:AP_LOC_HOLD) } (>K:AP_LOC_HOLD)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_GLIDE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_LAND": {
		"method": "calcCode",
		"code": "(L:AUTOLAND, Bool) ! (>L:AUTOLAND, Bool) (L:AUTOLAND, Bool) if{ (A:AUTOPILOT MASTER, Bool) ! if{ (>K:AUTOPILOT_ON) 1 (>L:XMLVAR_Autopilot_1_Status) 1 (>L:XMLVAR_Autopilot_2_Status) } (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) (A:AUTOPILOT THROTTLE ARM, Bool) ! if{ (>K:AUTO_THROTTLE_ARM) } } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_GOARND\t": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_TO_GA)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_TURB\t": {
		"method": "calcCode",
		"code": "(>K:AP_WING_LEVELER)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_PITCH_HOLD": {
		"method": "calcCode",
		"code": "(L:ALT_ACQ, Bool) if{ 0 (>L:ALT_ACQ) } (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 0 (>K:AP_ALT_VAR_SET_ENGLISH) (>K:AP_ALT_HOLD_OFF) } (A:AUTOPILOT PITCH HOLD, Bool) ! (>K:AP_PITCH_LEVELER)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_IAS_HOLD": {
		"method": "calcCode",
		"code": "(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_AIRSPEED_SET) } (L:MAX CLIMB, Bool) ! (L:MAX CRUISE, Bool) ! & if{ (A:AUTOPILOT AIRSPEED HOLD, Bool) ! (>K:AP_AIRSPEED_SET) }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_INS": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV1 LOCK, Bool) ! (>K:AP_NAV1_HOLD)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_TRK_HDG": {
		"method": "calcCode",
		"code": "(L:AP_PANEL_HEADING_HOLD, Bool) ! (>L:AP_PANEL_HEADING_HOLD) (L:AP_PANEL_HEADING_HOLD, Bool) if{ (A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_HDG_HOLD) } } (L:AP_PANEL_HEADING_HOLD, Bool) ! if{ (A:AUTOPILOT HEADING LOCK, Bool) if{ (>K:AP_HDG_HOLD) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_BTN_AP_BACKBEAM\t": {
		"method": "calcCode",
		"code": "(>K:AP_BC_HOLD)"
	},
	"IniBuilds.A300.Radio.Input.A300 Pedestal VHF COM1 STBY Inner Knob Khz Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.Input.A300 Pedestal VHF COM1 STBY Inner Knob Khz Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"DC Designs.Concorde.Autopilot.Output.AP Speed VAL": {
		"method": "calcCode",
		"code": "(L:IAS_AP_VALUE, Knots)"
	},
	"DC Designs.Concorde.Autopilot.Output.HDG_AP_VALUE": {
		"method": "calcCode",
		"code": "(L:HDG_AP_VALUE, Degrees)"
	},
	"SimWorks Studios.PC-12.Avionics.Input.ALT VS preselect toggle": {
		"method": "calcCode",
		"code": "(L:AUTOPILOT_KAS297B_MODE, Number) ! (>L:AUTOPILOT_KAS297B_MODE, Number)"
	},
	"DC Designs.Concorde.Engine.Input.REHEAT 1 Afterburner": {
		"method": "calcCode",
		"code": "(L:ENG_CTRL1, Bool) ! (>L:ENG_CTRL)\n(L:ENG_CTRL1, Bool) ! if (A: TURB ENG AFTERBURNER:1, Boolean) if { 14728 (>K:THROTTLE1_SET) } }"
	},
	"IniBuilds.A300.Radio.Input.A300 Pedestal VHF COM1 STBY Outer Knob Mhz Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.Input.A300 Pedestal VHF COM1 STBY Outer Knob Mhz Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"DC Designs.Concorde.Autopilot.Output.AP1 Status": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_1_Status) "
	},
	"DC Designs.Concorde.Autopilot.Output.AP2 Status": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_2_Status) "
	},
	"DC Designs.Concorde.Autopilot.Output.AUTOPILOT APPROACH HOLD status": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output. APPROACH LOC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.AP ATHR1": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM:1, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.AP ATHRT 2": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM:2, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.AP ATHRTL 2 STATUS": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT THROTTLE ARM:2, Bool) "
	},
	"DC Designs.Concorde.Autopilot.Output.MAX CLIMB status": {
		"method": "calcCode",
		"code": "(L:MAX CLIMB, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.IAS HOLD Status": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT AIRSPEED HOLD, Bool) "
	},
	"DC Designs.Concorde.Autopilot.Output.IAS ASQ status": {
		"method": "calcCode",
		"code": "(L:IAS_ACQ, Bool)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_ALT_ARM_Select": {
		"method": "calcCode",
		"code": "(>H:Autopilot_KAS297B_Push_AltitudeSelect_1)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_inner_knob_decrease": {
		"method": "calcCode",
		"code": "(>H:SWS_KAS297_Inner_Knob_CCW)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_inner_knob_increase": {
		"method": "calcCode",
		"code": "(>H:SWS_KAS297_Inner_Knob_CW)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_outer_knob_decrease": {
		"method": "calcCode",
		"code": "(>H:SWS_KAS297_Outer_Knob_CCW)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_outer_knob_increase": {
		"method": "calcCode",
		"code": "(>H:SWS_KAS297_Outer_Knob_CW)"
	},
	"SimWorks Studios.PC-12.Autopilot System.Input.KAS_297B_VS_ENG_Select": {
		"method": "calcCode",
		"code": "(>H:AUTOPILOT_KAS297B_Push_VerticalSpeed_1)\n"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA MASTER PANEL LIGHTS ON": {
		"method": "calcCode",
		"code": "1 (>L:var_masterPanelLights, bool)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA MASTER PANEL LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_masterPanelLights, bool)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA ICE LIGHT ON": {
		"method": "calcCode",
		"code": "1 (>K:WING_LIGHTS_SET)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA ICE LIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>K:WING_LIGHTS_SET)"
	},
	"DC Designs.Concorde.Autopilot.Output.Throttle position": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG THROTTLE LEVER POSITION:1, position 16K)"
	},
	"Black Square.Analog King Air.Gear.Input.BS KA PARKING BRAKE ON": {
		"method": "calcCode",
		"code": "1 (>K:PARKING_BRAKE_SET)"
	},
	"Black Square.Analog King Air.Gear.Input.BS KA PARKING BRAKE OFF": {
		"method": "calcCode",
		"code": "0 (>K:PARKING_BRAKE_SET)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA STALL WARN ON": {
		"method": "calcCode",
		"code": "3 1 (>K:2:PITOT_HEAT_SET) \n1 (>L:DEICE_Pitot_3)   "
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA STALL WARN OFF": {
		"method": "calcCode",
		"code": "3 0 (>K:2:PITOT_HEAT_SET) \n0 (>L:DEICE_Pitot_3)   "
	},
	"Black Square.Analog King Air.Gear.Input.BS KA LANDING GEAR DOWN": {
		"method": "calcCode",
		"code": "(>K:GEAR_DOWN)"
	},
	"Black Square.Analog King Air.Gear.Input.BS KA LANDING GEAR UP": {
		"method": "calcCode",
		"code": "(>K:GEAR_UP)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA RIGHT ENGINE START ON": {
		"method": "calcCode",
		"code": "1 (>K:TURBINE_IGNITION_SWITCH_SET2)\n1 (>K:STARTER2_SET)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA RIGHT ENGINE START OFF": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET2)\n0 (>K:STARTER2_SET)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA LEFT ENGINE START ON": {
		"method": "calcCode",
		"code": "1 (>K:TURBINE_IGNITION_SWITCH_SET1)\n1 (>K:STARTER1_SET)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA LEFT ENGINE START OFF": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET1)\n0 (>K:STARTER1_SET)"
	},
	"DC Designs.Concorde.Autopilot.Output.INS\\GPS SW status": {
		"method": "calcCode",
		"code": "(A:GPS DRIVES NAV1, Bool)"
	},
	"Asobo.A320.Lights.Input.ASOA320_OH_EXTLT_NOSE_TO": {
		"method": "calcCode",
		"code": "0 1 r (>K:2:TAXI_LIGHTS_SET) 1 1 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Just Flight.Avro Vulcan.Avionics.Input.VLC_TACAN_Left_Dec": {
		"method": "calcCode",
		"code": "(L:TACAN_Code_Sel_Dig1,enum) -- (>L:TACAN_Code_Sel_Dig1,enum) (L:TACAN_Code_Sel_Dig1,enum) 0 < if{ 12 (>L:TACAN_Code_Sel_Dig1,enum) }"
	},
	"Just Flight.Avro Vulcan.Avionics.Input.VLC_TACAN_Left_Inc": {
		"method": "calcCode",
		"code": "(L:TACAN_Code_Sel_Dig1,enum) ++ 12 % (>L:TACAN_Code_Sel_Dig1,enum)"
	},
	"Just Flight.Avro Vulcan.Avionics.Input.VLC_TACAN_Right_Dec": {
		"method": "calcCode",
		"code": "(L:TACAN_Code_Sel_Dig2,enum) -- (>L:TACAN_Code_Sel_Dig2,enum) (L:TACAN_Code_Sel_Dig2,enum) 0 < if{ 9 (>L:TACAN_Code_Sel_Dig2,enum) }"
	},
	"Just Flight.Avro Vulcan.Avionics.Input.VLC_TACAN_Right_Inc": {
		"method": "calcCode",
		"code": "(L:TACAN_Code_Sel_Dig2,enum) ++ 9 % (>L:TACAN_Code_Sel_Dig2,enum)"
	},
	"Just Flight.Avro Vulcan.Avionics.Input.VLC_TACAN_Switch_XY": {
		"method": "calcCode",
		"code": "(L:TACAN_XY_Switch) ! (>L:TACAN_XY_Switch,enum)"
	},
	"Asobo.A320.Lights.Input.ASOA320_OH_EXTLT_NOSE_TAXI": {
		"method": "calcCode",
		"code": "1 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Asobo.A320.Lights.Input.ASOA320_OH_EXTLT_NOSE_OFF": {
		"method": "calcCode",
		"code": "0 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"IniBuilds.A310.Electrical.Input.A310_Ovhd_Elec_AC_Bus_Selector_Dec": {
		"method": "calcCode",
		"code": "(L:A310_elec_ind_ac_selector) -- 0 max 7 min (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310_Ovhd_Elec_AC_Bus_Selector_Inc": {
		"method": "calcCode",
		"code": "(L:A310_elec_ind_ac_selector) ++ 0 max 7 min (>L:A310_elec_ind_ac_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310_Ovhd_Elec_DC_Bus_Selector_Dec": {
		"method": "calcCode",
		"code": "(L:A310_elec_ind_dc_selector) -- 0 max 7 min (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Electrical.Input.A310_Ovhd_Elec_DC_Bus_Selector_Inc": {
		"method": "calcCode",
		"code": "(L:A310_elec_ind_dc_selector) ++ 0 max 7 min (>L:A310_elec_ind_dc_selector)"
	},
	"IniBuilds.A310.Engines.Input.A310_TRP_Mode_CL_Press1": {
		"method": "calcCode",
		"code": "(>L:A310_TRP_CL_BUTTON)"
	},
	"IniBuilds.A310.Engines.Input.A310_TRP_Mode_CR_Press1": {
		"method": "calcCode",
		"code": "(>L:A310_TRP_CR_BUTTON)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310_FO_Altimeter_Bug_Dec1": {
		"method": "calcCode",
		"code": "(L:A310_FO_ALTIMETER_BUG, Number) 990 + 1000 % (>L:A310_FO_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A310.Flight Instrumentation.Input.A310_FO_Altimeter_Bug_Inc1": {
		"method": "calcCode",
		"code": "(L:A310_FO_ALTIMETER_BUG, Number) 10 + 1000 % (>L:A310_FO_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A310.Lights.Input.A310_Read_Light_Knob_Dec1": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_18) -- 0 max 100 min (>L:A310_POTENTIOMETER_18)"
	},
	"IniBuilds.A310.Lights.Input.A310_Read_Light_Knob_Inc1": {
		"method": "calcCode",
		"code": "(L:A310_POTENTIOMETER_18) ++ 0 max 100 min (>L:A310_POTENTIOMETER_18)"
	},
	"Asobo.SR22T.Lights.Input.SR22T_GLARESHIELD_LIGHTS_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 - 0 max d (>L:LIGHTING_GLARESHIELD_1) 1 (>K:2:GLARESHIELD_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.SR22T.Lights.Input.SR22T_GLARESHIELD_LIGHTS_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1) 5 + 100 min d (>L:LIGHTING_GLARESHIELD_1) 1  (>K:2:GLARESHIELD_LIGHTS_POWER_SETTING_SET)\n"
	},
	"Asobo.SR22T.Lights.Input.SR22T_AVIONICS_BRIGHTNESS_DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 - 0 max d (>L:LIGHTING_PANEL_1) 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.SR22T.Lights.Input.SR22T_AVIONICS_BRIGHTNESS_INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1) 5 + 100 min d (>L:LIGHTING_PANEL_1) 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)"
	},
	"Asobo.SR22T.Electrical.Input.SR22T_TOGGLE_BATTERY_1": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Asobo.SR22T.Electrical.Input.SR22T_TOGGLE_BATTERY_2": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Asobo.SR22T.Electrical.Input.SR22T_TOGGLE_ALTERNATOR_1": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_ALTERNATOR)"
	},
	"Asobo.SR22T.Electrical.Input.SR22T_TOGGLE_ALTERNATOR_2": {
		"method": "calcCode",
		"code": "2 (>K:TOGGLE_MASTER_ALTERNATOR)"
	},
	"Asobo.SR22T.Electrical.Input.SR22T_TOGGLE_AVIONICS": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AVIONICS_MASTER)"
	},
	"Just Flight.Avro Vulcan.Flight Intrumentation.Output.VLC_HDG_BUG": {
		"method": "calcCode",
		"code": "(L:LEFT_COMPASS_Hdg_index, number)  (L:LEFT_track, number) + 360 pmod"
	},
	"Just Flight.Avro Vulcan.Flight Intrumentation.Output.VLC_COMPASS_COURSE": {
		"method": "calcCode",
		"code": "(L:LEFT_track, number)"
	},
	"Cowan Simulation.H 125.Fuel.Input.Emergency Fuel CUTOFF ON": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Cowan Simulation.H 125.Fuel.Input.Emergency Fuel CUTOFF OFF": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Cowan Simulation.H 125.Electrical.Input.Battery ON": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Cowan Simulation.H 125.Electrical.Input.Battery OFF": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_MASTER_BATTERY)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.A32NX OVHD Left Runway Turnoff Lights On": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:21, bool)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.A32NX OVHD Right Runway Turnoff Lights On": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:22, bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.Heading track status": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Output.MACH HOLD status": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MACH HOLD, Bool)"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_ALT_INC 100": {
		"method": "calcCode",
		"code": "(L:ALT_AP_VALUE, feet) 60000 < if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 100 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 10 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 1 + (>L:ALT_AP_VALUE) } }"
	},
	"DC Designs.Concorde.Autopilot.Input.CONC_AP_ALT_DEC 100": {
		"method": "calcCode",
		"code": "(L:ALT_AP_VALUE, feet) 0 > if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 100 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 10 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 1 - (>L:ALT_AP_VALUE) } }"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP VHF1 Button Press": {
		"method": "calcCode",
		"code": "90401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP VHF2 Button Press": {
		"method": "calcCode",
		"code": "90601 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP VHF3 Button Press": {
		"method": "calcCode",
		"code": "90801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP HF1 Button Press": {
		"method": "calcCode",
		"code": "91001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP AM Button Press": {
		"method": "calcCode",
		"code": "91201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED LEFT RMP HF2 Button Press": {
		"method": "calcCode",
		"code": "91401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP VHF1 Button Press": {
		"method": "calcCode",
		"code": "92501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP VHF2 Button Press": {
		"method": "calcCode",
		"code": "92701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP VHF3 Button Press": {
		"method": "calcCode",
		"code": "92901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP HF1 Button Press": {
		"method": "calcCode",
		"code": "93101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP AM Button Press": {
		"method": "calcCode",
		"code": "93301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Radio.Input.PMDG B737 PED RIGHT RMP HF2 Button Press": {
		"method": "calcCode",
		"code": "93501 (>K:ROTOR_BRAKE)"
	},
	"Asobo.Cabri G2.Electrical.Input.Battery ON": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cabri G2.Electrical.Input.Battery OFF": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Asobo.Cabri G2.Lights.Input.Strobes ON": {
		"method": "calcCode",
		"code": "(>K:STROBES_ON)"
	},
	"Asobo.Cabri G2.Lights.Input.Strobes OFF": {
		"method": "calcCode",
		"code": "(>K:STROBES_OFF)"
	},
	"Asobo.Cabri G2.Fuel.Input.Fuel Pump ON": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)"
	},
	"Asobo.Cabri G2.Fuel.Input.Fuel Pump OFF": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)"
	},
	"Asobo.Cabri G2.Electrical.Input.Alternator ON": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) } "
	},
	"Asobo.Cabri G2.Electrical.Input.Alternator  OFF": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) } "
	},
	"Asobo.Cabri G2.Engines.Input.Rotor Cluch Switch ON": {
		"method": "calcCode",
		"code": "(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)"
	},
	"Asobo.Cabri G2.Engines.Input.Rotor Cluch Switch OFF": {
		"method": "calcCode",
		"code": "(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)"
	},
	"Asobo.B787-10.EFIS.Input.B787 Pilot MFD display CDU page": {
		"method": "calcCode",
		"code": "(>H:AS01B_MFD_1_CDU)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA LEFT ENGINE STARTER ONLY ON": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET1)\n1 (>K:STARTER1_SET)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA RIGHT ENGINE STARTER ONLY": {
		"method": "calcCode",
		"code": "0 (>K:TURBINE_IGNITION_SWITCH_SET2)\n1 (>K:STARTER2_SET)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA AUTOFEATHER ARM ON": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_AUTOFEATHER_ARM) \n1 (>A:CIRCUIT SWITCH ON:45, bool) \n0 (>L:var_autoFeatherTest, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA AUTOFEATHER OFF": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_AUTOFEATHER_ARM) \n0 (>A:CIRCUIT SWITCH ON:45, bool) \n0 (>L:var_autoFeatherTest, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA AUTOFEATHER TEST": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_AUTOFEATHER_ARM) \n1 (>A:CIRCUIT SWITCH ON:45, bool) \n1 (>L:var_autoFeatherTest, bool)"
	},
	"FenixSim.A320.Radio.Output.FNX320+FENIXQUARTZ COM 1 Active": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_com1Active)"
	},
	"FenixSim.A320.Radio.Output.FNX320+FENIXQUARTZ COM 1 Standby": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_com1Standby)"
	},
	"FenixSim.A320.Radio.Output.FNX320+FENIXQUARTZ COM 2 Active": {
		"method": "calcCode",
		"code": "(L:FNX2PLD_com2Active)"
	},
	"FSS.E1XX.Electrical.AC BUS Ties 1 Open": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)"
	},
	"FSS.E1XX.Electrical.AC BUS Ties 2 Open": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)"
	},
	"FSS.E1XX.Electrical.AC BUS Ties Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)"
	},
	"FSS.E1XX.Fuel.AC PUMP 1 Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)"
	},
	"FSS.E1XX.Fuel.AC PUMP 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)"
	},
	"FSS.E1XX.Fuel.AC PUMP 1 On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)"
	},
	"FSS.E1XX.Fuel.AC PUMP 2 Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)"
	},
	"FSS.E1XX.Fuel.AC PUMP 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)"
	},
	"FSS.E1XX.Fuel.AC PUMP 2 On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Bleed 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_1_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Bleed 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_1_BTN)"
	},
	"FSS.E1XX.Air Conditioning.Input.AIR COND Bleed 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_2_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Bleed 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_2_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Bleed APU Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_APU_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Bleed APU On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_APU_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Ckpt Knob Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_OVHD_AIRCOND_CKPT) 0.05 - 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_CKPT)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Ckpt Knob Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_OVHD_AIRCOND_CKPT) 0.05 + 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_CKPT)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pack 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_PACK1_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pack 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_PACK1_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pack 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_PACK2_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pack 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_PACK2_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pax Cabin Knob Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_OVHD_AIRCOND_PSGR) 0.05 - 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_PSGR)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Pax Cabin Knob Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_OVHD_AIRCOND_PSGR) 0.05 + 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_PSGR)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Recirc Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_RECIRC_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND Recirc On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_RECIRC_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND XBleed Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_AIRCOND_XBLEED_BTN)"
	},
	"FSS.E1XX.Air Conditioning.AIR COND XBleed On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_AIRCOND_XBLEED_BTN)"
	},
	"FSS.E1XX.Lights.Annunciators Test Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_CPL_ANUNTEST_BTN)"
	},
	"FSS.E1XX.Lights.Annunciators Test Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_CPL_ANUNTEST_BTN)"
	},
	"FSS.E1XX.Electrical.APU CONTROL Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_APU_MASTER)"
	},
	"FSS.E1XX.Electrical.APU CONTROL On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_APU_MASTER)"
	},
	"FSS.E1XX.Electrical.APU CONTROL Start": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_APU_MASTER)"
	},
	"FSS.E1XX.Electrical.APU GEN Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_APUGEN_BTN)"
	},
	"FSS.E1XX.Electrical.APU GEN On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_APUGEN_BTN)"
	},
	"FSS.E1XX.Gear.Autobrake Hi": {
		"method": "calcCode",
		"code": "4 (>L:FSS_EXX_AUTOBRAKE)"
	},
	"FSS.E1XX.Gear.Autobrake Lo": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_AUTOBRAKE)"
	},
	"FSS.E1XX.Gear.Autobrake Med": {
		"method": "calcCode",
		"code": "3 (>L:FSS_EXX_AUTOBRAKE)"
	},
	"FSS.E1XX.Gear.Autobrake Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUTOBRAKE)"
	},
	"FSS.E1XX.Gear.Autobrake RTO": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_AUTOBRAKE)"
	},
	"FSS.E1XX.Electrical.BATT 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_BATT1_SWITCH)"
	},
	"FSS.E1XX.Electrical.BATT 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_BATT1_SWITCH)"
	},
	"FSS.E1XX.Electrical.BATT 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_BATT2_SWITCH)"
	},
	"FSS.E1XX.Electrical.BATT 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_BATT2_SWITCH)"
	},
	"FSS.E1XX.Pressurization.CABIN ALT Down": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)"
	},
	"FSS.E1XX.Pressurization.CABIN ALT Stop": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)"
	},
	"FSS.E1XX.Pressurization.CABIN ALT Up": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)"
	},
	"FSS.E1XX.Miscellaneous.COCKPIT DOOR CONTROL INHIB Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DOORCTRL_INHIB, Number) ! (>L:FSS_EXX_DOORCTRL_INHIB, Number)"
	},
	"FSS.E1XX.Miscellaneous.COCKPIT DOOR CONTROL LOCK Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_DOORCTRL_LOCK_COVER, Number)"
	},
	"FSS.E1XX.Miscellaneous.COCKPIT DOOR CONTROL LOCK Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DOORCTRL_LOCK_COVER, Number)"
	},
	"FSS.E1XX.Miscellaneous.COCKPIT DOOR CONTROL LOCK Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DOORCTRL_LOCK, Number) ! (>L:FSS_EXX_DOORCTRL_LOCK, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP ADF1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_ADF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP ADF2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_ADF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP DME1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_DME1_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP DME2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_DME2_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP NAV1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV1_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP NAV2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV2_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP NAV3 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV3_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP TEL Ramp Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_TEL_RAMP_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF1 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF2 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF3 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF3_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP VHF3 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF3_BTN, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP Vol Dec": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number) 0.028 - (>L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number)"
	},
	"FSS.E1XX.Radio.CPT ACP Vol Inc": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number) 0.028 + (>L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number)"
	},
	"FSS.E1XX.Lights.CPT Chart Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.CPT Chart Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB)"
	},
	"FSS.E1XX.Efis.CPT DCP Baro Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_BARO_ROT) 0.028 - (>L:FSS_EXX_DCP_L_BARO_ROT)"
	},
	"FSS.E1XX.Efis.CPT DCP Baro Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_BARO_ROT) 0.028 + (>L:FSS_EXX_DCP_L_BARO_ROT)"
	},
	"FSS.E1XX.Efis.CPT DCP Baro Push STD": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_L_BARO_STD)"
	},
	"FSS.E1XX.Efis.CPT DCP Baro Unit hPa": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_L_BARO_UNIT)"
	},
	"FSS.E1XX.Efis.CPT DCP Baro Unit IN": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_DCP_L_BARO_UNIT)"
	},
	"FSS.E1XX.Efis.CPT DCP BRG Circle Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_BRG_C) 1 + 4 % (>L:FSS_EXX_DCP_L_MODES_BRG_C)"
	},
	"FSS.E1XX.Efis.CPT DCP BRG Diamond Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_BRG_D) 1 + 4 % (>L:FSS_EXX_DCP_L_MODES_BRG_D)"
	},
	"FSS.E1XX.Efis.CPT DCP CRS Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_CRS_ROT) 0.028 - (>L:FSS_EXX_DCP_L_CRS_ROT)"
	},
	"FSS.E1XX.Efis.CPT DCP CRS Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_CRS_ROT) 0.028 + (>L:FSS_EXX_DCP_L_CRS_ROT)"
	},
	"FSS.E1XX.Efis.CPT DCP CRS Sync": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_CRS_SYNC) ! (>L:FSS_EXX_DCP_L_CRS_SYNC)"
	},
	"FSS.E1XX.Efis.CPT DCP FD Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_FD) ! (>L:FSS_EXX_DCP_L_MODES_FD)"
	},
	"FSS.E1XX.Efis.CPT DCP FMS Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_FMS) ! (>L:FSS_EXX_DCP_L_MODES_FMS)"
	},
	"FSS.E1XX.Efis.CPT DCP FPR Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_FPR) ! (>L:FSS_EXX_DCP_L_MODES_FPR)"
	},
	"FSS.E1XX.Efis.CPT DCP HSI Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_HSI) 1 + 3 % (>L:FSS_EXX_DCP_L_MODES_HSI)"
	},
	"FSS.E1XX.Efis.CPT DCP Minimums BARO": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_L_MIN_SRC)"
	},
	"FSS.E1XX.Efis.CPT DCP Minimums Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MIN_ROT) 0.028 - (>L:FSS_EXX_DCP_L_MIN_ROT)"
	},
	"FSS.E1XX.Efis.CPT DCP Minimums RA": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_DCP_L_MIN_SRC)"
	},
	"FSS.E1XX.Efis.CPT DCP PREV Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_PREV) 1 + 3 % (>L:FSS_EXX_DCP_L_MODES_PREV)"
	},
	"FSS.E1XX.Efis.CPT DCP VL Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_VL) ! (>L:FSS_EXX_DCP_L_MODES_VL)"
	},
	"FSS.E1XX.Efis.CPT DCP WX Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MODES_WX) ! (>L:FSS_EXX_DCP_L_MODES_WX)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT EICAS Brightness Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT EICAS Brightness Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.CPT Flood/Storm Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.CPT Flood/Storm Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.Cpt HGS BRT Dec": {
		"method": "calcCode",
		"code": "(L:FSS_E19X_HGS_PILOT_BRT, Number) 0.05 - 1 min 0 max (>L:FSS_E19X_HGS_PILOT_BRT, Number)"
	},
	"FSS.E1XX.Flight Instrumentation.Cpt HGS BRT Inc": {
		"method": "calcCode",
		"code": "(L:FSS_E19X_HGS_PILOT_BRT, Number) 0.05 + 1 min 0 max (>L:FSS_E19X_HGS_PILOT_BRT, Number)"
	},
	"FSS.E1XX.Flight Instrumentation.Cpt HGS Down": {
		"method": "calcCode",
		"code": "0 (>L:FSS_E19X_HGS_PILOT_STOWED, Number)"
	},
	"FSS.E1XX.Flight Instrumentation.Cpt HGS Up": {
		"method": "calcCode",
		"code": "1 (>L:FSS_E19X_HGS_PILOT_STOWED, Number)"
	},
	"FSS.E1XX.Warning.CPT Master Caution Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MASTER_CAUT_L_BTN) ! (>L:FSS_EXX_MASTER_CAUT_L_BTN)"
	},
	"FSS.E1XX.Warning.CPT Master Warning Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MASTER_WARN_L_BTN) ! (>L:FSS_EXX_MASTER_WARN_L_BTN)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT MFD Brightness Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT MFD Brightness Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT PFD Brightness Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT PFD Brightness Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT Reversionary Panel Displays Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_REVPANEL_L_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT Reversionary Panel Displays EICAS": {
		"method": "calcCode",
		"code": "3 (>L:FSS_EXX_REVPANEL_L_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT Reversionary Panel Displays MFD": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_REVPANEL_L_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.CPT Reversionary Panel Displays PFD": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_REVPANEL_L_DISPLAY)"
	},
	"FSS.E1XX.Miscellaneous.CPT Visor Position Dec": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_SUNVISOR_POS_PILOT, Number) 0.05 - 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_PILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.CPT Visor Position Inc": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_SUNVISOR_POS_PILOT, Number) 0.05 + 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_PILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.CPT Visor Stow": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_SUNVISOR_STOW_PILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.CPT Visor Unstow": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_SUNVISOR_STOW_PILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Window Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_WINDOW_L, Number)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Window Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_WINDOW_L, Number)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Windshield Wiper Left Hi": {
		"method": "calcCode",
		"code": "3 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Windshield Wiper Left Low": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Windshield Wiper Left Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)"
	},
	"FSS.E1XX.Miscellaneous.Cpt Windshield Wiper Left Timer": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)"
	},
	"FSS.E1XX.Electrical.DC BUS Ties Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_DC_BUS_TIES_SWITCH)"
	},
	"FSS.E1XX.Electrical.DC BUS Ties Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_DC_BUS_TIES_SWITCH)"
	},
	"FSS.E1XX.Electrical.DC PUMP AUTO": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)"
	},
	"FSS.E1XX.Electrical.DC PUMP Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)"
	},
	"FSS.E1XX.Electrical.DC PUMP On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)"
	},
	"FSS.E1XX.Lights.DOME Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_CPLT_BV_DOMELIGHT_SWITCH)"
	},
	"FSS.E1XX.Lights.DOME Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_CPLT_BV_DOMELIGHT_SWITCH)"
	},
	"FSS.E1XX.Flight Instrumentation.EICAS Full Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_EICAS_DECLUTTER_CANCEL, Number) ! (>L:FSS_EXX_EICAS_DECLUTTER_CANCEL, Number)"
	},
	"FSS.E1XX.Safety.EMER LT Armed": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)"
	},
	"FSS.E1XX.Safety.EMER LT Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)"
	},
	"FSS.E1XX.Safety.EMER LT On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 1 Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_COVER)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 1 Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_COVER)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_BTN)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_BTN)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 2 Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_COVER)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 2 Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_COVER)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_BTN)"
	},
	"FSS.E1XX.Hydraulic.ENG PUMP SHUTOFF SYS 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_BTN)"
	},
	"FSS.E1XX.Engines.Engine 1 Start Switch Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_PDSTL_POWERPLANT_L_COVER, Number)"
	},
	"FSS.E1XX.Engines.Engine 1 Start Switch Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_PDSTL_POWERPLANT_L_COVER, Number)"
	},
	"FSS.E1XX.Engines.Engine 1 Start Switch Run": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)"
	},
	"FSS.E1XX.Engines.Engine 1 Start Switch Start": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)"
	},
	"FSS.E1XX.Engines.Engine 1 Start Switch Stop": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)"
	},
	"FSS.E1XX.Engines.Engine 2 Start Switch Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_PDSTL_POWERPLANT_R_COVER, Number)"
	},
	"FSS.E1XX.Engines.Engine 2 Start Switch Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_PDSTL_POWERPLANT_R_COVER, Number)"
	},
	"FSS.E1XX.Engines.Engine 2 Start Switch Run": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)"
	},
	"FSS.E1XX.Engines.Engine 2 Start Switch Start": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)"
	},
	"FSS.E1XX.Engines.Engine 2 Start Switch Stop": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_ALT) 0.0277777777777778 - (>L:FSS_EXX_FGC_ROT_POS_ALT)"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_ALT) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_ALT)"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_ALT) ! (>L:FSS_EXX_FGC_BTN_ALT)"
	},
	"FSS.E1XX.Autopilot.FGP ALT Sel Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_VERTG_ALT_SEL_BUTTON) ! (>L:FSS_EXX_GSHIELD_VERTG_ALT_SEL_BUTTON)"
	},
	"FSS.E1XX.Autopilot.Input.FGP AP Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_AP) ! (>L:FSS_EXX_FGC_BTN_AP)"
	},
	"FSS.E1XX.Autopilot.Input.FGP APP Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_APP) ! (>L:FSS_EXX_FGC_BTN_APP)"
	},
	"FSS.E1XX.Autopilot.Input.FGP BANK Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_BANK) ! (>L:FSS_EXX_FGC_BTN_BANK)"
	},
	"FSS.E1XX.Autopilot.Input.FGP FLCH Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_FLCH) ! (>L:FSS_EXX_FGC_BTN_FLCH)"
	},
	"FSS.E1XX.Autopilot.Input.FGP FPA Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_FPA) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_FPA)"
	},
	"FSS.E1XX.Autopilot.Input.FGP FPA Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_FPA) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_FPA)"
	},
	"FSS.E1XX.Autopilot.Input.FGP FPA Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_FPA) ! (>L:FSS_EXX_FGC_BTN_FPA)"
	},
	"FSS.E1XX.Autopilot.Input.FGP HDG Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_HDG) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_HDG)"
	},
	"FSS.E1XX.Autopilot.Input.FGP HDG Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_HDG) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_HDG)"
	},
	"FSS.E1XX.Autopilot.Input.FGP HDG Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_HDG) ! (>L:FSS_EXX_FGC_BTN_HDG)"
	},
	"FSS.E1XX.Autopilot.Input.FGP HDG Sync Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_HDG_SYNC) ! (>L:FSS_EXX_FGC_BTN_HDG_SYNC)"
	},
	"FSS.E1XX.Autopilot.Input.FGP NAV Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_NAV) ! (>L:FSS_EXX_FGC_BTN_NAV)"
	},
	"FSS.E1XX.Autopilot.Input.FGP SPD Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_SPD) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_SPD)"
	},
	"FSS.E1XX.Autopilot.Input.FGP SPD Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_SPD) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_SPD)"
	},
	"FSS.E1XX.Autopilot.Input.FGP SPD Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_SPD_UNIT) ! (>L:FSS_EXX_FGC_BTN_SPD_UNIT)"
	},
	"FSS.E1XX.Autopilot.Input.FGP SRC Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_SRC) ! (>L:FSS_EXX_FGC_BTN_SRC)"
	},
	"FSS.E1XX.Autopilot.Input.FGP VS Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_VS) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_VS)"
	},
	"FSS.E1XX.Autopilot.Input.FGP VS Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_VS) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_VS)"
	},
	"FSS.E1XX.Autopilot.Input.FGP VS Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_VS) ! (>L:FSS_EXX_FGC_BTN_VS)"
	},
	"FSS.E1XX.Autopilot.Input.FGP YD Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_YD) ! (>L:FSS_EXX_FGC_BTN_YD)"
	},
	"FSS.E1XX.Safety.Fire Extinguisher Test Push": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_FE_TEST_BTN)"
	},
	"FSS.E1XX.Safety.Fire Extinguisher Test Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_FE_TEST_BTN)"
	},
	"FSS.E1XX.Controls.Flaps 0": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps 1": {
		"method": "calcCode",
		"code": "0.167 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps 2": {
		"method": "calcCode",
		"code": "0.333 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps 3": {
		"method": "calcCode",
		"code": "0.5 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps 4": {
		"method": "calcCode",
		"code": "0.667 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps 5": {
		"method": "calcCode",
		"code": "0.833 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Controls.Flaps Full": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_FLAPS_BV_LEVER)"
	},
	"FSS.E1XX.Radio.FO ACP ADF1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_ADF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP ADF2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_ADF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP DME1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_DME1_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP DME2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_DME2_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP NAV1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV1_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP NAV2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV2_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP NAV3 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV3_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP TEL Ramp Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_TEL_RAMP_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF1 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF1 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF1_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF2 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF2 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF2_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF3 Aud Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF3_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP VHF3 Mic Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF3_BTN, Number)"
	},
	"FSS.E1XX.Radio.FO ACP Vol Dec": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number) 0.028 - (>L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number)"
	},
	"FSS.E1XX.Radio.FO ACP Vol Inc": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number) 0.028 + (>L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number)"
	},
	"FSS.E1XX.Lights.FO Chart Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.FO Chart Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.FO Comp/Clk Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_COMP_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_COMP_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.FO Comp/Clk Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_COMP_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_COMP_BRT_KNOB)"
	},
	"FSS.E1XX.Efis.FO DCP Baro Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_BARO_ROT) 0.028 - (>L:FSS_EXX_DCP_R_BARO_ROT)"
	},
	"FSS.E1XX.Efis.FO DCP Baro Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_BARO_ROT) 0.028 + (>L:FSS_EXX_DCP_R_BARO_ROT)"
	},
	"FSS.E1XX.Efis.FO DCP Baro Push STD": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_R_BARO_STD)"
	},
	"FSS.E1XX.Efis.FO DCP Baro Unit hPa": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_R_BARO_UNIT)"
	},
	"FSS.E1XX.Efis.FO DCP Baro Unit IN": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_DCP_R_BARO_UNIT)"
	},
	"FSS.E1XX.Efis.FO DCP CRS Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_CRS_ROT) 0.028 - (>L:FSS_EXX_DCP_R_CRS_ROT)"
	},
	"FSS.E1XX.Efis.FO DCP CRS Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_CRS_ROT) 0.028 + (>L:FSS_EXX_DCP_R_CRS_ROT)"
	},
	"FSS.E1XX.Efis.FO DCP CRS Sync": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_CRS_SYNC) ! (>L:FSS_EXX_DCP_R_CRS_SYNC)"
	},
	"FSS.E1XX.Efis.FO DCP FD Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_MODES_FD) ! (>L:FSS_EXX_DCP_R_MODES_FD)"
	},
	"FSS.E1XX.Lights.FO Flood/Storm Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Lights.FO Flood/Storm Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Warning.FO Master Caution Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MASTER_CAUT_R_BTN) ! (>L:FSS_EXX_MASTER_CAUT_R_BTN)"
	},
	"FSS.E1XX.Warning.FO Master Warning Push": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MASTER_WARN_R_BTN) ! (>L:FSS_EXX_MASTER_WARN_R_BTN)"
	},
	"FSS.E1XX.Flight Instrumentation.FO MFD Brightness Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.FO MFD Brightness Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.FO PFD Brightness Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.FO PFD Brightness Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB)"
	},
	"FSS.E1XX.Flight Instrumentation.FO Reversionary Panel Displays Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_REVPANEL_R_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.FO Reversionary Panel Displays EICAS": {
		"method": "calcCode",
		"code": "3 (>L:FSS_EXX_REVPANEL_R_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.FO Reversionary Panel Displays MFD": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_REVPANEL_R_DISPLAY)"
	},
	"FSS.E1XX.Flight Instrumentation.FO Reversionary Panel Displays PFD": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_REVPANEL_R_DISPLAY)"
	},
	"FSS.E1XX.Miscellaneous.FO Visor Position Dec": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_SUNVISOR_POS_COPILOT, Number) 0.05 - 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_COPILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.FO Visor Position Inc": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_SUNVISOR_POS_COPILOT, Number) 0.05 + 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_COPILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.FO Visor Stow": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_SUNVISOR_STOW_COPILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.FO Visor Unstow": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_SUNVISOR_STOW_COPILOT, Number)"
	},
	"FSS.E1XX.Miscellaneous.Fo Window Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_WINDOW_R, Number)"
	},
	"FSS.E1XX.Miscellaneous.Fo Window Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_WINDOW_R, Number)"
	},
	"FSS.E1XX.Miscellaneous.Fo Windshield Wiper Right Hi": {
		"method": "calcCode",
		"code": "3 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)"
	},
	"FSS.E1XX.Miscellaneous.Fo Windshield Wiper Right Low": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)"
	},
	"FSS.E1XX.Miscellaneous.Fo Windshield Wiper Right Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)"
	},
	"FSS.E1XX.Miscellaneous.Fo Windshield Wiper Right Timer": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)"
	},
	"FSS.E1XX.Safety.FSTN Belts Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PSGR_FSTN_BELT_SWITCH)"
	},
	"FSS.E1XX.Safety.FSTN Belts On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PSGR_FSTN_BELT_SWITCH)"
	},
	"FSS.E1XX.Fuel.Fuel XFEED LOW 1": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_FUEL_XFEED)"
	},
	"FSS.E1XX.Fuel.Fuel XFEED LOW 2": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_FUEL_XFEED)"
	},
	"FSS.E1XX.Fuel.Fuel XFEED OFF": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_FUEL_XFEED)"
	},
	"FSS.E1XX.Electrical.GPU Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_GPU_BTN)"
	},
	"FSS.E1XX.Electrical.GPU On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_GPU_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Engine 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG1_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Engine 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG1_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Engine 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG2_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Engine 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG2_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Mode Auto": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_ICE_MODE)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Mode On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_ICE_MODE)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Test Eng": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_TEST)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Test Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_TEST)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Test Wing": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_HEATING_TEST)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Wing Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_ICE_WING_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Ice Prot Wing On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_ICE_WING_BTN)"
	},
	"FSS.E1XX.Electrical.IDG 1 Auto": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_ELEC_BV_IDG1)"
	},
	"FSS.E1XX.Electrical.IDG 1 Disc": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_IDG1)"
	},
	"FSS.E1XX.Electrical.IDG 1 Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_IDG1)"
	},
	"FSS.E1XX.Electrical.IDG 2 Auto": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_ELEC_BV_IDG2)"
	},
	"FSS.E1XX.Electrical.IDG 2 Disc": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_IDG2)"
	},
	"FSS.E1XX.Electrical.IDG 2 Off": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_IDG2)"
	},
	"FSS.E1XX.Lights.INSP Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_INSP_SWITCH)"
	},
	"FSS.E1XX.Lights.INSP Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_INSP_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING LEFT Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_LANDING_L_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING LEFT Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_LANDING_L_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING NOSE Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_LANDING_NOSE_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING NOSE Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_LANDING_NOSE_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING RIGHT Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_LANDING_R_SWITCH)"
	},
	"FSS.E1XX.Lights.LANDING RIGHT Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_LANDING_R_SWITCH)"
	},
	"FSS.E1XX.MCDU.Left MCDU . Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_DOT_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU / Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_SLASH_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU +/- Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_PLUSMIN_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 0 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_0_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_1_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_2_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_3_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_4_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_5_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_6_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 7 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_7_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 8 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_8_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU 9 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_9_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU A Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_A_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU B Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_B_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU BRT Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_BRT_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU C Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_C_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU CB Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_CB_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU CLR Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_CLR_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU D Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_D_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU DEL Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_DEL_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU DIM Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_DIM_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU DLK Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_DLK_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU E Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_E_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU F Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_F_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU FPL Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_FPL_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU G Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_G_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU H Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_H_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU I Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_I_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU Inner Knob Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.MCDU.Left MCDU Inner Knob Counter Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.MCDU.Left MCDU J Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_J_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU K Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_K_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_L_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L1_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L2_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L3_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L4_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L5_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU L6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L6_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU M Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_M_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU MENU Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_MENU_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU N Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_N_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU NAV Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_NAV_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU NEXT Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_NEXT_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU O Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_O_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU Outer Knob Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.MCDU.Left MCDU Outer Knob Counter Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.MCDU.Left MCDU P Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_P_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU PERF Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PERF_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU PREV Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PREV_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU PROG Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PROG_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU Q Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Q_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_R_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R1_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R2_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R3_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R4_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R5_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU R6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R6_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU RADIO Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_RADIO_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU RTE Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_RTE_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU S Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_S_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU SPACE Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_SPACE_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU T Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_T_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU TRS Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_TRS_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU U Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_U_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU V Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_V_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU W Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_W_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU X Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_X_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU Y Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Y_BTN)"
	},
	"FSS.E1XX.MCDU.Left MCDU Z Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Z_BTN)"
	},
	"FSS.E1XX.Autopilot.Left Thr A/T Disc Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_THROTTLE_L_ATDC_BTN, Number) ! (>L:FSS_EXX_THROTTLE_L_ATDC_BTN, Number)"
	},
	"FSS.E1XX.Lights.LOGO Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_LOGO_SWITCH)"
	},
	"FSS.E1XX.Lights.LOGO Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_LOGO_SWITCH)"
	},
	"FSS.E1XX.Lights.MAIN PNL Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_MAIN_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_MAIN_KNOB)"
	},
	"FSS.E1XX.Lights.MAIN PNL Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_MAIN_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_MAIN_KNOB)"
	},
	"FSS.E1XX.Lights.NAV Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_NAV_SWITCH)"
	},
	"FSS.E1XX.Lights.NAV Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_NAV_SWITCH)"
	},
	"FSS.E1XX.Safety.NO SMKG Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PSGR_NOSMK_SWITCH)"
	},
	"FSS.E1XX.Safety.NO SMKG On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PSGR_NOSMK_SWITCH)"
	},
	"FSS.E1XX.Lights.OVHD PNL Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_OVHD_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_OVHD_KNOB)"
	},
	"FSS.E1XX.Lights.OVHD PNL Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_OVHD_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_OVHD_KNOB)"
	},
	"FSS.E1XX.Gear.Parking Brake Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_PARKBRAKE_BV_LEVER, Number)"
	},
	"FSS.E1XX.Gear.Parking Brake Set": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_PARKBRAKE_BV_LEVER, Number)"
	},
	"FSS.E1XX.Safety.Passenger Oxygen Masks Deploy Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_OXY_MASK)"
	},
	"FSS.E1XX.Safety.Passenger Oxygen Masks Deploy Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_OXY_MASK)"
	},
	"FSS.E1XX.Safety.Passenger Oxygen Masks Deploy OVR": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_OXY_MASK)"
	},
	"FSS.E1XX.Lights.PEDESTAL Light Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_PDSTL_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_PDSTL_KNOB)"
	},
	"FSS.E1XX.Lights.PEDESTAL Light Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_CPLT_BV_PDSTL_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_PDSTL_KNOB)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION Dump Btn Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PRESS_DUMP_BTN)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION Dump Btn On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PRESS_DUMP_BTN)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION Dump Cover Close": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PRESS_DUMP_COVER)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION Dump Cover Open": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PRESS_DUMP_COVER)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION LFE Down": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PRESS_LFE)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION LFE Stop": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PRESS_LFE)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION LFE Up": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_PRESS_LFE)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION MODE Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PRESS_MODE)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION MODE LFE CTRL": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_PRESS_MODE)"
	},
	"FSS.E1XX.Pressurization.PRESSURIZATION MODE Man": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PRESS_MODE)"
	},
	"FSS.E1XX.Hydraulic.PTU Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_PTU)"
	},
	"FSS.E1XX.Hydraulic.PTU Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_PTU)"
	},
	"FSS.E1XX.Hydraulic.PTU On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_HYD_PTU)"
	},
	"FSS.E1XX.Lights.RED BCN Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_RED_BCN_SWITCH)"
	},
	"FSS.E1XX.Lights.RED BCN Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_RED_BCN_SWITCH)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU . Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_DOT_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU / Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_SLASH_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU +/- Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_PLUSMIN_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 0 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_0_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_1_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_2_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_3_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_4_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_5_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_6_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 7 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_7_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 8 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_8_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU 9 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_9_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU A Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_A_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU B Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_B_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU BRT Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_BRT_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU C Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_C_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU CB Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_CB_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU CLR Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_CLR_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU D Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_D_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU DEL Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_DEL_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU DIM Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_DIM_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU DLK Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_DLK_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU E Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_E_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU F Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_F_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU FPL Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_FPL_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU G Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_G_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU H Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_H_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU I Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_I_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Inner Knob Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Inner Knob Counter Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU J Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_J_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU K Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_K_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_L_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L1_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L2_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L3_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L4_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L5_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU L6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L6_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU M Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_M_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU MENU Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_MENU_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU N Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_N_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU NAV Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_NAV_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU NEXT Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_NEXT_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU O Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_O_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Outer Knob Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Outer Knob Counter Clockwise": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU P Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_P_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU PERF Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PERF_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU PREV Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PREV_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU PROG Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PROG_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Q Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Q_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_R_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R1 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R1_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R2 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R2_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R3 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R3_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R4 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R4_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R5 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R5_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU R6 Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R6_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU RADIO Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_RADIO_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU RTE Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_RTE_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU S Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_S_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU SPACE Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_SPACE_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU T Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_T_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU TRS Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_TRS_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU U Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_U_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU V Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_V_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU W Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_W_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU X Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_X_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Y Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Y_BTN)"
	},
	"FSS.E1XX.MCDU.RIGHT MCDU Z Press": {
		"method": "calcCode",
		"code": "1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Z_BTN)"
	},
	"FSS.E1XX.Autopilot.Right Thr A/T Disc Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_THROTTLE_R_ATDC_BTN, Number) ! (>L:FSS_EXX_THROTTLE_R_ATDC_BTN, Number)"
	},
	"FSS.E1XX.ISIS.Standby Instrument BARO Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_IESS_BV_BARO_KNOB) 0.028 - (>L:FSS_EXX_IESS_BV_BARO_KNOB)"
	},
	"FSS.E1XX.ISIS.Standby Instrument BARO Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_IESS_BV_BARO_KNOB) 0.028 + (>L:FSS_EXX_IESS_BV_BARO_KNOB)"
	},
	"FSS.E1XX.ISIS.Input.Standby Instrument Brightness Decrease": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_IESS_BV_BRT_DN_BTN) 0 (>L:FSS_EXX_IESS_BV_BRT_DN_BTN)"
	},
	"FSS.E1XX.ISIS.Input.Standby Instrument Brightness Increase": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_IESS_BV_BRT_UP_BTN) 0 (>L:FSS_EXX_IESS_BV_BRT_UP_BTN)"
	},
	"FSS.E1XX.ISIS.Standby Instrument STD Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_IESS_BV_STD_BTN)"
	},
	"FSS.E1XX.Miscellaneous.Steep Approach Press": {
		"method": "calcCode",
		"code": "(L:FSS_E19X_STEEP_APPR, Number) ! (>L:FSS_E19X_STEEP_APPR, Number)"
	},
	"FSS.E1XX.Lights.STERILE Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_PSGR_STERILE_SWITCH)"
	},
	"FSS.E1XX.Lights.STERILE On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_PSGR_STERILE_SWITCH)"
	},
	"FSS.E1XX.Lights.STROBE Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_STROBE_SWITCH)"
	},
	"FSS.E1XX.Lights.STROBE Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_STROBE_SWITCH)"
	},
	"FSS.E1XX.Hydraulic.SYS 1 ELEC PUMP Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 1 ELEC PUMP Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 1 ELEC PUMP On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 2 ELEC PUMP Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 2 ELEC PUMP Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 2 ELEC PUMP On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)"
	},
	"FSS.E1XX.Hydraulic.SYS 3 ELEC PUMP A Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_A)"
	},
	"FSS.E1XX.Hydraulic.SYS 3 ELEC PUMP A On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_A)"
	},
	"FSS.E1XX.Hydraulic.SYS 3 ELEC PUMP B Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)"
	},
	"FSS.E1XX.Hydraulic.SYS 3 ELEC PUMP B Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)"
	},
	"FSS.E1XX.Hydraulic.SYS 3 ELEC PUMP B On": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)"
	},
	"FSS.E1XX.Warning.T/O Config Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TO_CONFIG_BTN, Number)"
	},
	"FSS.E1XX.Warning.T/O Config Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TO_CONFIG_BTN, Number)"
	},
	"FSS.E1XX.Lights.TAXI NOSE Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_TAXI_NOSE_SWITCH)"
	},
	"FSS.E1XX.Lights.TAXI NOSE Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_TAXI_NOSE_SWITCH)"
	},
	"FSS.E1XX.Lights.TAXI SIDE Light Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_EXLT_TAXI_SIDE_SWITCH)"
	},
	"FSS.E1XX.Lights.TAXI SIDE Light On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_EXLT_TAXI_SIDE_SWITCH)"
	},
	"FSS.E1XX.Autopilot.TOGA Press": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_THROTTLE_BV_TO_MODE, Number) ! (>L:FSS_EXX_THROTTLE_BV_TO_MODE, Number)"
	},
	"FSS.E1XX.Controls.TRIM PITCH BACKUP SW DN Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TRIM_PITCH_1_DN, Number)"
	},
	"FSS.E1XX.Controls.TRIM PITCH BACKUP SW DN Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TRIM_PITCH_1_DN, Number)"
	},
	"FSS.E1XX.Controls.TRIM PITCH BACKUP SW UP Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TRIM_PITCH_1_UP, Number)"
	},
	"FSS.E1XX.Controls.TRIM PITCH BACKUP SW UP Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TRIM_PITCH_1_UP, Number)"
	},
	"FSS.E1XX.Controls.TRIM ROLL LWD Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TRIM_AIL_DN, Number)"
	},
	"FSS.E1XX.Controls.TRIM ROLL LWD Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TRIM_AIL_DN, Number)"
	},
	"FSS.E1XX.Controls.TRIM ROLL RWD Press": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TRIM_AIL_UP, Number)"
	},
	"FSS.E1XX.Controls.TRIM ROLL RWD Release": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TRIM_AIL_UP, Number)"
	},
	"FSS.E1XX.Controls.TRIM YAW Left": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_TRIM_YAW, Number)"
	},
	"FSS.E1XX.Controls.TRIM YAW Neutral": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_TRIM_YAW, Number)"
	},
	"FSS.E1XX.Controls.TRIM YAW Right": {
		"method": "calcCode",
		"code": "2 (>L:FSS_EXX_TRIM_YAW, Number)"
	},
	"FSS.E1XX.Electrical.TRU 1 Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_DC_TRU1_SWITCH)"
	},
	"FSS.E1XX.Electrical.TRU 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_DC_TRU1_SWITCH)"
	},
	"FSS.E1XX.Electrical.TRU 2 Auto": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_DC_TRU2_SWITCH)"
	},
	"FSS.E1XX.Electrical.TRU 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_DC_TRU2_SWITCH)"
	},
	"FSS.E1XX.Electrical.TRU ESS Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_ELEC_BV_DC_TRUESS_SWITCH)"
	},
	"FSS.E1XX.Electrical.TRU ESS On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_ELEC_BV_DC_TRUESS_SWITCH)"
	},
	"FSS.E1XX.Anti-Ice.Windshield Heating 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_1_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Windshield Heating 1 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_1_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Windshield Heating 2 Off": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_2_BTN)"
	},
	"FSS.E1XX.Anti-Ice.Windshield Heating 2 On": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_2_BTN)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_APU_Bleed_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_apu_bleed)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_APU_Bleed_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_apu_bleed)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_APU_Bleed_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_apu_bleed) ! (>L:INI_apu_bleed)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_Eng1_HP_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_bleed_eng1_hp_valve) ! (>L:INI_bleed_eng1_hp_valve)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_Eng1_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_BLEED) ! (>L:INI_ENG1_BLEED)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_Eng2_HP_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_bleed_eng2_hp_valve) ! (>L:INI_bleed_eng2_hp_valve)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_Eng2_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_BLEED) ! (>L:INI_ENG2_BLEED)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_XFeed_Mode_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_XBLEED_MODE) ! (>L:INI_XBLEED_MODE)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Air_Bleed_XFeed_Valve_Button": {
		"method": "calcCode",
		"code": "(L:INI_XBLEED_MODE, Bool) if{ (L:INI_XBLEED) ! (>L:INI_XBLEED) } (L:INI_XBLEED) (>L:INI_XBLEED_BUTTON) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Auto_Press_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_AUTO_PRESS_ACTUAL) 0.5 - 0 max 10 min (>L:INI_CABIN_AUTO_PRESS_ACTUAL)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Auto_Press_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_AUTO_PRESS_ACTUAL) 0.5 + 0 max 10 min (>L:INI_CABIN_AUTO_PRESS_ACTUAL)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Outflow_Aft_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_PRESS_OUTFLOW_AFT_State) ! (>L:__GUARD_PRESS_OUTFLOW_AFT_State)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Outflow_After_Button_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_OUTFLOW_AFTER_BUTTON) ! (>L:INI_CABIN_OUTFLOW_AFTER_BUTTON) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Outflow_Forward_Button_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_OUTFLOW_FORWARD_BUTTON) ! (>L:INI_CABIN_OUTFLOW_FORWARD_BUTTON) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Outflow_Fwd_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_PRESS_OUTFLOW_FWD_State) ! (>L:__GUARD_PRESS_OUTFLOW_FWD_State)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Sys1_Button": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CABIN_SYS1_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Sys1_Regulator_Button": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CABIN_SYS1_REGULATOR_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Sys2_Button": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CABIN_SYS2_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Cabin_Sys2_Regulator_Button": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CABIN_SYS2_REGULATOR_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Aft_Cabin_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_4) 5 - 0 max (>L:INI_AIRCOND_LVL_4) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Aft_Cabin_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_4) 5 + 100 min (>L:INI_AIRCOND_LVL_4) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Bulk_Cargo_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_5) 5 - 0 max (>L:INI_AIRCOND_LVL_5) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Bulk_Cargo_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_5) 5 + 100 min (>L:INI_AIRCOND_LVL_5) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Cockpit_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_1) 5 - 0 max (>L:INI_AIRCOND_LVL_1) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Cockpit_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_1) 5 + 100 min (>L:INI_AIRCOND_LVL_1) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Econ_Flow_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_econ_flow_selected) ! (>L:INI_econ_flow_selected) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Fwd_Cabin_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_2) 5 - 0 max (>L:INI_AIRCOND_LVL_2) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Fwd_Cabin_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_2) 5 + 100 min (>L:INI_AIRCOND_LVL_2) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Fwd_Cargo_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_6) 5 - 0 max (>L:INI_AIRCOND_LVL_6) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Fwd_Cargo_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_6) 5 + 100 min (>L:INI_AIRCOND_LVL_6) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Hot_Air_Supply_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_HOT_AIR_SUPPLY_ON) ! (>L:INI_HOT_AIR_SUPPLY_ON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Isol_Valve_Left_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_LEFT) ! (>L:INI_ISOLATION_VALVE_LEFT)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Isol_Valve_Right_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_RIGHT) ! (>L:INI_ISOLATION_VALVE_RIGHT)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Max_Cool_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_max_cool) ! (>L:INI_max_cool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Mid_Cabin_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_3) 5 - 0 max (>L:INI_AIRCOND_LVL_3) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Mid_Cabin_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_AIRCOND_LVL_3) 5 + 100 min (>L:INI_AIRCOND_LVL_3) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pack_Valve_1_Press": {
		"method": "calcCode",
		"code": "(L:INI_PACK1_BUTTON) ! (>L:INI_PACK1_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pack_Valve_2_Press": {
		"method": "calcCode",
		"code": "(L:INI_PACK2_BUTTON) ! (>L:INI_PACK2_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_CRT": {
		"method": "calcCode",
		"code": "2 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cabin_Aft": {
		"method": "calcCode",
		"code": "3 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cabin_Fwd": {
		"method": "calcCode",
		"code": "5 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cabin_Mid": {
		"method": "calcCode",
		"code": "4 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cargo_Bulk": {
		"method": "calcCode",
		"code": "1 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cargo_Fwd": {
		"method": "calcCode",
		"code": "0 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Pressure_Selector_Cockpit": {
		"method": "calcCode",
		"code": "6 (>L:INI_pressure_selector_indicator_actual)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Ram_Air_Button_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_RAM_AIR_State) ! (>L:__GUARD_RAM_AIR_State)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Compt_Ram_Air_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_RAM_AIR_ON) ! (>L:INI_RAM_AIR_ON) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Man_Press_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CABIN_MAN_PRESS_BUTTON)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Man_V_S_Control_Dn": {
		"method": "calcCode",
		"code": "2 (>L:INI_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Man_V_S_Control_Mid": {
		"method": "calcCode",
		"code": "1 (>L:INI_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Man_V_S_Control_Up": {
		"method": "calcCode",
		"code": "0 (>L:INI_MAN_VS_CONTROL_SWITCH)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack1_Man_Ctl_Switch_Cold_Press": {
		"method": "calcCode",
		"code": "2 (>L:INI_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack1_Man_Ctl_Switch_Hot_Press": {
		"method": "calcCode",
		"code": "0 (>L:INI_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack1_Man_Ctl_Switch_Release": {
		"method": "calcCode",
		"code": "1 (>L:INI_PACK1_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack1_Mode_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_bleed_pack1_mode) ! (>L:INI_bleed_pack1_mode)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack2_Man_Ctl_Switch_Cold_Press": {
		"method": "calcCode",
		"code": "2 (>L:INI_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack2_Man_Ctl_Switch_Hot_Press": {
		"method": "calcCode",
		"code": "0 (>L:INI_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack2_Man_Ctl_Switch_Release": {
		"method": "calcCode",
		"code": "1 (>L:INI_PACK2_MAN_SWITCH) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Pack2_Mode_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_bleed_pack2_mode) ! (>L:INI_bleed_pack2_mode)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Cargo_Valve_Off_Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CARGO_VALVE, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Cargo_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_CARGO_VALVE) ! (>L:INI_CARGO_VALVE)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Extract_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_vent_extract_valve) ! (>L:INIDR_vent_extract_valve) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Gnd_Ctl_Off_Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VENT_GND_CTL, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Gnd_Ctl_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_VENT_GND_CTL) ! (>L:INI_VENT_GND_CTL)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Gnd_Ovrd_On_Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VENT_GND_OVRD, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Gnd_Ovrd_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_VENT_GND_OVRD) ! (>L:INI_VENT_GND_OVRD)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300_Ovhd_Vent_Ovbd_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_vent_outboard_valve) ! (>L:INIDR_vent_outboard_valve) "
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Anti_Ice_Eng_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_ANTI_ICE, Bool) ! (>L:INI_ENG1_ANTI_ICE, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Anti_Ice_Eng_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_ANTI_ICE, Bool) ! (>L:INI_ENG2_ANTI_ICE, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Anti_Ice_Wing_ALTN_Mode_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ANTI_ICE_WING_MODE, Bool) ! (>L:INI_ANTI_ICE_WING_MODE, Bool)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Anti_Ice_Wing_Supply_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_WING_ANTI_ICE, Bool) ! (>L:INI_WING_ANTI_ICE, Bool)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Probe_Heat_Capt_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_CAPT) ! (>L:INI_PROBE_HEAT_CAPT) "
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Probe_Heat_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_COPILOT) ! (>L:INI_PROBE_HEAT_COPILOT) "
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Probe_Heat_Standby_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_STANDBY) ! (>L:INI_PROBE_HEAT_STANDBY)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Window_Heater_Left_Lat_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT1) ! (>L:INI_WINDOW_HEAT1)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Window_Heater_Left_WSLO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT2) ! (>L:INI_WINDOW_HEAT2)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Window_Heater_Right_Lat_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT4) ! (>L:INI_WINDOW_HEAT4)"
	},
	"IniBuilds.A300.Anti-Ice.A300_Ovhd_Window_Heater_Right_WSLO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT3) ! (>L:INI_WINDOW_HEAT3)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_ALT_HLD_Button": {
		"method": "calcCode",
		"code": "1 (>L:AP1_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Altitude_Dial_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_ALTITUDE_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Altitude_Dial_Up": {
		"method": "calcCode",
		"code": "1 (>L:INI_ALTITUDE_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Altitude_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_ALTITUDE_PULL_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Altitude_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_ALTITUDE_PUSH_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Auto_Throttle": {
		"method": "calcCode",
		"code": "1 (>L:AP8_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_CWS_CMD_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_CWS_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Heading_Dial_Dn": {
		"method": "calcCode",
		"code": "1 (>L:INI_HEADING_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Heading_Dial_UP": {
		"method": "calcCode",
		"code": "1 (>L:INI_HEADING_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Heading_Managed": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Heading_Select": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_SELECTED_HEADING_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Heading_Sync": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_SYNC_HEADING_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_LAND_Button": {
		"method": "calcCode",
		"code": "1 (>L:AP7_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_LOC_V_L_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:AP6_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_LVL_CHG": {
		"method": "calcCode",
		"code": "1 (>L:AP2_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_NAV_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_PROFILE_Button": {
		"method": "calcCode",
		"code": "1 (>L:AP3_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Speed_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_AIRSPEED_DIAL_DN_COMMAND) "
	},
	"IniBuilds.A300.Autopilot.A300_AP_Speed_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_AIRSPEED_DIAL_UP_COMMAND) "
	},
	"IniBuilds.A300.Autopilot.A300_AP_Speed_Knob_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_SELECTED_SPEED_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_Speed_Knob_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_MANAGED_SPEED_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_VS_Dial_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_VVI_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_VS_Dial_Up": {
		"method": "calcCode",
		"code": "1 (>L:INI_VVI_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A300.Autopilot.A300_AP_VS_Pull": {
		"method": "calcCode",
		"code": "1 (>L:AP9_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP1_Toggle_": {
		"method": "calcCode",
		"code": "1 (>L:INI_AP1_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_AP2_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_AP2_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_Autoland_Light_Test_Switch": {
		"method": "calcCode",
		"code": "(L:INI_AUTOLAND_LIGHT_TEST) ! (>L:INI_AUTOLAND_LIGHT_TEST)"
	},
	"IniBuilds.A300.Autopilot.A300_SPD_MACH_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_SPD_MACH_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_Stop_Rudder_Input_Test_Button": {
		"method": "calcCode",
		"code": "(L:INI_STOP_RUDDER_INPUT_TEST_BUTTON) ! (>L:INI_STOP_RUDDER_INPUT_TEST_BUTTON)"
	},
	"IniBuilds.A300.Autopilot.A300_Takeoff_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_takeoff_toggle)"
	},
	"IniBuilds.A300.Autopilot.A300_Yoke_Autopilot_Disconnect_Push": {
		"method": "calcCode",
		"code": "1 (>K:AUTOPILOT_OFF)"
	},
	"IniBuilds.A300.Autothrust System.A300_AP_ATHR_Button": {
		"method": "calcCode",
		"code": "1 (>L:AP8_BUTTON)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_ATS_1_Switch_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_autothrottle_master_switch1)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_ATS_1_Switch_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_autothrottle_master_switch1)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_ATS_2_Switch_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_autothrottle_master_switch2)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_ATS_2_Switch_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_autothrottle_master_switch2)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_Eng_Trim_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_ENG_TRIM_State) ! (>L:__GUARD_ENG_TRIM_State)"
	},
	"IniBuilds.A300.Autothrust System.A300_Ovhd_Engine_Trim_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_ENG_TRIM_State) ! if{ 1 (>L:__GUARD_ENG_TRIM_State) } (L:INI_ENG_TRIM) ! (>L:INI_ENG_TRIM)"
	},
	"IniBuilds.A300.Avionics.A300_ADC_Inst_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_fo_switch_adc_inst_fo1) ! (>L:INIDR_fo_switch_adc_inst_fo1)"
	},
	"IniBuilds.A300.Avionics.A300_ATT_HDG_FO_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_ATT_HDG_COMMAND)"
	},
	"IniBuilds.A300.Avionics.A300_Capt_Terr_Mode_GPWS_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_terr_mode) ! (>L:INIDR_terr_mode)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_ADC_Inst_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_capt_switch_adc_inst_fo1) ! (>L:INIDR_capt_switch_adc_inst_fo1)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_ATT_HDG_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_CAPT_ATT_HDG_COMMAND)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_FD_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_capt_switch_fd_fo1) ! (>L:INIDR_capt_switch_fd_fo1)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_PFD_Brightness_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_60) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_PFD_Brightness_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_60) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_Cpt_PFD_ND_XFR_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_pfd_nd_xfr) ! (>L:INIDR_pfd_nd_xfr)"
	},
	"IniBuilds.A300.Avionics.A300_FD_FPV__Switch_Capt_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A300.Avionics.A300_FD_FPV__Switch_Capt_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A300.Avionics.A300_FD_FPV__Switch_Capt_UP": {
		"method": "calcCode",
		"code": "2 (>L:INI_FDIR_SWITCH_CAPT)"
	},
	"IniBuilds.A300.Avionics.A300_FO_EFIS_SGU_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_SGU_COMMAND)"
	},
	"IniBuilds.A300.Avionics.A300_FO_FD_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_fo_switch_fd_fo1) ! (>L:INIDR_fo_switch_fd_fo1)"
	},
	"IniBuilds.A300.Avionics.A300_FO_ND_Brightness_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_63) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_FO_ND_Brightness_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_63) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_FO_PFD_Brightness_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_62) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_FO_PFD_Brightness_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_62) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_FO_PFD_ND_XFR_Toggle": {
		"method": "calcCode",
		"code": "(L:INIDR_pfd_nd_xfr) ! (>L:INIDR_pfd_nd_xfr)"
	},
	"IniBuilds.A300.Avionics.A300_FO_Terr_Mode_GPWS_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_terr_mode) ! (>L:INI_terr_mode)"
	},
	"IniBuilds.A300.Avionics.A300_GPWS_Flap_Switch_Flap_Ovrd": {
		"method": "calcCode",
		"code": "1 (>L:INI_GPWS_FLAP_SWITCH)"
	},
	"IniBuilds.A300.Avionics.A300_GPWS_Flap_Switch_Norm": {
		"method": "calcCode",
		"code": "0 (>L:INI_GPWS_FLAP_SWITCH)"
	},
	"IniBuilds.A300.Avionics.A300_GPWS_Flap_Switch_Off": {
		"method": "calcCode",
		"code": "2 (>L:INI_GPWS_FLAP_SWITCH)"
	},
	"IniBuilds.A300.Avionics.A300_Landing_Elevation_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_landing_elevation, Number) 50 - (>L:INI_landing_elevation, Number)"
	},
	"IniBuilds.A300.Avionics.A300_Landing_Elevation_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_landing_elevation, Number) 50 + (>L:INI_landing_elevation, Number)"
	},
	"IniBuilds.A300.Avionics.A300_ND_Brightness_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_12) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_ND_Brightness_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_12) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_ND_Brightness_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_61) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_ND_Brightness_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_61) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.Avionics.A300_TERR_Button_CPT_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TERR_ON_CPT) ! (>L:INI_TERR_ON_CPT)"
	},
	"IniBuilds.A300.Avionics.A300_TERR_Button_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TERR_ON_FO) ! (>L:INI_TERR_ON_FO)"
	},
	"IniBuilds.A300.Controls.A300_Capt_Yoke_Trim_Switch_Down": {
		"method": "calcCode",
		"code": "2 (>L:INI_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_Capt_Yoke_Trim_Switch_Release": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_Capt_Yoke_Trim_Switch_Up": {
		"method": "calcCode",
		"code": "0 (>L:INI_CPT_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_FO_Yoke_Trim_Switch_Down": {
		"method": "calcCode",
		"code": "2 (>L:INI_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_FO_Yoke_Trim_Switch_Release": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_FO_Yoke_Trim_Switch_Up": {
		"method": "calcCode",
		"code": "0 (>L:INI_FO_YOKE_TRIM_SWITCH)"
	},
	"IniBuilds.A300.Controls.A300_GPWS_Landing_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_GPWS_LANDING_SWITCH) ! (>L:INI_GPWS_LANDING_SWITCH) "
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Pitch_Trim1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_pitch_trim1)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Pitch_Trim1_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_pitch_trim1)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Pitch_Trim2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_pitch_trim2)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Pitch_Trim2_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_pitch_trim2)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Yaw_Damper_1_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_yaw_damper1)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Yaw_Damper_1_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_yaw_damper1)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Yaw_Damper_2_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_yaw_damper2)"
	},
	"IniBuilds.A300.Controls.A300_Ovhd_Yaw_Damper_2_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_yaw_damper2)"
	},
	"IniBuilds.A300.Controls.A300_Ped_Spoilers_Arm_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPOILERS_ARMED, Bool) ! (L:INI_SPOILERS_HANDLE_POSITION, position 16k) 0 == and if{ 1 } els{ 0 } (>K:SPOILERS_ARM_SET) "
	},
	"IniBuilds.A300.Controls.A300_Rudder_Trim_Knob_Left": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_LEFT)"
	},
	"IniBuilds.A300.Controls.A300_Rudder_Trim_Knob_Right": {
		"method": "calcCode",
		"code": "(>K:RUDDER_TRIM_RIGHT)"
	},
	"IniBuilds.A300.Controls.A300_Rudder_Trim_Reset_Button_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_RESET_RUDDER_TRIM_COMMAND)"
	},
	"IniBuilds.A300.Controls.A300_Rudder_Trim_Reset_Button_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_RESET_RUDDER_TRIM_COMMAND)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_AC_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ELEC_AC)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_APU_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_APU)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_BLEED_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_BLEED)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_CLR_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_CLR)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_COND_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_COND)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_DC_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ELEC_DC)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_DOOR_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_DOOR)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_ENG_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ENG)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_EWD_RCL_Press": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_RCL)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_EWD_STS_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_STS)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_FCTL_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FCTL)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_FUEL_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FUEL)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_HYD_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_HYD)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_Left_Display_Brightness_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_64) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_Left_Display_Brightness_Knob_Inc": {
		"method": "calcCode",
		"code": "(>L:LIGHTING_POTENTIOMETER_64) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_PRESS_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_PRESS)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_Right_Display_Brightness_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_65) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_Right_Display_Brightness_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_65) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_SGU_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SGU1) ! (>L:INI_SGU1)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_SGU_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SGU2) ! (>L:INI_SGU2)"
	},
	"IniBuilds.A300.ECAM.A300_ECAM_WHEEL_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_WHEEL)"
	},
	"IniBuilds.A300.EFIS.A300_Cpt_EFIS_SGU_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_CAPT_SGU_COMMAND)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_ARPT_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_ARPT_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_CSTR_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_CSTR_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_DH_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_DH_COMMAND)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_DH_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_FPA_DH_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_DH_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_FPA_DH_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_FPA_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_FPA_COMMAND)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_NDB_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_NDB_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_VOR_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_VOR_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Cpt_WPT_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_FIXES_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_DH_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_DH_COMMAND)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_DH_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_FPA_DH_KNOB_FO_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_DH_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_FPA_DH_KNOB_FO_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_FPA_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_FPA_COMMAND)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Cpt_ARC": {
		"method": "calcCode",
		"code": "2 (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Cpt_MAP": {
		"method": "calcCode",
		"code": "3 (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Cpt_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Cpt_ROSE": {
		"method": "calcCode",
		"code": "1 (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Cpt_TEST": {
		"method": "calcCode",
		"code": "0 (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_120": {
		"method": "calcCode",
		"code": "3 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_15": {
		"method": "calcCode",
		"code": "0 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_240": {
		"method": "calcCode",
		"code": "4 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_30": {
		"method": "calcCode",
		"code": "1 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_60": {
		"method": "calcCode",
		"code": "2 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Selected_Nav_Capt_Switch_ILS": {
		"method": "calcCode",
		"code": "2 (>L:INI_efis_selected_nav_capt)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Selected_Nav_Capt_Switch_NAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_efis_selected_nav_capt)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Selected_Nav_Capt_Switch_VOR": {
		"method": "calcCode",
		"code": "0 (>L:INI_efis_selected_nav_capt)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Capt_Dec": {
		"method": "calcCode",
		"code": "(L:INI_map_mode_capt_switch) -- 0 max 4 min (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_Capt_Inc": {
		"method": "calcCode",
		"code": "(L:INI_map_mode_capt_switch) ++ 0 max 4 min (>L:INI_map_mode_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_Dec": {
		"method": "calcCode",
		"code": "(L:INI_map_mode_fo_switch) -- 0 max 4 min (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_Inc": {
		"method": "calcCode",
		"code": "(L:INI_map_mode_fo_switch) ++ 0 max 4 min (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_Dec": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) -- 0 max 4 min (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_Capt_Inc": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) ++ 0 max 4 min (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_Dec": {
		"method": "calcCode",
		"code": "(L:INI_map_range_fo_switch) -- 0 max 4 min (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_Inc": {
		"method": "calcCode",
		"code": "(L:INI_map_range_fo_switch) ++ 0 max 4 min (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_ARPT_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_FO_ARPT_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_CSTR_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_FO_CSTR_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_NDB_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_FO_NDB_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_VOR_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_FO_VOR_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_FO_WPT_Button": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_FO_FIXES_BUTTON)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_ARC": {
		"method": "calcCode",
		"code": "2 (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_MAP": {
		"method": "calcCode",
		"code": "3 (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_ROSE": {
		"method": "calcCode",
		"code": "1 (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Mode_FO_TEST": {
		"method": "calcCode",
		"code": "0 (>L:INI_map_mode_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_120": {
		"method": "calcCode",
		"code": "3 (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_15": {
		"method": "calcCode",
		"code": "0 (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_240": {
		"method": "calcCode",
		"code": "4 (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_30": {
		"method": "calcCode",
		"code": "1 (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.EFIS.A300_EFIS_Range_FO_60": {
		"method": "calcCode",
		"code": "2 (>L:INI_map_range_fo_switch)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_APU_Gen": {
		"method": "calcCode",
		"code": "6 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_Bus1": {
		"method": "calcCode",
		"code": "0 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_Bus2": {
		"method": "calcCode",
		"code": "1 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_EMER": {
		"method": "calcCode",
		"code": "3 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_ESS": {
		"method": "calcCode",
		"code": "2 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_Ext_Pwr": {
		"method": "calcCode",
		"code": "7 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_Gen1": {
		"method": "calcCode",
		"code": "4 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_AC_Bus_Selector_Gen2": {
		"method": "calcCode",
		"code": "5 (>L:INI_elec_ind_ac_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Apu_Gen_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_apu_gen_on) ! (>L:INI_apu_gen_on)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Bat1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_BAT1_ON) ! (>L:INI_BAT1_ON)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Bat2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_BAT2_ON) ! (>L:INI_BAT2_ON)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Bat3_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_BAT3_ON) ! (>L:INI_BAT3_ON)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_Bat1": {
		"method": "calcCode",
		"code": "0 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_Bat2": {
		"method": "calcCode",
		"code": "1 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_Bat3": {
		"method": "calcCode",
		"code": "2 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_ESS": {
		"method": "calcCode",
		"code": "3 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_ESS_Bus": {
		"method": "calcCode",
		"code": "7 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_TR1": {
		"method": "calcCode",
		"code": "4 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_DC_Bus_Selector_TR2": {
		"method": "calcCode",
		"code": "5 (>L:INI_elec_ind_dc_selector)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Ext_Pwr_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Gen1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_eng1_gen_on) ! (>L:INI_eng1_gen_on)"
	},
	"IniBuilds.A300.Electrical.A300_Ovhd_Elec_Gen2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_eng2_gen_on) ! (>L:INI_eng2_gen_on)"
	},
	"IniBuilds.A300.Electrical.Battery_1_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_BAT1_ON)"
	},
	"IniBuilds.A300.Electrical.Battery_1_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_BAT1_ON)"
	},
	"IniBuilds.A300.Electrical.Battery_2_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_BAT2_ON)"
	},
	"IniBuilds.A300.Electrical.Battery_2_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_BAT2_ON)"
	},
	"IniBuilds.A300.Electrical.Battery_3_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_BAT3_ON)"
	},
	"IniBuilds.A300.Electrical.Battery_3_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_BAT3_ON)"
	},
	"IniBuilds.A300.Engines.A300_APU_Fuel_Pump_Override_Button": {
		"method": "calcCode",
		"code": "(L:INI_APU_FUEL_OVRD) ! (>L:INI_APU_FUEL_OVRD)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_APU_Master_Switch_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_apu_master_switch) ! (>L:INI_apu_master_switch) "
	},
	"IniBuilds.A300.Engines.A300_Ovhd_APU_Start_Button": {
		"method": "calcCode",
		"code": "(L:INI_apu_master_switch, Bool) if{ 1 (>L:INI_APU_START_BUTTON) }"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Ignition_Knob_A": {
		"method": "calcCode",
		"code": "1 (>L:INI_eng_ignition_switch)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Ignition_Knob_B": {
		"method": "calcCode",
		"code": "0 (>L:INI_eng_ignition_switch)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Ignition_Knob_Cont_Relight": {
		"method": "calcCode",
		"code": "4 (>L:INI_eng_ignition_switch)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Ignition_Knob_Crank": {
		"method": "calcCode",
		"code": "2 (>L:INI_eng_ignition_switch)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Ignition_Knob_Off": {
		"method": "calcCode",
		"code": "3 (>L:INI_eng_ignition_switch)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Start_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_STARTER) ! (>L:INI_ENG1_STARTER)"
	},
	"IniBuilds.A300.Engines.A300_Ovhd_Engine_Start_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_STARTER) ! (>L:INI_ENG2_STARTER)"
	},
	"IniBuilds.A300.Engines.A300_TRP_Mode_CL_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRP_CL_BUTTON)"
	},
	"IniBuilds.A300.Engines.A300_TRP_Mode_CR_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRP_CR_BUTTON)"
	},
	"IniBuilds.A300.Engines.A300_TRP_Mode_MCT_Press_": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRP_MCT_BUTTON)"
	},
	"IniBuilds.A300.Engines.A300_TRP_Mode_TOGA_Press_": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRP_TOGA_BUTTON)"
	},
	"IniBuilds.A300.Engines.Input.A300_Throttle_Reverse_Thrust_Toggle": {
		"method": "calcCode",
		"code": "0 (>K:THROTTLE_REVERSE_THRUST_TOGGLE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_API_Fire_Latch_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_APU_FIRE_LATCH) ! (>L:INI_APU_FIRE_LATCH) (L:INI_APU_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_APU) }"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Agent_Disch": {
		"method": "calcCode",
		"code": "(L:INI_APU_AGENT1_DISCH) ! (>L:INI_APU_AGENT1_DISCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Handle_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_apu_fire_handle_BUTTON)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Loop_A_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_APU_LOOP_A_STATE) ! (>L:INI_APU_LOOP_A_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Loop_B_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_APU_LOOP_B_STATE) ! (>L:INI_APU_LOOP_B_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Loop_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_APU_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Loop_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_APU_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Squib_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_APU_SQUIB_TEST)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_APU_Squib_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_APU_SQUIB_TEST)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Agent1_Disch_Button": {
		"method": "calcCode",
		"code": "(L:INIDR_engine1_agent1_disch) ! (>L:INIDR_engine1_agent1_disch)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Agent2_Disch_Button": {
		"method": "calcCode",
		"code": "(L:INIDR_engine1_agent2_disch) ! (>L:INIDR_engine1_agent2_disch)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Handle_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_eng1_fire_handle_BUTTON)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Latch_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_FIRE_LATCH) ! (>L:INI_ENG1_FIRE_LATCH) (L:INI_ENG1_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_ENG1) }"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Loop_A_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_LOOP_A_STATE) ! (>L:INI_ENG1_LOOP_A_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Loop_B_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_LOOP_B_STATE) ! (>L:INI_ENG1_LOOP_B_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Loop_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENGINE1_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Loop_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENGINE1_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Squib_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENG1_SQUIB_TEST)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng1_Squib_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENG1_SQUIB_TEST)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Agent1_Disch_Button": {
		"method": "calcCode",
		"code": "(L:INIDR_engine2_agent1_disch) ! (>L:INIDR_engine2_agent1_disch)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Agent2_Disch_Button": {
		"method": "calcCode",
		"code": "(L:INIDR_engine2_agent2_disch) ! (>L:INIDR_engine2_agent2_disch)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Handle_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_eng2_fire_handle_BUTTON)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Latch_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_FIRE_LATCH) ! (>L:INI_ENG2_FIRE_LATCH) (L:INI_ENG2_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_ENG2) }"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Loop_A_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_LOOP_A_STATE) ! (>L:INI_ENG2_LOOP_A_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Loop_B_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_LOOP_B_STATE) ! (>L:INI_ENG2_LOOP_B_STATE)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Loop_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENGINE2_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Loop_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENGINE2_LOOP_TEST_SWITCH)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Squib_Test_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENG2_SQUIB_TEST)"
	},
	"IniBuilds.A300.Fire.A300_Ovhd_Fire_Eng2_Squib_Test_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENG2_SQUIB_TEST)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Altimeter_Baro_Dec": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro1_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Altimeter_Baro_Inc": {
		"method": "calcCode",
		"code": "1 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro1_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Altimeter_Bug_Dec": {
		"method": "calcCode",
		"code": "(L:INI_CPT_ALTIMETER_BUG, Number) 990 + 1000 % (>L:INI_CPT_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Altimeter_Bug_Inc": {
		"method": "calcCode",
		"code": "(L:INI_CPT_ALTIMETER_BUG, Number) 10 + 1000 % (>L:INI_CPT_ALTIMETER_BUG, Number)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Altimeter_Knob_STD_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_ALTIMETER_STD_COMMAND)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Clock_Mode_FAST": {
		"method": "calcCode",
		"code": "0 (>L:INIDR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Clock_Mode_HLD": {
		"method": "calcCode",
		"code": "2 (>L:INIDR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Clock_Mode_RUN": {
		"method": "calcCode",
		"code": "3 (>L:INIDR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Clock_Mode_SLOW": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_Clock_Mode_STOP": {
		"method": "calcCode",
		"code": "4 (>L:INIDR_CHRONO_GMT_STATUS)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_ET_CHRO_Run_Stop_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_ET_TOGGLE_BUTTON)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Cpt_ET_CHRO_Start_Stop_Reset_Push": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CHRONO_START_BUTTON)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Altimeter_Baro_Dec": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro2_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Altimeter_Baro_Inc": {
		"method": "calcCode",
		"code": "2 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro2_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Altimeter_Bug_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_FO_ALTIMETER_BUG, Number) 0 <=  if{ (L:INI_FO_ALTIMETER BUG, Number) 1000 + (>L:INI_FO_ALTIMETER BUG,) } els{ (L:INI_FO_ALTIMETER BUG, Number) 10 - 1000 % (>L:INI_FO_ALTIMETER BUG) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Altimeter_Bug_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_FO_ALTIMETER BUG, Number) 10 + 1000 % (>L:INI_FO_ALTIMETER BUG)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Altimeter_Knob_STD_Pull": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_ALTIMETER_STD_COMMAND) "
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Clock_Mode_FAST": {
		"method": "calcCode",
		"code": "0 (>L:INIDR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Clock_Mode_HLD": {
		"method": "calcCode",
		"code": "2 (>L:INIDR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Clock_Mode_RUN": {
		"method": "calcCode",
		"code": "3 (>L:INIDR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Clock_Mode_SLOW": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_Clock_Mode_SYNC": {
		"method": "calcCode",
		"code": "4 (>L:INIDR_CHRONO_GMT_STATUS_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_ET_CHRO_Run_Stop_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_ET_TOGGLE_BUTTON_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_FO_ET_CHRO_Start_Stop_Reset_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_CHRONO_START_BUTTON_FO)"
	},
	"IniBuilds.A300.Flight Instruments.A300_Stby_Altimeter_Baro_Dec": {
		"method": "calcCode",
		"code": "3 (>K:KOHLSMAN_DEC) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }"
	},
	"IniBuilds.A300.Flight Instruments.A300_Stby_Altimeter_Baro_Inc": {
		"method": "calcCode",
		"code": "3 (>K:KOHLSMAN_INC) (L:INI_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Aux_Tank_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ACT_TANK) ! (>L:INI_ACT_TANK) (L:__AUX_AUTOIsPressed) ! (>L:__AUX_AUTOIsPressed)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Center_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK1) ! (>L:INI_CENTER_TANK1)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Center_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK2) ! (>L:INI_CENTER_TANK2)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Left_TK_Iso_Valve_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_2_State) ! (>L:__GUARD_FUEL_ISO_2_State)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Left_TK_Iso_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_inner_tank_left) ! (>L:INI_isolation_valve_inner_tank_left)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Left_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_LEFT) ! (>L:INI_INNER_TANK1_LEFT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Left_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_LEFT) ! (>L:INI_INNER_TANK2_LEFT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Right_TK_Iso_Valve_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_3_State) ! (>L:__GUARD_FUEL_ISO_3_State)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Right_TK_Iso_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_inner_tank_right) ! (>L:INI_isolation_valve_inner_tank_right)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Right_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_RIGHT) ! (>L:INI_INNER_TANK1_RIGHT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Inner_Right_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_RIGHT) ! (>L:INI_INNER_TANK2_RIGHT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Left_TK_Iso_Valve_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_1_State) ! (>L:__GUARD_FUEL_ISO_1_State)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Left_TK_Iso_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_outer_tank_left) ! (>L:INI_isolation_valve_outer_tank_left)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Left_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_LEFT) ! (>L:INI_OUTER_TANK1_LEFT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Left_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_LEFT) ! (>L:INI_OUTER_TANK2_LEFT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Right_TK_Iso_Valve_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_FUEL_ISO_4_State) ! (>L:__GUARD_FUEL_ISO_4_State)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Right_TK_Iso_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_outer_tank_right) ! (>L:INI_isolation_valve_outer_tank_right)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Right_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_RIGHT) ! (>L:INI_OUTER_TANK1_RIGHT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Outer_Right_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_RIGHT) ! (>L:INI_OUTER_TANK2_RIGHT)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Trim_TK_Iso_Valve_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_TRMTK_ISO_State) ! (>L:__GUARD_TRMTK_ISO_State)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Trim_TK_Iso_Valve_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK_ISOL_VALVE) ! (>L:INI_TRIM_TANK_ISOL_VALVE)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Trim_TK_Mode_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK_MODE) ! (>L:INI_TRIM_TANK_MODE)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Trim_TK_Pump_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK1) ! (>L:INI_TRIM_TANK1)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Trim_TK_Pump_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK2) ! (>L:INI_TRIM_TANK2)"
	},
	"IniBuilds.A300.Fuel.A300_Ovhd_Xfeed_Transfer_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_xfeed_transfer_on) ! (>L:INI_xfeed_transfer_on)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng1_Fuel_Cutoff_Lever_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng1_Fuel_Cutoff_Lever_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng1_Fuel_Cutoff_Lever_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_MIXTURE_COMMAND) ! (>L:INI_ENG1_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng2_Fuel_Cutoff_Lever_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng2_Fuel_Cutoff_Lever_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Fuel.A300_Ped_Eng2_Fuel_Cutoff_Lever_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_MIXTURE_COMMAND) ! (>L:INI_ENG2_MIXTURE_COMMAND)"
	},
	"IniBuilds.A300.Gear.A300_Antiskid_Switch_Altn_Off": {
		"method": "calcCode",
		"code": "2 (>L:INIDR_brake_system)"
	},
	"IniBuilds.A300.Gear.A300_Antiskid_Switch_Altn_On": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_brake_system)"
	},
	"IniBuilds.A300.Gear.A300_Antiskid_Switch_Norm_On": {
		"method": "calcCode",
		"code": "0 (>L:INIDR_brake_system)"
	},
	"IniBuilds.A300.Gear.A300_Autobrake_Low_Button_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_ABRK_LOW_COMMAND)"
	},
	"IniBuilds.A300.Gear.A300_Autobrake_Max_Button_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_ABRK_HI_COMMAND)"
	},
	"IniBuilds.A300.Gear.A300_Autobrake_Med_Button_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_ABRK_MED_COMMAND)"
	},
	"IniBuilds.A300.Gear.A300_Landing_Gear_Lever_Down": {
		"method": "calcCode",
		"code": "2 (>L:INI_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A300.Gear.A300_Landing_Gear_Lever_Mid": {
		"method": "calcCode",
		"code": "1 (>L:INI_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A300.Gear.A300_Landing_Gear_Lever_Up": {
		"method": "calcCode",
		"code": "0 (>L:INI_GEAR_HANDLE_STATUS)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Elec_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_elec_status) ! (>L:INI_hyd_elec_status)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Eng1_Blue_Pump_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng1_switch_pos) ! (>L:INI_hyd_eng1_switch_pos)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Eng1_Green_Pump_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng1_A_switch_pos) ! (>L:INI_hyd_eng1_A_switch_pos)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Eng2_Green_Pump_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng2_B_switch_pos) ! (>L:INI_hyd_eng2_B_switch_pos)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Eng2_Yellow_Pump_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng2_switch_pos) ! (>L:INI_hyd_eng2_switch_pos)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_PTU_Blue_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_PTU_blue_status) ! (>L:INI_hyd_PTU_blue_status)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_PTU_Yellow_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_hyd_PTU_yellow_status) ! (>L:INI_hyd_PTU_yellow_status)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Servo_Ctl_Blue_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_BLUE_OFF_LIGHT) ! (>L:INI_SERVO_BLUE_OFF_LIGHT) "
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Servo_Ctl_Green_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_GREEN_OFF_LIGHT) ! (>L:INI_SERVO_GREEN_OFF_LIGHT) "
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Hyd_Servo_Ctl_Yellow_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_YELLOW_OFF_LIGHT) ! (>L:INI_SERVO_YELLOW_OFF_LIGHT) "
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Pitch_Feel_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL1) ! (>L:INI_PITCH_FEEL1)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Pitch_Feel_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL2) ! (>L:INI_PITCH_FEEL2)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Rud_Travel_1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL1) ! (>L:INI_RUDDER_TRAVEL1) "
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Rud_Travel_2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL2) ! (>L:INI_RUDDER_TRAVEL2) "
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Splr_Spd_Brk_3___2_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE3_2) ! (>L:INI_SPEEDBRAKE3_2)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Splr_Spd_Brk_4___1_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE4_1) ! (>L:INI_SPEEDBRAKE4_1)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Splr_Spd_Brk_5_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE5) ! (>L:INI_SPEEDBRAKE5)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Splr_Spd_Brk_6_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE6) ! (>L:INI_SPEEDBRAKE6)"
	},
	"IniBuilds.A300.Hydraulic.A300_Ovhd_Splr_Spd_Brk_7_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE7) ! (>L:INI_SPEEDBRAKE7)"
	},
	"IniBuilds.A300.Lights.A300_Cap___Ctr_Inst_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_26) 5 - 0 max 100 min (>L:INI_POTENTIOMETER_26)"
	},
	"IniBuilds.A300.Lights.A300_Cap___Ctr_Inst_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_26) 5 + 0 max 100 min (>L:INI_POTENTIOMETER_26)"
	},
	"IniBuilds.A300.Lights.A300_Cpt_Yoke_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_29) 5 - 0 min (>L:INI_POTENTIOMETER_29)"
	},
	"IniBuilds.A300.Lights.A300_Cpt_Yoke_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_29) 5 + 100 max (>L:INI_POTENTIOMETER_29)"
	},
	"IniBuilds.A300.Lights.A300_FO_Inst_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_27) 5 - 0 max (>L:INI_POTENTIOMETER_27)"
	},
	"IniBuilds.A300.Lights.A300_FO_Inst_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_27) 5 + 100 min (>L:INI_POTENTIOMETER_27)"
	},
	"IniBuilds.A300.Lights.A300_FO_Yoke_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_30) 5 - 0 min (>L:INI_POTENTIOMETER_30)"
	},
	"IniBuilds.A300.Lights.A300_FO_Yoke_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_30) 5 + 100 max (>L:INI_POTENTIOMETER_30)"
	},
	"IniBuilds.A300.Lights.A300_MCU_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_28) 5 - 0 max (>L:INI_POTENTIOMETER_28)"
	},
	"IniBuilds.A300.Lights.A300_MCU_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_28) 5 + 100 min (>L:INI_POTENTIOMETER_28)"
	},
	"IniBuilds.A300.Lights.A300_Main_Inst_Pnl_Flood_Light_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_25) 5 - 0 min 100 max (>L:INI_POTENTIOMETER_25)"
	},
	"IniBuilds.A300.Lights.A300_Main_Inst_Pnl_Flood_Light_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_25) 5 + 0 min 100 max (>L:INI_POTENTIOMETER_25)"
	},
	"IniBuilds.A300.Lights.A300_Map_Light_Cpt_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_16) 5 - 0 max 100 min (>L:INI_POTENTIOMETER_16)"
	},
	"IniBuilds.A300.Lights.A300_Map_Light_Cpt_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_16) 5 + 0 max 100 min (>L:INI_POTENTIOMETER_16)"
	},
	"IniBuilds.A300.Lights.A300_Map_Light_FO_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_17) 5 - 0 max (>L:INI_POTENTIOMETER_17)"
	},
	"IniBuilds.A300.Lights.A300_Map_Light_FO_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_17) 5 + 100 min (>L:INI_POTENTIOMETER_17)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Ann_Lt_Switch_BRT": {
		"method": "calcCode",
		"code": "1 (>L:INI_ANNLT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Ann_Lt_Switch_DIM": {
		"method": "calcCode",
		"code": "2 (>L:INI_ANNLT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Ann_Lt_Switch_TEST": {
		"method": "calcCode",
		"code": "0 (>L:INI_ANNLT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Dome_Light_Brt_Switch_BRT": {
		"method": "calcCode",
		"code": "1 (>L:INI_DOME_LIGHT_BRT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Dome_Light_Brt_Switch_DIM": {
		"method": "calcCode",
		"code": "0 (>L:INI_DOME_LIGHT_BRT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Dome_Light_Switch_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_DOME_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Dome_Light_Switch_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_DOME_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Emer_Exit_Switch_ARM": {
		"method": "calcCode",
		"code": "1 (>L:INI_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Emer_Exit_Switch_DISARM": {
		"method": "calcCode",
		"code": "2 (>L:INI_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Emer_Exit_Switch_ON": {
		"method": "calcCode",
		"code": "0 (>L:INI_EMER_EXIT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Beacon_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_BEACON_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Beacon_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_BEACON_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_L_OFF": {
		"method": "calcCode",
		"code": "1 (>L:INI_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_L_ON": {
		"method": "calcCode",
		"code": "0 (>L:INI_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_L_RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:INI_LANDING_LIGHT_L_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_R_OFF": {
		"method": "calcCode",
		"code": "2 (>L:INI_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_R_ON": {
		"method": "calcCode",
		"code": "0 (>L:INI_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Landing__Light_R_RETRACT": {
		"method": "calcCode",
		"code": "2 (>L:INI_LANDING_LIGHT_R_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nav_Logo_1": {
		"method": "calcCode",
		"code": "1 (>L:INI_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nav_Logo_2": {
		"method": "calcCode",
		"code": "0 (>L:INI_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nav_Logo_Off": {
		"method": "calcCode",
		"code": "2 (>L:INI_NAV_LOGO_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nose_Light_OFF": {
		"method": "calcCode",
		"code": "2 (>L:INI_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nose_Light_TAXI": {
		"method": "calcCode",
		"code": "1 (>L:INI_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Nose_Light_TO": {
		"method": "calcCode",
		"code": "0 (>L:INI_TAXI_LIGHTS_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Rwy_Turnoff_L_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_RWY_TURNOFF_L_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Rwy_Turnoff_L_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_RWY_TURNOFF_L_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Rwy_Turnoff_R_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_RWY_TURNOFF_R_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Rwy_Turnoff_R_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_RWY_TURNOFF_R_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Strobe_Auto": {
		"method": "calcCode",
		"code": "1 (>L:INI_POTENTIOMETER_24)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Strobe_Off": {
		"method": "calcCode",
		"code": "2 (>L:INI_POTENTIOMETER_24)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Strobe_On": {
		"method": "calcCode",
		"code": "0 (>L:INI_POTENTIOMETER_24)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Wing_Light_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_WING_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Extlt_Wing_Light_On": {
		"method": "calcCode",
		"code": " 1 (>L:INI_WING_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_4) 5 - 0 min (>L:INI_POTENTIOMETER_4)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_4) 5 + 100 max (>L:INI_POTENTIOMETER_4)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_No_Smoking_Switch_AUTO": {
		"method": "calcCode",
		"code": "1 (>L:INI_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_No_Smoking_Switch_OFF": {
		"method": "calcCode",
		"code": "2 (>L:INI_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_No_Smoking_Switch_ON": {
		"method": "calcCode",
		"code": "0 (>L:INI_NO_SMOKING_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Seatbelts_Switch_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_SEATBELTS_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Seatbelts_Switch_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_SEATBELTS_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Stby_Compass_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_STBY_COMPASS_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Stby_Compass_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_STBY_COMPASS_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Storm_Light_Switch_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_STORM_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Ovhd_Storm_Light_Switch_ON": {
		"method": "calcCode",
		"code": "1 (>L:INI_STORM_LIGHT_SWITCH)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_3) 5 - 0 max (>L:INI_POTENTIOMETER_3)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_3) 5 + 100 min (>L:INI_POTENTIOMETER_3)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Ovhd_Light_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_4) 5 - 0 max (>L:INI_POTENTIOMETER_4)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Ovhd_Light_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_4) 5 + 100 min (>L:INI_POTENTIOMETER_4)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Panel_Brightness_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_3) 5 - 0 max (>L:INI_POTENTIOMETER_3)"
	},
	"IniBuilds.A300.Lights.A300_Pedestal_Panel_Brightness_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_3) 5 + 100 min (>L:INI_POTENTIOMETER_3)"
	},
	"IniBuilds.A300.Lights.A300_Read_Light_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_18) 5 - 0 min (>L:INI_POTENTIOMETER_18) "
	},
	"IniBuilds.A300.Lights.A300_Read_Light_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_POTENTIOMETER_18) 5 + 100 max (>L:INI_POTENTIOMETER_18) "
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Brightness_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_66) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Brightness_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_66) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_0": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_0)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_1": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_1)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_2": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_2)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_3": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_3)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_4": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_4)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_5": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_5)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_6": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_6)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_7": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_7)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_8": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_8)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_9": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_9)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_A": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_A)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_B": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_B)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_C": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_C)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_CLR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_CLR)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_D": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_D)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_DIR_TO": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DIR_TO)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_DOT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DOT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_DOWN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DOWN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_E": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_E)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_ENGOUT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_ENGOUT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_F": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_F)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_FPLAN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_G": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_G)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_H": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_H)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_I": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_I)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_INIT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_INIT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_J": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_J)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_K": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_K)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK1L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK1R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK2L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK2R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK3L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK3R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK4L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK4R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK5L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK5R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK6L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK6R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_M": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_M)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_MENU": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_MENU)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_MINUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_MINUS)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_MODE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_MODE)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_N": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_N)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_NEXT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_NEXT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_O": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_O)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_P": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_P)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_PLUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PLUS)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_PROG": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PROG)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_Q": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Q)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_REF": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_REF)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_S": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_S)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_SEC_PLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_SEC_PLAN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_SLASH": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_SLASH)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_T": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_T)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_TACT_MODE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_TACT_MODE)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_TO_APPR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_TO_APPR)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_U": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_U)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_UARROW": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_UARROW)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_V": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_V)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_W": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_W)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_X": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_X)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_Y": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Y)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU1_Key_Z": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Z)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Brightness_Dec": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_67) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Brightness_Inc": {
		"method": "calcCode",
		"code": "(L:LIGHTING_POTENTIOMETER_67) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_0": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_0)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_1": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_1)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_2": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_2)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_3": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_3)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_4": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_4)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_5": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_5)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_6": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_6)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_7": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_7)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_8": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_8)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_9": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_9)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_A": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_A)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_B": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_B)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_C": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_C)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_CLR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_CLR)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_D": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_D)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_DIR_TO": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DIR_TO)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_DOT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DOT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_DOWN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DOWN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_E": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_E)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_ENGOUT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_ENGOUT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_F": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_F)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_FPLAN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_G": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_G)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_H": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_H)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_I": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_I)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_INIT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_INIT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_J": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_J)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_K": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_K)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK1L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK1R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK2L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK2R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK3L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK3R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK4L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK4R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK5L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK5R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK6L)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK6R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_M": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_M)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_MENU": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_MENU)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_MINUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_MINUS)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_MODE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_MODE)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_N": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_N)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_NEXT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_NEXT)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_O": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_O)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_P": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_P)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_PLUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PLUS)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_PROG": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PROG)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_Q": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Q)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_R)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_REF": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_REF)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_S": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_S)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_SEC_PLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_SEC_PLAN)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_SLASH": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_SLASH)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_T": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_T)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_TACT_MODE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_TACT_MODE)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_TO_APPR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_TO_APPR)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_U": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_U)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_UARROW": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_UARROW)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_V": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_V)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_W": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_W)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_X": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_X)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_Y": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Y)"
	},
	"IniBuilds.A300.MCDU.A300_MCDU2_Key_Z": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Z)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_CVRD_Test_Button_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_CVRD_TEST)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_CVRD_Test_Button_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_CVRD_TEST)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_Capt_Wiper_Knob_Fast": {
		"method": "calcCode",
		"code": "2 (>L:INI_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_Capt_Wiper_Knob_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_Capt_Wiper_Knob_Slow": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_Cockpit_Door_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INIDR_COCKPIT_DOOR_COMMAND)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_FO_Wiper_Knob_Fast": {
		"method": "calcCode",
		"code": "2 (>L:INI_FO_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_FO_Wiper_Knob_Off": {
		"method": "calcCode",
		"code": "0 (>L:INI_FO_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Ovhd_FO_Wiper_Knob_Slow": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_WIPER_KNOB)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Pedestal_PPR_ADV_Button": {
		"method": "calcCode",
		"code": "(L:INI_PRINTER_ADV_BUTTON) ! (>L:INI_PRINTER_ADV_BUTTON) "
	},
	"IniBuilds.A300.Miscellaneous.A300_Pedestal_Printer_ALRTRST_Button": {
		"method": "calcCode",
		"code": "(L:INI_PRINTER_ALRTRST_BUTTON) ! (>L:INI_PRINTER_ALRTRST_BUTTON)"
	},
	"IniBuilds.A300.Miscellaneous.A300_Pedestal_Printer_TEST_Button": {
		"method": "calcCode",
		"code": "(L:INI_PRINTER_TEST_BUTTON) ! (>L:INI_PRINTER_TEST_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_Ident_Toggle": {
		"method": "calcCode",
		"code": "(>K:XPNDR_IDENT_TOGGLE)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_Select_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_tcas_xpdr) ! (>L:INI_tcas_xpdr)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_XPDR_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRANSPONDER_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_XPDR_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRANSPONDER_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_XPDR_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRANSPONDER_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_ATC_XPDR_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_TRANSPONDER_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_IRS_Mode_Knob_HDG_STS": {
		"method": "calcCode",
		"code": "4 (>L:INI_IRS_MODE_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_IRS_Mode_Knob_PPOS": {
		"method": "calcCode",
		"code": "2 (>L:INI_IRS_MODE_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_IRS_Mode_Knob_TEST": {
		"method": "calcCode",
		"code": "0 (>L:INI_IRS_MODE_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_IRS_Mode_Knob_TK_GS": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_MODE_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_IRS_Mode_Knob_WIND": {
		"method": "calcCode",
		"code": "3 (>L:INI_IRS_MODE_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_0_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_0_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_1_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_1_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_2_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_2_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_3_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_3_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_4_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_4_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_5_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_5_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_6_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_6_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_7_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_7_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_8_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_8_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_9_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_9_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_C_State_Knob_ATT": {
		"method": "calcCode",
		"code": "2 (>L:INI_IRS3_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_C_State_Knob_NAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS3_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_C_State_Knob_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_IRS3_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_CLR_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_CLR_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_ENT_Key": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_ENT_BUTTON)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_L_State_Knob_ATT": {
		"method": "calcCode",
		"code": "2 (>L:INI_IRS1_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_L_State_Knob_NAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS1_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_L_State_Knob_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_IRS1_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_R_State_Knob_ATT": {
		"method": "calcCode",
		"code": "2 (>L:INI_IRS2_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_R_State_Knob_NAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS2_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_R_State_Knob_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_IRS2_STATE)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_Sys_Knob_1": {
		"method": "calcCode",
		"code": "1 (>L:INI_IRS_SYS_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_Sys_Knob_2": {
		"method": "calcCode",
		"code": "2 (>L:INI_IRS_SYS_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_Sys_Knob_3": {
		"method": "calcCode",
		"code": "3 (>L:INI_IRS_SYS_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_Ovhd_IRS_Sys_Knob_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_IRS_SYS_KNOB)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_CRS1_Knob_Dec": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_DEC)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_CRS1_Knob_Inc": {
		"method": "calcCode",
		"code": "(>K:VOR1_OBI_INC)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_CRS1_Knob_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_VOR1_FLIP_COMMAND)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_VOR1_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR1_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_VOR1_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR1_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_VOR1_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR1_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_Cpt_VOR1_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR1_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_CRS2_Knob_Dec": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_DEC)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_CRS2_Knob_Inc": {
		"method": "calcCode",
		"code": "(>K:VOR2_OBI_INC)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_CRS2_Knob_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_VOR2_FLIP_COMMAND)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_VOR2_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR2_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_VOR2_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR2_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_VOR2_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR2_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_Pedestal_FO_VOR2_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_VOR2_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Course_Knob_Dec": {
		"method": "calcCode",
		"code": "(L:INI_ils_course, number) -- dnor (>L:INI_ils_course, number)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Course_Knob_Inc": {
		"method": "calcCode",
		"code": "(L:INI_ils_course, number) ++ dnor (>L:INI_ils_course, number)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Inner_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_ILS_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Inner_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_ILS_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Outer_Knob_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_ILS_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_RMP_ILS_Outer_Knob_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_ILS_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_ALT_Switch_1": {
		"method": "calcCode",
		"code": "0 (>L:INI_tcas_alt_system) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_ALT_Switch_2": {
		"method": "calcCode",
		"code": "2 (>L:INI_tcas_alt_system) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_ALT_Switch_OFF": {
		"method": "calcCode",
		"code": "1 (>L:INI_tcas_alt_system) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Selector_STBY": {
		"method": "calcCode",
		"code": "0 (>L:INI_tcas_mode_pedestal)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Selector_TA": {
		"method": "calcCode",
		"code": "3 (>L:INI_tcas_mode_pedestal) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Selector_TARA": {
		"method": "calcCode",
		"code": "2 (>L:INI_tcas_mode_pedestal) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Selector_XPDR": {
		"method": "calcCode",
		"code": "1 (>L:INI_tcas_mode_pedestal) "
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Switch_ABOVE": {
		"method": "calcCode",
		"code": "0 (>L:INI_tcas_mode)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Switch_BELOW": {
		"method": "calcCode",
		"code": "2 (>L:INI_tcas_mode)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Mode_Switch_N": {
		"method": "calcCode",
		"code": "1 (>L:INI_tcas_mode)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Range_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_tcas_range) ! (>L:INI_tcas_range)"
	},
	"IniBuilds.A300.Navigation.A300_TCAS_Test_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_TCAS_TEST_ACTIVE) ! (>L:INI_TCAS_TEST_ACTIVE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Gain_Dec": {
		"method": "calcCode",
		"code": "(L:INI_WXR_GAIN) -- (>L:INI_WXR_GAIN)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Gain_Inc": {
		"method": "calcCode",
		"code": "(L:INI_WXR_GAIN) ++ (>L:INI_WXR_GAIN)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Mode_MAP": {
		"method": "calcCode",
		"code": "4 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Mode_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Mode_TEST": {
		"method": "calcCode",
		"code": "1 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Mode_TURB": {
		"method": "calcCode",
		"code": "3 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Mode_WX": {
		"method": "calcCode",
		"code": "2 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Sys_1": {
		"method": "calcCode",
		"code": "0 (>L:INI_WXR_SYS)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Sys_2": {
		"method": "calcCode",
		"code": "2 (>L:INI_WXR_SYS)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Sys_OFF": {
		"method": "calcCode",
		"code": "1 (>L:INI_WXR_SYS)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Tilt_Dec": {
		"method": "calcCode",
		"code": " (L:INI_WXR_TILT_KNOB) 1.5 - -15 max (>L:INI_WXR_TILT_KNOB)"
	},
	"IniBuilds.A300.Radar.A300_Pedestal_WX_Radar_Tilt_Inc": {
		"method": "calcCode",
		"code": " (L:INI_WXR_TILT_KNOB) 1.5 + 15 min (>L:INI_WXR_TILT_KNOB)"
	},
	"IniBuilds.A300.Radar.wx": {
		"method": "calcCode",
		"code": "4 (>L:INI_WXR_MODE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_Cpt_Voice_Ident_Switch_Down": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_VOICE_IDENT_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_Cpt_Voice_Ident_Switch_Up": {
		"method": "calcCode",
		"code": "0 (>L:INI_CPT_VOICE_IDENT_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_HF1_Capt_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_HF1_CAPTAIN) ! (>L:INI_HF1_CAPTAIN) "
	},
	"IniBuilds.A300.Radio.A300_Pedestal_HF1_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_HF1_FO) ! (>L:INI_HF1_FO)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_HF2_Capt_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_HF2_CAPTAIN) ! (>L:INI_HF2_CAPTAIN)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_HF2_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_HF2_FO) ! (>L:INI_HF2_FO)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_INT_Capt_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INT_CAPTAIN) ! (>L:INI_INT_CAPTAIN)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_INT_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_INT_FO) ! (>L:INI_INT_FO)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_PA_Capt_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PA_CAPTAIN) ! (>L:INI_PA_CAPTAIN)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_PA_FO_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_PA_FO) ! (>L:INI_PA_FO)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Inner_Knob_Khz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Inner_Knob_Khz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Outer_Knob_Mhz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Outer_Knob_Mhz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_Inner_Knob_Khz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_Inner_Knob_Khz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_Outer_Knob_Mhz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_Outer_Knob_Mhz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_STBY_INNER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Dec": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Inc": {
		"method": "calcCode",
		"code": "1 (>L:INI_RMP_COM2_STBY_OUTER_KNOB_TURNED_CLOCKWISE)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_Capt_Sql_Switch_Disable": {
		"method": "calcCode",
		"code": "0- (>L:INI_CPT_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_Capt_Sql_Switch_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_Capt_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_Capt_Transfer_Left": {
		"method": "calcCode",
		"code": "0 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_Capt_Transfer_Right": {
		"method": "calcCode",
		"code": "1 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_FO_Sql_Switch_Disable": {
		"method": "calcCode",
		"code": "0 (>L:INI_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_FO_Sql_Switch_On": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_FO_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_FO_Transfer_Left": {
		"method": "calcCode",
		"code": "0 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF_FO_Transfer_Right": {
		"method": "calcCode",
		"code": "1 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF1_FO_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_VHF1_FO_BUTTON)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF2_Capt_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_VHF2_CPT_BUTTON)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF2_FO_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_VHF2_FO_BUTTON)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF3_Capt_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_VHF3_CPT_BUTTON)"
	},
	"IniBuilds.A300.Radio.A300_Pedestal_VHF3_FO_Toggle": {
		"method": "calcCode",
		"code": "1 (>L:INI_VHF3_FO_BUTTON)"
	},
	"IniBuilds.A300.Radio.sql": {
		"method": "calcCode",
		"code": "0 (>L:INI_FO_VHF_SQL_SWITCH)"
	},
	"IniBuilds.A300.Safety.A300_Ovhd_Oxygen_Low_Pressure_Supply_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_OXYGEN_LOW_PRESSURE_SUPPLY) ! (>L:INI_OXYGEN_LOW_PRESSURE_SUPPLY) "
	},
	"IniBuilds.A300.Warning.A300_GPWS_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_GPWS_PUSH)"
	},
	"IniBuilds.A300.Warning.A300_GPWS_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_GPWS_PUSH)"
	},
	"IniBuilds.A300.Warning.A300_Master_Caution_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_MASTER_CAUTION_ACTIVE)"
	},
	"IniBuilds.A300.Warning.A300_Master_Warning_Push": {
		"method": "calcCode",
		"code": "1 (>L:INI_MASTER_WARNING_ACTIVE)"
	},
	"IniBuilds.A300.Warning.A300_Parking_Brake_Accu_Press_Toggle": {
		"method": "calcCode",
		"code": "(L:INI_ACCU_PRESS_BUTTON) ! (>L:INI_ACCU_PRESS_BUTTON)"
	},
	"IniBuilds.A300.Warning.A300_Takeoff_Config_Test_Button_Press": {
		"method": "calcCode",
		"code": "1 (>L:INI_TAKEOFF_CONFIG_PRESSED)"
	},
	"IniBuilds.A300.Warning.A300_Takeoff_Config_Test_Button_Release": {
		"method": "calcCode",
		"code": "0 (>L:INI_TAKEOFF_CONFIG_PRESSED)"
	},
	"IniBuilds.A300.Warning.A300_Warning_Sys_Emer_Cancel_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_EMER_CANCEL)"
	},
	"IniBuilds.A300.Warning.A300_Warning_Sys_Emer_Guard_Toggle": {
		"method": "calcCode",
		"code": "(L:__EMER_GAURD_State) ! (>L:__EMER_GAURD_State)"
	},
	"IniBuilds.A300.Warning.A300_Warning_Sys_Norm_Cancel_Push": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_EWD_NORM_CANCEL)"
	},
	"IniBuilds.A300.Autothrust System.Input.A300_AT_Disconnect": {
		"method": "calcCode",
		"code": "1 (>K:AUTO_THROTTLE_DISCONNECT)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA OVHD LIGHT PANEL KNOB INC ": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_5_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) \n"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA OVHD LIGHT PANEL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_5_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) \n"
	},
	"IniBuilds.A300.Autothrust System.Input.A300_AT_ToGa": {
		"method": "calcCode",
		"code": "1 (>L:INI_takeoff_toggle)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA PILOT OVHD FLOOD KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_5_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA PILOT OVHD FLOOD KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_5_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA AVIONICS PANEL KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_2_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_2_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA AVIONICS PANEL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_2_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_2_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA OVHD PED & SUBPANEL KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_3_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_3_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA OVHD PED & SUBPANEL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_3_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_3_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT FLIGHT INSTR KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_4_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_4_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT FLIGHT INSTR KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_4_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_4_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA PILOT FLIGHT INSTR KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_1_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA PILOT FLIGHT INSTR KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_1_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_1_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA SIDE PANEL KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_6_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_6_power_setting)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA SIDE PANEL KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_6_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_6_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA ENGINE INSTR KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_7_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_7_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA ENGINE INSTR KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_7_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_7_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT OVHD FLOOD KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_8_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_8_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT OVHD FLOOD KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_8_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_8_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT GYRO INSTR KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_9_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_9_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA COPILOT GYRO INSTR KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_PANEL_9_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_9_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA INSTR INDIRECT KNOB DEC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1_power_setting) 5 - 0 max 100 min (>L:LIGHTING_GLARESHIELD_1_power_setting) "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA INSTR INDIRECT KNOB INC": {
		"method": "calcCode",
		"code": "(L:LIGHTING_GLARESHIELD_1_power_setting) 5 + 0 max 100 min (>L:LIGHTING_GLARESHIELD_1_power_setting) "
	},
	"Black Square.Analog King Air.Engines.Input.BS KA PROP TEST GOV ON": {
		"method": "calcCode",
		"code": "1 (>L:var_PropTestMainSwitch, bool) \n1 (>A:CIRCUIT SWITCH ON:146, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BK KA PROP TEST GOV OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_PropTestMainSwitch, bool) \n0 (>A:CIRCUIT SWITCH ON:146, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA PROP TEST GND IDLE STOP ON": {
		"method": "calcCode",
		"code": "1 (>L:var_PropTestGroundSwitch, bool)\n1 (>A:CIRCUIT SWITCH ON:146, bool)\n0 (>L:var_PropTestGroundSwitch_Latch_L, bool)\n0 (>L:var_PropTestGroundSwitch_Latch_R, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA PROP TEST GND IDLE STOP OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_PropTestGroundSwitch, bool)\n0 (>A:CIRCUIT SWITCH ON:146, bool)\n0 (>L:var_PropTestGroundSwitch_Latch_L, bool)\n0 (>L:var_PropTestGroundSwitch_Latch_R, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT ENG ANTI-ICE ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_InterSep_R, bool) ! (>L:XMLVAR_InterSep_R, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT ENG ANTI-ICE OFF ": {
		"method": "calcCode",
		"code": "(L:XMLVAR_InterSep_R, bool) ! (>L:XMLVAR_InterSep_R, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT ENG ANTI-ICE ON": {
		"method": "calcCode",
		"code": "(L:XMLVAR_InterSep_L, bool) ! (>L:XMLVAR_InterSep_L, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT ENG ANTI-ICE OFF": {
		"method": "calcCode",
		"code": "(L:XMLVAR_InterSep_L, bool) ! (>L:XMLVAR_InterSep_L, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT ACTUATORS STANDBY ON": {
		"method": "calcCode",
		"code": "1 (>L:var_InterSepStandbyMode_R, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT ACTUATORS STANDBY OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_InterSepStandbyMode_R, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT ACTUATORS STANDBY ON": {
		"method": "calcCode",
		"code": "1 (>L:var_InterSepStandbyMode_L, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT ACTUATORS STANDBY OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_InterSepStandbyMode_L, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA RIGHT AUTO IGNITION ARM ON": {
		"method": "calcCode",
		"code": "1 (>L:rightAutoIgnitionSwitch, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA RIGHT AUTO IGNITION ARM OFF": {
		"method": "calcCode",
		"code": "0 (>L:rightAutoIgnitionSwitch, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA LEFT AUTO IGNITION ARM ON": {
		"method": "calcCode",
		"code": "1 (>L:leftAutoIgnitionSwitch, bool)"
	},
	"Black Square.Analog King Air.Engines.Input.BS KA LEFT AUTO IGNITION ARM OFF": {
		"method": "calcCode",
		"code": "0 (>L:leftAutoIgnitionSwitch, bool)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA LEFT AC INVERTER ON": {
		"method": "calcCode",
		"code": "6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA LEFT AC INVERTER OFF": {
		"method": "calcCode",
		"code": "6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA LEFT AC INVERTER BUS TRANSFER ON": {
		"method": "calcCode",
		"code": "6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA LEFT AC INVERTER BUS TRANSFER OFF": {
		"method": "calcCode",
		"code": "6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA RIGHT AC INVERTER  ON": {
		"method": "calcCode",
		"code": "8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA RIGHT AC INVERTER OFF": {
		"method": "calcCode",
		"code": "8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA RIGHT AC INVERTER BUS TRANSFER ON": {
		"method": "calcCode",
		"code": "8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA RIGHT AC INVERTER BUS TRANSFER OFF": {
		"method": "calcCode",
		"code": "8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BUS SENSE RESET": {
		"method": "calcCode",
		"code": "0 (>L:var_busFaultDetected, bool) 0 (>L:var_simulatedBusFaultDetected, bool)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BUS SENSE TEST": {
		"method": "calcCode",
		"code": "1 (>L:var_busFaultDetected, bool) \n1 (>L:var_simulatedBusFaultDetected, bool)\n1 (>L:var_masterCautionLatching, number)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA GEN TIES OPEN ON": {
		"method": "calcCode",
		"code": "0 (>L:var_busTieManClose, bool) \n1 (>L:var_busTieManOpen, bool) \n2 (>O:switchstate)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA GEN TIES OPEN OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_busTieManOpen, bool) 1 (>O:switchstate)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA GEN TIES MAN CLOSE ON": {
		"method": "calcCode",
		"code": "1 (>L:var_busTieManClose, bool) \n0 (>L:var_busTieManOpen, bool) \n0 (>O:switchstate)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA GEN TIES MAN CLOSE OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_busTieManOpen, bool) \n1 (>O:switchstate)"
	},
	"FSS.E1XX.Autopilot.Output.Selected Vs Value": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_PFD_GV_VS_SELECTED_1)"
	},
	"FSS.E1XX.Autopilot.Output.Selected FPA Value": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_VERTG_FPA_SELECTOR)"
	},
	"FSS.E1XX.Autopilot.Output.Selected Altitude Value": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_VERTG_ALT_KNOB_VAL)"
	},
	"FSS.E1XX.Autopilot.Output.Selected HDG Value": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_SPEEDM_SEL_HDG_KNOB_VAL)"
	},
	"FSS.E1XX.Autopilot.Output.Selected Speed Value": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_GSHIELD_SPEEDM_CTL_KNOB_VAL)"
	},
	"FSS.E1XX.EFIS.Input.CPT DCP Minimums Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_L_MIN_ROT) 0.028 + (>L:FSS_EXX_DCP_L_MIN_ROT)"
	},
	"FSS.E1XX.Efis.Input.FO DCP Minimums Decrease": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_MIN_ROT) 0.028 - (>L:FSS_EXX_DCP_R_MIN_ROT)"
	},
	"FSS.E1XX.Efis.Input.FO DCP Minimums Increase": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_DCP_R_MIN_ROT) 0.028 + (>L:FSS_EXX_DCP_R_MIN_ROT)"
	},
	"FSS.E1XX.Efis.Input.FO DCP Minimums BARO": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_DCP_R_MIN_SRC)"
	},
	"FSS.E1XX.Efis.Input.FO DCP Minimums RA": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_DCP_R_MIN_SRC)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.CPT CCD Rotary Outer Decrease": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.CPT CCD Rotary Outer Increase": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.CPT CCD Rotary Inner Increase": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.CPT CCD Rotary Inner Decrease": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.FO CCD Rotary Outer Increase": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.FO CCD Rotary Outer Decrease": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.FO CCD Rotary Inner Decrease": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER)"
	},
	"FSS.E1XX.Flight Instrumentation.Input.FO CCD Rotary Inner Increase": {
		"method": "calcCode",
		"code": " (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BATT BUS ON": {
		"method": "calcCode",
		"code": "1 (>L:var_batteryDisconnect)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA BATT BUS OFF": {
		"method": "calcCode",
		"code": "0  (>L:var_batteryDisconnect)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_SL_LIGHT_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_SL_LIGHT_OFF)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_SL_LIGHT_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_SL_LIGHT_ON)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_LDG_LIGHT_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_LDG_LIGHT_ON)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_LDG_LIGHT_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_LDG_LIGHT_OFF)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA ACTUATORS STANDBY LEFT": {
		"method": "calcCode",
		"code": "1 (>var_InterSepStandbyMode_L)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_BEACON_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_BEACON_LIGHTS_OFF)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_BEACON_LIGHTS_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_BEACON_LIGHTS_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_LAVCS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_LAVCS_PIL": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_PIL)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_LAVCS_PAX": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_LAVCS_PAX)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_FUZZ_CHIP_BURNER_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_FUZZ_CHIP_BURNER_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_EMER_FLOATS_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_EMER_FLOATS_ARM": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_ARM)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_OH_EMER_FLOATS_TEST": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_EMER_FLOATS_TEST)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_LOW_FUEL_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_LOW_FUEL_1)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_LOW_FUEL_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_LOW_FUEL_2)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG_FAIL_1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG_FAIL_1)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG_FAIL_2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG_FAIL_2)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ROTOR_LOW": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ROTOR_LOW)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_BATTERY_OVERHEAT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_BATTERY_OVERHEAT)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_MGB_LOW_PRESSURE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_MGB_LOW_PRESSURE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_AUTOPILOT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_AUTOPILOT)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_CARGO_SMOKE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_CARGO_SMOKE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG1_FUEL_SHUTOFF_ACTIVE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG1_FUEL_SHUTOFF_ACTIVE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG2_FUEL_SHUTOFF_ACTIVE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG2_FUEL_SHUTOFF_ACTIVE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG1_FIRE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG1_FIRE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG2_FIRE": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG2_FIRE)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG1_EXT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG1_EXT)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG2_EXT": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG2_EXT)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG1_BOTTLE1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG1_BOTTLE1)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG2_BOTTLE1": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG2_BOTTLE1)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG1_BOTTLE2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG1_BOTTLE2)"
	},
	"Hype Performance Group.H145.Warning.Output.H145_SDK_WARNINGUNIT_ENG2_BOTTLE2": {
		"method": "calcCode",
		"code": "(L:H145_SDK_WARNINGUNIT_ENG2_BOTTLE2)"
	},
	"Hype Performance Group.H145.Lights.Input.H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT)"
	},
	"Hype Performance Group.H145.Air Conditioning.Input.H145_SDK_OH_COCKPIT_VENT_POT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_COCKPIT_VENT_POT)"
	},
	"Hype Performance Group.H145.Air Conditioning.Input.H145_SDK_OH_BLEED_HEATING_POT": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_OH_BLEED_HEATING_POT)"
	},
	"Hype Performance Group.H145.Avionics.Output.H145_SDK_MFD1_POWER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MFD1_POWER)"
	},
	"Hype Performance Group.H145.Avionics.Output.H145_SDK_MFD2_POWER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MFD2_POWER)"
	},
	"Hype Performance Group.H145.Avionics.Output.H145_SDK_MFD4_POWER": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MFD4_POWER)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_A": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_A)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_B": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_B)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_C": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_C)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_D": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_D)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_E": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_E)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_F": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_F)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_G": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_G)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_H": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_H)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_I": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_I)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_J": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_J)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_K": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_K)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_L": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_L)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_M": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_M)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_N": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_N)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_O": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_O)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_P": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_P)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_Q": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_Q)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_R": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_R)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_S": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_S)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_T": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_T)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_U": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_U)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_V": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_V)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_W": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_W)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_X": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_X)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_Y": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_Y)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_Z": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_Z)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_SPC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_SPC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_0": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_0)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_1": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_1)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_2": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_2)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_3": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_3)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_4": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_4)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_5": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_5)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_6": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_6)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_7": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_7)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_8": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_8)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_9": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_9)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_Dot": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_Dot)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_BKSP": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_BKSP)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_PlusMinus": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_PlusMinus)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FMS_Upper_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FMS_Upper_INC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FMS_Upper_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FMS_Upper_DEC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FMS_Lower_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FMS_Lower_INC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FMS_Lower_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FMS_Lower_DEC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_MENU_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_MENU_Push)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_CLR": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_CLR)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_ENT_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_ENT_Push)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FMS_Upper_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FMS_Upper_PUSH)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_DIRECTTO": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_DIRECTTO)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_FPL_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_FPL_Push)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_PROC_Push": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_PROC_Push)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_RANGE_INC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_RANGE_INC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_RANGE_DEC": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_RANGE_DEC)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_Home": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_Home)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_COM": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_COM)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_NAV": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_NAV)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_XPDR": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_XPDR)"
	},
	"Microsoft.All Aircraft.Avionics.AS1000_CONTROL_PAD_CRS": {
		"method": "calcCode",
		"code": "(>H:AS1000_CONTROL_PAD_CRS)"
	},
	"IniBuilds.A300.Gear.A300 Parking Brake Status": {
		"method": "calcCode",
		"code": "(L:INI_PARKING_BRAKE_STATUS)"
	},
	"IniBuilds.A300.Autopilot.A300 AP Airspeed Display": {
		"method": "calcCode",
		"code": "(L:INI_Airspeed_Dial)"
	},
	"IniBuilds.A300.Autopilot.A300 AP HDG Display": {
		"method": "calcCode",
		"code": "(L:INI_HEADING_DIAL)"
	},
	"IniBuilds.A300.Autopilot.A300 AP Altitude Display ": {
		"method": "calcCode",
		"code": "(L:INI_Altitude_Dial)"
	},
	"IniBuilds.A300.Autopilot.A300 AP V/S Display": {
		"method": "calcCode",
		"code": "(L:INI_vvi_dial)"
	},
	"IniBuilds.A300.Autopilot.A300 AP Altitude Hold Light": {
		"method": "calcCode",
		"code": "(L:INI_MCU_ALTTUDE_HOLD_LIGHT, bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP LVL/CH Button LIght": {
		"method": "calcCode",
		"code": "(L:INI_MCU_LEVEL_CHANGE_LIGHT, bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP HDG SEL Button Light": {
		"method": "calcCode",
		"code": "(L:INI_MCU_HDG_SEL_LIGHT, bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP NAV Button Light": {
		"method": "calcCode",
		"code": "(L:INI_MCU_NAV_LIGHT, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP V/L Button Light": {
		"method": "calcCode",
		"code": "(L:INI_MCU_LOC_LIGHT, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP LAND Button LIght": {
		"method": "calcCode",
		"code": "(L:INI_MCU_LAND_LIGHT, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP AP1 Button On": {
		"method": "calcCode",
		"code": "(L:INI_ap1_on, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP AP2 Button On": {
		"method": "calcCode",
		"code": "(L:INI_ap2_on, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP CWS Button Light": {
		"method": "calcCode",
		"code": "(L:INI_cws_light, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 AP CMD Button Light": {
		"method": "calcCode",
		"code": "(L:INI_cmd_light, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt CSTR Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_CSTR_CPTIsPressed, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt WPT Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_WPT_CPTIsPressed, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt VOR Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_VOR_CPTIsPressed, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt NDB Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_NDB_CPTIsPressed, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt ARPT Button Light": {
		"method": "calcCode",
		"code": "(L:__EFIS_ARPT_CPTIsPressed, Bool)"
	},
	"IniBuilds.A300.EFIS.A300 EFIS Cpt DH Button Light": {
		"method": "calcCode",
		"code": "(L:INI_DH_SELECTED, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt FPA Button Light": {
		"method": "calcCode",
		"code": "(L:INI_FPA_SELECTED, Bool)"
	},
	"IniBuilds.A300.Autopilot.A300 EFIS Cpt FPA display": {
		"method": "calcCode",
		"code": "(L:INI_FPA_SET)"
	},
	"IniBuilds.A300.Autothrust System.A300 A/THR Button Light": {
		"method": "calcCode",
		"code": "(L:INI_at_on,BOOL)"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Anti Ice Eng 1 Light On": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_ANTI_ICE, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Anti Ice Wing Supply Light On": {
		"method": "calcCode",
		"code": "(L:INI_WING_ANTI_ICE, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Anti Ice Wing Mode ALTN On": {
		"method": "calcCode",
		"code": "(L:INI_ANTI_ICE_WING_MODE, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Anti Ice Eng 2 Light On": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_ANTI_ICE, Bool) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Man Press Arrow On": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_MAN_PRESS_ARROW)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Man Press On": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_MAN_PRESS)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Press Rate Light": {
		"method": "calcCode",
		"code": "(L:INI_CABIN_RATE_LIGHT)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Sys1 Regulator is Off": {
		"method": "calcCode",
		"code": "(L:INI_cabin_sys1_regulator, Bool) !"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Sys2 Regulator is Off": {
		"method": "calcCode",
		"code": "(L:INI_cabin_sys2_regulator, Bool) !"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Sys1 Light On": {
		"method": "calcCode",
		"code": "(L:INI_cabin_sys1, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Sys2 Light On": {
		"method": "calcCode",
		"code": "(L:INI_cabin_sys2, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Fuel Qty Left Outer Tank": {
		"method": "calcCode",
		"code": "(L:INI_FUEL_WEIGHT_LEFT_OUTER, number) 0.00220462 * "
	},
	"IniBuilds.A300.Fuel.A300 Fuel Qty Right Outer Tank": {
		"method": "calcCode",
		"code": "(L:INI_FUEL_WEIGHT_RIGHT_OUTER, number) 0.00220462 * "
	},
	"IniBuilds.A300.Fuel.A300 Fuel Qty Left Inner Tank": {
		"method": "calcCode",
		"code": "(L:INI_FUEL_WEIGHT_LEFT_INNER) 0.00220462 *"
	},
	"IniBuilds.A300.Fuel.A300 Fuel Qty Right Inner Tank": {
		"method": "calcCode",
		"code": "(L:INI_FUEL_WEIGHT_RIGHT_INNER) 0.00220462 *"
	},
	"IniBuilds.A300.Fuel.A300 Fuel Qty Center Tank": {
		"method": "calcCode",
		"code": "(L:INI_FUEL_WEIGHT_CENTER) 0.00220462 *"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed Eng1 Valve On": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_BLEED)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed Eng2 Valve On": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_BLEED)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed XFeed Mode ": {
		"method": "calcCode",
		"code": "(L:INI_XBLEED_MODE)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed XFeed Valve Indicator": {
		"method": "calcCode",
		"code": "(L:INI_XBLEED)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed Eng1 HP Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_bleed_eng1_hp_valve) !"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Air Bleed Eng2 HP Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_bleed_eng2_hp_valve) ! "
	},
	"IniBuilds.A300.Autothrust System.A300 Ovhd Engine Trim Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ENG_TRIM) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_trim_tank_pump1_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK1, Bool) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_trim_tank_pump2_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK2, Bool) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Mode FWD Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK_MODE, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd TrimTK Mode Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK_MODE_FAULT, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Trim TK Isol Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRIM_TANK_ISOL_VALVE, Bool) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Center TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK1_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Center TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK1, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Center TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK2_low_pressure, Bool) "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Aux Tank Fwd Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ACT_TANK)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Aux Tank Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ACT_TANK_FAULT)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Center TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CENTER_TANK2, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Left TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Left TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Right TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Right TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Left TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Left TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_LEFT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Right TK Pump 1 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Right TK Pump 2 Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_RIGHT_low_pressure, Bool)"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Left TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_LEFT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Left TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_LEFT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Right TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK1_RIGHT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Right TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INNER_TANK2_RIGHT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Left TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_LEFT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Left TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_LEFT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Right TK Pump 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK1_RIGHT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Right TK Pump 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OUTER_TANK2_RIGHT, Bool) ! "
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Left TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_outer_tank_left) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Left TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_inner_tank_left) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Inner Right TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_inner_tank_right) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Outer Right TK Iso Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_isolation_valve_outer_tank_right) !"
	},
	"IniBuilds.A300.Fuel.A300 Ovhd Xfeed Transfer Indicator": {
		"method": "calcCode",
		"code": "(L:INI_xfeed_transfer_on, Bool) "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd PTU Blue On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_PTU_blue_status)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd PTU Yellow On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_PTU_yellow_status)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Elec On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_elec_status)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Blue Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_blue_light, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Blue Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng1_switch_pos, Bool) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Green Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng1_A_switch_pos) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Green Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_green1_light, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng2 Green Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng2_B_switch_pos) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng2 Green Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_green2_light, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng2 Yellow Pump Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_eng2_switch_pos) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng2 Yellow Pump Low Press Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_yellow_light, Bool)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Gen2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_elec_gen2_fault, Bool)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Gen2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_eng2_gen_on) !"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Apu Gen Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_apu_gen_on) ! "
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Gen1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_elec_gen1_fault, Bool)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Gen1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_eng1_gen_on, Bool) !"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Ext Pwr Avail": {
		"method": "calcCode",
		"code": "(L:INI_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Ext Power On": {
		"method": "calcCode",
		"code": "(L:INI_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM ENG Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 1 == \n(L:ECAM_CURRENT_STATUS) 0 != and "
	},
	"IniBuilds.A300.ECAM.A300 ECAM HYD Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 2 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM AC Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 3 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM DC Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 4 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM BLEED Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 5 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM COND Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 6 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM PRESS Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 7 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM FUEL Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 8 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM APU Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 9 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM FCTL Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 10 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM DOOR Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 11 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM WHEEL Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ecam_active_page, number) 12 == \n(L:ECAM_CURRENT_STATUS) 0 != and"
	},
	"IniBuilds.A300.ECAM.A300 ECAM CLR Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_ECAM_CLR_LIGHT, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 ATC XPDR Code Display": {
		"method": "calcCode",
		"code": "(A:TRANSPONDER CODE:1, enum)"
	},
	"IniBuilds.A300.Controls.A300 Total Rudder Trim": {
		"method": "calcCode",
		"code": "(L:INI_TOTAL_RUDDER_TRIM)"
	},
	"IniBuilds.A300.Controls.A300 Rudder Trim Display 1": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRIM_DISPLAY1)"
	},
	"IniBuilds.A300.Controls.A300 Rudder Trim Display 2": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRIM_DISPLAY2)"
	},
	"IniBuilds.A300.Controls.A300 Rudder Trim Display 3": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRIM_DISPLAY3)"
	},
	"IniBuilds.A300.Autopilot.A300 AP PROFILE Button Light": {
		"method": "calcCode",
		"code": "(L:INI_MCU_PROFILE_LIGHT)"
	},
	"IniBuilds.A300.Gear.A300 Autobrake Max Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_AUTOBRAKE_HI_DECEL, Bool)"
	},
	"IniBuilds.A300.Gear.A300 Autobrake Med Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_AUTOBRAKE_MED_DECEL, Bool)"
	},
	"IniBuilds.A300.Gear.A300 Autobrake Low Button Light On": {
		"method": "calcCode",
		"code": "(L:INI_AUTOBRAKE_LOW_DECEL, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt ATT HDG Button FO3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_att_hdg_fo3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt ATT HDG Button Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_att_hdg_sys3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt ADC Inst FO1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_adc_inst_fo1, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt ADC Inst Sys2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_adc_inst_sys2, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt FD FO1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_fd_fo1, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt FD Sys2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_fd_sys2, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt EFIS SGU Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_efis_sgu_sys3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt EFIS SGU FO3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_capt_switch_efis_sgu_fo3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Cpt PFD/ND XFR On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_pfd_nd_xfr, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 Terr Mode GPWS Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_terr_mode, Bool) ! "
	},
	"IniBuilds.A300.Avionics.A300 Terr Mode GPWS Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TERR_MODE_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Ctl Blue Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_BLUE_OFF_LIGHT) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Green Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_GREEN_OFF_LIGHT) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Eng1 Yellow Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SERVO_YELLOW_OFF_LIGHT) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Blue Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_servo_blue_low_pressure, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Green Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_servo_green_low_pressure, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Yellow Lo Pr Indicator": {
		"method": "calcCode",
		"code": "(L:INI_hyd_servo_yellow_low_pressure, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Blue Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_B_State) ! (>L:__GUARD_SERVO_B_State)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Green Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_G_State) ! (>L:__GUARD_SERVO_G_State)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Hyd Servo Yellow Guard Toggle": {
		"method": "calcCode",
		"code": "(L:__GUARD_SERVO_Y_State) ! (>L:__GUARD_SERVO_Y_State)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 7 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE7, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 6 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE6, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 5 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE5, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 4 & 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE4_1, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 3 & 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE3_2, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 7 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE7_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 6 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE6_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 5 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE5_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 4 & 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE4_1_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Splr/Spd Brk 3 & 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_SPEEDBRAKE3_2_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Pitch Feel 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL1, Bool) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Pitch Feel 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL2, Bool) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Rud Travel 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL1, Bool) !"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Rud Travel 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL2, Bool) ! "
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Pitch Feel 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL1_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Pitch Feel 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PITCH_FEEL2_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Rud Travel 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL1_FAULT, Bool)"
	},
	"IniBuilds.A300.Hydraulic.A300 Ovhd Rud Travel 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_RUDDER_TRAVEL2_FAULT, Bool)"
	},
	"IniBuilds.A300.Engines.A300 TRP Mode TOGA Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRP_MODE) 1 =="
	},
	"IniBuilds.A300.Engines.A300 TRP Mode MCT Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRP_MODE) 2 =="
	},
	"IniBuilds.A300.Engines.A300 TRP Mode CR Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRP_MODE) 4 =="
	},
	"IniBuilds.A300.Engines.A300 TRP Mode CL Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TRP_MODE) 3 =="
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_BAT1_ON, Bool) !"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_BAT2_ON) ! "
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat3 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_BAT3_ON) ! "
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat1 Light On": {
		"method": "calcCode",
		"code": "(L:INI_BAT1_Light)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat2 Light On": {
		"method": "calcCode",
		"code": "(L:INI_BAT2_Light)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec Bat3 Light On": {
		"method": "calcCode",
		"code": "(L:INI_BAT3_Light)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec DC Norm Bus Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_dc_norm_Bus_off)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec AC Bus1 Off": {
		"method": "calcCode",
		"code": "(L:INI_ac_bus1_off)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec AC Bus2 Off": {
		"method": "calcCode",
		"code": "(L:INI_ac_bus2_off)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec AC ESS Bus1 Off": {
		"method": "calcCode",
		"code": "(L:INI_ac_essential_bus_off)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec AC ESS Bus2 Off": {
		"method": "calcCode",
		"code": "(L:INI_ac_essential_bus2_off)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec DC ESS Bus On Bat": {
		"method": "calcCode",
		"code": "(L:INI_dc_essential_on_battery)"
	},
	"IniBuilds.A300.Electrical.A300 Ovhd Elec AC Emergency On Inv": {
		"method": "calcCode",
		"code": "(L:INI_ac_emergency_on_inv)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Isol Valve Left Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_LEFT) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Isol Valve Right Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_RIGHT) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Isol Valve Left Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_LEFT_FAULT, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Isol Valve Right Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_ISOLATION_VALVE_RIGHT_FAULT, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Hot Air Supply Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HOT_AIR_SUPPLY_ON, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Hot Air Supply Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HOT_AIR_SUPPLY_FAULT, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Pack Valve 1 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PACK1_BUTTON, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Pack Valve 1 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PACK1_FAULT, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Pack Valve 2 Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PACK2_BUTTON, Bool) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Pack Valve 2 Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PACK2_FAULT, Bool) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Pack Pressure Pointer": {
		"method": "calcCode",
		"code": "(L:INI_eng1_producing_bleed_psi, Number)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Econ Flow On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_econ_flow_selected) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Max Cool On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_max_cool, Bool) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Ram Air Open": {
		"method": "calcCode",
		"code": "(L:INI_bleed_ram_air_open, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Compt Ram Air On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_RAM_AIR_ON, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Outflow After Percent": {
		"method": "calcCode",
		"code": "(L:INI_cabin_outflow_aft_percent, Number)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Cabin Outflow Forward Percent": {
		"method": "calcCode",
		"code": "(L:INI_cabin_outflow_forward_percent, Number)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Bleed Pack1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_bleed_pack1_percent, number) 0.5 >"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Bleed Pack2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_bleed_pack2_percent, number) 0.5 >"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS L Align Mode On": {
		"method": "calcCode",
		"code": "(L:INI_IRS1_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS L On Battery On": {
		"method": "calcCode",
		"code": "(L:INI_IRS1_ON_BATTERY, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS L Battery Warning On": {
		"method": "calcCode",
		"code": "(L:INI_IRS1_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS L IRS Warning On": {
		"method": "calcCode",
		"code": "(L:INI_IRS1_IRS_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS R Align Mode On": {
		"method": "calcCode",
		"code": "(L:INI_IRS2_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS R On Battery On": {
		"method": "calcCode",
		"code": "(L:INI_IRS2_ON_BATTERY, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS R Battery Warning": {
		"method": "calcCode",
		"code": "(L:INI_IRS2_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS R IRS Warning On": {
		"method": "calcCode",
		"code": "(L:INI_IRS2_IRS_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS C Align Mode On": {
		"method": "calcCode",
		"code": "(L:INI_IRS3_IS_ALIGNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS C On Battery On": {
		"method": "calcCode",
		"code": "(L:INI_IRS3_ON_BATTERY, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS C Battery Warning": {
		"method": "calcCode",
		"code": "(L:INI_IRS3_BATTERY_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS C IRS Warning On": {
		"method": "calcCode",
		"code": "(L:INI_IRS3_IRS_WARNING, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS ENT Key Light": {
		"method": "calcCode",
		"code": "(L:INI_IRS_ENT_LIGHT, Bool)"
	},
	"IniBuilds.A300.Navigation.A300 Ovhd IRS CLR Key Light": {
		"method": "calcCode",
		"code": "(L:INI_IRS_CLR_LIGHT)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal VHF Capt COM1 Active Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CPT_VHF_TRANSFER_SWITCH, Bool) !"
	},
	"IniBuilds.A300.Radio.A300 Pedestal VHF Capt COM1 STBY Active Indicator": {
		"method": "calcCode",
		"code": "(L:INI_CPT_VHF_TRANSFER_SWITCH, Bool) "
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt VHF1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF1_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt VHF2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF2_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt VHF3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF3_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt HF1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HF1_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt HF2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HF2_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt INT Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INT_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal Capt PA Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PA_CAPTAIN, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal VHF FO COM2 Active Indicator": {
		"method": "calcCode",
		"code": "(L:INI_FO_VHF_TRANSFER_SWITCH, Bool) !"
	},
	"IniBuilds.A300.Radio.A300 Pedestal VHF FO COM2 STBY Active Indicator": {
		"method": "calcCode",
		"code": "(L:INI_FO_VHF_TRANSFER_SWITCH, Bool) "
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO VHF1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF1_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO VHF2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF2_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO VHF3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VHF3_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO HF1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HF1_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO HF2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_HF2_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO INT Indicator": {
		"method": "calcCode",
		"code": "(L:INI_INT_FO, Bool)"
	},
	"IniBuilds.A300.Radio.A300 Pedestal FO PA Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PA_FO, Bool)"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Probe Heat Capt Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_CAPT) ! "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Probe Heat Standby Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_STANDBY) ! "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Probe Heat FO Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_PROBE_HEAT_COPILOT) ! "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Left Lat Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT1) !"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Left Lat Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT1_FAULT) "
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Left WSLO Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT2) !"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Left WSLO Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT2_FAULT)"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Right WSLO Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT3) !"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Right WSLO Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT3_FAULT)"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Right Lat Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT4) !"
	},
	"IniBuilds.A300.Anti-Ice.A300 Ovhd Window Heater Right Lat Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_WINDOW_HEAT4_FAULT)"
	},
	"IniBuilds.A300.Avionics.A300 TERR Button FO On ND Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TERR_ON_FO)"
	},
	"IniBuilds.A300.Avionics.A300 TERR Button FO Stby Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TERR_STANDBY_FO, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 TERR Button CPT On ND Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TERR_ON_CAPT, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 TERR Button Capt Stby Indicator": {
		"method": "calcCode",
		"code": "(L:INI_TERR_STANDBY_CAPT, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 ATT HDG FO Button Capt3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_att_hdg_sys3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 ATT HDG FO Button Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_att_hdg_fo3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 ADC Inst FO Sys1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_adc_inst_fo1, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 ADC Inst FO Capt2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_adc_inst_sys2, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 FO FD Sys1 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_fd_fo1, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 FO FD Capt2 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_fd_sys2, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 FO EFIS SGU Sys3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_efis_sgu_fo3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 FO EFIS SGU Capt3 Indicator": {
		"method": "calcCode",
		"code": "(L:INI_fo_switch_efis_sgu_sys3, Bool)"
	},
	"IniBuilds.A300.Avionics.A300 FO PFD/ND XFR On Indicator": {
		"method": "calcCode",
		"code": "(L:INI_pfd_nd_xfr, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Vent Ovbd Valve Off Indicator": {
		"method": "calcCode",
		"code": "(L:INI_vent_outboard_valve) ! "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Vent Ovbd Valve Fault Indicator": {
		"method": "calcCode",
		"code": "(L:INI_OVERBOARD_VALVE_FAULT, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Vent Extract Valve Ovbd Indicator": {
		"method": "calcCode",
		"code": "(L:INI_vent_extract_valve, Bool) "
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Vent Extract Valve Flow Indicator": {
		"method": "calcCode",
		"code": "(L:INI_VENT_EXTRACT_FLOW, Bool)"
	},
	"IniBuilds.A300.Air Condition / Pressurization.A300 Ovhd Vent Inboard Valve Light": {
		"method": "calcCode",
		"code": "(L:INI_INBOARD_VALVE_LIGHT, Bool)"
	},
	"IniBuilds.A310.Engines.Output.A310 ENGINE 1 EGT": {
		"method": "calcCode",
		"code": "(L:A310_ENGINE1_EGT)"
	},
	"IniBuilds.A310.Engines.Output.A310 ENGINE 2 EGT": {
		"method": "calcCode",
		"code": "(L:A310_ENGINE2_EGT)"
	},
	"IniBuilds.A310.Engines.Output.A310 APU EGT": {
		"method": "calcCode",
		"code": "(L:A310_apu_egt)"
	},
	"Hype Performance Group.H145.Avionics.Output.H145_SDK_MISC_FMS1_ENABLED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MISC_FMS1_ENABLED)"
	},
	"Hype Performance Group.H145.Avionics.Output.H145_SDK_MISC_FMS2_ENABLED": {
		"method": "calcCode",
		"code": "(L:H145_SDK_MISC_FMS2_ENABLED)"
	},
	"IniBuilds.A300.Engines.Output.Engine 1 EGT": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE1_EGT)"
	},
	"IniBuilds.A300.Engines.Output.Engine 2 EGT": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE2_EGT)"
	},
	"IniBuilds.A300.Engines.Output.Engine 1 N1": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE1_N1_DISPLAY)"
	},
	"IniBuilds.A300.Engines.Output.Engine 2 N1": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE2_N1_DISPLAY)"
	},
	"IniBuilds.A300.Engines.Output.Engine 1 N2": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE1_N2_DISPLAY)"
	},
	"IniBuilds.A300.Engines.Output.Engine 2 N2": {
		"method": "calcCode",
		"code": "(L:INI_ENGINE2_N2_DISPLAY)"
	},
	"IniBuilds.A300.Engines.Output.Engine 1 Fuel Used": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_FUEL_USED) 1000 /"
	},
	"IniBuilds.A300.Engines.Output.Engine 2 Fuel Used": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_FUEL_USED) 1000 /"
	},
	"IniBuilds.A300.Avionics.Output.Landing Elevation": {
		"method": "calcCode",
		"code": "(L:INI_landing_elevation)"
	},
	"IniBuilds.A300.Engines.Output.Engine 1 Oil Pressure": {
		"method": "calcCode",
		"code": "(L:INI_eng1_oil_pressure)"
	},
	"IniBuilds.A300.Engines.Output.Engine 2 Oil Pressure": {
		"method": "calcCode",
		"code": "(L:INI_eng2_oil_pressure)"
	},
	"FlightFX.Visionjet SF50.Autothrust System.Output.Autothrottle LED": {
		"method": "calcCode",
		"code": "(L:SF50_Autothrottle_Status)"
	},
	"FlightFX.Visionjet SF50.Autothrust System.Output.Autothrottle FMS LED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet, Bool) ! (A:AUTOPILOT MASTER:1, Bool) and (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"FlightFX.Visionjet SF50.Autothrust System.Output.Autothrottle MAN LED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_SpeedIsManuallySet, Bool)  (A:AUTOPILOT MASTER:1, Bool) and (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER MAC CREADY SETTING": {
		"method": "calcCode",
		"code": "(A:VARIOMETER MAC CREADY SETTING, meter per second)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER NETTO": {
		"method": "calcCode",
		"code": "(A:VARIOMETER NETTO, feet per second)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER RATE": {
		"method": "calcCode",
		"code": "(A:VARIOMETER RATE, feet per second)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER SPEED TO FLY": {
		"method": "calcCode",
		"code": "(A:VARIOMETER SPEED TO FLY, kilometers per hour)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER SPEED TO FLY GLIDE RATIO": {
		"method": "calcCode",
		"code": "(A:VARIOMETER SPEED TO FLY GLIDE RATIO, number)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER SWITCH": {
		"method": "calcCode",
		"code": "(A:VARIOMETER SWITCH, Bool)\n"
	},
	"Microsoft.Generic.Flight Instrumentation.Output.VARIOMETER TOTAL ENERGY": {
		"method": "calcCode",
		"code": "(A:VARIOMETER TOTAL ENERGY, feet per second) \n"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 ELEVATOR TRIM WHEEL DEC": {
		"method": "calcCode",
		"code": "(L:A_FC_ELEVATOR_TRIM) 100 - -4000 max (>L:A_FC_ELEVATOR_TRIM)"
	},
	"FenixSim.A320.Flight Controls.Input.FNX320 ELEVATOR TRIM WHEEL INC": {
		"method": "calcCode",
		"code": "(L:A_FC_ELEVATOR_TRIM) 100 + 13500 min (>L:A_FC_ELEVATOR_TRIM)"
	},
	"Microsoft.Generic.Radio.Input.COM2_STBY_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:COM2_STBY_RADIO_SWAP)"
	},
	"Microsoft.Generic.Radio.Input.COM1_RADIO_SWAP": {
		"method": "calcCode",
		"code": "(>K:COM1_RADIO_SWAP)"
	},
	"Asobo.B787-10.Autothrust System.Input.AUTO_THROTTLE_TO_GA": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_TO_GA)"
	},
	"Asobo.B787-10.Autothrust System.Input.AUTO_THROTTLE_DISCONNECT": {
		"method": "calcCode",
		"code": "(>K:AUTO_THROTTLE_DISCONNECT)"
	},
	"FenixSim.A320.Flight Controls.Input.Flaps Increase": {
		"method": "calcCode",
		"code": "(L:S_FC_FLAPS) ++ (>L:S_FC_FLAPS)"
	},
	"FenixSim.A320.Flight Controls.Input.Flaps Decrease": {
		"method": "calcCode",
		"code": "(L:S_FC_FLAPS) -- (>L:S_FC_FLAPS)"
	},
	"Microsoft.Generic.Lights.Input.CABIN LIGHTS ON": {
		"method": "calcCode",
		"code": "(>K:CABIN_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.CABIN LIGHTS OFF": {
		"method": "calcCode",
		"code": "(>K:CABIN_LIGHTS_OFF)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.RIGHT ENGINE RIGHT MAG ON": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG RIGHT MAGNETO:2, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.RIGHT ENGINE RIGHT MAG OFF": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG RIGHT MAGNETO:2, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.RIGHT ENGINE LEFT MAG ON": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG LEFT MAGNETO:2, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.RIGHT ENGINE LEFT MAG OFF": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG LEFT MAGNETO:2, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.LEFT ENGINE RIGHT MAG ON": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG RIGHT MAGNETO:1, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.LEFT ENGINE RIGHT MAG OFF": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG RIGHT MAGNETO:1, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.LEFT ENGINE LEFT MAG ON": {
		"method": "calcCode",
		"code": "1 (>A:RECIP ENG LEFT MAGNETO:1, Bool) "
	},
	"Flysimware.Cessna 414A.Electrical.Input.LEFT ENGINE LEFT MAG OFF": {
		"method": "calcCode",
		"code": "0 (>A:RECIP ENG LEFT MAGNETO:1, Bool) "
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENGINE OIL TEMPERATURE:index (Celsius)": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL TEMPERATURE:index,Celsius)"
	},
	"Microsoft.Generic.Engines.Output.GENERAL ENG OIL TEMPERATURE:index (Fahrenheit)": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG OIL TEMPERATURE:index,Fahrenheit)"
	},
	"Microsoft.DC-3.Engine.Input.Supercharger Enable Engine 1 Duckworks Mod": {
		"method": "calcCode",
		"code": "1 (>L:C47_supercharger_eng1,boo1)"
	},
	"Microsoft.DC-3.Engine.Input.Supercharger Disable Engine 1 Duckworks Mod": {
		"method": "calcCode",
		"code": "0 (>L:C47_supercharger_eng1,boo1)"
	},
	"Microsoft.DC-3.Engine.Input.Supercharger Enable Engine 2 Duckworks Mod": {
		"method": "calcCode",
		"code": "1 (>L:C47_supercharger_eng2, boo1)"
	},
	"Microsoft.DC-3.Engine.Input.Supercharger Disable Engine 2 Duckworks Mod": {
		"method": "calcCode",
		"code": "0 (>L:C47_supercharger_eng2, boo1)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Kodiak100_Alternator_On": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }\n"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Kodiak100_Alternator_Off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }\n"
	},
	"FlyingIron.P-38L Lightning.Fuel.Input.emergency fuel pump left": {
		"method": "calcCode",
		"code": "(L:FUEL_PumpEmerg_0) ! (>L:FUEL_PumpEmerg_0)"
	},
	"FlyingIron.P-38L Lightning.Fuel.Input.Emergency Fuel Pump right": {
		"method": "calcCode",
		"code": "(L:FUEL_PumpEmerg_1) ! (>L:FUEL_PumpEmerg_1)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Master Mag Switch": {
		"method": "calcCode",
		"code": "(L:ENGINE_Magneto_Master) ! (>L:ENGINE_Magneto_Master)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.wing light high": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_Position_Wing)\n1 (>K:WING_LIGHTS_SET)\n100 (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.wing light dim": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_Position_Wing)\n1 (>K:WING_LIGHTS_SET)\n25 (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.tail light high": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_Position_Tail)\n1 (>K:NAV_LIGHTS_SET)\n100 (>K:LIGHT_POTENTIOMETER_6_SET)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.tail light dim": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_Position_Tail)\n1 (>K:NAV_LIGHTS_SET)\n25 (>K:LIGHT_POTENTIOMETER_6_SET)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.compass power on": {
		"method": "calcCode",
		"code": "1 (L:ELECTRICAL_CompassPowerSwitch) ! (>L:ELECTRICAL_CompassPowerSwitch)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.compass power off": {
		"method": "calcCode",
		"code": "0 (L:ELECTRICAL_CompassPowerSwitch) ! (>L:ELECTRICAL_CompassPowerSwitch)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.Tail Light Off": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_Position_Tail)\n0 (>K:NAV_LIGHTS_SET)\n0 (>K:LIGHT_POTENTIOMETER_6_SET)"
	},
	"FlyingIron.P-38L Lightning.Lights.Input.Wing Lights Off": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_Position_Wing)\n0 (>K:WING_LIGHTS_SET)\n0 (>K:LIGHT_POTENTIOMETER_5_SET)"
	},
	"FlyingIron.P-38L Lightning.O2 System.Input.O2 off": {
		"method": "calcCode",
		"code": "0 (>L:MISC_Oxygen)"
	},
	"FlyingIron.P-38L Lightning.O2 System.Input.O2 On 100%": {
		"method": "calcCode",
		"code": "1 (>L:MISC_Oxygen)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Alternate Air / Air Filter ON": {
		"method": "calcCode",
		"code": "1 (L:ENGINE_AirFilter) ! (>L:ENGINE_AirFilter)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Alternate Air / Air Filter OFF": {
		"method": "calcCode",
		"code": "0 (L:ENGINE_AirFilter) ! (>L:ENGINE_AirFilter)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.Left engine coolant flap closed": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_Coolantflap_Left_Switch)\n-1 (>L:ENGINE_CoolantLeft_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.left engine coolant flap auto": {
		"method": "calcCode",
		"code": "1 (>L:ENGINE_Coolantflap_Left_Switch)\n0 (>L:ENGINE_CoolantLeft_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.Left Engine Coolant Flap Open": {
		"method": "calcCode",
		"code": "2 (>L:ENGINE_Coolantflap_Left_Switch)\n1 (>L:ENGINE_CoolantLeft_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine coolant flap closed": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_Coolantflap_Right_Switch)\n-1 (>L:ENGINE_CoolantRight_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine coolant flap auto": {
		"method": "calcCode",
		"code": "1 (>L:ENGINE_Coolantflap_Right_Switch)\n0 (>L:ENGINE_CoolantRight_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine coolant flap open": {
		"method": "calcCode",
		"code": "2 (>L:ENGINE_Coolantflap_Right_Switch)\n1 (>L:ENGINE_CoolantRight_Flap_Mode)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.left engine intercooler flap Open": {
		"method": "calcCode",
		"code": "2 (>L:ENGINE_IntercoolerLeft_Switch)\n1 (>L:ENGINE_IntercoolerLeft_Flap_Mode)\n1 (>L:ENGINE_IntercoolerLeft_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.left engine intercooler flap AUTO": {
		"method": "calcCode",
		"code": "1 (>L:ENGINE_IntercoolerLeft_Switch)\n1 (>L:ENGINE_IntercoolerLeft_Flap_Mode)\n0 (>L:ENGINE_IntercoolerLeft_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.left engine infercooler flap cloase": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_IntercoolerLeft_Switch)\n-1 (>L:ENGINE_IntercoolerLeft_Flap_Mode)\n0 (>L:ENGINE_IntercoolerLeft_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine intercooler flap open": {
		"method": "calcCode",
		"code": "2 (>L:ENGINE_IntercoolerRight_Switch)\n1 (>L:ENGINE_IntercoolerRight_Flap_Mode)\n1 (>L:ENGINE_IntercoolerRight_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine intercooler flap AUTO": {
		"method": "calcCode",
		"code": "1 (>L:ENGINE_IntercoolerRight_Switch)\n1 (>L:ENGINE_IntercoolerRight_Flap_Mode)\n0 (>L:ENGINE_IntercoolerRight_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.right engine intercooler flap Closed": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_IntercoolerRight_Switch)\n-1 (>L:ENGINE_IntercoolerRight_Flap_Mode)\n0 (>L:ENGINE_IntercoolerRight_Flap_Position)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.left drop tank arm switch ON": {
		"method": "calcCode",
		"code": "1 (L:WEAPONS_ArmingSwitchLeft) ! (>L:WEAPONS_ArmingSwitchLeft)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.left drop tank arm switch SAFE": {
		"method": "calcCode",
		"code": "0 (L:WEAPONS_ArmingSwitchLeft) ! (>L:WEAPONS_ArmingSwitchLeft)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.right drop tank arm switch ON": {
		"method": "calcCode",
		"code": "1 (L:WEAPONS_ArmingSwitchRight) ! (>L:WEAPONS_ArmingSwitchRight)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.right drop tank arm switch SAFE": {
		"method": "calcCode",
		"code": "0 (L:WEAPONS_ArmingSwitchRight) ! (>L:WEAPONS_ArmingSwitchRight)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.master ordnance switch ON": {
		"method": "calcCode",
		"code": "1 (L:WEAPONS_MasterArm) ! (>L:WEAPONS_MasterArm)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.master ordinance switch OFF": {
		"method": "calcCode",
		"code": "0 (L:WEAPONS_MasterArm) ! (>L:WEAPONS_MasterArm)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.left engine Inertial Starter spin up switch ON": {
		"method": "calcCode",
		"code": "1 (>L:FlywheelStartLeft)\n0 (>L:ENGINE_Starter)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.right engine Inertial Starter spin up switch ON": {
		"method": "calcCode",
		"code": "1 (>L:FlywheelStartRight)\n2 (>L:ENGINE_Starter)"
	},
	"FlyingIron.P-38L Lightning.Hydraulic.Input.Aileron Booster valve OFF": {
		"method": "calcCode",
		"code": "1 (L:HANDLING_AileronBooster) ! (>L:HANDLING_AileronBooster)"
	},
	"FlyingIron.P-38L Lightning.Hydraulic.Input.Aileron Booster valve On": {
		"method": "calcCode",
		"code": "0 (L:HANDLING_AileronBooster) ! (>L:HANDLING_AileronBooster)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Input.Drop tank Release": {
		"method": "calcCode",
		"code": "1 (>0:_ButtonAnimVar)\n1 (>K:FUEL_DUMP_TOGGLE)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Engage Left Inertial starter to engine": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_Energizer)\n1 (>L:FlywheelEngageLeft)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Engage Right Inertial starter to engine": {
		"method": "calcCode",
		"code": "2 (>L:ENGINE_Energizer)\n1 (>L:FlywheelEngageRight)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Prime Left Engine": {
		"method": "calcCode",
		"code": "2 (>L:FUEL_PrimerLeft)\n1 (>L:EnginePrimingLeft)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Prime Right Engine": {
		"method": "calcCode",
		"code": "2 (>L:FUEL_PrimerRight)\n1 (>L:EnginePrimingRight)"
	},
	"FlyingIron.P-38L Lightning.Fuel.Input.Test Low Fuel Light ": {
		"method": "calcCode",
		"code": "1 (>L:FUEL_LowlevelTest_IsDown)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.feather left Porp": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FEATHER_SWITCH_1)\n1 (>L:PROP_FEATHER_SWITCH_LEFT)\n1 (>L:ENGINE_FeatherGuard_left)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.De-feather Left Prop ": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_FEATHER_SWITCH_1)\n0 (>L:PROP_FEATHER_SWITCH_LEFT)\n0 (>L:ENGINE_FeatherGuard_left)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.Feather Right Prop": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FEATHER_SWITCH_2)\n1 (>L:PROP_FEATHER_SWITCH_RIGHT)\n1 (>L:ENGINE_FeatherGuard_right)"
	},
	"FlyingIron.P-38L Lightning.Engines.Input.De-Feather Right Prop": {
		"method": "calcCode",
		"code": "0 (>K:TOGGLE_FEATHER_SWITCH_2)\n0 (>L:PROP_FEATHER_SWITCH_RIGHT)\n0 (>L:ENGINE_FeatherGuard_right)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.Open Canopy Top": {
		"method": "calcCode",
		"code": "1 (>L:CANOPY_OPEN_TOP)\n1 (>L:AIRFRAME_Canopy_Top)\n1 (>L:CANOPY_UNLOCKED)\n1 (>L:CANOPY_UNLOCKED_LEFT)\n1 (>L:CANOPY_UNLOCKED_RIGHT)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.Close top Canopy": {
		"method": "calcCode",
		"code": "0 (>L:CANOPY_OPEN_TOP)\n0 (>L:AIRFRAME_Canopy_Top)\n0 (>L:CANOPY_UNLOCKED)\n0 (>L:CANOPY_UNLOCKED_LEFT)\n0 (>L:CANOPY_UNLOCKED_RIGHT)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.Side Windows Up / Closed ": {
		"method": "calcCode",
		"code": "1 (>L:AIRFRAME_Canopy_Left)\n1 (>L:CANOPY_OPEN_LEFT)\n1 (>L:AIRFRAME_Canopy_RIGHT)\n1 (>L:CANOPY_OPEN_RIGHT)"
	},
	"FlyingIron.P-38L Lightning.Miscellaneous.Input.Side Windows Down/Open": {
		"method": "calcCode",
		"code": "0 (>L:AIRFRAME_Canopy_Left)\n0 (>L:CANOPY_OPEN_LEFT)\n0 (>L:AIRFRAME_Canopy_RIGHT)\n0 (>L:CANOPY_OPEN_RIGHT)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.Left  Engine Oil cooler doors Open": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerLeft_Auto)\n1 (>L:ENGINE_OilCoolerLeft_Manual)\n"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input. Left Engine Oil Cooler doors AUTO": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerLeft_Manual)\n1 (>L:ENGINE_OilCoolerLeft_Auto)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input.Left engine Oil Cooler Doors Closed": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerLeft_Auto)\n-1 (>L:ENGINE_OilCoolerLeft_Manual)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input. Right  Engine Oil Cooler Doors Closed": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerRight_Auto)\n-1 (>L:ENGINE_OilCoolerRight_Manual)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input. Right  Engine Oil Cooler Doors Open": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerRight_Auto)\n1 (>L:ENGINE_OilCoolerRight_Manual)"
	},
	"FlyingIron.P-38L Lightning.Engine Cooling.Input. Right  Engine Oil Cooler Doors Auto ": {
		"method": "calcCode",
		"code": "0 (>L:ENGINE_OilCoolerRight_Manual)\n1 (>L:ENGINE_OilCoolerRight_Auto)"
	},
	"FlyingIron.P-38L Lightning.Electrical.Output.left engine generator fail": {
		"method": "calcCode",
		"code": ">(L:PermEngAlternator)\n(A:GENERAL ENG MASTER ALTERNATOR:1, BOOL)"
	},
	"FlyingIron.P-38L Lightning.Electrical.Output.right engine generator fail": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, BOOL)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Output.right drop tank light": {
		"method": "calcCode",
		"code": "(L:WEAPONS_ArmingSwitchRight)"
	},
	"FlyingIron.P-38L Lightning.Weapons.Output.left drop tank light": {
		"method": "calcCode",
		"code": "(L:WEAPONS_ArmingSwitchLeft)"
	},
	"Microsoft.Generic.Radio.Output.COM active station identifier (ICAO)": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQ IDENT:index,String)"
	},
	"Asobo.Bonanza G36.Controls.Output.G36 FLAPS DOWN INDICATOR": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) 30 - abs 0.1 <"
	},
	"Asobo.Bonanza G36.Controls.Output.G36 FLAPS APH INDICATOR": {
		"method": "calcCode",
		"code": "(A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) 12 - abs 0.1 <"
	},
	"Asobo.Bonanza G36.Controls.Output.G36 FLAPS IN TRANS INDICATOR": {
		"method": "calcCode",
		"code": "(A:CIRCUIT FLAP MOTOR ON, bool)"
	},
	"Asobo.Bonanza G36.Controls.Input.G36 FLAPS SWITCH UP": {
		"method": "calcCode",
		"code": " 0  (>K:FLAPS_SET)"
	},
	"Asobo.Bonanza G36.Controls.Input.G36 FLAPS SWITCH APH": {
		"method": "calcCode",
		"code": " 8192  (>K:FLAPS_SET)"
	},
	"Asobo.Bonanza G36.Controls.Input.G36 FLAPS SWITCH DN": {
		"method": "calcCode",
		"code": " 16383  (>K:FLAPS_SET)"
	},
	"IniBuilds.A310.Lights.Input (Potentiometer).A310 Read Light Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_READLIGHT_KNOB_Position) l0 (>L:A310_POTENTIOMETER_18) (O:AIRLINER_READLIGHT_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Auto Press Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_AUTO_PRESS_SELECT_Position) l0 10 / (>L:A310_CABIN_AUTO_PRESS_ACTUAL) (O:AIRLINER_AUTO_PRESS_SELECT_Position) 3.6 * dnor (>O:_KnobAnimVar)"
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Cockpit Temp Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_COCKPITTEMP_KNOB_Position) l0 (>L:A310_AIRCOND_LVL_1)  (O:AIRLINER_COCKPITTEMP_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Fwd Cabin Temp Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_FWD_CABIN_TEMP_Position) l0 (>L:A310_AIRCOND_LVL_2)  (O:AIRLINER_FWD_CABIN_TEMP_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Mid Cabin Temp Knob Set": {
		"method": "calcCode",
		"code": " p0 0 max 100 min s0  (>O:AIRLINER_MID_CABIN_TEMP_Position) l0 (>L:A310_AIRCOND_LVL_3)  (O:AIRLINER_MID_CABIN_TEMP_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Aft Cabin Temp Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_AFT_CABIN_TEMP_Position) l0 (>L:A310_AIRCOND_LVL_4)  (O:AIRLINER_AFT_CABIN_TEMP_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Bulk Cargo Temp Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_BULK_CARGO_TEMP_Position) l0 (>L:A310_AIRCOND_LVL_5)  (O:AIRLINER_BULK_CARGO_TEMP_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Air Condition / Pressurization.Input (Potentiometer).A310 Fwd Cargo Temp Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_FWD_CARGO_TEMP_Position) l0 (>L:A310_AIRCOND_LVL_6)  (O:AIRLINER_FWD_CARGO_TEMP_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Lights.Input (Potentiometer).A310 Cpt Yoke Light Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_CPT_YOKE_LIGHT_KNOB_Position) l0 (>L:A310_POTENTIOMETER_29)  (O:AIRLINER_CPT_YOKE_LIGHT_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Lights.Input (Potentiometer).A310 FO Yoke Light Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_FO_YOKE_LIGHT_KNOB_Position) l0 (>L:A310_POTENTIOMETER_30)  (O:AIRLINER_FO_YOKE_LIGHT_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Lights.Input (Potentiometer).A310 Pedestal Light Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_PEDESTAL_LIGHT_KNOB_Position) l0 (>L:A310_POTENTIOMETER_3)  (O:AIRLINER_PEDESTAL_LIGHT_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.Lights.Input (Potentiometer).A310 MCU Light Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>O:AIRLINER_MCU_LIGHT_KNOB_Position) l0 (>L:A310_POTENTIOMETER_28)  (O:AIRLINER_MCU_LIGHT_KNOB_Position) 3.6 * dnor (>O:_KnobAnimVar) "
	},
	"IniBuilds.A310.MCDU.Input (Potentiometer).A310 MCDU Brightness Cpt Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) \nl0 66 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.MCDU.Input (Potentiometer).A310 MCDU Brightness FO Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 FO PFD Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 FO ND Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 Cpt WXR Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 FO WXR Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_13) l0 13 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 Cpt PFD Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.Avionics.Input (Potentiometer).A310 Cpt ND Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input (Potentiometer).A310 ECAM Left Display Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"IniBuilds.A310.ECAM.Input (Potentiometer).A310 ECAM Right Display Brightness Knob Set": {
		"method": "calcCode",
		"code": "@ 15 - 10.08 / 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L NAV BUTTON SELECTED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_NAV_BUTTON_SELECTED, Bool)"
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L VOR BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 6 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L ILS BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 7 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L GLS BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 8 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L MLS BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 9 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L ADF BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 10 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L VHF1 BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 1 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L VHF2 LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 2 =="
	},
	"Fly By Wire.A320-Dev.Radio.Output.A32NX RMP L VHF3 BUTTON LED": {
		"method": "calcCode",
		"code": "(L:A32NX_RMP_L_SELECTED_MODE) 3 =="
	},
	"Fly By Wire.A320-Dev.Radio.Input.A32NX RMP L GLS BUTTON PRESS": {
		"method": "calcCode",
		"code": "(>H:A32NX_RMP_L_GLS_BUTTON_PRESSED)"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.CESSNA 414 PROP ANTI-ICE ON": {
		"method": "calcCode",
		"code": "(L:DEICE_PROP) => Loads value 1 Load int constant 100 * (1., 100)\n1 (>L:DEICE_PROP)  (L:DEICE_PROP,bool) 100 *\n(L:DEICE_PROP,bool) !  (>L:DEICE_PROP, bool)\n(>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 0 == and if{ (>K:TOGGLE_PROPELLER_DEICE)  }\n(>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 1 == and if{ (>K:TOGGLE_PROPELLER_DEICE)  }\n"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.CESSNA 414 PROP ANTI-ICE OFF": {
		"method": "calcCode",
		"code": "(L:DEICE_PROP) => Loads value 1 Load int constant 100 * (1., 100)\n0 (>L:DEICE_PROP)  (L:DEICE_PROP,bool) 100 *\n0 (L:DEICE_PROP,bool) ! (>L:DEICE_PROP, bool)\n1 (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 1 == (A:PROP DEICE SWITCH:2, Bool) 1 == and if{ (>K:TOGGLE_PROPELLER_DEICE)  }\n0 (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 0 == and if{ (>K:TOGGLE_PROPELLER_DEICE)  }\n"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 OVHD INTEG LIGHT KNOB": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_OH_LIGHTING_OVD)\n"
	},
	"Microsoft.Generic.Autopilot System.Input.altitude": {
		"method": "calcCode",
		"code": "\n  (A:AUTOPILOT ALTITUDE LOCK, bool) if{\n	(>K:AP_PANEL_ALTITUDE_OFF)\n	(>K:AP_PANEL_VS_ON) }\n  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - \n	-3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) }\nels{ 100 (>K:AP_ALT_VAR_DEC) } } "
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 OVHD Reading Light Capt Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_OH_LIGHTING_READING_CAPT)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 OVHD Reading Light FO Knob Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_OH_LIGHTING_READING_FO)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 MIP LIGHTING FLOOD MAIN KNOB SET": {
		"method": "calcCode",
		"code": " @ 1023 / 0 max 1 min (>L:A_MIP_LIGHTING_FLOOD_MAIN)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 MIP LIGHTING FLOOD PED KNOB SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_MIP_LIGHTING_FLOOD_PEDESTAL)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 MIP LIGHTING MAP L KNOB SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_MIP_LIGHTING_MAP_L)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 MIP LIGHTING MAP R KNOB SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_MIP_LIGHTING_MAP_R)\n"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 FCU INTEG BRIGHTNESS KNOB SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_FCU_LIGHTING)"
	},
	"PMS50.GTN750.Navigation.Input.Map Zoom In": {
		"method": "calcCode",
		"code": "(>H:GTN750_ZOOM_IN)"
	},
	"PMS50.GTN750.Navigation.Input.Map Zoom Out": {
		"method": "calcCode",
		"code": "(>H:GTN750_ZOOM_OUT)"
	},
	"House Atreides.Ornithopter.Electrical.Input.Thopter: Toggle Battery": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_BATTERY)"
	},
	"House Atreides.Ornithopter.Fuel.Input.Thopter: Toggle Fuel Valve": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_FUEL_VALVE_ALL)"
	},
	"House Atreides.Ornithopter.Electrical.Input.Thopter: Toggle Alternator": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_MASTER_ALTERNATOR)"
	},
	"House Atreides.Ornithopter.Avionics.Input.Thopter: Toggle Avionics": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AVIONICS_MASTER)"
	},
	"House Atreides.Ornithopter.Engines.Input.Thopter: Engine Start": {
		"method": "calcCode",
		"code": "(>K:ENGINE_AUTO_START)"
	},
	"House Atreides.Ornithopter.Engines.Input.Thopter: Engine Stop": {
		"method": "calcCode",
		"code": "(>K:ENGINE_AUTO_SHUTDOWN)"
	},
	"House Atreides.Ornithopter.Flight Controls.Input.Thopter: Wings Unfold": {
		"method": "calcCode",
		"code": "(>K:WING_FOLD_OFF)"
	},
	"House Atreides.Ornithopter.Flight Controls.Input.Thopter: Wings Fold": {
		"method": "calcCode",
		"code": "(>K:WING_FOLD_ON)"
	},
	"House Atreides.Ornithopter.Engines.Input (Potentiometer).Thopter: Throttle (Potentiometer)": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:THROTTLE_SET)"
	},
	"House Atreides.Ornithopter.Engines.Input (Potentiometer).Thopter: Full Throttle": {
		"method": "calcCode",
		"code": "(>K:THROTTLE_FULL)"
	},
	"House Atreides.Ornithopter.Engines.Input (Potentiometer).Thopter: Idle Throttle": {
		"method": "calcCode",
		"code": "0 (>K:THROTTLE_SET)"
	},
	"House Atreides.Ornithopter.Electrical.Output.Thopter: Battery Light": {
		"method": "calcCode",
		"code": "(A:CIRCUIT GENERAL PANEL ON,Bool)"
	},
	"House Atreides.Ornithopter.Fuel.Output.Thopter: Fuel Valve Light": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL VALVE:1,Bool)"
	},
	"House Atreides.Ornithopter.Electrical.Output.Thopter: Alternator Light": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1,Bool)"
	},
	"House Atreides.Ornithopter.Avionics.Output.Thopter: Avionics Light": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH,Bool)"
	},
	"House Atreides.Ornithopter.Lights.Input.Thopter: Toggle Panel Lights": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL ON,Bool) 1 == if{ (>K:PANEL_LIGHTS_OFF) } els{ (>K:PANEL_LIGHTS_ON) }"
	},
	"House Atreides.Ornithopter.Lights.Output.Thopter: Panel Lights Light": {
		"method": "calcCode",
		"code": "(A:LIGHT PANEL ON,Bool)"
	},
	"House Atreides.Ornithopter.Lights.Input.Thopter: Landing Lights Toggle": {
		"method": "calcCode",
		"code": "(>K:LANDING_LIGHTS_TOGGLE)"
	},
	"House Atreides.Ornithopter.Lights.Output.Thopter: Landing Lights Light": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING ON,Bool)"
	},
	"House Atreides.Ornithopter.Lights.Output.Thopter: Dome Light Light": {
		"method": "calcCode",
		"code": "(A:LIGHT CABIN ON,Bool)"
	},
	"House Atreides.Ornithopter.Lights.Input.Thopter: Dome Lights Toggle": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_CABIN_LIGHTS)"
	},
	"House Atreides.Ornithopter.Interaction.Input.Thopter: Left Door Toggle": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:0, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:0, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:0, percent over 100) }"
	},
	"House Atreides.Ornithopter.Interaction.Input.Thopter: Right Door Toggle": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT GOAL:1, percent over 100) 0 == \nif{ 1 (>A:INTERACTIVE POINT GOAL:1, percent over 100) } \nels{ 0 (>A:INTERACTIVE POINT GOAL:1, percent over 100) }"
	},
	"House Atreides.Ornithopter.Interaction.Output.Thopter: Left Door Light": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT OPEN:0,Percent over 100)"
	},
	"House Atreides.Ornithopter.Interaction.Output.Thopter: Right Door Light": {
		"method": "calcCode",
		"code": "(A:INTERACTIVE POINT OPEN:1,Percent over 100)"
	},
	"House Atreides.Ornithopter.Flight Controls.Output.Thopter: Left Wing Status Light": {
		"method": "calcCode",
		"code": "(L:Wings_FoldL, Percentage) 100 == if{ 1 } els{ 0 }"
	},
	"House Atreides.Ornithopter.Flight Controls.Output.Thopter: Right Wing Status Light": {
		"method": "calcCode",
		"code": "(L:Wings_FoldR, percentage) 100 == if{ 1 } els{ 0 }"
	},
	"House Atreides.Ornithopter.Engines.Output.Thopter: Engine Running Light": {
		"method": "calcCode",
		"code": "(A:TURB ENG N1:1, Percent) 100 == if{ 1 } els{ 0 }"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.ANTI-ICE ELECT LOW (ON)": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE)  }\n\n (A:CIRCUIT ON:69,Bool) 1 ==  (A:CIRCUIT ON:69,Bool) 0 == and (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_OFF) }\n (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 0 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) }\n0 (>L:GENERIC_Momentary_DEICE_ELECT)"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.ANTI-ICE ELECT LOW (OFF)": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:69,Bool) 1 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE)  }\n1 (>L:GENERIC_Momentary_DEICE_ELECT)"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.ANTI-ICE ELECT HIGH (ON)": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE)  }\n (A:CIRCUIT ON:69,Bool) 2 ==  (A:CIRCUIT ON:69,Bool) 2 == and (A:WINDSHIELD DEICE SWITCH, Bool) 1 == and if{ (>K:WINDSHIELD_DEICE_OFF) }\n (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 2 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) }\n2 (>L:GENERIC_Momentary_DEICE_ELECT)"
	},
	"Flysimware.Cessna 414A.Anti-Ice.Input.ANTI-ICE ELECT HIGH (OFF)": {
		"method": "calcCode",
		"code": "(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE)  }\n (A:CIRCUIT ON:69,Bool) 2 ==  (A:CIRCUIT ON:69,Bool) 2 == and (A:WINDSHIELD DEICE SWITCH, Bool) 1 == and if{ (>K:WINDSHIELD_DEICE_OFF) }\n (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 2 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) }\n2 (>L:GENERIC_Momentary_DEICE_ELECT)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Kodiak100_Generator_On": {
		"method": "calcCode",
		"code": "1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) }"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.Kodiak100_Generator_Off": {
		"method": "calcCode",
		"code": "0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) } "
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak100_FirerwallFuel_ShutOff_On": {
		"method": "calcCode",
		"code": "1 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"SimWorks Studios.Kodiak 100.Fuel.Input.Kodiak100_FirerwallFuel_ShutOff_Off": {
		"method": "calcCode",
		"code": "0 (>K:SET_FUEL_VALVE_ENG1)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio BOTH Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioBothHpSwitch,bool) ! (>L:AudioBothHpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio COM1 Button Activate": {
		"method": "calcCode",
		"code": "0 (>L:AudioComSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio COM2 Button Activate": {
		"method": "calcCode",
		"code": "1 (>L:AudioComSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio NAV1 Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioNav1HpSwitch,bool) ! (>L:AudioNav1HpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio NAV2 Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioNav2HpSwitch,bool) ! (>L:AudioNav2HpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio ADF Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioAdf1HpSwitch,bool) ! (>L:AudioAdf1HpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio MKR/DME Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioMkrHpSwitch,bool) ! (>L:AudioMkrHpSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio SPKR Button Toggle": {
		"method": "calcCode",
		"code": "(L:AudioSpkrSwitch,bool) ! (>L:AudioSpkrSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.PA24 250 COM Audio COM1 /COM2 Toggle": {
		"method": "calcCode",
		"code": "(L:AudioComSwitch,bool) ! (>L:AudioComSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Navigation.Output.PA24 250 Transponder Light": {
		"method": "calcCode",
		"code": "(L:XpdrLight)"
	},
	"DC Designs.Concorde.Radio.Input.Transponder Standby": {
		"method": "calcCode",
		"code": "0 (>L:KNOB_ATC_ALT2)"
	},
	"DC Designs.Concorde.Radio.Input.Transponder XPDR": {
		"method": "calcCode",
		"code": "1 (>L:KNOB_ATC_ALT2)"
	},
	"DC Designs.Concorde.Radio.Input.Transponder TA": {
		"method": "calcCode",
		"code": "2 (>L:KNOB_ATC_ALT2)"
	},
	"DC Designs.Concorde.Radio.Input.Transponder RA\\TA": {
		"method": "calcCode",
		"code": "4 (>L:KNOB_ATC_ALT2)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_INC": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_INC)"
	},
	"Microsoft.Generic.Controls.Input.SPOILERS_DEC": {
		"method": "calcCode",
		"code": "(>K:SPOILERS_DEC)"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.Input.Kodiak100_DEICE_Pitot_1_ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.Input.Kodiak100_DEICE_Pitot_1_OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.Input.Kodiak100_DEICE_Pitot_2_ON": {
		"method": "calcCode",
		"code": "2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)"
	},
	"SimWorks Studios.Kodiak 100.Anti-Ice.Input.Kodiak100_DEICE_Pitot_2_OFF": {
		"method": "calcCode",
		"code": "2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU SPEED": {
		"method": "calcCode",
		"code": "(L:N_FCU_SPEED)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU HEADING": {
		"method": "calcCode",
		"code": "(L:N_FCU_HEADING)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU ALTITUDE": {
		"method": "calcCode",
		"code": "(L:N_FCU_ALTITUDE)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU VERTICAL SPEED": {
		"method": "calcCode",
		"code": "(L:N_FCU_VS)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Long Press": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Push_Long)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Large Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_INC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Large Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Small Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_INC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 1 Top Knob Small Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Top Knob Small Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Top Knob Small Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Top Knob Large Inc": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_INC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Top Knob Large Dec": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_DEC)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Tob Knob Short Press": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Push)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Top Knob Long Press": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_TopKnob_Push_Long)"
	},
	"Asobo.TBM 930.Avionics.Input.G3000 TSC 2 Bottom Knob Push": {
		"method": "calcCode",
		"code": "(>H:AS3000_TSC_Horizontal_2_BottomKnob_Push)"
	},
	"FenixSim.A320.Controls.Output.FNX320 RUDDER TRIM DISPLAY": {
		"method": "calcCode",
		"code": "(L:N_FC_RUDDER_TRIM_DECIMAL, Number)  10 /"
	},
	"FenixSim.A320.Radio.Input.PA CABIN SPEAKER SWITCH": {
		"method": "calcCode",
		"code": "(L:S_ASP_PA_REC_LATCH) ! (>L:S_ASP_PA_REC_LATCH)"
	},
	"Microsoft.Generic.Radio.Output.COM active frequency type": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQ TYPE:Index, String)"
	},
	"Asobo.CJ4 AAU1.Electrical.Input.CJ4 ELEC STBY FLT DISPLAY ON": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:49, Bool) != if{ \n   49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MIP CLOCK CHRONO DISPLAY": {
		"method": "calcCode",
		"code": "(L:N_MIP_CLOCK_CHRONO)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MIP CLOCK ELAPSED DISPLAY": {
		"method": "calcCode",
		"code": "(L:N_MIP_CLOCK_ELAPSED)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MIP CLOCK UTC DISPLAY": {
		"method": "calcCode",
		"code": "(L:N_MIP_CLOCK_UTC)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 MIP CLOCK UTC MODE ": {
		"method": "calcCode",
		"code": "(L:N_MIP_CLOCK_MODE)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>K:AVIONICS_MASTER_SET)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>K:AVIONICS_MASTER_SET)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER 1 ON": {
		"method": "calcCode",
		"code": "(>K:AVIONICS_MASTER_1_ON)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER 1 OFF": {
		"method": "calcCode",
		"code": "(>K:AVIONICS_MASTER_1_OFF)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER 2 ON": {
		"method": "calcCode",
		"code": "(>K:AVIONICS_MASTER_2_ON)"
	},
	"Microsoft.Generic.Avionics.Input.AVIONICS MASTER 2 OFF": {
		"method": "calcCode",
		"code": "(>K:AVIONICS_MASTER_2_OFF)"
	},
	"Microsoft.Generic.Flight Controls.Input.HELI AUTO HOVER OFF": {
		"method": "calcCode",
		"code": "(>K:AUTO_HOVER_OFF)"
	},
	"Microsoft.Generic.Flight Controls.Input.HELI AUTO HOVER ON": {
		"method": "calcCode",
		"code": "(>K:AUTO_HOVER_ON)"
	},
	"Microsoft.Generic.Flight Controls.Input.HELI AUTO HOVER SET": {
		"method": "calcCode",
		"code": "(>K:AUTO_HOVER_SET)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 CAB Receive Toggle": {
		"method": "calcCode",
		"code": "(L:S_ASP_CAB_REC_LATCH) ! (>L:S_ASP_CAB_REC_LATCH)"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS Baro Setting 1": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING hPa, hPa)"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS Baro Setting 2": {
		"method": "calcCode",
		"code": "(A:KOHLSMAN SETTING QNH, hPA)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle engine 2 Master Switch ON": {
		"method": "calcCode",
		"code": "1  (>L:S_ENG_MASTER_2)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle engine 2 Master Switch OFF": {
		"method": "calcCode",
		"code": "0  (>L:S_ENG_MASTER_2)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU SPEED DASHED": {
		"method": "calcCode",
		"code": "(L:B_FCU_SPEED_DASHED)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU HEADING DASHED": {
		"method": "calcCode",
		"code": "(L:B_FCU_HEADING_DASHED)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle engine 1 Master Switch ON": {
		"method": "calcCode",
		"code": "1  (>L:S_ENG_MASTER_1)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU VERTICAL SPEED DASHED": {
		"method": "calcCode",
		"code": "(L:B_FCU_VERTICALSPEED_DASHED)"
	},
	"FenixSim.A320.Engines.Input.FNX320 Throttle engine 1 Master Switch OFF": {
		"method": "calcCode",
		"code": "0  (>L:S_ENG_MASTER_1)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU POWER": {
		"method": "calcCode",
		"code": "(L:B_FCU_POWER)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU SPEED MACH": {
		"method": "calcCode",
		"code": "(L:B_FCU_SPEED_MACH)"
	},
	"FenixSim.A320.Autopilot.Output.A320 FCU TRACK FPA MODE": {
		"method": "calcCode",
		"code": "(L:B_FCU_TRACK_FPA_MODE)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP1 ACTIVE FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP1_ACTIVE)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP1 STANDBY FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP1_STDBY)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP2 ACTIVE FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP2_ACTIVE)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP2 STANDBY FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP2_STDBY)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP3 ACTIVE FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP3_ACTIVE)"
	},
	"FenixSim.A320.Radio.Output.FNX320 RMP3 STANDBY FREQ": {
		"method": "calcCode",
		"code": "(L:N_PED_RMP3_STDBY)"
	},
	"FSS.E1XX.Autopilot.Input.FGC A/T PRESS": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_AT) ! (>L:FSS_EXX_FGC_BTN_AT)"
	},
	"FSS.E1XX.Autopilot.Input.FGC SPEED SOURCE": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_SPD_SRC) ! (>L:FSS_EXX_FGC_BTN_SPD_SRC)"
	},
	"FSS.E1XX.Autopilot.Input.FGC ALT UNIT": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_BTN_ALT_UNIT) ! (>L:FSS_EXX_FGC_BTN_ALT_UNIT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYD PUMP GND CTL ONLY SHORT PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_HYDR_AUX_PUMP_GNDCTL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Hydraulic.Input.MSATR HYD PUMP GND CTL ONLY LONG PRESS": {
		"method": "calcCode",
		"code": "1 (>L:MSATR_HYDR_AUX_PUMP_GNDCTL_LONG)"
	},
	"SimWorks Studios.Kodiak 100.Electrical.Input.ELT ON": {
		"method": "calcCode",
		"code": "2(>L:Switch_ELT_1, Enum)"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS ILS 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2461_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS GLS 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2462_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS ALIGN 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_247_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS ON DC 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_248_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS FAULT 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_249_73X, number) 0 >"
	},
	"PMDG.B737-700.Flight Instruments.Output.PMDG B737 OVHD IRS DC FAIL 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_250_73X, number) 0 >"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 ECS Temp Increase": {
		"method": "calcCode",
		"code": "(L:SF50_TempControl, number) 0.1 + 0 max 1 min (>L:SF50_TempControl, number)"
	},
	"FlightFX.Visionjet SF50.Air Condition / Pressurization.Input.SF50 ECS Temp Decrease": {
		"method": "calcCode",
		"code": "(L:SF50_TempControl, number) 0.1 - 0 max 1 min (>L:SF50_TempControl, number)"
	},
	"MobiFlight.Test.Miscellaneous.Output.Test output": {
		"method": "calcCode",
		"code": "(test) changed"
	},
	"FlightFX.Visionjet SF50.Miscellaneous.Input.SF50 VAMS Static Headphones ANR Toggle": {
		"method": "calcCode",
		"code": "(L:SF50_vams_anr) ! (>L:SF50_vams_anr)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA R ALT OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_genReset_R, bool)\n2 (>L:var_genSwitchPos_R, number)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA R ALT ON": {
		"method": "calcCode",
		"code": "0 (>L:var_genReset_R, bool)\n1 (>L:var_genSwitchPos_R, number)"
	},
	"Black Square.Analog King Air.Electrical.Input.BS KA R ALT RESET": {
		"method": "calcCode",
		"code": "1 (>L:var_genReset_R, bool)\n0 (>L:var_genSwitchPos_R, number)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT PITOT HEAT ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:PITOT_HEAT_SET) \n1 (>L:DEICE_Pitot_1)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA LEFT PITOT HEAT OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:PITOT_HEAT_SET) \n0 (>L:DEICE_Pitot_1)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT PITOT HEAT ON": {
		"method": "calcCode",
		"code": "2 1 (>K:2:PITOT_HEAT_SET) \n1 (>L:DEICE_Pitot_2)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA RIGHT PITOT HEAT OFF": {
		"method": "calcCode",
		"code": "2 0 (>K:2:PITOT_HEAT_SET) \n0 (>L:DEICE_Pitot_2)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA NAV LIGHTS ON": {
		"method": "calcCode",
		"code": "1 1 (>K:2:NAV_LIGHTS_SET) \n1 (>L:LIGHTING_NAV_1)  "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA NAV LIGHTS OFF": {
		"method": "calcCode",
		"code": "1 0 (>K:2:NAV_LIGHTS_SET) \n0 (>L:LIGHTING_NAV_1)  "
	},
	"Black Square.Analog King Air.Lights.Input.BS KA BEACON LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) \nl0 (>L:LIGHTING_BEACON_1)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA BEACON LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) \nl0 (>L:LIGHTING_BEACON_1)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA STROBE LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 1 l0 (>K:2:STROBES_SET) \nl0 (>L:LIGHTING_STROBE_1)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA STROBE LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 1 l0 (>K:2:STROBES_SET) \nl0 (>L:LIGHTING_STROBE_1)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA BRAKE DEICE ON": {
		"method": "calcCode",
		"code": "1 (>L:var_BrakeDeIceSwitch, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA BRAKE DEICE OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_BrakeDeIceSwitch, bool)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA PILOT WINDSHIELD ANTI-ICE NORMAL": {
		"method": "calcCode",
		"code": "0 (>L:var_windshieldHeatPos_L)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA PILOT WINDSHIELD ANTI-ICE HI": {
		"method": "calcCode",
		"code": "2 (>L:var_windshieldHeatPos_L)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA PILOT WINDSHIELD ANTI-ICE OFF": {
		"method": "calcCode",
		"code": "1 (>L:var_windshieldHeatPos_L)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA COPILOT WINDSHIELD ANTI-ICE OFF": {
		"method": "calcCode",
		"code": "1 (>L:var_windshieldHeatPos_R)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA COPILOT WINDSHIELD ANTI-ICE NORMAL": {
		"method": "calcCode",
		"code": "0 (>L:var_windshieldHeatPos_R)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA COPILOT WINDSHIELD ANTI-ICE HI": {
		"method": "calcCode",
		"code": "2 (>L:var_windshieldHeatPos_R)"
	},
	"Black Square.Analog King Air.Anti-Ice.Input.BS KA PROPELLER DEICE TOGGLE": {
		"method": "calcCode",
		"code": "(L:var_PropDeiceSwitch, bool) ! (>L:var_PropDeiceSwitch, bool) (L:var_PropDeiceSwitch, bool) (>A:CIRCUIT SWITCH ON:90, bool) (L:var_PropDeiceSwitch, bool) (>A:CIRCUIT SWITCH ON:91, bool) (L:var_PropDeiceSwitch, bool) ! (A:PROP DEICE SWITCH:1, bool) (A:PROP DEICE SWITCH:2, bool) or == if{ (>K:TOGGLE_PROPELLER_DEICE) } "
	},
	"Microsoft.Generic.Radio.Output.COM standby station identifier (ICAO)": {
		"method": "calcCode",
		"code": "(A:COM STANDBY FREQ IDENT:index,String)"
	},
	"Microsoft.Generic.Radio.Output.COM active station type": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQ TYPE:index,String)"
	},
	"Microsoft.Generic.Radio.Output.COM standby station type": {
		"method": "calcCode",
		"code": "(A:COM STANDBY FREQ TYPE:index,String)"
	},
	"Microsoft.Generic.Radio.Output.COM active station name": {
		"method": "calcCode",
		"code": "(A:COM ACTIVE FREQ NAME:index,String)"
	},
	"Black Square.Analog King Air.Lights.Input.BS KA EMERENCY LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "65 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 13 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:65, Bool) if{ 1 (>K:GLARESHIELD_LIGHTS_SET) } els{ (L:var_masterPanelLights, bool) ! if{ 0 (>K:GLARESHIELD_LIGHTS_SET) } }"
	},
	"Black Square.AnalogBaron.Air Condition / Pressurization.Input.vent blower off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:22, bool)"
	},
	"Black Square.AnalogBaron.Air Condition / Pressurization.Input.vent blower on": {
		"method": "calcCode",
		"code": "1  (>A:CIRCUIT SWITCH ON:22, bool)"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_ALTITUDE_KNOB_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_FCU_ALTITUDE, BOOL) if{ 0 (>L:S_FCU_ALTITUDE) } els{ 1 (>L:S_FCU_ALTITUDE) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_HEADING_KNOB_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_FCU_HEADING, BOOL) if{ 0 (>L:S_FCU_HEADING) } els{ 1 (>L:S_FCU_HEADING) }\n"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_SPEED_KNOB_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_FCU_SPEED, BOOL) if{ 0 (>L:S_FCU_SPEED) } els{ 1 (>L:S_FCU_SPEED) }"
	},
	"FenixSim.A320.Autopilot.Input.FNX320_FCU_VS_KNOB_TOGGLE": {
		"method": "calcCode",
		"code": "(L:S_FCU_VERTICAL_SPEED, BOOL) if{ 0 (>L:S_FCU_VERTICAL_SPEED) } els{ 1 (>L:S_FCU_VERTICAL_SPEED) }\n"
	},
	"FenixSim.A320.Electrical.Output.Battery 1 Voltage Display": {
		"method": "calcCode",
		"code": "(L:N_ELEC_VOLT_BAT_1)"
	},
	"FenixSim.A320.Electrical.Output.Battery 2 Voltage Display": {
		"method": "calcCode",
		"code": "(L:N_ELEC_VOLT_BAT_2)"
	},
	"Black Square.AnalogBaron.Air Condition / Pressurization.Input.A/C master switch on": {
		"method": "calcCode",
		"code": "1  (>A:CIRCUIT SWITCH ON:23, bool)"
	},
	"Black Square.AnalogBaron.Air Condition / Pressurization.Input.A/C master switch off": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:23, bool)"
	},
	"IniBuilds.A300.Radio.CPT IDC 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_0_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 0 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_0_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 01 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_01_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 01 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_01_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 02 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_02_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 02 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_02_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 03 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_03_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 03 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_03_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 04 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_04_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 04 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_04_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 05 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_05_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 05 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_05_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 06 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_06_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 06 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_06_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 07 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_07_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 07 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_07_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 08 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_08_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 08 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_08_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC 09 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_09_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC 09 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_09_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC ACCP Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_ACCP_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC ACCP Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_ACCP_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC A Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_A_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC A Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_A_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC ATC Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_ATC_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC ATC Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_ATC_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC B Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_B_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC B Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_B_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC CANC Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_CANC_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC CANC Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_CANC_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC C Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_C_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC C Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_C_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC CLR Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_CLR_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC CLR Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_CLR_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC D Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_D_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC D Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_D_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_DOT_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC DOT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_DOT_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC E Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_E_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC E Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_E_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC F Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_F_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC F Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_F_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC G Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_G_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC G Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_G_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC H Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_H_CPT)"
	},
	"IniBuilds.A300.Radio.CPT IDC HFD Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_HFD_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC HFD Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_HFD_FO)"
	},
	"IniBuilds.A300.Radio.FO IDC H Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_H_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC I Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_I_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC I Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_I_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC J Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_J_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC J Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_J_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC K Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_K_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC K Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_K_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC L Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_L_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC L Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_L_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK1 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK1_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK1 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK1_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK2 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK2_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK2 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK2_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK3 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK3_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK3 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK3_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK4 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK4_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK4 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK4_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK5 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK5_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK5 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK5_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC LSK6 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK6_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC LSK6 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_LSK6_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC MAIN Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MAIN_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC MAIN Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MAIN_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC M Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_M_CPT)"
	},
	"IniBuilds.A300.Radio.CPT IDC MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MENU_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC MENU Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MENU_FO)"
	},
	"IniBuilds.A300.Radio.FO IDC M Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_M_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC MSG Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MSG_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC MSG Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_MSG_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC N Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_N_CPT)"
	},
	"IniBuilds.A300.Radio.CPT IDC NEXT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_NEXT_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC NEXT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_NEXT_FO)"
	},
	"IniBuilds.A300.Radio.FO IDC N Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_N_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC O Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_O_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC O Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_O_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC P Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_P_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC P Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_P_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC PLUS Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_PLUS_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC PLUS Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_PLUS_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC PREV Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_PREV_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC PREV Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_PREV_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC Q Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Q_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC Q Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Q_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC R Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_R_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC R Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_R_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RJCT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RJCT_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RJCT Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RJCT_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK1 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK1_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK1 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK1_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK2 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK2_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK2 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK2_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK3 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK3_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK3 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK3_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK4 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK4_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK4 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK4_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK5 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK5_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK5 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK5_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC RSK6 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK6_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC RSK6 Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_RSK6_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC SATDIAL Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SATDIAL_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC SATDIAL Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SATDIAL_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC SATM Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SATM_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC SATM Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SATM_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC S Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_S_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC S Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_S_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SLASH_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC SLASH Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SLASH_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC SP Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SP_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC SP Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_SP_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC T Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_T_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC T Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_T_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC TUN Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_TUN_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC TUN Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_TUN_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC U Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_U_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC U Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_U_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC V Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_V_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC V Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_V_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC VID Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_VID_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC VID Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_VID_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC W Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_W_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC W Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_W_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC X Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_X_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC X Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_X_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC Y Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Y_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC Y Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Y_FO)"
	},
	"IniBuilds.A300.Radio.CPT IDC Z Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Z_CPT)"
	},
	"IniBuilds.A300.Radio.FO IDC Z Press": {
		"method": "calcCode",
		"code": "1 (>L:IDC_Z_FO)"
	},
	"IniBuilds.A300.Radio.ATC MSG Press": {
		"method": "calcCode",
		"code": "0 (>L:INI_ATC_MSG)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Temp_Pilot_inc": {
		"method": "calcCode",
		"code": "(L:KodiakAC_TemperatureUnitsSel, Bool) if{ \n	1 (L:KodiakAC_TempSet_Pilot, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Pilot, Fahrenheit) \n} els{ \n	1 (L:KodiakAC_TempSet_Pilot, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Pilot, Celsius) }"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Temp_Pilot_dec": {
		"method": "calcCode",
		"code": "(L:KodiakAC_TemperatureUnitsSel, Bool) if{ \n	-1 (L:KodiakAC_TempSet_Pilot, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Pilot, Fahrenheit) \n} els{ \n	-1 (L:KodiakAC_TempSet_Pilot, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Pilot, Celsius) }"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Temp_Passenger_inc": {
		"method": "calcCode",
		"code": "(L:KodiakAC_TemperatureUnitsSel, Bool) if{ \n	1 (L:KodiakAC_TempSet_Passenger, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Passenger, Fahrenheit) \n} els{ \n	1 (L:KodiakAC_TempSet_Passenger, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Passenger, Celsius) \n}"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Temp_Passenger_dec": {
		"method": "calcCode",
		"code": "(L:KodiakAC_TemperatureUnitsSel, Bool) if{ \n	-1 (L:KodiakAC_TempSet_Passenger, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Passenger, Fahrenheit) \n} els{ \n	-1 (L:KodiakAC_TempSet_Passenger, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Passenger, Celsius) \n}"
	},
	"Black Square.AnalogBaron.Anti Ice.Input.Stall Warn Heat ON": {
		"method": "calcCode",
		"code": "(L:var_StallWarningHeatSwitch, bool) ! (>L:var_StallWarningHeatSwitch, bool)"
	},
	"Black Square.AnalogBaron.Anti Ice.Input.Stall Warn Heat OFF": {
		"method": "calcCode",
		"code": "(L:var_StallWarningHeatSwitch, bool) 0 (>L:var_StallWarningHeatSwitch, bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_AC_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_Compressor, Bool) ! (>L:KodiakAC_Compressor, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_ACCS_Passenger_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_ACCS_Passenger, Bool) ! (>L:KodiakAC_ACCS_Passenger, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_ACCS_Pilot_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_ACCS_Pilot, Bool) ! (>L:KodiakAC_ACCS_Pilot, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Defog_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_Defog, Bool) ! (>L:KodiakAC_Defog, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Passenger_Auto_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_Auto_Passenger, Bool) ! (>L:KodiakAC_Auto_Passenger, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Passenger_dec": {
		"method": "calcCode",
		"code": "-1 (L:KodiakAC_Fanspeed_Passenger, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Passenger, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Passenger_inc": {
		"method": "calcCode",
		"code": "1 (L:KodiakAC_Fanspeed_Passenger, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Passenger, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Pilot_Auto_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_Auto_Pilot, Bool) ! (>L:KodiakAC_Auto_Pilot, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Pilot_dec": {
		"method": "calcCode",
		"code": "-1 (L:KodiakAC_Fanspeed_Pilot, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Pilot, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Fan_Pilot_inc": {
		"method": "calcCode",
		"code": "1 (L:KodiakAC_Fanspeed_Pilot, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Pilot, Enum)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Floor_Vent_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_FloorVentOpen, Bool) ! (>L:KodiakAC_FloorVentOpen, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_L1_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterL1, Bool) ! (>L:KodiakAC_HeaterL1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_L2_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterL2, Bool) ! (>L:KodiakAC_HeaterL2, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_L3_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterL3, Bool) ! (>L:KodiakAC_HeaterL3, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_R1_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterR1, Bool) ! (>L:KodiakAC_HeaterR1, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_R2_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterR2, Bool) ! (>L:KodiakAC_HeaterR2, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_R3_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterR3, Bool) ! (>L:KodiakAC_HeaterR3, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_R4_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterR4, Bool) ! (>L:KodiakAC_HeaterR4, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Heater_R5_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_HeaterR5, Bool) ! (>L:KodiakAC_HeaterR5, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Max_Fresh_Air_Aft_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_MaxFreshAirAft, Bool) ! (>L:KodiakAC_MaxFreshAirAft, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Max_Fresh_Air_Fwd_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_MaxFreshAirFwd, Bool) ! (>L:KodiakAC_MaxFreshAirFwd, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Page_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_SwitchPage, Bool) ! (>L:KodiakAC_SwitchPage, Bool)"
	},
	"SimWorks Studios.Kodiak 100.Air Conditioning.Input.Kodiak100_Aircon_Temp_Unit_toggle": {
		"method": "calcCode",
		"code": "(L:KodiakAC_TemperatureUnitsSel, Bool) ! (>L:KodiakAC_TemperatureUnitsSel, Bool)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.Revers ENG status": {
		"method": "calcCode",
		"code": "(L:MSATR_THR_LEVER1_POS) 132 < if{ 400 } els{ 0 }"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Engines.Output.Gustlock status": {
		"method": "calcCode",
		"code": "(L:MSATR_ENG_GUSTLOCK)"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Increase ": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_ALT) 0.0277777777777778 + (>L:FSS_EXX_FGC_ROT_POS_ALT)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.ANTIICE_WING_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_BUTTON_OVHD_ANTI_ICE_WING_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_WING_POSITION, Bool)\n(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.ANTIICE_ENG1_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_1_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_1_POSITION, Bool)\n(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)"
	},
	"Fly By Wire.A320-Dev.Anti-Ice.Input.ANTIICE_ENG2_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_2_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_2_POSITION, Bool)\n(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_managed_speed) 1 == if{ (L:INI_Preset_Dial) } els{ (L:INI_Airspeed_Dial) }"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_MACH_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_managed_speed) 1 == if{ (L:INI_Preset_Dial) } els{ (L:INI_Airspeed_Dial) }"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:INI_managed_speed)"
	},
	"IniBuilds.A320.Autopilot.Output.INI320_FCU_SPEED_DASHED": {
		"method": "calcCode",
		"code": "(L:INI_FCU_SPD_DASHED)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPD_MACH_MODE_SELECT": {
		"method": "calcCode",
		"code": "(L:INI_Airspeed_is_mach)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_HEADING_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_HEADING_DIAL)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_TRACK_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_TRK_DIAL)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_TRACK_FPA_MODE": {
		"method": "calcCode",
		"code": "(L:INI_TRACK_FPA_STATE)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_VS_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_vvi_dial)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_FPA_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_FPA_DIAL)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_DISPLAY": {
		"method": "calcCode",
		"code": "(L:INI_Altitude_Dial)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_LOC_ON": {
		"method": "calcCode",
		"code": "(L:INI_LOCALIZER_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_AP1_ON": {
		"method": "calcCode",
		"code": "(L:INI_ap1_on)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_AP2_ON": {
		"method": "calcCode",
		"code": "(L:INI_ap2_on)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ATHR_ON": {
		"method": "calcCode",
		"code": "(L:INI_ATHR_LIGHT)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_EXPED_ON": {
		"method": "calcCode",
		"code": "(L:A320_EXPEDITE_LIGHT)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_APPR_ON": {
		"method": "calcCode",
		"code": "(L:INI_APPROACH_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_AP1_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_AP1_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_AP2_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_AP2_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_DIAL_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_ALTITUDE_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_DIAL_UP": {
		"method": "calcCode",
		"code": "1 (>L:INI_ALTITUDE_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_PULL": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_ALTITUDE_PULL_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_ALTITUDE_PUSH_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ATHR_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:AP8_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_HEADING_DIAL_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_HEADING_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_HEADING_DIAL_UP": {
		"method": "calcCode",
		"code": "1 (>L:INI_HEADING_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_HEADING_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_HEADING_PULL": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_SELECTED_HEADING_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_APPR_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:AP7_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_LOC_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:AP6_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_DIAL_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_AIRSPEED_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_DIAL_UP": {
		"method": "calcCode",
		"code": "1 (>L:INI_AIRSPEED_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_PULL": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_SELECTED_SPEED_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPEED_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_MANAGED_SPEED_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_VS_DIAL_DN": {
		"method": "calcCode",
		"code": "1 (>L:INI_VVI_DIAL_DN_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_VS_DIAL_UP": {
		"method": "calcCode",
		"code": "1 (>L:INI_VVI_DIAL_UP_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_VS_PULL": {
		"method": "calcCode",
		"code": "1 (>L:AP9_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_VS_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_PUSH_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_SPD_MACH_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_SPD_MACH_BUTTON)"
	},
	"IniBuilds.A320.Autopilot.INI320_SIDESTICK_AP_DISCONNECT_PUSH": {
		"method": "calcCode",
		"code": "(>K:AUTOPILOT_OFF)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_TRK_FPA_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:INI_FCU_HDG_VS_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_ALTITUDE_SCALE_TOGGLE": {
		"method": "calcCode",
		"code": "(L:INI_ALTITUDE_STATE) ! (>L:INI_FCU_ALTITUDE_MODE_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_EXPED_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:A320_FCU_EXPEDITE_COMMAND)"
	},
	"IniBuilds.A320.Autopilot.INI320_FCU_METRIC_ALT_PUSH": {
		"method": "calcCode",
		"code": "(L:INI_FCU_METRIC_STATE) ! (>L:INI_FCU_METRIC_STATE)"
	},
	"Just Flight.BAE146.Electrical.Input.OVHD Batterie 1": {
		"method": "calcCode",
		"code": "1 (>L:OVHD_ELEC_Batt1_on)"
	},
	"Just Flight.BAE146.Electrical.Input.OVHD Batterie 2": {
		"method": "calcCode",
		"code": "1 (>L:OVHD_ELEC_Batt2_on)"
	},
	"Just Flight.BAE146.Autopilot.Input.Toogle AP Sync Button": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_AFTERBURNER)"
	},
	"PMDG.B737-700.Engines.Input.Engine_1_Start_Lever#ENG1": {
		"method": "calcCode",
		"code": "68801 (>K:ROTOR_BRAKE) - ON 68802 (>K:ROTOR_BRAKE"
	},
	"PMDG.B737-700.Engines.Input.Engine_2_Start_Lever#ENG2": {
		"method": "calcCode",
		"code": "68901 (>K:ROTOR_BRAKE) - ON 68902 (>K:ROTOR_BRAKE"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Decr 100": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_ALT) 0.00277777777777778 - (>L:FSS_EXX_FGC_ROT_POS_ALT)"
	},
	"FSS.E1XX.Autopilot.Input.FGP ALT Incr 100": {
		"method": "calcCode",
		"code": "(L:FSS_EXX_FGC_ROT_POS_ALT) 0.00277777777777778 + (>L:FSS_EXX_FGC_ROT_POS_ALT)"
	},
	"IniBuilds.A310.Flight Instruments.Output.A310 MIP Capt Altimeter Baro Mode": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode)"
	},
	"IniBuilds.A310.Flight Instruments.Output.A310 MIP FO Altimeter Baro Mode": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro2_Mode)"
	},
	"Black Square.TBM850.Engine.Output.BS TBM850 ITT Needle Display": {
		"method": "calcCode",
		"code": "(L:BKSQ_TBM_ITT, Number)"
	},
	"Asobo.DG1001E Neo.Gear.Input.Landing gear Down": {
		"method": "calcCode",
		"code": "1 (>K:GEAR_SET) 1 (>L:LANDING_GEAR_Gear)"
	},
	"Asobo.DG1001E Neo.Gear.Input.Landing gear Up": {
		"method": "calcCode",
		"code": "0 (>K:GEAR_SET) 0 (>L:LANDING_GEAR_Gear)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Master Battery Switch On": {
		"method": "calcCode",
		"code": "1 s0 (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool)\nl0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Master Battery Switch Off": {
		"method": "calcCode",
		"code": "0 s0 (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool)\nl0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Electrical Master Bar Up": {
		"method": "calcCode",
		"code": "1 s0 (>L:GENERIC_MASTER_BAR_1, Bool) \nl0 (>H:GENERIC_MASTER_BAR_1, Bool)"
	},
	"Flysimware.Cessna 414A.Electrical.Input.C414A Electrical Master Bar Down": {
		"method": "calcCode",
		"code": "0 s0 (>L:GENERIC_MASTER_BAR_1, Bool) \nl0 (>H:GENERIC_MASTER_BAR_1, Bool)"
	},
	"Flysimware.Cessna 414A.Lights.Input.C414A Lights Strobe Toggle": {
		"method": "calcCode",
		"code": "(>K:STROBES_TOGGLE)"
	},
	"JPLogistics.Cessna 152X.Flight Instrumentation.Input.Old Transponder Power": {
		"method": "calcCode",
		"code": "(L:C152X_XPNDR_KNOB, Number) 0 == if{ 3 (>L:C152X_XPNDR_KNOB, Number) }  els{ 0 (>L:C152X_XPNDR_KNOB, Number) }"
	},
	"Microsoft.DG1001E Neo.Electrical.Input.Battry ON": {
		"method": "calcCode",
		"code": "p0 1 min 0 max (>O:INSTRUMENT_Main_Switch_Position) (O:INSTRUMENT_Main_Switch_Position) s0 l0 0 == if{ \n 0 (>A:BUS BREAKER PULLED:1, Bool) g1 \n} l0 1 == if{ \n 1 (>A:BUS BREAKER PULLED:1, Bool) g1 \n} :1"
	},
	"Microsoft.DG1001E Neo.Light.Input.Strobe lights On": {
		"method": "calcCode",
		"code": "10 (>K:2:STROBES_SET) 10 (>L:LIGHTING_STROBE_1)"
	},
	"Microsoft.DG1001E Neo.Light.Input.Strobe lights off": {
		"method": "calcCode",
		"code": "0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)"
	},
	"Microsoft.DG1001E Neo.Hydraulic.Input.Tow Release": {
		"method": "calcCode",
		"code": " p0 1 min 0 max (>O:HANDLING_Tow_Release_Position) (>K:TOW_PLANE_RELEASE)  1 (>O:_ButtonAnimVar) "
	},
	"Fly By Wire.A320-Dev.Navigation.Output.A32NX EFIS R Waypoint Distance": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_TO_WPT_DISTANCE,NM)"
	},
	"Asobo.CJ4 AAU1.Flight Instrumentation.Output.CJ4 AOA INDICATOR UP": {
		"method": "calcCode",
		"code": "0.63 1.0 (L:WT21_AOA_PCT, number) rng\n(A:GEAR HANDLE POSITION, bool)\n(A:SIM ON GROUND, bool) ! * *"
	},
	"Asobo.CJ4 AAU1.Flight Instrumentation.Output.CJ4 AOA INDICATOR MIDDLE": {
		"method": "calcCode",
		"code": "0.55 0.65 (L:WT21_AOA_PCT, number) rng\n(A:GEAR HANDLE POSITION, bool)\n(A:SIM ON GROUND, bool) ! * *"
	},
	"Asobo.CJ4 AAU1.Flight Instrumentation.Output.CJ4 AOA INDICATOR DOWN": {
		"method": "calcCode",
		"code": "0.0 0.57 (L:WT21_AOA_PCT, number) rng\n(A:GEAR HANDLE POSITION, bool)\n(A:SIM ON GROUND, bool) ! * *"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 1 Right Inner Knob Increase": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_1_KNOB_INNER_R_INC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 1 Right Inner Knob Decrease": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_1_KNOB_INNER_R_DEC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 1 Right Outer Knob Decrease": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_1_KNOB_OUTER_R_DEC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 1 Right Outer Knob Increase": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_1_KNOB_OUTER_R_INC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 2 Right Inner Knob Decrease": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_2_KNOB_INNER_R_DEC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 2 Right Outer Knob Decrease": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_2_KNOB_OUTER_R_DEC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 2 Right Inner Knob Increase": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_2_KNOB_INNER_R_INC)"
	},
	"Working Title.G3X-Touch.Avionics.Input.Unit 2 Right Outer Knob Increase": {
		"method": "calcCode",
		"code": "(>H:AS3X_TOUCH_2_KNOB_OUTER_R_INC)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Nose Unlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_NOSE_GEAR_UNLOCKED, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Left Unlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_LEFT_GEAR_UNLOCKED, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Right Unlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_RIGHT_GEAR_UNLOCKED, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Nose Downlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_NOSE_GEAR_DOWNLOCKED, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Left Downlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_LEFT_GEAR_DOWNLOCKED, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Output.A32NX Gear Right Downlocked Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_LGCIU_1_RIGHT_GEAR_DOWNLOCKED, Bool)"
	},
	"Fly By Wire.A320.Autopilot.Input.A32NX.FCU_VS_PUSH_PULL_TOGGLE2": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VS SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_VS_PUSH) } els{ (>K:A32NX.FCU_VS_PULL) }"
	},
	"IniBuilds.A300.Electrical.Input.Overhead Galley Shed Toggle": {
		"method": "calcCode",
		"code": "(L:INI_galley_shed) ! (>L:INI_galley_shed)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC External Power Button Press": {
		"method": "calcCode",
		"code": "(L:GPOW Pushed, Bool) ! (>L:GPOW Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC Bus Tie Button Press": {
		"method": "calcCode",
		"code": "(L:BTIE Pushed, Bool) ! (>L:BTIE Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC Cabin Power Button Press": {
		"method": "calcCode",
		"code": "(L:CPOW Pushed, Bool) ! (>L:CPOW Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC Battery Master Button Press": {
		"method": "calcCode",
		"code": "(L:BM Pushed, Bool) ! (>L:BM Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC Generator L Button Press": {
		"method": "calcCode",
		"code": "(L:GENL Pushed, Bool) ! (>L:GENL Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Input.HA420 ELEC Generator R Button Press": {
		"method": "calcCode",
		"code": "(L:GENR Pushed, Bool) ! (>L:GENR Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Output.HA420 ELEC Cabin Power Button Off Annunciator": {
		"method": "calcCode",
		"code": "(L:HJET_CabinRelay, bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Output.HA420 ELEC Battery Master Button On Annunciator": {
		"method": "calcCode",
		"code": "(A:ELECTRICAL MASTER BATTERY, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Output.HA420 ELEC Generator L Button Norm Annunciator": {
		"method": "calcCode",
		"code": "(L:GENL Pushed, Bool)"
	},
	"MGharib.HondaJet HA420.Electrical.Output.HA420 ELEC Generator R Button Norm Annunciator": {
		"method": "calcCode",
		"code": "(L:GENR Pushed, bool) "
	},
	"MGharib.HondaJet HA420.Electrical.Output.HA420 ELEC Bus Tie Button Open Annunciator": {
		"method": "calcCode",
		"code": "(L:HJET_BusTie, Bool) ! "
	},
	"Black Square.AnalogBonanza.Controls.Input.Elevator Trim Inc": {
		"method": "calcCode",
		"code": "(>K:ELEV_TRIM_UP)"
	},
	"Black Square.AnalogBonanza.Controls.Input.Elevator Trim Dec": {
		"method": "calcCode",
		"code": "(>K:ELEV_TRIM_DN)"
	},
	"Black Square.AnalogBonanza.Electrical.Input.Load Meter Mode On": {
		"method": "calcCode",
		"code": "1 (>L:BKSQ_loadMeterMode, bool)"
	},
	"Black Square.AnalogBonanza.Electrical.Input.Load Meter Mode Off": {
		"method": "calcCode",
		"code": "0 (>L:BKSQ_loadMeterMode, bool)"
	},
	"Black Square.AnalogBonanza.Engines.Input (Potentiometer).Mixture Lever Position Set": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min (>L:BKSQ_MixtureLeverPosition_1, percent)"
	},
	"Black Square.AnalogBonanza.Fuel.Output.Fuel Flow GPH": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_FuelFlow_1, GALLONS PER HOUR)"
	},
	"Black Square.AnalogBonanza.Miscellaneous.Output.Oxygen Pressure PSI": {
		"method": "calcCode",
		"code": "(L:var_oxygenPressure, number)"
	},
	"Black Square.AnalogBonanza.Air Condition / Pressurization.Output.CABIN TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:var_cabinTemperature, number)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.HSI CDI Needle": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_HSI_LOC, number)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.HSI CDI TO FLAG": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_CDI_1_TO_FLAG, bool)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.HSI CDI FROM FLAG": {
		"method": "calcCode",
		"code": "L:BKSQ_BONANZA_CDI_1_FROM_FLAG, bool"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.HSI CDI VALID FLAG": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_HSI_LOC_FLAG, bool)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.HSI GLIDE NEEDLE": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_HSI_GLIDE, number)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.LOCALIZER 2 CDI": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_LOC_2, number)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Output.LOCALIZER 2 GLIDE": {
		"method": "calcCode",
		"code": "(L:BKSQ_BONANZA_GLIDE_2, number)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Stall Warning Test 1 Release": {
		"method": "calcCode",
		"code": "30304 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Stall Warning Test 2 Release": {
		"method": "calcCode",
		"code": "30404 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Mach Airspeed Warning Test 1 Release": {
		"method": "calcCode",
		"code": "30104 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 OVHD Mach Airspeed Warning Test 2 Release": {
		"method": "calcCode",
		"code": "30204 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 OVHD LE Devices Test Release": {
		"method": "calcCode",
		"code": "22404 (>K:ROTOR_BRAKE)"
	},
	"Flysimware.Learjet 35.Autopilot.Output.ALTITUDE VAR": {
		"method": "calcCode",
		"code": "(L:ALERTER_DIGITAL,Number)"
	},
	"Flysimware.Learjet 35.Autopilot.Output.HDG INDC": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR,Degrees)"
	},
	"Flysimware.Learjet 35.Autopilot.Input.AP ALT ENCODER INC": {
		"method": "calcCode",
		"code": "(L:ALERTER_DIGITAL,Number) 1000 + 50000 min (>L:ALERTER_DIGITAL,Number)"
	},
	"Flysimware.Learjet 35.Autopilot.Input.AP ALT VAR DEC": {
		"method": "calcCode",
		"code": "(L:ALERTER_DIGITAL,Number) 1000 - 0 max (>L:ALERTER_DIGITAL,Number)"
	},
	"Flysimware.Learjet 35.Autopilot.Input.AP IAS SPD Toggle": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AUTOPILOT FLIGHT LEVEL CHANGE, bool) if { (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET) }"
	},
	"COWS.DA42.Electrical.DA42 BREAKER COM1 TOGGLE": {
		"method": "calcCode",
		"code": "36 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER GPS/NAV1 TOGGLE": {
		"method": "calcCode",
		"code": "35 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t49 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER XPDR TOGGLE": {
		"method": "calcCode",
		"code": "33 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER ENG INST TOGGLE": {
		"method": "calcCode",
		"code": "47 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER PITOT TOGGLE": {
		"method": "calcCode",
		"code": "11 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER XFER PUMP/DE-ICE TOGGLE": {
		"method": "calcCode",
		"code": "3 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER TAXI/MAP/ACL TOGGLE": {
		"method": "calcCode",
		"code": "4 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FLOOD TOGGLE": {
		"method": "calcCode",
		"code": "22 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER PFD TOGGLE": {
		"method": "calcCode",
		"code": "31 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER ADC TOGGLE": {
		"method": "calcCode",
		"code": "40 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER AHRS TOGGLE": {
		"method": "calcCode",
		"code": "41 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER Gear WRN/ELEV. LIMIT TOGGLE": {
		"method": "calcCode",
		"code": "48 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER Gear TOGGLE": {
		"method": "calcCode",
		"code": "5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER MFD TOGGLE": {
		"method": "calcCode",
		"code": "32 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER AH TOGGLE": {
		"method": "calcCode",
		"code": "28 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER STALL TOGGLE": {
		"method": "calcCode",
		"code": "7 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t66 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FLAP TOGGLE": {
		"method": "calcCode",
		"code": "8 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER LDG LT/START TOGGLE": {
		"method": "calcCode",
		"code": "17 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER INST LT/NAV LT TOGGLE": {
		"method": "calcCode",
		"code": "6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER AV/CDU Fan TOGGLE": {
		"method": "calcCode",
		"code": "29 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER AVIONIC BUS TOGGLE": {
		"method": "calcCode",
		"code": "6 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER AV CONT. TOGGLE": {
		"method": "calcCode",
		"code": "8 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER COM2 TOGGLE": {
		"method": "calcCode",
		"code": "38 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER GPS/NAV2 TOGGLE": {
		"method": "calcCode",
		"code": "37 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t49 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER Audio TOGGLE": {
		"method": "calcCode",
		"code": "30 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t44 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t34 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER Autopilot TOGGLE": {
		"method": "calcCode",
		"code": "45 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER DATA LINK TOGGLE": {
		"method": "calcCode",
		"code": "42 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER ADF TOGGLE": {
		"method": "calcCode",
		"code": "43 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER DME TOGGLE": {
		"method": "calcCode",
		"code": "43 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER LH ECU BUS TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ECUBUS:1) ! (>L:CB_ECUBUS:1)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER LH ECU B TOGGLE": {
		"method": "calcCode",
		"code": "55 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t62 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER LH ECU A TOGGLE": {
		"method": "calcCode",
		"code": "54 11 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER ALT. LH TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ALT:1) ! (>L:CB_ALT:1)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER LH BATT TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ECUBAT:1) ! (>L:CB_ECUBAT:1)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER RH BATT TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ECUBAT:2) ! (>L:CB_ECUBAT:2)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER ALT. RH TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ALT:2) ! (>L:CB_ALT:2)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER RH ECU BUS TOGGLE": {
		"method": "calcCode",
		"code": "(L:CB_ECUBUS:2) ! (>L:CB_ECUBUS:2)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER RH ECU B TOGGLE": {
		"method": "calcCode",
		"code": "57 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t63 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER RH ECU A TOGGLE": {
		"method": "calcCode",
		"code": "56 13 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FUEL PUMP A LEFT TOGGLE": {
		"method": "calcCode",
		"code": "50 11 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t50 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FUEL PUMP B LEFT TOGGLE": {
		"method": "calcCode",
		"code": "51 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t51 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FUEL PUMP A RIGHT TOGGLE": {
		"method": "calcCode",
		"code": "52 13 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t52 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"COWS.DA42.Electrical.DA42 BREAKER FUEL PUMP B RIGHT TOGGLE": {
		"method": "calcCode",
		"code": "53 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)\n\t\t\t\t53 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)"
	},
	"WB Sim.Cessna 172 Classic.Avionics.Input.Transponder Standby": {
		"method": "calcCode",
		"code": "(L:172X_XPNDR_KNOB, Number) 3 > if{\n  (L:172X_XPNDR_KNOB, Number) 3 - (>L:172X_XPNDR_KNOB, Number)\n}"
	},
	"WB Sim.Cessna 172 Classic.Avionics.Input.Transponder mode ALT": {
		"method": "calcCode",
		"code": "(L:172X_XPNDR_KNOB, Number) 4 < if{\n  4 (>L:172X_XPNDR_KNOB, Number)\n}"
	},
	"Headwind.A330-900.Lights.Input.Toggle main landing light": {
		"method": "calcCode",
		"code": "(A:LIGHT LANDING:2, Bool) ! sp0 \n2 l0 (>K:2:LANDING_LIGHTS_SET) \n3 l0 (>K:2:LANDING_LIGHTS_SET)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob TEST": {
		"method": "calcCode",
		"code": "5 (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob TK/GS": {
		"method": "calcCode",
		"code": "4 (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob STS": {
		"method": "calcCode",
		"code": "3 (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob HDG": {
		"method": "calcCode",
		"code": "2 (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob PPOS": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_NAV_DATA_DISP)"
	},
	"FenixSim.A320.ADIRS.Input.FNX320 ADIRS Data Selector Knob WIND": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_NAV_DATA_DISP)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Output.Auto throttle Status": {
		"method": "calcCode",
		"code": "(L:fgcp_autothrottle_switch1)"
	},
	"Leonardo.MadDog MD-82.EFIS.Input.Baro ALT DEC": {
		"method": "calcCode",
		"code": "8192 0 + (>L:CM1_alt_event, number)"
	},
	"Leonardo.MadDog MD-82.EFIS.Input.ALT BARO INC": {
		"method": "calcCode",
		"code": "16384 0 + (>L:CM1_alt_event,number) "
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.CRS NAV1 ENC DEC": {
		"method": "calcCode",
		"code": "16384 2 + (>L:NAV1_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.CRS NAV1 ENC INC": {
		"method": "calcCode",
		"code": "8192 2 + (>L:NAV1_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_KNOB_PUSH_100_FEET_STEPS_ON_PRESS": {
		"method": "calcCode",
		"code": "2147483648 23 + (>L:fgcp_event,number)"
	},
	"Leonardo.MadDog MD-82.Autopilot.Input.MD82_FGCP_ALT_KNOB_PUSH_100_FEET_STEPS_ON_RELEASE": {
		"method": "calcCode",
		"code": "524288 23 + (>L:fgcp_event,number)"
	},
	"PMDG.B737-600.Engines.Input (Potentiometer).Fuel_Cutoff Engine 1": {
		"method": "calcCode",
		"code": "@ 617 - -1.65 / 100 + 0 max 100 min s0\nl0 95 if > {(>L:switch_688_73X) 100 (>K:ROTOR_BRAKE) 68801 ) quit}\nl0 (>L:switch_688_73X) 0 (>K:ROTOR_BRAKE) 68801 "
	},
	"PMDG.B737-600.Engines.Input (Potentiometer).Fuel_Cutoff Engine 2": {
		"method": "calcCode",
		"code": "@ 617 - -1.65 / 100 + 0 max 100 min s0\nl0 95 if > {(>L:switch_689_73X) 100 (>K:ROTOR_BRAKE) 68901 ) quit}\nl0 (>L:switch_689_73X) 0 (>K:ROTOR_BRAKE) 68901 "
	},
	"Asobo.B787-10.Gear.Input.Autobrake RTO": {
		"method": "calcCode",
		"code": "0 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake Off": {
		"method": "calcCode",
		"code": "1 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake 1": {
		"method": "calcCode",
		"code": "2 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake 2": {
		"method": "calcCode",
		"code": "3 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake 3": {
		"method": "calcCode",
		"code": "4 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake 4": {
		"method": "calcCode",
		"code": "5 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"Asobo.B787-10.Gear.Input.Autobrake Max Auto": {
		"method": "calcCode",
		"code": "6 (>K:SET_AUTOBRAKE_CONTROL)"
	},
	"FenixSim.A320.EFIS.Output.FNX320 EFIS2_BARO_STD Status": {
		"method": "calcCode",
		"code": "(L:I_FCU_EFIS2_QNH)"
	},
	"Just Flight.BAE146.FMS.Input.UNS-1 Next page - Left unit": {
		"method": "calcCode",
		"code": "1 (>L:PED_FWD_L_FMS_NEXT)"
	},
	"Just Flight.BAE146.FMS.Input.UNS-1 Previous page - Left unit": {
		"method": "calcCode",
		"code": "1 (>L:PED_FWD_L_FMS_PREV)"
	},
	"Just Flight.BAE146.FMS.Input.UNS-1 ENTER - Left unit": {
		"method": "calcCode",
		"code": "1 (>L:PED_FWD_L_FMS_ENTER)"
	},
	"Cowan Simulation.H 125.Fuel.Input.H125 FUEL PUMP TOGGLE": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Cowan Simulation.H 125.Fuel.Output.H125 FUEL PUMP Button On Indicator": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM PUMP SWITCH:1, Bool)"
	},
	"Cowan Simulation.H 125.Anti Ice.Input.H125 PITOT Button Press": {
		"method": "calcCode",
		"code": "1 (L:DEICE_Pitot_1,bool) ! (>K:2:PITOT_HEAT_SET)"
	},
	"Cowan Simulation.H 125.Anti Ice.Output.H125 PITOT Button On Indicator": {
		"method": "calcCode",
		"code": "(L:DEICE_Pitot_1,bool) "
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM PUMP OFF": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_PUMP_OFF)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM PUMP ON": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_PUMP_ON)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM PUMP SET": {
		"method": "calcCode",
		"code": "[0] [1] (>K:2:FUELSYSTEM_PUMP_SET)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM PUMP TOGGLE": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_PUMP_TOGGLE)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM TRIGGER OFF": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_TRIGGER_ON)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM TRIGGER SET": {
		"method": "calcCode",
		"code": "[0] [1] (>K:2:FUELSYSTEM_TRIGGER_SET)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM TRIGGER TOGGLE": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_TRIGGER_TOGGLE)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM VALVE CLOSE": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM VALVE OPEN": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM VALVE SET": {
		"method": "calcCode",
		"code": "[0] [1] (>K:2:FUELSYSTEM_VALVE_SET)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL SYSTEM VALVE TOGGLE": {
		"method": "calcCode",
		"code": "index (>K:FUELSYSTEM_VALVE_TOGGLE)"
	},
	"Microsoft.Generic.Fuel.Input.ADD FUEL QUANTITY": {
		"method": "calcCode",
		"code": "(>K:ADD_FUEL_QUANTITY)"
	},
	"Just Flight.PA38 Tomahawk.Fuel.Input.Fuel Pump On": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_fuelpump)"
	},
	"Just Flight.PA38 Tomahawk.Fuel.Input.Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_fuelpump)"
	},
	"Just Flight.PA38 Tomahawk.Lights.Input.Landing Light On": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_ldg_light)"
	},
	"Just Flight.PA38 Tomahawk.Lights.Input.Landing Light Off": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_ldg_light)"
	},
	"Just Flight.PA38 Tomahawk.Lights.Input.Anti Collision Lights On": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_anticol_light)"
	},
	"Just Flight.PA38 Tomahawk.Lights.Input.Anti Collision Lights Off": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_anticol_light)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input.Pitot Heat On": {
		"method": "calcCode",
		"code": "1 (>L:LEFT_MISC_pitotheat)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input.Pitot Heat Off": {
		"method": "calcCode",
		"code": "0 (>L:LEFT_MISC_pitotheat)"
	},
	"Just Flight.PA38 Tomahawk.Gear.Input.Parking Brake Toggle": {
		"method": "calcCode",
		"code": "(>K:PARKING_BRAKES)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input.Carb Heat Off": {
		"method": "calcCode",
		"code": "0 (>L:RIGHT_LOWER_carbheat)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input (Potentiometer).Carb Heat Slider": {
		"method": "calcCode",
		"code": "@ 10.23 / 0 max 100 min  (>L:RIGHT_LOWER_carbheat)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input (Potentiometer).Carb Heat Slider (Inverted code)": {
		"method": "calcCode",
		"code": "@ -10.23 / 100 + 0 max 100 min (>L:RIGHT_LOWER_carbheat)"
	},
	"Just Flight.PA38 Tomahawk.Anti-Ice.Input.Carb Heat On": {
		"method": "calcCode",
		"code": "100 (>L:RIGHT_LOWER_carbheat)"
	},
	"Black Square.Duke.Autopilot.Input.AP Century IV pitch UP": {
		"method": "calcCode",
		"code": "(L:var_AP_PitchKnob) 0.5 - -14.5 max (>L:var_AP_PitchKnob)"
	},
	"Black Square.Duke.Autopilot.Input.AP Century IV Pitch DOWN": {
		"method": "calcCode",
		"code": "(L:var_AP_PitchKnob) 0.5 + 14.5 min (>L:var_AP_PitchKnob)"
	},
	"Microsoft.Generic.Gear.Input (Potentiometer).Nose Wheel Steering (Custom)": {
		"method": "calcCode",
		"code": "16383 (A:GROUND VELOCITY, Knots) 20 - 273.05 * - 0 max 16383 min s1\n512 @ - 512 / d abs * 16383 * l1 -1 *  max l1 min (>K:AXIS_STEERING_SET)"
	},
	"AZURPOLY.TB30.Flight Instruments.Input.NAV Source selector": {
		"method": "calcCode",
		"code": "(L:AZP_TB30_NAV_SOURCE, Bool) ! (>L:AZP_TB30_NAV_SOURCE, Bool)\n(L:AZP_TB30_NAV_SOURCE, Bool) if{\n	(A:NAV OBS:1, degrees) (K:VOR2_SET)\n} els{\n	(A:NAV OBS:2, degrees) (K:VOR1_SET)\n}"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 C/N Switch": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_CN_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Swap buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_SWAP_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Monitor buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_MON_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Functon buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_FUNC_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Clear buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_CLR_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Enter buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_ENT_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 OBS buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_OBS_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 T/F buttom": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_TF_PUSH_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Freq large Knob Dec": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_Knob_Large_Dec_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Freq large Knob Inc": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_Knob_Large_Inc_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Freq small Knob Dec": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_Knob_Small_Dec_2)"
	},
	"AZURPOLY.TB30.Radio.Input.GNC255 Freq small Knob Inc": {
		"method": "calcCode",
		"code": "(>H:RADIO_COM_Knob_Small_Inc_2)"
	},
	"AZURPOLY.TB30.Lights.Input (Potentiometer).Red light": {
		"method": "calcCode",
		"code": "@ 10 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 3 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"AZURPOLY.TB30.Lights.Input (Potentiometer).UV light": {
		"method": "calcCode",
		"code": "@ 10 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 2 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"AZURPOLY.TB30.Lights.Input (Potentiometer).Map light": {
		"method": "calcCode",
		"code": "@ 10 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 7 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"AZURPOLY.TB30.Lights.Input (Potentiometer).Console light": {
		"method": "calcCode",
		"code": "@ 10 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 6 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"AZURPOLY.TB30.Lights.Input (Potentiometer).Radio light": {
		"method": "calcCode",
		"code": "@ 10 / 0 max 100 min s0 \n(>K:2:PANEL_LIGHTS_SET) \nl0 5 (>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_1 push buttom": {
		"method": "calcCode",
		"code": "(>H:AS5_1_Knob_PUSH)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_2 push buttom": {
		"method": "calcCode",
		"code": "(>H:AS5_2_Knob_PUSH)"
	},
	"All vendors.T-37.Radio.Input.NAV Frequence Small Knob Dec": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_FRACT_DEC) (>K:NAV1_RADIO_SWAP)"
	},
	"All vendors.T-37.Radio.Input.NAV Frequence Small Knob Inc": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_FRACT_INC) (>K:NAV1_RADIO_SWAP)"
	},
	"All vendors.T-37.Radio.Input.NAV Frequence Large Knob Dec": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_WHOLE_DEC) (>K:NAV1_RADIO_SWAP)"
	},
	"All vendors.T-37.Radio.Input.NAV Frequence Large Knob Inc": {
		"method": "calcCode",
		"code": "(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_WHOLE_INC) (>K:NAV1_RADIO_SWAP)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_1 Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS5_1_Knob_Inc)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_2 Knob Inc": {
		"method": "calcCode",
		"code": "(>H:AS5_2_Knob_Inc)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_1 Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS5_1_Knob_Dec)"
	},
	"AZURPOLY.TB30.EFIS.Input.GS5_2 Knob Dec": {
		"method": "calcCode",
		"code": "(>H:AS5_2_Knob_Dec)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Cover Open": {
		"method": "calcCode",
		"code": "(L:switch_502_73X, number) ! if{ 50201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Cover Close": {
		"method": "calcCode",
		"code": "(L:switch_502_73X, number) if{ 50201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Inhibit": {
		"method": "calcCode",
		"code": "(L:switch_501_73X, number) if{ 50101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Norm": {
		"method": "calcCode",
		"code": "(L:switch_501_73X, number) ! if{ 50101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Cover Toggle Open/Close": {
		"method": "calcCode",
		"code": "50201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Flap Inhibit Switch Toggle Inhibit/Norm": {
		"method": "calcCode",
		"code": "50101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch Cover Open": {
		"method": "calcCode",
		"code": "(L:switch_504_73X, number) ! if{ 50401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch Cover Close": {
		"method": "calcCode",
		"code": "(L:switch_504_73X, number) if{ 50401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch Cover Toggle Open/Close": {
		"method": "calcCode",
		"code": "50401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch On": {
		"method": "calcCode",
		"code": "(L:switch_503_73X, number) if{ 50301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch Norm": {
		"method": "calcCode",
		"code": "(L:switch_503_73X, number) ! if{ 50301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Gear Inhibit Switch Toggle Inhibit/Norm": {
		"method": "calcCode",
		"code": "50301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch Cover Open": {
		"method": "calcCode",
		"code": "(L:switch_506_73X, number) ! if{ 50601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch Cover Close": {
		"method": "calcCode",
		"code": "(L:switch_506_73X, number) if{ 50601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch Cover Toggle Open/Close": {
		"method": "calcCode",
		"code": "50601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch On": {
		"method": "calcCode",
		"code": "(L:switch_505_73X, number) if{ 50501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch Norm": {
		"method": "calcCode",
		"code": "(L:switch_505_73X, number) ! if{ 50501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B737-700.Warning.Input.GPWS Terr Inhibit Switch Toggle Inhibit/Norm": {
		"method": "calcCode",
		"code": "50501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 GPWS Sys Test Button Press": {
		"method": "calcCode",
		"code": "50001 (>K:ROTOR_BRAKE)"
	},
	"Black Square.Duke.Autopilot.Input.Toggle alt select 1000/100": {
		"method": "calcCode",
		"code": "(L:var_AltitudeSelectorKnobPushed, bool) ! (>L:var_AltitudeSelectorKnobPushed, bool)"
	},
	"Black Square.Duke.Lights.Input.Nav light on": {
		"method": "calcCode",
		"code": "0 (>L:var_NavStrobeLights)"
	},
	"Black Square.Duke.Lights.Input.Nav light off": {
		"method": "calcCode",
		"code": "1 (>L:var_NavStrobeLights)"
	},
	"Black Square.Duke.Lights.Input.Nav and Strobe on": {
		"method": "calcCode",
		"code": "2 (>L:var_NavStrobeLights)"
	},
	"Black Square.Duke.Autopilot.Input.Altitude set increase": {
		"method": "calcCode",
		"code": "(L:var_AltitudeSelectorKnobPushed, bool) if{\n\t(A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 49900 < if{\n\t\t100 (>K:AP_ALT_VAR_INC)\n\t}\n}\nels{\n\t(A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 49000 < if{\n\t\t1000 (>K:AP_ALT_VAR_INC)\n\t}\n}"
	},
	"Black Square.Duke.Autopilot.Input.Altitude set decrease": {
		"method": "calcCode",
		"code": "(L:var_AltitudeSelectorKnobPushed, bool) if{\n\t(A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 0 > if{\n\t\t100 (>K:AP_ALT_VAR_DEC)\n\t}\n}\nels{\n\t(A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 900 > if{\n\t\t1000 (>K:AP_ALT_VAR_DEC)\n\t}\n}"
	},
	"Black Square.Duke.Autopilot.Input.ATT pitch hold toggle": {
		"method": "calcCode",
		"code": "(>K:AP_PITCH_LEVELER_ON)"
	},
	"Black Square.Duke.Air Condition and Pressurization.Input.Intercooler Bypass axis both sides": {
		"method": "calcCode",
		"code": "@ -655.35 / 100 + 0 max 100 min (>L:XMLVAR_Cabin_Heat_1_Position, Number)\n@ -655.35 / 100 + 0 max 100 min (>L:XMLVAR_Cabin_Heat_2_Position, Number)"
	},
	"Leonardo.MadDog MD-82.Radio.Input.VHF1 Knob1 DEC": {
		"method": "calcCode",
		"code": "16384 11 + (>L:radio_event,number)"
	},
	"Leonardo.MadDog MD-82.Radio.Input.VHF1 Knob1 INC": {
		"method": "calcCode",
		"code": "8192 11 + (>L:radio_event,number)"
	},
	"Leonardo.MadDog MD-82.Radio.Input.VHF1 Knob2 DEC": {
		"method": "calcCode",
		"code": "16384 12 + (>L:radio_event,number)"
	},
	"Leonardo.MadDog MD-82.Radio.Input.VHF1 Knob2 INC": {
		"method": "calcCode",
		"code": "8192 12 + (>L:radio_event,number)"
	},
	"Skyward Sim.DA50RG.Gear.Input.DA50RG Landing Gear Lever Down": {
		"method": "calcCode",
		"code": " 1 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)"
	},
	"Skyward Sim.DA50RG.Gear.Input.DA50RG Landing Gear Lever Up": {
		"method": "calcCode",
		"code": " 0 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)"
	},
	"Skyward Sim.DA50RG.Flight Controls.Input (Potentiometer).DA50RG Flaps Lever Set": {
		"method": "calcCode",
		"code": "@ 16 * 0 max 16383 min (>K:FLAPS_SET)"
	},
	"Skyward Sim.DA50RG.Flight Controls.Output.DA50RG Flaps 1 Indicator": {
		"method": "calcCode",
		"code": "0.0 11.0 (A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) rng\n(A:TRAILING EDGE FLAPS LEFT PERCENT, percent) 47.5 <= max"
	},
	"Skyward Sim.DA50RG.Flight Controls.Output.DA50RG Flaps 2 Indicator": {
		"method": "calcCode",
		"code": "11.0 33.0 (A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) rng\n0.1 99.9 (A:TRAILING EDGE FLAPS LEFT PERCENT, percent) rng max"
	},
	"Skyward Sim.DA50RG.Flight Controls.Output.DA50RG Flaps 3 Indicator": {
		"method": "calcCode",
		"code": "33.0 44.0 (A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) rng\n(A:TRAILING EDGE FLAPS LEFT PERCENT, percent) 47.7 >= max"
	},
	"Skyward Sim.DA50RG.Safety.Input.DA50RG ELT Switch ON": {
		"method": "calcCode",
		"code": "0 s0 \nl0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } \nl0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } \nl0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_TEST_TIME) g1 } \n:1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ \n  l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }"
	},
	"Skyward Sim.DA50RG.Safety.Input.DA50RG ELT Switch ARMED": {
		"method": "calcCode",
		"code": "1 s0 \nl0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } \nl0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } \nl0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_TEST_TIME) g1 } \n:1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ \n  l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }"
	},
	"Skyward Sim.DA50RG.Safety.Input.DA50RG ELT Switch RESET TEST": {
		"method": "calcCode",
		"code": "2 s0 \nl0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } \nl0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } \nl0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second)	 (>L:XMLVAR_ELT_TEST_TIME) g1 } \n:1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ \n  l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG EMERG FUEL PUMP SWITCH ON": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n  l0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG EMERG FUEL PUMP SWITCH OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ \n  l0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Skyward Sim.DA50RG.Engine.Input.DA50RG ENGINE MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) if{ (>K:ENGINE_MASTER_1_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Engine.Input.DA50RG ENGINE MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "(A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) ! if{ (>K:ENGINE_MASTER_1_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ENGINE START BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 s0 (>K:SET_STARTER1_HELD)\nl0 (>L:ELECTRICAL_Starter_1)"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ENGINE START BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 s0 (>K:STARTER1_SET) l0 (>K:SET_STARTER1_HELD)\nl0 (>L:ELECTRICAL_Starter_1)"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ESS BUS SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:ESS_BUS)"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ESS BUS SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:ESS_BUS)"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n  1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ \n  1 (>K:TOGGLE_MASTER_BATTERY) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL AVIONICS MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (A:CIRCUIT SWITCH ON:33, Bool) != if{ \n  33 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:33, Bool) 4 (A:1:BUS CONNECTION ON:5, Bool) != \n  if{ 5 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL AVIONICS MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (A:CIRCUIT SWITCH ON:33, Bool) != if{ \n  33 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } \n(A:CIRCUIT SWITCH ON:33, Bool) 4 (A:1:BUS CONNECTION ON:5, Bool) != \n  if{ 5 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Gear.Output.DA50RG NOSE GEAR GREEN INDICATOR": {
		"method": "calcCode",
		"code": "(A:GEAR CENTER POSITION, percent) 100 ==\n(L:GEAR_STALL_TEST) 2 == max"
	},
	"Skyward Sim.DA50RG.Gear.Output.DA50RG LEFT GEAR GREEN INDICATOR": {
		"method": "calcCode",
		"code": "(A:GEAR LEFT POSITION, percent) 100 ==\n(L:GEAR_STALL_TEST) 2 == max"
	},
	"Skyward Sim.DA50RG.Gear.Output.DA50RG RIGHT GEAR GREEN INDICATOR": {
		"method": "calcCode",
		"code": "(A:GEAR RIGHT POSITION, percent) 100 ==\n(L:GEAR_STALL_TEST) 2 == max"
	},
	"Skyward Sim.DA50RG.Gear.Output.DA50RG GEAR UNSAFE RED INDICATOR": {
		"method": "calcCode",
		"code": "(A:GEAR HANDLE POSITION, Bool) 0 == \n(A:SIM ON GROUND,  Bool) and\n(A:GEAR CENTER POSITION, Percent) 0 > \n(A:GEAR CENTER POSITION, Percent) 100 < and or \n(A:GEAR LEFT POSITION, Percent) 0 > \n(A:GEAR LEFT POSITION, Percent) 100 < and or \n(A:GEAR RIGHT POSITION, Percent) 0 > \n(A:GEAR RIGHT POSITION, Percent) 100 < and or \n(L:GEAR_STALL_TEST) 2 == max"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG FUEL TRANSFER PUMP ON": {
		"method": "calcCode",
		"code": "1 (A:FUEL TRANSFER PUMP ON:1, Bool) != if{ \n  1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG FUEL TRANSFER PUMP OFF": {
		"method": "calcCode",
		"code": "0 (A:FUEL TRANSFER PUMP ON:1, Bool) != if{ \n  1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG PROP DEICE SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_PROP)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG PROP DEICE SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_PROP)"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ALTERNATOR 1 SWITCH ON": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ \n  1 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ALTERNATOR 1 SWITCH OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ \n  1 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ALTERNATOR 2 SWITCH ON": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ \n  2 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Skyward Sim.DA50RG.Electrical.Input.DA50RG ELECTRICAL ALTERNATOR 2 SWITCH OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ \n  2 l0 (>K:2:ALTERNATOR_SET) }"
	},
	"Skyward Sim.DA50RG.Engine.Input.DA50RG COWL FLAPS SWITCH CLOSED": {
		"method": "calcCode",
		"code": "1 (>L:COWL_FLAPS)"
	},
	"Skyward Sim.DA50RG.Engine.Input.DA50RG COWL FLAPS SWITCH OPEN": {
		"method": "calcCode",
		"code": "0 (>L:COWL_FLAPS)"
	},
	"Skyward Sim.DA50RG.Engine.Output.DA50RG COWL FLAPS POSITION": {
		"method": "calcCode",
		"code": "(L:COWL_FLAPS_POSITION)"
	},
	"Skyward Sim.DA50RG.Engine.Output.DA50RG COWL FLAPS CLOSED INDICATOR": {
		"method": "calcCode",
		"code": "(A:SPOILERS LEFT POSITION, Percent) 0 == "
	},
	"Skyward Sim.DA50RG.Engine.Output.DA50RG COWL FLAPS OPEN INDICATOR": {
		"method": "calcCode",
		"code": "(A:SPOILERS LEFT POSITION, Percent) 100 == "
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG FUEL SELECTOR KNOB NORMAL": {
		"method": "calcCode",
		"code": "2 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ \n  l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG FUEL SELECTOR KNOB EMERGENCY": {
		"method": "calcCode",
		"code": "3 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ \n  l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"Skyward Sim.DA50RG.Fuel.Input.DA50RG FUEL SELECTOR KNOB OFF": {
		"method": "calcCode",
		"code": "0 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ \n  l0 (>K:FUEL_SELECTOR_SET) }"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG PITOT STALL HEAT SWITCH ON": {
		"method": "calcCode",
		"code": "1 s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG PITOT STALL HEAT SWITCH OFF": {
		"method": "calcCode",
		"code": "0 s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)"
	},
	"Black Square.Duke.Lights.Input.Toggle beacon light on/off": {
		"method": "calcCode",
		"code": "(L:var_BeaconRecogLights, bool) ! (>L:var_BeaconRecogLights, bool)"
	},
	"Black Square.Duke.Lights.Input.Beacon + recognition lights on": {
		"method": "calcCode",
		"code": "2 (>L:var_BeaconRecogLights)"
	},
	"Black Square.Duke.Warning.Input.Master Caution Press": {
		"method": "calcCode",
		"code": "2 (>L:var_masterCautionLatching)"
	},
	"Black Square.Duke.Warning.Input.Master Warning Press": {
		"method": "calcCode",
		"code": "2 (>L:var_masterWarningLatching)"
	},
	"Black Square.Duke.Miscellaneous.Input.Engine Trend Monitor ETM Page": {
		"method": "calcCode",
		"code": "0 (>L:var_EtmMode)"
	},
	"Black Square.Duke.Miscellaneous.Input.Engine Trend Monitor NAV Page": {
		"method": "calcCode",
		"code": "1 (>L:var_EtmMode)"
	},
	"Black Square.Duke.Miscellaneous.Input.Engine Trend Monitor FUEL Page": {
		"method": "calcCode",
		"code": "2 (>L:var_EtmMode)"
	},
	"Black Square.Duke.Miscellaneous.Input.Engine Trend Monitor AIRDATA Page": {
		"method": "calcCode",
		"code": "3 (>L:var_EtmMode)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE ALTERNATE SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_ALT)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE ALTERNATE SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_ALT)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE ALTERNATE SWITCH COVER OPEN": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_AlternateCoverOpened)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE ALTERNATE SWITCH COVER CLOSE": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_AlternateCoverOpened)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE WINGS ICELIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>L:DEICE_SWITCH)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE WINGS ICELIGHT NORM": {
		"method": "calcCode",
		"code": "1 (>L:DEICE_SWITCH)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Input.DA50RG DEICE WINGS ICELIGHT HIGH": {
		"method": "calcCode",
		"code": "2 (>L:DEICE_SWITCH)"
	},
	"Skyward Sim.DA50RG.Anti Ice.Output.DA50RG DEICE ANNUNCIATOR NORM": {
		"method": "calcCode",
		"code": "(L:DEICE_SWITCH) 1 == (L:DEICE_ALT) ! and"
	},
	"Skyward Sim.DA50RG.Anti Ice.Output.DA50RG DEICE ANNUNCIATOR HIGH": {
		"method": "calcCode",
		"code": "(L:DEICE_SWITCH) 0 == (L:DEICE_ALT) ! and"
	},
	"Skyward Sim.DA50RG.Anti Ice.Output.DA50RG DEICE ANNUNCIATOR MAX": {
		"method": "calcCode",
		"code": "(L:DEICE_SWITCH) 0 ==\n(L:DEICE_MAX) and\n(L:DEICE_ALT) ! and"
	},
	"Skyward Sim.DA50RG.FADEC.Input.DA50RG FADEC SWITCH AUTO": {
		"method": "calcCode",
		"code": "0 (>L:ECU_VOTER)\n(A:GENERAL ENG PCT MAX RPM:1, percent) 0.95 * (>A:GENERAL ENG PCT MAX RPM:1, percent)"
	},
	"Skyward Sim.DA50RG.FADEC.Input.DA50RG FADEC SWITCH FORCE B": {
		"method": "calcCode",
		"code": "1 (>L:ECU_VOTER)\n(A:GENERAL ENG PCT MAX RPM:1, percent) 0.95 * (>A:GENERAL ENG PCT MAX RPM:1, percent)"
	},
	"Skyward Sim.DA50RG.FADEC.Input.DA50RG FADEC TEST BUTTON PRESS": {
		"method": "calcCode",
		"code": "1 (>L:FADEC_ECUTEST_BUTTON_IsDown)\n(E:SIMULATION TIME, seconds) \n(>L:FADEC_ECUTEST_BUTTON_MinReleaseTime)"
	},
	"Skyward Sim.DA50RG.FADEC.Input.DA50RG FADEC TEST BUTTON RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:FADEC_ECUTEST_BUTTON_IsDown)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 FO AFDS Panel Test Switch 1": {
		"method": "calcCode",
		"code": "44202 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B737-700.Avionics.Input.PMDG B737 FO AFDS Panel Test Switch Release": {
		"method": "calcCode",
		"code": "44204 (>K:ROTOR_BRAKE)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder Alt Reporting On": {
		"method": "calcCode",
		"code": "1 (>L:S_XPDR_ALTREPORTING)"
	},
	"FenixSim.A320.Radio.Input.FNX320 Transponder Alt Reporting Off": {
		"method": "calcCode",
		"code": "0 (>L:S_XPDR_ALTREPORTING)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng R Fadec ON": {
		"method": "calcCode",
		"code": " 1 (>L:WT_Longitude_Engine_Run:2) 16384 (>K:MIXTURE2_SET)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng R Fadec OFF": {
		"method": "calcCode",
		"code": " 0 (>L:WT_Longitude_Engine_Run:2) 0 (>K:MIXTURE2_SET)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng L Fadec ON": {
		"method": "calcCode",
		"code": " 1 (>L:WT_Longitude_Engine_Run:1) 16384 (>K:MIXTURE1_SET)"
	},
	"Asobo.Longitude.Engines.Input.Longitude Eng L Fadec OFF": {
		"method": "calcCode",
		"code": " 0 (>L:WT_Longitude_Engine_Run:1) 0 (>K:MIXTURE1_SET)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX LANDING LIGHTS L+R Retract": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_2)\n1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n2 (>L:LIGHTING_LANDING_3) \n1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX Landing Lights L+R OFF": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_2)\n0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)\n1 (>L:LIGHTING_LANDING_3) \n0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"Fly By Wire.A320.Lights.Input.A32NX Landing Lights L+R ON": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_2)\n0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)\n0 (>L:LIGHTING_LANDING_3) \n0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)"
	},
	"A2A SIM.Comanche 250.Radio.Input.Marker Beacon Sensitivity Hi": {
		"method": "calcCode",
		"code": "1 (>L:AudioSensSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.Marker Beacon Sensitivity Lo": {
		"method": "calcCode",
		"code": "0 (>L:AudioSensSwitch,bool)"
	},
	"A2A SIM.Comanche 250.Radio.Input.Marker Mute": {
		"method": "calcCode",
		"code": "1 (>L:AudioMkrMuteSwitch, bool) 0 (>L:AudioMkrMuteSwitch, bool)"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 LANDING LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_LANDING_1) ! s0 (>L:LIGHTING_LANDING_1) \n1 l0 (>K:2:LANDING_LIGHTS_SET) \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n1 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 LANDING LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 (>L:LIGHTING_LANDING_1) \n1 l0 (>K:2:LANDING_LIGHTS_SET) \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n1 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 LANDING LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:LIGHTING_LANDING_1) \n1 l0 (>K:2:LANDING_LIGHTS_SET) \n"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 TAXI LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(L:LIGHTING_TAXI_1) ! s0 (>L:LIGHTING_TAXI_1)\n1 l0 (>K:2:TAXI_LIGHTS_SET) \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n2 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 TAXI LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 (>L:LIGHTING_TAXI_1)\n1 l0 (>K:2:TAXI_LIGHTS_SET) \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n2 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 TAXI LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:LIGHTING_TAXI_1)\n1 l0 (>K:2:TAXI_LIGHTS_SET) \n"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 PULSE LIGHTS ON": {
		"method": "calcCode",
		"code": "1 s0 (>L:LIGHTING_RECOGNITION_1) \n1 l0 (>K:2:RECOGNITION_LIGHTS_SET)  \n(L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ \n3 (>L:XMLVAR_Exclusive_Light_Last_Changed) }"
	},
	"Asobo.CJ4 AAU1.Lights.Input.CJ4 PULSE LIGHTS OFF": {
		"method": "calcCode",
		"code": "0 s0 (>L:LIGHTING_RECOGNITION_1) \n1 l0 (>K:2:RECOGNITION_LIGHTS_SET)  "
	},
	"A2A SIM.Comanche 250.Navigation.Input.Inner Marker Beacon Push To Test": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBI, bool) 0 (>L:PushToTestMBI, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.Input.Middle Marker Beacon push to test": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBM, bool) 0 (>L:PushToTestMBM, bool)"
	},
	"A2A SIM.Comanche 250.Navigation.Input.Outer Marker Beacon push to test": {
		"method": "calcCode",
		"code": "1 (>L:PushToTestMBO, bool) 0 (>L:PushToTestMBO, bool)"
	},
	"Flysimware.Learjet 35.Autopilot.Input.AP HDG TOGGLE": {
		"method": "calcCode",
		"code": "(>A:AUTOPILOT_HEADING_LOCK)"
	},
	"Flysimware.Learjet 35.Autopilot.Input.ALT SEL": {
		"method": "calcCode",
		"code": "(L:MODE_ALTSEL,bool) ! (>L:MODE_ALTSEL,bool)"
	},
	"Black Square.Duke.Engines.Input (Potentiometer).LeftMixtureLever": {
		"method": "calcCode",
		"code": "@ -655.35 / 100 + 0 max 100 min (>L:BKSQ_MixtureLeverPosition_1)"
	},
	"Fly By Wire.A320.Radar.Input.A32NX.TOGGLE_WEATHERRADAR_PWS_AND_TCAS": {
		"method": "calcCode",
		"code": "(L:A32NX_SWITCH_RADAR_PWS_POSITION, Number) 0 == if{\n0 (>L:XMLVAR_A320_WEATHERRADAR_SYS)\n2 (>L:A32NX_SWITCH_TCAS_POSITION)\n1 (>L:A32NX_SWITCH_RADAR_PWS_POSITION) } \nels{\n1 (>L:XMLVAR_A320_WEATHERRADAR_SYS)\n0 (>L:A32NX_SWITCH_TCAS_POSITION)\n0 (>L:A32NX_SWITCH_RADAR_PWS_POSITION) }"
	},
	"Black Square.Duke.Autopilot.Input.ALT AP 100/1000 SW": {
		"method": "calcCode",
		"code": "(L:var_AltitudeSelectorKnobPushed, bool) ! (&gt;L:var_AltitudeSelectorKnobPushed, bool)"
	},
	"Black Square.Duke.Autopilot.Output.AP ALT VAL": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR, FEET)"
	},
	"A2A SIM.Comanche 250.Fuel.Input.Fuel Valve Left Axis": {
		"method": "calcCode",
		"code": "@ 300 / 0 max 100 min (>L:FSelComancheLeftState, percent)"
	},
	"A2A SIM.Comanche 250.Fuel.Input.Fuel Valve Right Axis": {
		"method": "calcCode",
		"code": "@ 300 / 0 max 100 min (>L:FSelComancheRightState, percent)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_BARO_CLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_BARO_CLOCKWISE)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_BARO_ANTICLOCKWISE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_BARO_ANTICLOCKWISE)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_BARO_STD": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_BARO_STD)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_CAGE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_CAGE)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_BRT_UP": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_BRT_UP)"
	},
	"Hype Performance Group.H145.Autopilot.Input.H145_SDK_IESI_BRT_DOWN": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_IESI_BRT_DOWN)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC BATTERY 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_BATT1_SWITCH) ! (>L:AN225_BATT1_SWITCH)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC BATTERY 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_BATT2_SWITCH) ! (>L:AN225_BATT2_SWITCH)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC BATTERY 3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_BATT3_SWITCH) ! (>L:AN225_BATT3_SWITCH)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC BATTERY 4 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_BATT4_SWITCH) ! (>L:AN225_BATT4_SWITCH)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC BATTERY 5 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_BATT5_SWITCH) ! (>L:AN225_BATT5_SWITCH)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC RECTIFIER 1 TOGGLE": {
		"method": "calcCode",
		"code": "AN225_ENG1_GEN_BUS_TOGGLE"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC RECTIFIER 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG2_GEN_BUS_TOGGLE) ! (>L:AN225_ENG2_GEN_BUS_TOGGLE)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC RECTIFIER 3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG3_GEN_BUS_TOGGLE) ! (>L:AN225_ENG3_GEN_BUS_TOGGLE)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC RECTIFIER 4 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG4_GEN_BUS_TOGGLE) ! (>L:AN225_ENG4_GEN_BUS_TOGGLE)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC TRANSFORMER 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_TR1_STATUS) ! (>L:AN225_TR1_STATUS)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC TRANSFORMER 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_TR2_STATUS) ! (>L:AN225_TR2_STATUS)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC TRANSFORMER 3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_TR3_STATUS) ! (>L:AN225_TR3_STATUS)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC TRANSFORMER 4 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_TR4_STATUS) ! (>L:AN225_TR4_STATUS)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC GENERATOR 1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG1_GEN_ON) ! (>L:AN225_ENG1_GEN_ON)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC GENERATOR 2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG2_GEN_ON) ! (>L:AN225_ENG2_GEN_ON)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC GENERATOR 3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG3_GEN_ON) ! (>L:AN225_ENG3_GEN_ON)"
	},
	"IniBuilds.AN225.Electrical.Input.AN225 ELEC GENERATOR 4 TOGGLE": {
		"method": "calcCode",
		"code": "(L:AN225_ENG4_GEN_ON) ! (>L:AN225_ENG4_GEN_ON)"
	},
	"DC Designs.Concorde.Electrical.Input.BATTERY2  ON": {
		"method": "calcCode",
		"code": "1 (>K:BATTERY2_SET) "
	},
	"DC Designs.Concorde.Electrical.Input.BATTERY2 OFF": {
		"method": "calcCode",
		"code": "0 (>K:BATTERY2_SET) "
	},
	"DC Designs.Concorde.Electrical.Input.BATTERY1 ON": {
		"method": "calcCode",
		"code": "1 (>K:BATTERY1_SET) "
	},
	"DC Designs.Concorde.Electrical.Input.BATTERY1 OFF": {
		"method": "calcCode",
		"code": "0 (>K:BATTERY1_SET) "
	},
	"Asobo.B787-10.Autopilot.Input.AUTOPILOT_PUSH_SPEED_INTERVENTION": {
		"method": "calcCode",
		"code": "(>H:AS01B_FMC_1_AP_SPEED_INTERVENTION)"
	},
	"Asobo.B787-10.Autopilot.Output.AUTOPILOT HEADING": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR:2,Degrees)"
	},
	"FSS.E1XX.Autopilot.Input.Set FMS Speed": {
		"method": "calcCode",
		"code": "0 (>L:FSS_EXX_FGC_BTN_SPD_SRC)"
	},
	"FSS.E1XX.Autopilot.Input.Set Manual Speed": {
		"method": "calcCode",
		"code": "1 (>L:FSS_EXX_FGC_BTN_SPD_SRC)"
	},
	"Asobo.SR22T.Electrical.Input.Magneto Off": {
		"method": "calcCode",
		"code": "0 (>K:MAGNETO1_SET)"
	},
	"Asobo.SR22T.Electrical.Input.Magneto Right": {
		"method": "calcCode",
		"code": "1 (>K:MAGNETO1_SET)"
	},
	"Asobo.SR22T.Electrical.Input.Magneto Left": {
		"method": "calcCode",
		"code": "2 (>K:MAGNETO1_SET)"
	},
	"Asobo.SR22T.Electrical.Input.Magneto Both": {
		"method": "calcCode",
		"code": "3 (>K:MAGNETO1_SET)"
	},
	"Asobo.SR22T.Electrical.Input.Magneto Start": {
		"method": "calcCode",
		"code": "4 (>K:MAGNETO1_SET)"
	},
	"Captain Sim.C-130.Autopilot System.Input.Turn Control Knob": {
		"method": "calcCode",
		"code": "(L:P17_001_KNB)"
	},
	"Captain Sim.C-130.Autopilot System.Input.Pitch Control Knob": {
		"method": "calcCode",
		"code": "(L:m133_AP_target_pitch )"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Electronics Bus 1 L": {
		"method": "calcCode",
		"code": "7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Electronics Bus 2 L": {
		"method": "calcCode",
		"code": "8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Electronics Bus 1 R": {
		"method": "calcCode",
		"code": "7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Electronics Bus 2 R": {
		"method": "calcCode",
		"code": "8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Avionics Interm Bus L": {
		"method": "calcCode",
		"code": "10 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Avionics Interm Bus R": {
		"method": "calcCode",
		"code": "11 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Gen Overvoltage L": {
		"method": "calcCode",
		"code": "1 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Gen Overvoltage R": {
		"method": "calcCode",
		"code": "2 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Cabin Temp": {
		"method": "calcCode",
		"code": "3 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Press Cont": {
		"method": "calcCode",
		"code": "4 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Pitot Left": {
		"method": "calcCode",
		"code": "7 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Surf Sys": {
		"method": "calcCode",
		"code": "9 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Vent Blwr": {
		"method": "calcCode",
		"code": "5 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Air Cond": {
		"method": "calcCode",
		"code": "6 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Stall R Pitot": {
		"method": "calcCode",
		"code": "8 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Prop Heat": {
		"method": "calcCode",
		"code": "10 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB L Wshld Heat": {
		"method": "calcCode",
		"code": "12 15 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Ignition": {
		"method": "calcCode",
		"code": "95 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB L Gen Overcurrent": {
		"method": "calcCode",
		"code": "97 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Lt Feather Warning": {
		"method": "calcCode",
		"code": "99 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Lt Oil Temp Press": {
		"method": "calcCode",
		"code": "101 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Fire Detect": {
		"method": "calcCode",
		"code": "103 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Fire Exting": {
		"method": "calcCode",
		"code": "104 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Ignition": {
		"method": "calcCode",
		"code": "96 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB R Gen Overcurrent": {
		"method": "calcCode",
		"code": "98 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Rt Feather Warning": {
		"method": "calcCode",
		"code": "100 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Rt Oil Temp Press": {
		"method": "calcCode",
		"code": "102 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Flap Motor": {
		"method": "calcCode",
		"code": "13 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Land Gear Motor": {
		"method": "calcCode",
		"code": "14 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Land Gear Relay": {
		"method": "calcCode",
		"code": "9 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Land Gear Warn": {
		"method": "calcCode",
		"code": "15 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Lights Annun Panel": {
		"method": "calcCode",
		"code": "16 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Lights Nav": {
		"method": "calcCode",
		"code": "17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Lights Beacon Strobe": {
		"method": "calcCode",
		"code": "18 8 (>K:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n19 8 (>K:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Ldg Gear Left": {
		"method": "calcCode",
		"code": "20 16 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n21 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Pilot Instr": {
		"method": "calcCode",
		"code": "22 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n23 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Instr Flood": {
		"method": "calcCode",
		"code": "24 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n25 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Taxi and Ice": {
		"method": "calcCode",
		"code": "26 18 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n27 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Avionics Controller": {
		"method": "calcCode",
		"code": "28 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Ldg Gear Right": {
		"method": "calcCode",
		"code": "29 17 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n30 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Copilot Instr": {
		"method": "calcCode",
		"code": "31 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Sub Panel": {
		"method": "calcCode",
		"code": "33 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n34 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Dome Read Cabin": {
		"method": "calcCode",
		"code": "35 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n36 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n37 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n38 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n39 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n40 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Clock Hobbs Yoke": {
		"method": "calcCode",
		"code": "41 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n42 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)\n43 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Compass": {
		"method": "calcCode",
		"code": "44 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Volt Meter": {
		"method": "calcCode",
		"code": "46 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Ind Flap & LG": {
		"method": "calcCode",
		"code": "47 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Stall Warn": {
		"method": "calcCode",
		"code": "48 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Eng Instr": {
		"method": "calcCode",
		"code": "49 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Alt Sel": {
		"method": "calcCode",
		"code": "50 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Auto Plt": {
		"method": "calcCode",
		"code": "51 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Pitch Trim": {
		"method": "calcCode",
		"code": "52 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Batt Mon": {
		"method": "calcCode",
		"code": "53 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Prop Sync": {
		"method": "calcCode",
		"code": "54 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Wing Pump": {
		"method": "calcCode",
		"code": "58 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Aux Pump": {
		"method": "calcCode",
		"code": "93 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Fuel Qty": {
		"method": "calcCode",
		"code": "60 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Fuel Vent Heat": {
		"method": "calcCode",
		"code": "62 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Ice Door": {
		"method": "calcCode",
		"code": "64 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Left Oil Door": {
		"method": "calcCode",
		"code": "66 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Wing Pump": {
		"method": "calcCode",
		"code": "59 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Aux Pump": {
		"method": "calcCode",
		"code": "94 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Fuel Qty": {
		"method": "calcCode",
		"code": "61 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Fuel Vent Heat": {
		"method": "calcCode",
		"code": "63 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Ice Door": {
		"method": "calcCode",
		"code": "65 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Right Oil Door": {
		"method": "calcCode",
		"code": "67 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Com 1": {
		"method": "calcCode",
		"code": "69 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Nav 1": {
		"method": "calcCode",
		"code": "70 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Audio Ampl": {
		"method": "calcCode",
		"code": "71 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Rad Alt": {
		"method": "calcCode",
		"code": "72 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Com 2": {
		"method": "calcCode",
		"code": "73 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Nav 2": {
		"method": "calcCode",
		"code": "74 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB ATT": {
		"method": "calcCode",
		"code": "75 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB HIS": {
		"method": "calcCode",
		"code": "76 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Alt": {
		"method": "calcCode",
		"code": "77 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB ADF 1": {
		"method": "calcCode",
		"code": "78 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB RNAV 1": {
		"method": "calcCode",
		"code": "80 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB WRDR Cont": {
		"method": "calcCode",
		"code": "82 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB WRDR Ant": {
		"method": "calcCode",
		"code": "83 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB DME 1": {
		"method": "calcCode",
		"code": "84 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Turn & Slip": {
		"method": "calcCode",
		"code": "87 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Eng Monitor": {
		"method": "calcCode",
		"code": "88 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Black Square.Turbine Duke.Electrical.Duke Turb CB Transponder": {
		"method": "calcCode",
		"code": "89 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)"
	},
	"Captain Sim.C-130.Autopilot System.Input.Flight Director Toggle": {
		"method": "calcCode",
		"code": "(>L:L10_001_SW2)"
	},
	"Captain Sim.C-130.Autopilot System.Input.Altitude Hold": {
		"method": "calcCode",
		"code": "(>L:P17_003_SW2)"
	},
	"Captain Sim.C-130.Autopilot System.Input.Radio Beam Coupler Switch": {
		"method": "calcCode",
		"code": "(>L:P19_001_GL4)"
	},
	"FenixSim.A320.Radio.Input.FNX320 ACP1 VHF 1 Receive Toggle": {
		"method": "calcCode",
		"code": "(L:S_ASP_VHF_1_REC_LATCH) ! (>L:S_ASP_VHF_1_REC_LATCH)"
	},
	"FlyingIron.BF 109G-6.Engine.Input.PropGovernorSwitch_Toggle": {
		"method": "calcCode",
		"code": "(L:ENGINE_PropGovernorSwitch) ! (>L:ENGINE_PropGovernorSwitch)"
	},
	"Microsoft.Generic.Electrical.Input.EXTERNAL POWER TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_EXTERNAL_POWER)"
	},
	"FlyingIron.BF 109G-6.Miscellaneous.Input.Toggle Canopy": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST)"
	},
	"AZURPOLY.TB30.Interaction.Input.EFB button": {
		"method": "calcCode",
		"code": "(>H:AZP_TB30_TOGGLE_EFB_POWER)"
	},
	"A2A SIM.Comanche 250.Radio.Output.test radio": {
		"method": "calcCode",
		"code": "(L:Com1OnOffVolume, Number) 5 + 100 min (>L:Com1OnOffVolume, Number) 1 (>L:Com1OnOff, Number)"
	},
	"Black Square.Duke.Lights.Input.Beacon light on": {
		"method": "calcCode",
		"code": "0 (>L:var_BeaconRecogLights)"
	},
	"Black Square.Duke.Lights.Input.Beacon light off": {
		"method": "calcCode",
		"code": "1 (>L:var_BeaconRecogLights)"
	},
	"Black Square.Duke.Electrical.Input.Avionics AC inverter - Select Main": {
		"method": "calcCode",
		"code": "0 (>L:var_InverterSwitch)"
	},
	"Black Square.Duke.Electrical.Input.Avionics AC inverter - Select Standby": {
		"method": "calcCode",
		"code": "2 (>L:var_InverterSwitch)"
	},
	"Black Square.Duke.Electrical.Input.Avionics AC inverter off": {
		"method": "calcCode",
		"code": "1 (>L:var_InverterSwitch)"
	},
	"Black Square.Duke.Electrical.Input.Left Generator on": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Black Square.Duke.Electrical.Input.Left Generator off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }"
	},
	"Black Square.Duke.Electrical.Input.Right Generator on": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Black Square.Duke.Electrical.Input.Right Generator off": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }"
	},
	"Black Square.Duke.Fuel.Input.Left Fuel Pump on": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Black Square.Duke.Fuel.Input.Left Fuel Pump off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }"
	},
	"Black Square.Duke.Fuel.Input.Right Fuel Pump on": {
		"method": "calcCode",
		"code": "1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:2, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP2_SET) }"
	},
	"Black Square.Duke.Fuel.Input.Right Fuel Pump off": {
		"method": "calcCode",
		"code": "0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:2, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP2_SET) }"
	},
	"Black Square.Duke.Engine.Input.Prop Sync on": {
		"method": "calcCode",
		"code": "(A:PROP SYNC ACTIVE, bool) ! if{ (>K:TOGGLE_PROPELLER_SYNC) }"
	},
	"Black Square.Duke.Engine.Input.Prop Sync off": {
		"method": "calcCode",
		"code": "(A:PROP SYNC ACTIVE, bool) if{ (>K:TOGGLE_PROPELLER_SYNC) }"
	},
	"AZURPOLY.TB30.Electrical.Input.GYRO Attitude switch": {
		"method": "calcCode",
		"code": "(L:AZP_TB30_ATTITUDE_SUPPLY_ON, Bool) ! (>L:AZP_TB30_ATTITUDE_SUPPLY_ON, Bool)"
	},
	"Black Square.Duke.Miscellaneous.Input.Yoke Chronometer Control Button": {
		"method": "calcCode",
		"code": "0 2 1 3 (L:var_yokeTimerMode_L) case (>L:var_yokeTimerMode_L)"
	},
	"Microsoft.Generic.Radio.Input.COM 1 SPACING MODE SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(>K:COM_1_SPACING_MODE_SWITCH)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 OVHD BAT 1 Volt Display": {
		"method": "calcCode",
		"code": "(L:N_ELEC_VOLT_BAT_1)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 OVHD BAT 2 Volt Display": {
		"method": "calcCode",
		"code": "(L:N_ELEC_VOLT_BAT_2)"
	},
	"Black Square.Duke.Engines.Input (Potentiometer).Propeller 1 Pitch set till Feather": {
		"method": "calcCode",
		"code": "@ 0.32 * 4096 - -4096 max 16383 min (>K:PROP_PITCH1_SET)"
	},
	"Black Square.Duke.Engines.Input.Propeller 1 Feather": {
		"method": "calcCode",
		"code": "-16383 (>K:PROP_PITCH1_SET)"
	},
	"Just Flight.PA28 Warrior II.Avionics.Input.PA-28-161 Nav Select Switch, Centre Position": {
		"method": "calcCode",
		"code": "1 (>L:AUTOPILOT_NAV_SWITCH)"
	},
	"Black Square.Duke.Engines.Input (Potentiometer).Propeller 2 Pitch set till Feather": {
		"method": "calcCode",
		"code": "@ 0.32 * 4096 - -4096 max 16383 min (>K:PROP_PITCH2_SET)"
	},
	"Black Square.Duke.Engines.Input.Propeller 2 Feather": {
		"method": "calcCode",
		"code": "-16383 (>K:PROP_PITCH2_SET)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK1L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK2L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK3L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK4L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK5L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK6L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK1R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK2R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK3R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK4R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK5R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_LSK6R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU DIR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DIR)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU PROG": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PROG)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU PERF": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PERF)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU INIT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_INIT)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU DATA": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DATA)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU BRT": {
		"method": "calcCode",
		"code": "0 (>L:INI_MCDU1_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU DIM": {
		"method": "calcCode",
		"code": "2 (>L:INI_MCDU1_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU BRT/DIM RELEASE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_FPLAN)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU RADNAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_RADNAV)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU FUEL": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_FUEL)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU SEC": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_SEC)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU ATC": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_ATC)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU MENU": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_MENU)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU AIRPROT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_AIRPROT)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU PREV": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PREV)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU UARROW": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_UARROW)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU NEXT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_NEXT)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU DOWN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DOWN)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU A": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_A)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU B": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_B)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU C": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_C)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU D": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_D)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU E": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_E)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU F": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_F)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU G": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_G)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU H": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_H)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU I": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_I)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU J": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_J)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU K": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_K)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_L)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU M": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_M)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU N": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_N)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU O": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_O)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU P": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_P)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU Q": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Q)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_R)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU S": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_S)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU T": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_T)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU U": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_U)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU V": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_V)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU W": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_W)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU X": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_X)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU Y": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Y)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU Z": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_Z)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU SLASH": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_SLASH)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU SPACE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_SPACE)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU OVERFLY": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_OVERFLY)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU CLR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_CLR)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 1": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_1)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 2": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_2)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 3": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_3)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 4": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_4)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 5": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_5)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 6": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_6)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 7": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_7)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 8": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_8)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 9": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_9)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU 0": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_0)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU DECIMAL": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_DECIMAL)"
	},
	"IniBuilds.A320.MCDU.Cpt MCDU PLUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU1_PLUS)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK1L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK1L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK2L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK2L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK3L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK3L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK4L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK4L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK5L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK5L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK6L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK6L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK1R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK1R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK2R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK2R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK3R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK3R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK4R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK4R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK5R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK5R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU LSK6R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_LSK6R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU DIR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DIR)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU PROG": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PROG)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU PERF": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PERF)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU INIT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_INIT)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU DATA": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DATA)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU BRT": {
		"method": "calcCode",
		"code": "0 (>L:INI_MCDU2_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU DIM": {
		"method": "calcCode",
		"code": "2 (>L:INI_MCDU2_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU BRT/DIM RELEASE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_BRT_SWITCH)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU FPLAN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_FPLAN)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU RADNAV": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_RADNAV)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU FUEL": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_FUEL)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU SEC": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_SEC)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU ATC": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_ATC)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU MENU": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_MENU)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU AIRPROT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_AIRPROT)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU PREV": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PREV)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU UARROW": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_UARROW)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU NEXT": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_NEXT)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU DOWN": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DOWN)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU A": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_A)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU B": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_B)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU C": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_C)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU D": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_D)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU E": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_E)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU F": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_F)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU G": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_G)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU H": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_H)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU I": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_I)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU J": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_J)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU K": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_K)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU L": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_L)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU M": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_M)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU N": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_N)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU O": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_O)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU P": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_P)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU Q": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Q)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU R": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_R)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU S": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_S)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU T": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_T)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU U": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_U)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU V": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_V)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU W": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_W)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU X": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_X)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU Y": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Y)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU Z": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_Z)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU SLASH": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_SLASH)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU SPACE": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_SPACE)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU OVERFLY": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_OVERFLY)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU CLR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_CLR)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 1": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_1)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 2": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_2)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 3": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_3)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 4": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_4)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 5": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_5)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 6": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_6)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 7": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_7)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 8": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_8)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 9": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_9)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU 0": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_0)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU DECIMAL": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_DECIMAL)"
	},
	"IniBuilds.A320.MCDU.Fo MCDU PLUS": {
		"method": "calcCode",
		"code": "1 (>L:INI_MCDU2_PLUS)"
	},
	"PMDG.B737-700.Warning.Input.PMDG B737 GPWS Sys Test Button Release": {
		"method": "calcCode",
		"code": "50004 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX OVHD Pack 1 Off Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool) !"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX OVHD Pack 2 Off Annunciator": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool) !"
	},
	"PMDG.B777 300ER.Controls.Input (Potentiometer).PMDG B777 Spoiler Lever Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_SPOILER_SET)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever Up": {
		"method": "calcCode",
		"code": "507101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 1": {
		"method": "calcCode",
		"code": "507201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 5": {
		"method": "calcCode",
		"code": "507301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 15": {
		"method": "calcCode",
		"code": "507401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 20": {
		"method": "calcCode",
		"code": "507501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 25": {
		"method": "calcCode",
		"code": "507601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Flaps Lever 30": {
		"method": "calcCode",
		"code": "507701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input (Potentiometer).PMDG B777 Flaps Lever Set": {
		"method": "calcCode",
		"code": "@ 20 - 10.03 / near 0 max 100 min sp0\nl0 10 < if{ 507101 (>K:ROTOR_BRAKE) quit } \nl0 25 < if{ 507201 (>K:ROTOR_BRAKE) quit }\nl0 40 < if{ 507301 (>K:ROTOR_BRAKE) quit }\nl0 55 < if{ 507401 (>K:ROTOR_BRAKE) quit }\nl0 70 < if{ 507501 (>K:ROTOR_BRAKE) quit }\nl0 85 < if{ 507601 (>K:ROTOR_BRAKE) quit }\n507701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake RTO": {
		"method": "calcCode",
		"code": "0 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake Off": {
		"method": "calcCode",
		"code": "10 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake Disarm": {
		"method": "calcCode",
		"code": "20 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake 1": {
		"method": "calcCode",
		"code": "30 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake 2": {
		"method": "calcCode",
		"code": "40 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake 3": {
		"method": "calcCode",
		"code": "50 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake 4": {
		"method": "calcCode",
		"code": "60 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake Max Auto": {
		"method": "calcCode",
		"code": "70 (L:switch_292_a) - 10 div s0\n:1\nl0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake Inc": {
		"method": "calcCode",
		"code": "29207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 Autobrake Dec": {
		"method": "calcCode",
		"code": "29208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 ADIRU On": {
		"method": "calcCode",
		"code": "(L:switch_59_a) ! if{ 5901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 ADIRU Off": {
		"method": "calcCode",
		"code": "(L:switch_59_a) if{ 5901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 ADIRU Toggle": {
		"method": "calcCode",
		"code": "5901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 ADIRU On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_59_a, bool) 100 == "
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 ADIRU Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_59_c)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 ADIRU On Bat Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_58_a)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Thrust Asym Comp On": {
		"method": "calcCode",
		"code": "(L:switch_54_a) ! if{ 5401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Thrust Asym Comp Off": {
		"method": "calcCode",
		"code": "(L:switch_54_a) if{ 5401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Thrust Asym Comp Toggle": {
		"method": "calcCode",
		"code": "5401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 Thrust Asym Comp Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_54_a, bool) 100 == "
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 Thrust Asym Comp Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_54_c)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Primary Flight Computers Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_56_a) ! if{ 5601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Primary Flight Computers Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_56_a) if{ 5601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777  Primary Flight Computers Switch Guard Toggle": {
		"method": "calcCode",
		"code": "5601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Primary Flight Computers Switch Auto": {
		"method": "calcCode",
		"code": "(L:switch_55_a) ! if{ 5501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Primary Flight Computers Switch Disc": {
		"method": "calcCode",
		"code": "(L:switch_55_a) if{ 5501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 Primary Flight Computers Switch Toggle": {
		"method": "calcCode",
		"code": "5501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 Primary Flight Computers Disc Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_57_a)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Battery On": {
		"method": "calcCode",
		"code": "(L:switch_01_a) ! if{ 101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Battery Off": {
		"method": "calcCode",
		"code": "(L:switch_01_a) if{ 101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Battery Toggle": {
		"method": "calcCode",
		"code": "101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Battery On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_01_a, bool) 100 == "
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Battery Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_01_c)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Ife/Pass Seats On": {
		"method": "calcCode",
		"code": "(L:switch_17_a) ! if{ 1701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Ife/Pass Seats Off": {
		"method": "calcCode",
		"code": "(L:switch_17_a) if{ 1701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Ife/Pass Seats Toggle": {
		"method": "calcCode",
		"code": "1701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Ife/Pass Seats On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_17_a, bool) 100 == "
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Ife/Pass Seats Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_17_c)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Cabin/Utility On": {
		"method": "calcCode",
		"code": "(L:switch_18_a) ! if{ 1801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Cabin/Utility Off": {
		"method": "calcCode",
		"code": "(L:switch_17_a) if{ 1701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 Cabin/Utility Toggle": {
		"method": "calcCode",
		"code": "1801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Cabin/Utility On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_18_a, bool) 100 == "
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 Cabin/Utility Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_18_c)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_ARPT_CAPT_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_ARPT_BUTTON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_CSTR_CPT_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_CSTR_BUTTON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_NDB_CPT_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_NDB_BUTTON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_VOR_CPT_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_VOR_BUTTON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_WPT_CPT_BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:INI_EFIS_CPT_FIXES_BUTTON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_RANGE_CAPT_DEC": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) -- 0 max 5 min (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_RANGE_CAPT_INCR": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) ++ 0 max 5 min (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_MODE_CAPT_ARC": {
		"method": "calcCode",
		"code": "3 (>L:INI_MAP_MODE_CAPT_SWITCH)  "
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_MODE_CPT_NAV": {
		"method": "calcCode",
		"code": "2 (>L:INI_MAP_MODE_CAPT_SWITCH)  "
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_MODE_CAPT_ILS": {
		"method": "calcCode",
		"code": "0 (>L:INI_MAP_MODE_CAPT_SWITCH)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_MODE_CAPT_PLAN": {
		"method": "calcCode",
		"code": "4 (>L:INI_MAP_MODE_CAPT_SWITCH)  "
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_MODE_CAPT_VOR": {
		"method": "calcCode",
		"code": "1 (>L:INI_MAP_MODE_CAPT_SWITCH)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Baro Knob": {
		"method": "calcCode",
		"code": "(>L:CABaroKnob, number)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_BLEED_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_BLEED)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_CLR_PUSH": {
		"method": "calcCode",
		"code": "5 (>L:PUSH_ECAM_CLR)\n1 (>L:ECAM_CURRENT_STATUS)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_COND_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_COND)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_DOOR_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_DOOR)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_ELEC_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ELEC_AC)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_ENG_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ENG)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_FCTL_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FCTL)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_FUEL_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_FUEL)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_HYD_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_HYD)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_PRESS_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_PRESS)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_RCL_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_RCL)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_STS_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_STS)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_TO_CONFIG_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_TOCONFIG)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_WHEEL_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_WHEEL)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_APU_PUSH": {
		"method": "calcCode",
		"code": "8 (>L:INI_ECAM_ACTIVE_PAGE)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_ALL_PUSH": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_ECAM_ALL)"
	},
	"IniBuilds.A320.ECAM.Input.INI320_ECAM_CRUISE_PUSH": {
		"method": "calcCode",
		"code": "12 (>L:INI_ECAM_ACTIVE_PAGE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Baro Inc": {
		"method": "calcCode",
		"code": "(L:CABaroKnob, number) 5 +  50 min (>L:CABaroKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Baro Dec": {
		"method": "calcCode",
		"code": "(L:CABaroKnob, number) 5 - -50 max (>L:CABaroKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)"
	},
	"PMDG.B777 300ER.EFIS.Output.PMDG B777 Baro Timer Handler": {
		"method": "calcCode",
		"code": "(L:myBaroTimer) d 0 > if{\n  (E:SIMULATION TIME, second) (L:myBaroTimer) > if{\n	0 (>L:CABaroKnob, number) 0 (>L:FOBaroKnob, number) 0 (>L:myBaroTimer) } }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R Baro Inc": {
		"method": "calcCode",
		"code": "(L:FOBaroKnob, number) 5 +  50 min (>L:FOBaroKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R Baro Dec": {
		"method": "calcCode",
		"code": "(L:FOBaroKnob, number) 5 - -50 max (>L:FOBaroKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_ADF1_CAPT_VOR": {
		"method": "calcCode",
		"code": "2 (>L:INI_VOR_ADF1_CAPT_STATE)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_ADF2_CAPT_VOR": {
		"method": "calcCode",
		"code": "2 (>L:INI_VOR_ADF2_CAPT_STATE)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_ADF1_CAPT_ADF": {
		"method": "calcCode",
		"code": "0 (>L:INI_VOR_ADF1_CAPT_STATE)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_ADF2_CAPT_ADF": {
		"method": "calcCode",
		"code": "0 (>L:INI_VOR_ADF2_CAPT_STATE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob Inc": {
		"method": "calcCode",
		"code": "18707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob Dec": {
		"method": "calcCode",
		"code": "18708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 10": {
		"method": "calcCode",
		"code": "0 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 20": {
		"method": "calcCode",
		"code": "10 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 40": {
		"method": "calcCode",
		"code": "20 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 80": {
		"method": "calcCode",
		"code": "30 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 160": {
		"method": "calcCode",
		"code": "40 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 320": {
		"method": "calcCode",
		"code": "50 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob 640": {
		"method": "calcCode",
		"code": "60 (L:switch_187_a) - 10 div s0\n:1\nl0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Range Knob TFC Press": {
		"method": "calcCode",
		"code": "18801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob Inc": {
		"method": "calcCode",
		"code": "18507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob Dec": {
		"method": "calcCode",
		"code": "18508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob APP": {
		"method": "calcCode",
		"code": "0 (L:switch_185_a) - 10 div s0\n:1\nl0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob VOR": {
		"method": "calcCode",
		"code": "10 (L:switch_185_a) - 10 div s0\n:1\nl0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob MAP": {
		"method": "calcCode",
		"code": "20 (L:switch_185_a) - 10 div s0\n:1\nl0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob PLN": {
		"method": "calcCode",
		"code": "30 (L:switch_185_a) - 10 div s0\n:1\nl0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_FD2_FO": {
		"method": "calcCode",
		"code": "(L:INI_FD2_ON, Bool) ! (>L:INI_FD2_ON)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Mode Knob CTR Press": {
		"method": "calcCode",
		"code": "18601 (>K:ROTOR_BRAKE)"
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_DECREASE": {
		"method": "calcCode",
		"code": "(L:INI_AUTOBRAKE_LEVEL) -- 0 max 3 min (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_FD1_PUSH": {
		"method": "calcCode",
		"code": "(L:INI_FD1_ON, Bool) ! (>L:INI_FD1_ON)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_LS_CAPTAIN_PUSH": {
		"method": "calcCode",
		"code": "(L:INI_LS_CAPTAIN, Bool) ! (>L:INI_LS_CAPTAIN)"
	},
	"Asobo.Baron G58.Controls.Input (Potentiometer).G58 Aileron Trim Set": {
		"method": "calcCode",
		"code": "@ 32 * 16383 - -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1)"
	},
	"Asobo.Baron G58.Controls.Input (Potentiometer).G58 Rudder Trim Set": {
		"method": "calcCode",
		"code": "@ 32 * 16383 - -16383 max 16383 min (>K:RUDDER_TRIM_SET_EX1)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP ALT Auto 1000 Select Toggle": {
		"method": "calcCode",
		"code": "22501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP SPD Display": {
		"method": "calcCode",
		"code": "(L:ngx_SPDwindow, number)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP HDG Display": {
		"method": "calcCode",
		"code": "(L:ngx_HDGwindow,number)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP ALT Display": {
		"method": "calcCode",
		"code": "(L:ngx_ALTwindow,number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP HDG Knob Inc": {
		"method": "calcCode",
		"code": "218007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP HDG Knob Dec": {
		"method": "calcCode",
		"code": "218008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP IAS MACH Knob Dec": {
		"method": "calcCode",
		"code": "21008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP IAS MACH Knob Inc": {
		"method": "calcCode",
		"code": "21007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP HDG TRK Mode": {
		"method": "calcCode",
		"code": "(L:ngx_HDGmode)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AP Button Press": {
		"method": "calcCode",
		"code": "20301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP CA AP Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2031_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm L Switch Toggle": {
		"method": "calcCode",
		"code": "20401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm R Switch Toggle": {
		"method": "calcCode",
		"code": "20501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP AT Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2071_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP IAS MACH Button Press": {
		"method": "calcCode",
		"code": "20801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP IAS MACH Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2081_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP IAS MACH Knob SEL Press": {
		"method": "calcCode",
		"code": "210001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP LNAV Button Press": {
		"method": "calcCode",
		"code": "21101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP LNAV Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2111_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP VNAV Button Press": {
		"method": "calcCode",
		"code": "21201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP VNAV Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2121_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FLCH Button Press": {
		"method": "calcCode",
		"code": "21301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP FLCH Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2131_a, number)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM1 TRANSFER SWITCH": {
		"method": "calcCode",
		"code": "52601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM1 FREQ_WHOLE_DEC": {
		"method": "calcCode",
		"code": "52708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM1 FREQ_WHOLE_INC": {
		"method": "calcCode",
		"code": "52707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM1 FREQ_FRAC_DEC": {
		"method": "calcCode",
		"code": "52808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM1 FREQ_FRAC_INC": {
		"method": "calcCode",
		"code": "52807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM2 TRANSFER SWITCH": {
		"method": "calcCode",
		"code": "80101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM2 FREQ_WHOLE_INC": {
		"method": "calcCode",
		"code": "80007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM2 FREQ_WHOLE_DEC": {
		"method": "calcCode",
		"code": "80008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM2 FREQ_FRAC_INC": {
		"method": "calcCode",
		"code": "79907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM2 FREQ_FRAC_DEC": {
		"method": "calcCode",
		"code": "79908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM3 TRANSFER SWITCH": {
		"method": "calcCode",
		"code": "59701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM3 FREQ_FRAC_INC": {
		"method": "calcCode",
		"code": "59807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM3 FREQ_FRAC_DEC": {
		"method": "calcCode",
		"code": "59808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM3 FREQ_WHOLE_DEC": {
		"method": "calcCode",
		"code": "59908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.Input.PMDG B777 COM3 FREQ_WHOLE_INC": {
		"method": "calcCode",
		"code": "59907 (>K:ROTOR_BRAKE)"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.FD 2 Active": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:2, Bool) (L:A32NX_OVHD_INTLT_ANN) 0 == max (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * 0 + (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.ARPT 2 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 16 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.NDB 2 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 8 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.VOR D 2 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 2 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.WPT 2 Active": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_OPTION, enum) 4 == (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"Fly By Wire.A320-Dev.EFIS.Output.LS 2 Active": {
		"method": "calcCode",
		"code": "(L:BTN_LS_2_FILTER_ACTIVE) (L:A32NX_OVHD_INTLT_ANN) 0 == or 0 ! and (L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) and 1 and (L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 } * (A:CIRCUIT GENERAL PANEL ON, Bool) *"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG 777 FUEL CUT OFF ENGINE 1 TOGGLE": {
		"method": "calcCode",
		"code": "52001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG 777 FUEL CUT OFF ENGINE 2 TOGGLE": {
		"method": "calcCode",
		"code": "52101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG 777 Engine1 Start Switch": {
		"method": "calcCode",
		"code": "9408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG 777 Engine2 Start Switch": {
		"method": "calcCode",
		"code": "9508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP VOR/LOC Button Press": {
		"method": "calcCode",
		"code": "22701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP HDG TRK Mode Toggle": {
		"method": "calcCode",
		"code": "21601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP APP Button Press": {
		"method": "calcCode",
		"code": "22801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FD1 Switch Toggle": {
		"method": "calcCode",
		"code": "20201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FD2 Switch": {
		"method": "calcCode",
		"code": "23001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP HDG Knob SEL Press": {
		"method": "calcCode",
		"code": "21801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP ALT Knob Inc": {
		"method": "calcCode",
		"code": "225007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP ALT Knob DEC": {
		"method": "calcCode",
		"code": "225008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP VS FPA Switch": {
		"method": "calcCode",
		"code": "22301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP V/S Knob INC": {
		"method": "calcCode",
		"code": "22208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP V/S Knob DEC": {
		"method": "calcCode",
		"code": "22207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FO AP Button Press": {
		"method": "calcCode",
		"code": "22901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP ALT HLD Button Press": {
		"method": "calcCode",
		"code": "22601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AP Disengage Toggle": {
		"method": "calcCode",
		"code": "21401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AP Disengage Bar Down": {
		"method": "calcCode",
		"code": "(L:switch_214_a) 0 == if{ 21401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AP Disengage Bar Up": {
		"method": "calcCode",
		"code": "(L:switch_214_a) 100 == if{ 21401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob Inc": {
		"method": "calcCode",
		"code": "218102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob Dec": {
		"method": "calcCode",
		"code": "218101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob AUTO": {
		"method": "calcCode",
		"code": "0 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob 5": {
		"method": "calcCode",
		"code": "10 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob 10": {
		"method": "calcCode",
		"code": "20 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob 15": {
		"method": "calcCode",
		"code": "30 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob 20": {
		"method": "calcCode",
		"code": "40 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP Bank Angle Knob 25": {
		"method": "calcCode",
		"code": "50 (L:switch_2181_a) - 10 div s0\n:1\nl0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"IniBuilds.A320.EFIS.Input.INI320 EFIS ALTIMETER CPT PUSH COMMAND": {
		"method": "calcCode",
		"code": "1 (>L:INI_1_ALTIMETER_PUSH_COMMAND)"
	},
	"IniBuilds.A320.EFIS.Input.INI320 EFIS ALTIMETER CPT PULL COMMAND": {
		"method": "calcCode",
		"code": "1 (>L:INI_1_ALTIMETER_PULL_COMMAND)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 A/T Disconnect Throttle Button Left": {
		"method": "calcCode",
		"code": "50201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 A/P Disc Yoke Button Left": {
		"method": "calcCode",
		"code": "108401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Gen On": {
		"method": "calcCode",
		"code": "(L:switch_02_a) ! if{ 201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Gen Off": {
		"method": "calcCode",
		"code": "(L:switch_02_a) if{ 201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Gen Toggle": {
		"method": "calcCode",
		"code": "201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Gen On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_02_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Gen Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_02_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Bus Tie On": {
		"method": "calcCode",
		"code": "(L:switch_05_a) ! if{ 501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Bus Tie Off": {
		"method": "calcCode",
		"code": "(L:switch_05_a) if{ 501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Bus Tie Toggle": {
		"method": "calcCode",
		"code": "501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Bus Tie Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_05_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Bus Tie Isln Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_05_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Bus Tie On": {
		"method": "calcCode",
		"code": "(L:switch_06_a) ! if{ 601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Bus Tie Off": {
		"method": "calcCode",
		"code": "(L:switch_06_a) if{ 601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Bus Tie Toggle": {
		"method": "calcCode",
		"code": "601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Bus Tie Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_06_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Bus Tie Isln Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_06_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Main Gen On": {
		"method": "calcCode",
		"code": "(L:switch_09_a) ! if{ 901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Main Gen Off": {
		"method": "calcCode",
		"code": "(L:switch_09_a) if{ 901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Main Gen Toggle": {
		"method": "calcCode",
		"code": "901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Main Gen On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_09_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Main Gen Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_09_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Main Gen On": {
		"method": "calcCode",
		"code": "(L:switch_10_a) ! if{ 1001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Main Gen Off": {
		"method": "calcCode",
		"code": "(L:switch_10_a) if{ 1001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Main Gen Toggle": {
		"method": "calcCode",
		"code": "1001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Main Gen On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_10_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Main Gen Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_10_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen L On": {
		"method": "calcCode",
		"code": "(L:switch_11_a) ! if{ 1101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen L Off": {
		"method": "calcCode",
		"code": "(L:switch_11_a) if{ 1101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen L Toggle": {
		"method": "calcCode",
		"code": "1101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen L On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_11_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen L Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_11_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen R On": {
		"method": "calcCode",
		"code": "(L:switch_12_a) ! if{ 1201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen R Off": {
		"method": "calcCode",
		"code": "(L:switch_12_a) if{ 1201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen R Toggle": {
		"method": "calcCode",
		"code": "1201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen R On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_12_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Backup Gen R Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_12_c)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Side On": {
		"method": "calcCode",
		"code": "(L:switch_45_a) ! if{ 4501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Side Off": {
		"method": "calcCode",
		"code": "(L:switch_45_a) if{ 4501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Side Toggle": {
		"method": "calcCode",
		"code": "4501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Side On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_45_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Side Inop Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_45_c)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_46_a) ! if{ 4601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_46_a) if{ 4601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Fwd Toggle": {
		"method": "calcCode",
		"code": "4601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Fwd On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_46_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat L Fwd Inop Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_46_c)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_47_a) ! if{ 4701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_47_a) if{ 4701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Fwd Toggle": {
		"method": "calcCode",
		"code": "4701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Fwd On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_47_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Fwd Inop Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_47_c)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Side On": {
		"method": "calcCode",
		"code": "(L:switch_48_a) ! if{ 4801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Side Off": {
		"method": "calcCode",
		"code": "(L:switch_48_a) if{ 4801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Side Toggle": {
		"method": "calcCode",
		"code": "4801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Side On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_48_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Window Heat R Side Inop Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_48_c)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Eng Primary Pump On": {
		"method": "calcCode",
		"code": "(L:switch_39_a) ! if{ 3901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Eng Primary Pump Off": {
		"method": "calcCode",
		"code": "(L:switch_39_a) if{ 3901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Eng Primary Pump Toggle": {
		"method": "calcCode",
		"code": "3901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Eng Primary Pump On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_39_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Eng Primary Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_39_c)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Elec Primary Pump On": {
		"method": "calcCode",
		"code": "(L:switch_40_a) ! if{ 4001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Elec Primary Pump Off": {
		"method": "calcCode",
		"code": "(L:switch_40_a) if{ 4001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Elec Primary Pump Toggle": {
		"method": "calcCode",
		"code": "4001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Elec Primary Pump On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_40_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Elec Primary Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_40_c)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Elec Primary Pump On": {
		"method": "calcCode",
		"code": "(L:switch_41_a) ! if{ 4101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Elec Primary Pump Off": {
		"method": "calcCode",
		"code": "(L:switch_41_a) if{ 4101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Elec Primary Pump Toggle": {
		"method": "calcCode",
		"code": "4101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Elec Primary Pump On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_41_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Elec Primary Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_41_c)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Eng Primary Pump On": {
		"method": "calcCode",
		"code": "(L:switch_42_a) ! if{ 4201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Eng Primary Pump Off": {
		"method": "calcCode",
		"code": "(L:switch_42_a) if{ 4201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Eng Primary Pump Toggle": {
		"method": "calcCode",
		"code": "4201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Eng Primary Pump On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_42_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Eng Primary Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_42_c)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_85_a) ! if{ 8501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_85_a) if{ 8501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Fwd Toggle": {
		"method": "calcCode",
		"code": "8501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Fwd Armed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_85_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Fwd Fwd Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_85_c)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Aft On": {
		"method": "calcCode",
		"code": "(L:switch_86_a) ! if{ 8601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Aft Off": {
		"method": "calcCode",
		"code": "(L:switch_86_a) if{ 8601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Aft Toggle": {
		"method": "calcCode",
		"code": "8601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Aft Armed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_86_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Arm Aft Aft Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_86_c)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode L On": {
		"method": "calcCode",
		"code": "(L:switch_90_a) ! if{ 9001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode L Off": {
		"method": "calcCode",
		"code": "(L:switch_90_a) if{ 9001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode L Toggle": {
		"method": "calcCode",
		"code": "9001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode L Norm Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_90_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode L Altn Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_90_c)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode R On": {
		"method": "calcCode",
		"code": "(L:switch_92_a) ! if{ 9201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode R Off": {
		"method": "calcCode",
		"code": "(L:switch_92_a) if{ 9201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode R Toggle": {
		"method": "calcCode",
		"code": "9201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode R Norm Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_92_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Enigne EEC Mode R Altn Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_92_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle On": {
		"method": "calcCode",
		"code": "(L:switch_97_a) ! if{ 9701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Off": {
		"method": "calcCode",
		"code": "(L:switch_97_a) if{ 9701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Toggle": {
		"method": "calcCode",
		"code": "9701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_97_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Valve Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_97_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle On": {
		"method": "calcCode",
		"code": "(L:switch_99_a) ! if{ 9901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Off": {
		"method": "calcCode",
		"code": "(L:switch_99_a) if{ 9901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Toggle": {
		"method": "calcCode",
		"code": "9901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_99_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Valve Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_99_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison Arm On": {
		"method": "calcCode",
		"code": "(L:switch_102_a) ! if{ 10201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison Arm Off": {
		"method": "calcCode",
		"code": "(L:switch_102_a) if{ 10201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison Arm Toggle": {
		"method": "calcCode",
		"code": "10201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison Arm Armed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_102_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison Arm Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_102_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_103_a) ! if{ 10301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_103_a) if{ 10301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Fwd Toggle": {
		"method": "calcCode",
		"code": "10301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Fwd On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_103_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Fwd Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_103_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Aft On": {
		"method": "calcCode",
		"code": "(L:switch_105_a) ! if{ 10501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Aft Off": {
		"method": "calcCode",
		"code": "(L:switch_105_a) if{ 10501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Aft Toggle": {
		"method": "calcCode",
		"code": "10501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Aft On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_105_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel L Pumps Aft Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_105_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_107_a) ! if{ 10701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_107_a) if{ 10701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Fwd Toggle": {
		"method": "calcCode",
		"code": "10701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Fwd ----- Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_107_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Fwd Valve Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_107_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Aft On": {
		"method": "calcCode",
		"code": "(L:switch_108_a) ! if{ 10801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Aft Off": {
		"method": "calcCode",
		"code": "(L:switch_108_a) if{ 10801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Aft Toggle": {
		"method": "calcCode",
		"code": "10801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Aft ----- Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_108_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Crossfeed Aft Valve Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_108_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps L On": {
		"method": "calcCode",
		"code": "(L:switch_109_a) ! if{ 10901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps L Off": {
		"method": "calcCode",
		"code": "(L:switch_109_a) if{ 10901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps L Toggle": {
		"method": "calcCode",
		"code": "10901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps L On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_109_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps L Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_109_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps R On": {
		"method": "calcCode",
		"code": "(L:switch_110_a) ! if{ 11001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps R Off": {
		"method": "calcCode",
		"code": "(L:switch_110_a) if{ 11001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps R Toggle": {
		"method": "calcCode",
		"code": "11001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps R On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_110_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Center Pumps R Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_110_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_104_a) ! if{ 10401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_104_a) if{ 10401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Fwd Toggle": {
		"method": "calcCode",
		"code": "10401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Fwd On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_104_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Fwd Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_104_c)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Aft On": {
		"method": "calcCode",
		"code": "(L:switch_106_a) ! if{ 10601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Aft Off": {
		"method": "calcCode",
		"code": "(L:switch_106_a) if{ 10601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Aft Toggle": {
		"method": "calcCode",
		"code": "10601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Aft On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_106_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel R Pumps Aft Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_106_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Equip Cooling On": {
		"method": "calcCode",
		"code": "(L:switch_144_a) ! if{ 14401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Equip Cooling Off": {
		"method": "calcCode",
		"code": "(L:switch_144_a) if{ 14401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Equip Cooling Toggle": {
		"method": "calcCode",
		"code": "14401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Equip Cooling Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_144_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Equip Cooling Ovrd Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_144_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Pack On": {
		"method": "calcCode",
		"code": "(L:switch_135_a) ! if{ 13501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Pack Off": {
		"method": "calcCode",
		"code": "(L:switch_135_a) if{ 13501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Pack Toggle": {
		"method": "calcCode",
		"code": "13501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Pack Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_135_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Pack Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_135_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Trim Air On": {
		"method": "calcCode",
		"code": "(L:switch_137_a) ! if{ 13701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Trim Air Off": {
		"method": "calcCode",
		"code": "(L:switch_137_a) if{ 13701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Trim Air Toggle": {
		"method": "calcCode",
		"code": "13701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Trim Air On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_137_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 L Trim Air Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_137_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Trim Air On": {
		"method": "calcCode",
		"code": "(L:switch_138_a) ! if{ 13801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Trim Air Off": {
		"method": "calcCode",
		"code": "(L:switch_138_a) if{ 13801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Trim Air Toggle": {
		"method": "calcCode",
		"code": "13801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Trim Air On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_138_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Trim Air Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_138_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Pack On": {
		"method": "calcCode",
		"code": "(L:switch_136_a) ! if{ 13601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Pack Off": {
		"method": "calcCode",
		"code": "(L:switch_136_a) if{ 13601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Pack Toggle": {
		"method": "calcCode",
		"code": "13601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Pack Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_136_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 R Pack Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_136_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Isln On": {
		"method": "calcCode",
		"code": "(L:switch_132_a) ! if{ 13201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Isln Off": {
		"method": "calcCode",
		"code": "(L:switch_132_a) if{ 13201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Isln Toggle": {
		"method": "calcCode",
		"code": "13201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Isln Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_132_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Isln Closed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_132_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air C Isln On": {
		"method": "calcCode",
		"code": "(L:switch_133_a) ! if{ 13301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air C Isln Off": {
		"method": "calcCode",
		"code": "(L:switch_133_a) if{ 13301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air C Isln Toggle": {
		"method": "calcCode",
		"code": "13301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air C Isln Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_133_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air C Isln Closed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_133_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Isln On": {
		"method": "calcCode",
		"code": "(L:switch_134_a) ! if{ 13401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Isln Off": {
		"method": "calcCode",
		"code": "(L:switch_134_a) if{ 13401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Isln Toggle": {
		"method": "calcCode",
		"code": "13401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Isln Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_134_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Isln Closed Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_134_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Eng On": {
		"method": "calcCode",
		"code": "(L:switch_129_a) ! if{ 12901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Eng Off": {
		"method": "calcCode",
		"code": "(L:switch_129_a) if{ 12901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Eng Toggle": {
		"method": "calcCode",
		"code": "12901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Eng On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_129_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air L Eng Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_129_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air APU On": {
		"method": "calcCode",
		"code": "(L:switch_131_a) ! if{ 13101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air APU Off": {
		"method": "calcCode",
		"code": "(L:switch_131_a) if{ 13101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air APU Toggle": {
		"method": "calcCode",
		"code": "13101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air APU Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_131_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air APU Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_131_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Eng On": {
		"method": "calcCode",
		"code": "(L:switch_130_a) ! if{ 13001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Eng Off": {
		"method": "calcCode",
		"code": "(L:switch_130_a) if{ 13001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Eng Toggle": {
		"method": "calcCode",
		"code": "13001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Eng On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_130_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Bleed Air R Eng Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_130_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Fwd On": {
		"method": "calcCode",
		"code": "(L:switch_127_a) ! if{ 12701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Fwd Off": {
		"method": "calcCode",
		"code": "(L:switch_127_a) if{ 12701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Fwd Toggle": {
		"method": "calcCode",
		"code": "12701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Fwd Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_127_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Fwd Man Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_127_c)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Aft On": {
		"method": "calcCode",
		"code": "(L:switch_128_a) ! if{ 12801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Aft Off": {
		"method": "calcCode",
		"code": "(L:switch_128_a) if{ 12801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Aft Toggle": {
		"method": "calcCode",
		"code": "12801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Aft Auto Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_128_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Valve Aft Man Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_128_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Off": {
		"method": "calcCode",
		"code": "0 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU On ": {
		"method": "calcCode",
		"code": "50 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Start": {
		"method": "calcCode",
		"code": "100 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Inc": {
		"method": "calcCode",
		"code": "307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Dec": {
		"method": "calcCode",
		"code": "308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump Off": {
		"method": "calcCode",
		"code": "0 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump On": {
		"method": "calcCode",
		"code": "100 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump Inc": {
		"method": "calcCode",
		"code": "3507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump Dec": {
		"method": "calcCode",
		"code": "3508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Off": {
		"method": "calcCode",
		"code": "0 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Armed": {
		"method": "calcCode",
		"code": "50 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights On": {
		"method": "calcCode",
		"code": "100 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Inc": {
		"method": "calcCode",
		"code": "4907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Dec": {
		"method": "calcCode",
		"code": "4908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump Off": {
		"method": "calcCode",
		"code": "0 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump On": {
		"method": "calcCode",
		"code": "100 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump Inc": {
		"method": "calcCode",
		"code": "3607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump Dec": {
		"method": "calcCode",
		"code": "3608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump Off": {
		"method": "calcCode",
		"code": "0 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump On": {
		"method": "calcCode",
		"code": "100 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump Inc": {
		"method": "calcCode",
		"code": "3707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump Dec": {
		"method": "calcCode",
		"code": "3708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump Off": {
		"method": "calcCode",
		"code": "0 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump On": {
		"method": "calcCode",
		"code": "100 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump Inc": {
		"method": "calcCode",
		"code": "3807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump Dec": {
		"method": "calcCode",
		"code": "3808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 No Smoking Off ": {
		"method": "calcCode",
		"code": "0 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 No Smoking Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 No Smoking On": {
		"method": "calcCode",
		"code": "100 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 No Smoking Inc": {
		"method": "calcCode",
		"code": "2907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 No Smoking Dec": {
		"method": "calcCode",
		"code": "2908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Seat Belts Off": {
		"method": "calcCode",
		"code": "0 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Seat Belts Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Seat Belts On": {
		"method": "calcCode",
		"code": "100 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Seat Belts Inc": {
		"method": "calcCode",
		"code": "3007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Seat Belts Dec": {
		"method": "calcCode",
		"code": "3008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Wing Anti Ice Off": {
		"method": "calcCode",
		"code": "0 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Wing Anti Ice Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Wing Anti Ice On": {
		"method": "calcCode",
		"code": "100 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Wing Anti Ice Inc": {
		"method": "calcCode",
		"code": "11107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 Wing Anti Ice Dec": {
		"method": "calcCode",
		"code": "11108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 L Engine Anti Ice Off": {
		"method": "calcCode",
		"code": "0 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 L Engine Anti Ice Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 L Engine Anti Ice On": {
		"method": "calcCode",
		"code": "100 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 L Engine Anti Ice Inc": {
		"method": "calcCode",
		"code": "11207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 L Engine Anti Ice Dec": {
		"method": "calcCode",
		"code": "11208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 R Engine Anti Ice Off": {
		"method": "calcCode",
		"code": "0 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 R Engine Anti Ice Auto ": {
		"method": "calcCode",
		"code": "50 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 R Engine Anti Ice On": {
		"method": "calcCode",
		"code": "100 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 R Engine Anti Ice Inc": {
		"method": "calcCode",
		"code": "11307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Anti-Ice.PMDG B777 R Engine Anti Ice Dec": {
		"method": "calcCode",
		"code": "11308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ind Lts Test": {
		"method": "calcCode",
		"code": "0 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ind Lts Brt": {
		"method": "calcCode",
		"code": "50 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ind Lts Dim": {
		"method": "calcCode",
		"code": "100 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ind Lts Inc": {
		"method": "calcCode",
		"code": "11807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ind Lts Dec": {
		"method": "calcCode",
		"code": "11808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Fwd Manual Open": {
		"method": "calcCode",
		"code": "0 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Fwd Manual -----": {
		"method": "calcCode",
		"code": "50 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Fwd Manual Close": {
		"method": "calcCode",
		"code": "100 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Fwd Manual Inc": {
		"method": "calcCode",
		"code": "12401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Fwd Manual Dec": {
		"method": "calcCode",
		"code": "12402 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Aft Manual Open": {
		"method": "calcCode",
		"code": "0 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Aft Manual -----": {
		"method": "calcCode",
		"code": "50 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Aft Manual Close": {
		"method": "calcCode",
		"code": "100 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Aft Manual Inc": {
		"method": "calcCode",
		"code": "12501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Outflow Value Aft Manual Dec": {
		"method": "calcCode",
		"code": "12502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Secondary Ext Power Press": {
		"method": "calcCode",
		"code": "701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Secondary Ext Power On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_07_b)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Secondary Ext Power Avail Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_07_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Primary Ext Power Press": {
		"method": "calcCode",
		"code": "801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Primary Ext Power On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_08_b)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Primary Ext Power Avail Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_08_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Ram Air Turbine Press": {
		"method": "calcCode",
		"code": "4301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Ram Air Turbine Press Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_43_b)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 Ram Air Turbine Unlkd Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_43_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 APU Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_04_a)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 L Elec Demand Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_31_a)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C1 Air Demand Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_32_a)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 C2 Air Demand Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_33_a)"
	},
	"PMDG.B777 300ER.Hydraulic.PMDG B777 R Elec Demand Pump Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_34_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 APU Btl Disch Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_83_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 APU Fire Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_8411_a)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Camera Lts On": {
		"method": "calcCode",
		"code": "(L:switch_19_a) ! if{ 1901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Camera Lts Off": {
		"method": "calcCode",
		"code": "(L:switch_19_a) if{ 1901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Camera Lts Toggle": {
		"method": "calcCode",
		"code": "1901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Serv Intph On": {
		"method": "calcCode",
		"code": "(L:switch_51_a) ! if{ 5101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Serv Intph Off": {
		"method": "calcCode",
		"code": "(L:switch_51_a) if{ 5101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Serv Intph Toggle": {
		"method": "calcCode",
		"code": "5101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Master Bright On": {
		"method": "calcCode",
		"code": "(L:switch_2801_a) ! if{ 280101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Master Bright Off": {
		"method": "calcCode",
		"code": "(L:switch_2801_a) if{ 280101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Master Bright Toggle": {
		"method": "calcCode",
		"code": "280101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Left On": {
		"method": "calcCode",
		"code": "(L:switch_22_a) ! if{ 2201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Left Off": {
		"method": "calcCode",
		"code": "(L:switch_22_a) if{ 2201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Left Toggle": {
		"method": "calcCode",
		"code": "2201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Nose On": {
		"method": "calcCode",
		"code": "(L:switch_23_a) ! if{ 2301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Nose Off": {
		"method": "calcCode",
		"code": "(L:switch_23_a) if{ 2301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Nose Toggle": {
		"method": "calcCode",
		"code": "2301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Right On": {
		"method": "calcCode",
		"code": "(L:switch_24_a) ! if{ 2401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Right Off": {
		"method": "calcCode",
		"code": "(L:switch_24_a) if{ 2401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Landing Light Right Toggle": {
		"method": "calcCode",
		"code": "2401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Pull": {
		"method": "calcCode",
		"code": "(L:switch_84_a) ! if{ 840101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Push": {
		"method": "calcCode",
		"code": "(L:switch_84_a) if{ 840101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Toggle": {
		"method": "calcCode",
		"code": "840101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Lock Press": {
		"method": "calcCode",
		"code": "(L:switch_8402_a) ! if{ 840201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Lock Release": {
		"method": "calcCode",
		"code": "(L:switch_8402_a) if{ 840201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Apu Fire Handle Lock Toggle": {
		"method": "calcCode",
		"code": "840201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Fire/Ovht Test On": {
		"method": "calcCode",
		"code": "(L:switch_89_a) ! if{ 8901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Fire/Ovht Test Off": {
		"method": "calcCode",
		"code": "(L:switch_89_a) if{ 8901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Fire/Ovht Test Toggle": {
		"method": "calcCode",
		"code": "8901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start L Norm": {
		"method": "calcCode",
		"code": "(L:switch_94_a) ! if{ 9407 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start L Start": {
		"method": "calcCode",
		"code": "(L:switch_94_a) if{ 9401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start L Toggle": {
		"method": "calcCode",
		"code": "9401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start R Norm": {
		"method": "calcCode",
		"code": "(L:switch_95_a) ! if{ 9507 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start R Start": {
		"method": "calcCode",
		"code": "(L:switch_95_a) if{ 9501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Start R Toggle": {
		"method": "calcCode",
		"code": "9501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel to Remain On": {
		"method": "calcCode",
		"code": "(L:switch_1011_a) ! if{ 101101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel to Remain Off": {
		"method": "calcCode",
		"code": "(L:switch_1011_a) if{ 101101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel to Remain Toggle": {
		"method": "calcCode",
		"code": "101101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light L On": {
		"method": "calcCode",
		"code": "(L:switch_119_a) ! if{ 11901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light L Off": {
		"method": "calcCode",
		"code": "(L:switch_119_a) if{ 11901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light L Toggle": {
		"method": "calcCode",
		"code": "11901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light R On": {
		"method": "calcCode",
		"code": "(L:switch_120_a) ! if{ 12001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light R Off": {
		"method": "calcCode",
		"code": "(L:switch_120_a) if{ 12001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Runway Turnoff Light R Toggle": {
		"method": "calcCode",
		"code": "12001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Taxi Lights On": {
		"method": "calcCode",
		"code": "(L:switch_121_a) ! if{ 12101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Taxi Lights Off": {
		"method": "calcCode",
		"code": "(L:switch_121_a) if{ 12101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 Taxi Lights Toggle": {
		"method": "calcCode",
		"code": "12101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Strobe Lights On": {
		"method": "calcCode",
		"code": "(L:switch_122_a) ! if{ 12201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Strobe Lights Off": {
		"method": "calcCode",
		"code": "(L:switch_122_a) if{ 12201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Strobe Lights Toggle": {
		"method": "calcCode",
		"code": "12201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ldg Alt On": {
		"method": "calcCode",
		"code": "(L:switch_1261_a) ! if{ 126101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ldg Alt Off": {
		"method": "calcCode",
		"code": "(L:switch_1261_a) if{ 126101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ldg Alt Toggle": {
		"method": "calcCode",
		"code": "126101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Gen Drive Disc Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_14_a) ! if{ 1401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Gen Drive Disc Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_14_a) if{ 1401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Gen Drive Disc Switch Guard Toggle": {
		"method": "calcCode",
		"code": "1401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Gen Drive Disc Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_16_a) ! if{ 1601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Gen Drive Disc Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_16_a) if{ 1601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Gen Drive Disc Switch Guard Toggle": {
		"method": "calcCode",
		"code": "1601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_50_a) ! if{ 5001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_50_a) if{ 5001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Emer Lights Switch Guard Toggle": {
		"method": "calcCode",
		"code": "5001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Pass Oxygen Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_53_a) ! if{ 5301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Pass Oxygen Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_53_a) if{ 5301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Pass Oxygen Switch Guard Toggle": {
		"method": "calcCode",
		"code": "5301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ram Air Turbine Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_44_a) ! if{ 4401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ram Air Turbine Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_44_a) if{ 4401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ram Air Turbine Switch Guard Toggle": {
		"method": "calcCode",
		"code": "4401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Disch Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_88_a) ! if{ 8801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Disch Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_88_a) if{ 8801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Disch Switch Guard Toggle": {
		"method": "calcCode",
		"code": "8801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode L Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_91_a) ! if{ 9101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode L Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_91_a) if{ 9101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode L Switch Guard Toggle": {
		"method": "calcCode",
		"code": "9101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode R Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_93_a) ! if{ 9301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode R Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_93_a) if{ 9301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine EEC Mode R Switch Guard Toggle": {
		"method": "calcCode",
		"code": "9301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_98_a) ! if{ 9801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_98_a) if{ 9801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison L Nozzle Switch Guard Toggle": {
		"method": "calcCode",
		"code": "9801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_100_a) ! if{ 10001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_100_a) if{ 10001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel Jettison R Nozzle Switch Guard Toggle": {
		"method": "calcCode",
		"code": "10001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 L Gen Drive Disc Press": {
		"method": "calcCode",
		"code": "1301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 L Gen Drive Disc Drive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_13_c)"
	},
	"PMDG.B777 300ER.Electrical.PMDG B777 R Gen Drive Disc Press": {
		"method": "calcCode",
		"code": "1501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 R Gen Drive Disc Drive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_15_c)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Pass Oxygen Press": {
		"method": "calcCode",
		"code": "5201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.Output.PMDG B777 Pass Oxygen On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_52_c)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Cargo Fire Disch Press": {
		"method": "calcCode",
		"code": "8701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.Output.PMDG B777 Cargo Fire Disch Disch Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_87_c)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper Off": {
		"method": "calcCode",
		"code": "0 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper Int": {
		"method": "calcCode",
		"code": "10 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper Low": {
		"method": "calcCode",
		"code": "20 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper High": {
		"method": "calcCode",
		"code": "30 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper Inc": {
		"method": "calcCode",
		"code": "2007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 L Wiper Dec": {
		"method": "calcCode",
		"code": "2008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper Off": {
		"method": "calcCode",
		"code": "0 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper Int": {
		"method": "calcCode",
		"code": "10 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper Low": {
		"method": "calcCode",
		"code": "20 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper High": {
		"method": "calcCode",
		"code": "30 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper Inc": {
		"method": "calcCode",
		"code": "12307 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 R Wiper Dec": {
		"method": "calcCode",
		"code": "12308 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Storm On": {
		"method": "calcCode",
		"code": "(L:switch_27_a) ! if{ 2701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Storm Off": {
		"method": "calcCode",
		"code": "(L:switch_27_a) if{ 2701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Storm Toggle": {
		"method": "calcCode",
		"code": "2701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Storm On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_27_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Autostart On": {
		"method": "calcCode",
		"code": "(L:switch_96_a) ! if{ 9601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Autostart Off": {
		"method": "calcCode",
		"code": "(L:switch_96_a) if{ 9601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Autostart Toggle": {
		"method": "calcCode",
		"code": "9601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Engines.PMDG B777 Engine Autostart On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_96_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Beacon Light On": {
		"method": "calcCode",
		"code": "(L:switch_114_a) ! if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Beacon Light Off": {
		"method": "calcCode",
		"code": "(L:switch_114_a) if{ 11401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Beacon Light Toggle": {
		"method": "calcCode",
		"code": "11401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Beacon Light On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_114_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Nav Light On": {
		"method": "calcCode",
		"code": "(L:switch_115_a) ! if{ 11501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Nav Light Off": {
		"method": "calcCode",
		"code": "(L:switch_115_a) if{ 11501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 Nav Light Toggle": {
		"method": "calcCode",
		"code": "11501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Nav Light On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_115_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Logo Light On": {
		"method": "calcCode",
		"code": "(L:switch_116_a) ! if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Logo Light Off": {
		"method": "calcCode",
		"code": "(L:switch_116_a) if{ 11601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Logo Light Toggle": {
		"method": "calcCode",
		"code": "11601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Logo Light On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_116_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Wing Light On": {
		"method": "calcCode",
		"code": "(L:switch_117_a) ! if{ 11701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Wing Light Off": {
		"method": "calcCode",
		"code": "(L:switch_117_a) if{ 11701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Wing Light Toggle": {
		"method": "calcCode",
		"code": "11701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Wing Light On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_117_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Gasper On": {
		"method": "calcCode",
		"code": "(L:switch_145_a) ! if{ 14501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Gasper Off": {
		"method": "calcCode",
		"code": "(L:switch_145_a) if{ 14501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Gasper Toggle": {
		"method": "calcCode",
		"code": "14501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Gasper On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_145_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Upper On": {
		"method": "calcCode",
		"code": "(L:switch_142_a) ! if{ 14201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Upper Off": {
		"method": "calcCode",
		"code": "(L:switch_142_a) if{ 14201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Upper Toggle": {
		"method": "calcCode",
		"code": "14201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Upper On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_142_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Lower On": {
		"method": "calcCode",
		"code": "(L:switch_143_a) ! if{ 14301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Lower Off": {
		"method": "calcCode",
		"code": "(L:switch_143_a) if{ 14301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Lower Toggle": {
		"method": "calcCode",
		"code": "14301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Recirc Fans Lower On Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_143_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Safety.PMDG B777 APU Fire Handle Left": {
		"method": "calcCode",
		"code": "8401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 APU Fire Handle Right": {
		"method": "calcCode",
		"code": "8402 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Voice Recorder On": {
		"method": "calcCode",
		"code": "(L:voicerec_switch) ! if{ 100 (>L:voicerec_switch) }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Voice Recorder Auto": {
		"method": "calcCode",
		"code": "(L:voicerec_switch) if{ 100 (>L:voicerec_switch) }"
	},
	"PMDG.B777 300ER.Miscellaneous.PMDG B777 Voice Recorder Toggle": {
		"method": "calcCode",
		"code": "(L:voicerec_switch) ! if{ 100 (>L:voicerec_switch) } els{ 0 (>L:voicerec_switch) }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ovhd Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Ovhd Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 CB Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_CB_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_CB_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 CB Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_CB_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_CB_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Dome Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_DOME_SWITCH, number) 1 + 100 min (>L:OH_DOME_SWITCH)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Dome Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_DOME_SWITCH, number) 1 - 0 max (>L:OH_DOME_SWITCH)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Master Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_MASTER_BRIGHT_ROTATE, number) 1 + 100 min (>L:OH_MASTER_BRIGHT_ROTATE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Master Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_MASTER_BRIGHT_ROTATE, number) 1 - 0 max (>L:OH_MASTER_BRIGHT_ROTATE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Glareshield Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_GS_FLOOD_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Glareshield Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_GS_FLOOD_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Panel Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Panel Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel To Remain Inc": {
		"method": "calcCode",
		"code": "(L:switch_1011_a, number) 50 > if{ (L:FuelToRemainRotate, number) 5 + 50 min (>L:FuelToRemainRotate, number) }"
	},
	"PMDG.B777 300ER.Fuel.PMDG B777 Fuel To Remain Dec": {
		"method": "calcCode",
		"code": "(L:switch_1011_a, number) 50 > if{ (L:FuelToRemainRotate, number) 5 - -50 max (>L:FuelToRemainRotate, number) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Flt Deck Temp Inc": {
		"method": "calcCode",
		"code": "80 95 (L:FLTDeckTempKnob,number) rng if{ 1 (>L:FLTDeckTempKnob, number) } els{ (L:FLTDeckTempKnob, number) 1 + 75 min (>L:FLTDeckTempKnob, number)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Flt Deck Temp Dec": {
		"method": "calcCode",
		"code": "80 95 (L:FLTDeckTempKnob,number) rng if{ 74 (>L:FLTDeckTempKnob, number) } els{ (L:FLTDeckTempKnob, number) 1 - 1 max (>L:FLTDeckTempKnob, number)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Cabin Temp Inc": {
		"method": "calcCode",
		"code": "80 95 (L:CABINTempKnob,number) rng if{ 1 (>L:CABINTempKnob, number) } els{ (L:CABINTempKnob, number) 1 + 75 min (>L:CABINTempKnob, number)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.Input.PMDG B777 Cabin Temp Dec": {
		"method": "calcCode",
		"code": "80 95 (L:CABINTempKnob,number) rng if{ 74 (>L:CABINTempKnob, number) } els{ (L:CABINTempKnob, number) 1 - 1 max (>L:CABINTempKnob, number)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ldg Alt Inc": {
		"method": "calcCode",
		"code": "(L:switch_1261_a, number) 50 > if{ (L:LDGALTRotate, number) 5 + 50 min (>L:LDGALTRotate, number) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Ldg Alt Dec": {
		"method": "calcCode",
		"code": "(L:switch_1261_a, number) 50 > if{ (L:LDGALTRotate, number) 5 - -50 max (>L:LDGALTRotate, number) }"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.PMDG B777 Air Cond Reset": {
		"method": "calcCode",
		"code": "14101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left C": {
		"method": "calcCode",
		"code": "36801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left A": {
		"method": "calcCode",
		"code": "36601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left B": {
		"method": "calcCode",
		"code": "36701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left D": {
		"method": "calcCode",
		"code": "36901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left E": {
		"method": "calcCode",
		"code": "37001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left F": {
		"method": "calcCode",
		"code": "37101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left G": {
		"method": "calcCode",
		"code": "37201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left H": {
		"method": "calcCode",
		"code": "37301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left I": {
		"method": "calcCode",
		"code": "37401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left J": {
		"method": "calcCode",
		"code": "37501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left K": {
		"method": "calcCode",
		"code": "37601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left L": {
		"method": "calcCode",
		"code": "37701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left M": {
		"method": "calcCode",
		"code": "37801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left N": {
		"method": "calcCode",
		"code": "37901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left O": {
		"method": "calcCode",
		"code": "38001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left P": {
		"method": "calcCode",
		"code": "38101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left Q": {
		"method": "calcCode",
		"code": "38201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left R": {
		"method": "calcCode",
		"code": "38301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left S": {
		"method": "calcCode",
		"code": "38401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left T": {
		"method": "calcCode",
		"code": "38501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left U": {
		"method": "calcCode",
		"code": "38601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left V": {
		"method": "calcCode",
		"code": "38701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left W": {
		"method": "calcCode",
		"code": "38801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left X": {
		"method": "calcCode",
		"code": "38901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left Y": {
		"method": "calcCode",
		"code": "39001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left Z": {
		"method": "calcCode",
		"code": "39101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R1": {
		"method": "calcCode",
		"code": "33401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R2": {
		"method": "calcCode",
		"code": "33501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R3": {
		"method": "calcCode",
		"code": "33601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R4": {
		"method": "calcCode",
		"code": "33701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R5": {
		"method": "calcCode",
		"code": "33801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK R6": {
		"method": "calcCode",
		"code": "33901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left NAV/RAD": {
		"method": "calcCode",
		"code": "35101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L1": {
		"method": "calcCode",
		"code": "32801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L2": {
		"method": "calcCode",
		"code": "32901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L3": {
		"method": "calcCode",
		"code": "33001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L4": {
		"method": "calcCode",
		"code": "33101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L5": {
		"method": "calcCode",
		"code": "33201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LSK L6": {
		"method": "calcCode",
		"code": "33301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left INIT REF": {
		"method": "calcCode",
		"code": "34001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left RTE": {
		"method": "calcCode",
		"code": "34101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left DEP/ARR": {
		"method": "calcCode",
		"code": "34201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left ALT": {
		"method": "calcCode",
		"code": "34301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left VNAV": {
		"method": "calcCode",
		"code": "34401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left FIX": {
		"method": "calcCode",
		"code": "34501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left LEGS": {
		"method": "calcCode",
		"code": "34601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left HOLD": {
		"method": "calcCode",
		"code": "34701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left PROG": {
		"method": "calcCode",
		"code": "34801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left FMC/COMM": {
		"method": "calcCode",
		"code": "347101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left EXEC": {
		"method": "calcCode",
		"code": "34901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left BRT Push": {
		"method": "calcCode",
		"code": "40002 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left BRT Release": {
		"method": "calcCode",
		"code": "40004 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left DIM Release": {
		"method": "calcCode",
		"code": "40004 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left DIM Push": {
		"method": "calcCode",
		"code": "40001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left MENU": {
		"method": "calcCode",
		"code": "35001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left PREV PAGE": {
		"method": "calcCode",
		"code": "35201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left NEXT PAGE": {
		"method": "calcCode",
		"code": "35301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left SP": {
		"method": "calcCode",
		"code": "39201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left DEL": {
		"method": "calcCode",
		"code": "39301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left SLASH": {
		"method": "calcCode",
		"code": "39401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left CLR": {
		"method": "calcCode",
		"code": "39501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 1": {
		"method": "calcCode",
		"code": "35401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 2": {
		"method": "calcCode",
		"code": "35501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 3": {
		"method": "calcCode",
		"code": "35601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 4": {
		"method": "calcCode",
		"code": "35701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 5": {
		"method": "calcCode",
		"code": "35801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 6": {
		"method": "calcCode",
		"code": "35901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 7": {
		"method": "calcCode",
		"code": "36001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 8": {
		"method": "calcCode",
		"code": "36101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 9": {
		"method": "calcCode",
		"code": "36201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left DOT": {
		"method": "calcCode",
		"code": "36301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left 0": {
		"method": "calcCode",
		"code": "36401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.FMS.Input.PMDG B777 FMS Left +-": {
		"method": "calcCode",
		"code": "36501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP LOC Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2271_a)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP APP Button Annunciator": {
		"method": "calcCode",
		"code": "(L:ngx_MCP_App, Number)"
	},
	"PMDG.B777 300ER.Gear.Output.PMDG B777 Parking Brake": {
		"method": "calcCode",
		"code": "(L:switch_515_a, Number)"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG B777 FUEL CONTROL LEVER L RUN": {
		"method": "calcCode",
		"code": "(L:switch_520_a) 100 == if{ 52001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG B777 FUEL CONTROL LEVER L CUTOFF": {
		"method": "calcCode",
		"code": "(L:switch_520_a) 0 == if{ 52001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG B777 FUEL CONTROL LEVER R CUTOFF": {
		"method": "calcCode",
		"code": "(L:switch_521_a) 0 == if{ 52101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Engine.Input.PMDG B777 FUEL CONTROL LEVER R RUN": {
		"method": "calcCode",
		"code": "(L:switch_521_a) 100 == if{ 52101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN FLAPS ARM BUTTON": {
		"method": "calcCode",
		"code": "51001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN FLAPS ARM GUARD TOGGLE": {
		"method": "calcCode",
		"code": "51101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN FLAPS KNOB OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_512_a) - 50 div s0\n:1\nl0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN FLAPS KNOB RET": {
		"method": "calcCode",
		"code": "0 (L:switch_512_a) - 50 div s0\n:1\nl0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN FLAPS KNOB EXT": {
		"method": "calcCode",
		"code": "100 (L:switch_512_a) - 50 div s0\n:1\nl0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB C Switch Guard Toggle": {
		"method": "calcCode",
		"code": "51601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB R Switch Guard Toggle": {
		"method": "calcCode",
		"code": "51801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB C Switch Toggle": {
		"method": "calcCode",
		"code": "51701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB R Switch Toggle": {
		"method": "calcCode",
		"code": "51901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB C CUTOUT": {
		"method": "calcCode",
		"code": "(L:switch_517_a) 0 == if{ 51701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB C NORM": {
		"method": "calcCode",
		"code": "(L:switch_517_a) 100 == if{ 51701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB R CUTOUT": {
		"method": "calcCode",
		"code": "(L:switch_519_a) 0 == if{ 51901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED STAB R NORM": {
		"method": "calcCode",
		"code": "(L:switch_519_a) 100 == if{ 51901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN PITCH TRIM LEVER NOSE DOWN": {
		"method": "calcCode",
		"code": "49602 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN PITCH TRIM LEVER NOSE UP": {
		"method": "calcCode",
		"code": "49601 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 PED ALTN PITCH TRIM LEVER RELEASE": {
		"method": "calcCode",
		"code": "49604 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 PARKING BRAKE LEVER PULL": {
		"method": "calcCode",
		"code": "51501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L WXR Button Press": {
		"method": "calcCode",
		"code": "19501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L STA Button Press": {
		"method": "calcCode",
		"code": "19601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L WPT Button Press": {
		"method": "calcCode",
		"code": "19701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L ARPT Button Press": {
		"method": "calcCode",
		"code": "19801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L DATA Button Press": {
		"method": "calcCode",
		"code": "19901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L POS Button Press": {
		"method": "calcCode",
		"code": "20001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L TERR Button Press": {
		"method": "calcCode",
		"code": "20101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L FPV Button Press": {
		"method": "calcCode",
		"code": "19301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MTRS Button Press": {
		"method": "calcCode",
		"code": "19401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Warning.Input.PMDG B777 LEFT WARNING CAUTION Button Press": {
		"method": "calcCode",
		"code": "17701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 LEFT MASTER WARNING ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:switch_1772_a)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 LEFT MASTER CAUTION ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:switch_1771_a)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Baro Ref Toggle": {
		"method": "calcCode",
		"code": "19001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS REF Toggle": {
		"method": "calcCode",
		"code": "18101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS REF BARO": {
		"method": "calcCode",
		"code": "(L:switch_181_a) 0 == if[ 18101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS REF RADIO": {
		"method": "calcCode",
		"code": "(L:switch_181_a) 100 == if[ 18101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L Baro Knob STD Button Press": {
		"method": "calcCode",
		"code": "19201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS Knob RST Button Press": {
		"method": "calcCode",
		"code": "18301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF L SWITCH OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_184_a) - 50 div sp0\n:1\nl0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF L SWITCH VOR L": {
		"method": "calcCode",
		"code": "0 (L:switch_184_a) - 50 div sp0\n:1\nl0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF L SWITCH ADF L": {
		"method": "calcCode",
		"code": "100 (L:switch_184_a) - 50 div sp0\n:1\nl0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF R SWITCH OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_189_a) - 50 div sp0\n:1\nl0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF R SWITCH VOR R": {
		"method": "calcCode",
		"code": "0 (L:switch_189_a) - 50 div sp0\n:1\nl0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L VOR ADF R SWITCH ADF R": {
		"method": "calcCode",
		"code": "100 (L:switch_189_a) - 50 div sp0\n:1\nl0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP L INBD Button Press": {
		"method": "calcCode",
		"code": "23101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP R INBD Button Press": {
		"method": "calcCode",
		"code": "23201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP LWR CTR Button Press": {
		"method": "calcCode",
		"code": "23301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP ENG Button Press": {
		"method": "calcCode",
		"code": "23401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP STAT Button Press": {
		"method": "calcCode",
		"code": "23501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP ELEC Button Press": {
		"method": "calcCode",
		"code": "23601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP HYD Button Press": {
		"method": "calcCode",
		"code": "23701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP FUEL Button Press": {
		"method": "calcCode",
		"code": "23801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP AIR Button Press": {
		"method": "calcCode",
		"code": "23901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP DOOR Button Press": {
		"method": "calcCode",
		"code": "24001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP GEAR Button Press": {
		"method": "calcCode",
		"code": "24101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP FCTL Button Press": {
		"method": "calcCode",
		"code": "24201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP CAM Button Press": {
		"method": "calcCode",
		"code": "24301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP CHKL Button Press": {
		"method": "calcCode",
		"code": "24401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP COMM Button Press": {
		"method": "calcCode",
		"code": "24501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP NAV Button Press": {
		"method": "calcCode",
		"code": "24601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 DSP CANC RCL Button Press": {
		"method": "calcCode",
		"code": "24701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 DSP L INBD  Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2311_a)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 DSP R INBD Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2321_a)"
	},
	"PMDG.B777 300ER.Avionics.Output.PMDG B777 DSP LWR CTR Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2331_a)"
	},
	"Microsoft.Generic.Electrical.Input.ALTERNATOR 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:ALTERNATOR_ON) "
	},
	"Microsoft.Generic.Electrical.Input.ALTERNATOR 1 OFF": {
		"method": "calcCode",
		"code": "1 (>K:ALTERNATOR_OFF) "
	},
	"Microsoft.Generic.Electrical.Input.ALTERNATOR SET": {
		"method": "calcCode",
		"code": "(>K:2:ALTERNATOR_SET)"
	},
	"PMDG.B777 300ER.MCDU.Output.CDU_L_EXEC_IND": {
		"method": "calcCode",
		"code": "(L:switch_3491_a, number) 0 >"
	},
	"Microsoft.Generic.Electrical.Input.ALTERNATOR 2 OFF": {
		"method": "calcCode",
		"code": "2 (>K:ALTERNATOR_OFF) "
	},
	"Microsoft.Generic.Electrical.Input.ALTERNATOR 2 ON": {
		"method": "calcCode",
		"code": "2 (>K:ALTERNATOR_ON) "
	},
	"Microsoft.Generic.Electrical.Input.MASTER BATTERY 1 ON": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_ON)"
	},
	"Microsoft.Generic.Electrical.Input.MASTER BATTERY 2 ON": {
		"method": "calcCode",
		"code": "2 (>K:MASTER_BATTERY_ON)"
	},
	"Microsoft.Generic.Electrical.Input.MASTER BATTERY 1 OFF": {
		"method": "calcCode",
		"code": "1 (>K:MASTER_BATTERY_OFF)"
	},
	"Microsoft.Generic.Electrical.Input.MASTER BATTERY 2 OFF": {
		"method": "calcCode",
		"code": "2 (>K:MASTER_BATTERY_OFF)"
	},
	"Microsoft.Generic.Electrical.Input.APU BLEED AIR SOURCE SET": {
		"method": "calcCode",
		"code": "(>K:APU_BLEED_AIR_SOURCE_SET)"
	},
	"Microsoft.Generic.Electrical.Input.APU BLEED AIR SOURCE TOGGLE": {
		"method": "calcCode",
		"code": "(>K:APU_BLEED_AIR_SOURCE_TOGGLE)"
	},
	"Microsoft.Generic.Electrical.Input.APU EXTINGUISH FIRE": {
		"method": "calcCode",
		"code": "(>K:APU_EXTINGUISH_FIRE)"
	},
	"Microsoft.Generic.Electrical.Input.APU GENERATOR SWITCH SET": {
		"method": "calcCode",
		"code": "(>K:2:APU_GENERATOR_SWITCH_SET)"
	},
	"Microsoft.Generic.Electrical.Input.BATTERY1 SET": {
		"method": "calcCode",
		"code": "(>K:BATTERY1_SET)"
	},
	"Microsoft.Generic.Electrical.Input.BATTERY2 SET": {
		"method": "calcCode",
		"code": "(>K:BATTERY2_SET)"
	},
	"Microsoft.Generic.Electrical.Input.BATTERY3 SET": {
		"method": "calcCode",
		"code": "(>K:BATTERY3_SET)"
	},
	"Microsoft.Generic.Electrical.Input.BATTERY4 SET": {
		"method": "calcCode",
		"code": "(>K:BATTERY4_SET)"
	},
	"Microsoft.Generic.Electrical.Input.ELECTRICAL BATTERY BREAKER TOGGLE": {
		"method": "calcCode",
		"code": "(>K:2:ELECTRICAL_BATTERY_BREAKER_TOGGLE)"
	},
	"Microsoft.Generic.Electrical.Input.MASTER BATTERY SET": {
		"method": "calcCode",
		"code": "(>K:2:MASTER_BATTERY_SET)"
	},
	"Microsoft.Generic.Lights.Input.BEACON LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:BEACON_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.CABIN LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:CABIN_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.GLARESHIELD LIGHTS OFF": {
		"method": "calcCode",
		"code": "(>K:GLARESHIELD_LIGHTS_OFF)"
	},
	"Microsoft.Generic.Lights.Input.GLARESHIELD LIGHTS ON": {
		"method": "calcCode",
		"code": "(>K:GLARESHIELD_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.GLARESHIELD_LIGHTS_SET": {
		"method": "calcCode",
		"code": "(>K:2:GLARESHIELD_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.GLARESHIELD LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(>K:GLARESHIELD_LIGHTS_TOGGLE)"
	},
	"Microsoft.Generic.Lights.Input.LANDING LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:LANDING_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.LIGHT POTENTIOMETER SET": {
		"method": "calcCode",
		"code": "(>K:2:LIGHT_POTENTIOMETER_SET)"
	},
	"Microsoft.Generic.Lights.Input.PANEL LIGHTS TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PANEL_LIGHTS_TOGGLE)"
	},
	"Microsoft.Generic.Lights.Input.PEDESTRAL LIGHTS OFF": {
		"method": "calcCode",
		"code": "(>K:PEDESTRAL_LIGHTS_OFF)"
	},
	"Microsoft.Generic.Lights.Input.PEDESTRAL LIGHTS ON": {
		"method": "calcCode",
		"code": "(>K:PEDESTRAL_LIGHTS_ON)"
	},
	"Microsoft.Generic.Lights.Input.PEDESTRAL LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:PEDESTRAL_LIGHTS_SET)"
	},
	"Microsoft.Generic.Lights.Input.PEDESTRAL_LIGHTS_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:PEDESTRAL_LIGHTS_TOGGLE)"
	},
	"Microsoft.Generic.Lights.Input.RECOGNITION LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:RECOGNITION_LIGHTS_SET)"
	},
	"PMDG.B777 300ER.Engines.Input.PMDG B777 Eng 1 Reverse Arm": {
		"method": "calcCode",
		"code": "49903 (>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Lights.Input.STROBES SET": {
		"method": "calcCode",
		"code": "(>K:2:STROBES_SET)"
	},
	"Microsoft.Generic.Lights.Input.TAXI LIGHTS SET": {
		"method": "calcCode",
		"code": "(>K:2:TAXI_LIGHTS_SET)"
	},
	"PMDG.B777 300ER.Engines.Input.PMDG B777 Eng 2 Reverse Arm": {
		"method": "calcCode",
		"code": "507103 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 A/T Button": {
		"method": "calcCode",
		"code": "20701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 A/T L Arm": {
		"method": "calcCode",
		"code": "20401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 A/T R Arm": {
		"method": "calcCode",
		"code": "20501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Output.PMDG B777 PED Spoiler Lever Position": {
		"method": "calcCode",
		"code": "(L:switch_498_a)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_BARO_UNIT_SELECTOR_CPT_in_Hg": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_BARO_UNIT_SELECTOR_CPT_hPa": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_BARO_UNIT_SELECTOR_CPT_Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro_Selector_HPA_1, Bool) ! (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_BARO_CPT_INCR": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  \n(L:XMLVAR_Baro_Selector_HPA_1) if{\n1 (A:KOHLSMAN SETTING MB:1, mbars) ++ 16 * (>K:2:KOHLSMAN_SET) \n} els{ 1 (>K:KOHLSMAN_INC) } }"
	},
	"IniBuilds.A320.EFIS.Input.INI320_EFIS_BARO_CPT_DECR": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  \n(L:XMLVAR_Baro_Selector_HPA_1) if{\n1 (A:KOHLSMAN SETTING MB:1, mbars) -- 16 * (>K:2:KOHLSMAN_SET) \n} els{ 1 (>K:KOHLSMAN_DEC) } }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS KNOB INC": {
		"method": "calcCode",
		"code": "(L:CAMinsKnob, number) 5 + 50 min (>L:CAMinsKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myMinsTimer)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS L MINS KNOB DEC": {
		"method": "calcCode",
		"code": "(L:CAMinsKnob, number) 5 - -50 max (>L:CAMinsKnob, number)\n(E:SIMULATION TIME, second) 0.04 + (>L:myMinsTimer)"
	},
	"PMDG.B777 300ER.EFIS.Output.PMDG B777 Mins Timer Handler": {
		"method": "calcCode",
		"code": "(L:myMinsTimer) d 0 > if{\n  (E:SIMULATION TIME, second) (L:myMinsTimer) > if{\n	0 (>L:CAMinsKnob, number) 0 (>L:FOMinsKnob, number) \n	0 (>L:myMinsTimer) } }"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 GOVERNOR SWITCH OFF": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_OFF)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 GOVERNOR SWITCH ON": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_ON)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 GOVERNOR SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 GOVERNOR SWITCH SET": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 BEEP TRIM INCREASE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_INCREASE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 BEEP TRIM DECREASE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_DECREASE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 1 BEEP TRIM SET": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 GOVERNOR SWITCH OFF": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_OFF)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 GOVERNOR SWITCH ON": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_ON)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 GOVERNOR SWITCH TOGGLE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_TOGGLE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 GOVERNOR SWITCH SET": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 BEEP TRIM INCREASE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_INCREASE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 BEEP TRIM DECREASE": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_DECREASE)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER ENGINE 2 BEEP TRIM SET": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_SET)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).AXIS HELICOPTER THROTTLE1 SET": {
		"method": "calcCode",
		"code": "@ 16 * 0 max 16383 min (>K:AXIS_HELICOPTER_THROTTLE1_SET)"
	},
	"Microsoft.Generic.Engine.Input (Potentiometer).AXIS HELICOPTER THROTTLE2 SET": {
		"method": "calcCode",
		"code": "@ 16 * 0 max 16383 min (>K:AXIS_HELICOPTER_THROTTLE2_SET)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE1 CUT": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE1_CUT)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE2 CUT": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE2_CUT)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE1 DEC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE1_DEC)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE2 DEC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE2_DEC)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE1 FULL": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE1_FULL)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE2 FULL": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE2_FULL)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE1 INC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE1_INC)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE2 INC": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE2_INC)"
	},
	"Microsoft.Generic.Engine.Input.HELICOPTER THROTTLE FULL": {
		"method": "calcCode",
		"code": "(>K:HELICOPTER_THROTTLE_FULL)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R Range Knob TFC Press": {
		"method": "calcCode",
		"code": "25501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R WXR Button Press": {
		"method": "calcCode",
		"code": "26201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R STA Button Press": {
		"method": "calcCode",
		"code": "26301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R WPT Button Press": {
		"method": "calcCode",
		"code": "26401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R ARPT Button Press": {
		"method": "calcCode",
		"code": "26501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R DATA Button Press": {
		"method": "calcCode",
		"code": "26601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R POS Button Press": {
		"method": "calcCode",
		"code": "26701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R TERR Button Press": {
		"method": "calcCode",
		"code": "26801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R FPV Button Press": {
		"method": "calcCode",
		"code": "26001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R MTRS Button Press": {
		"method": "calcCode",
		"code": "26101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS R Baro Ref Toggle": {
		"method": "calcCode",
		"code": "25701 (>K:ROTOR_BRAKE)"
	},
	"Black Square.Duke.Electrical.Input.Battery Selector Switch Both": {
		"method": "calcCode",
		"code": "1 (>L:var_BatterySelectSwitch)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L1": {
		"method": "calcCode",
		"code": "32801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L2": {
		"method": "calcCode",
		"code": "32901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L3": {
		"method": "calcCode",
		"code": "33001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L4": {
		"method": "calcCode",
		"code": "33101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L5": {
		"method": "calcCode",
		"code": "33201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L6": {
		"method": "calcCode",
		"code": "33301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R1": {
		"method": "calcCode",
		"code": "33401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R2": {
		"method": "calcCode",
		"code": "33501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R3": {
		"method": "calcCode",
		"code": "33601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R4": {
		"method": "calcCode",
		"code": "33701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R5": {
		"method": "calcCode",
		"code": "33801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R6": {
		"method": "calcCode",
		"code": "33901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY INIT REF": {
		"method": "calcCode",
		"code": "34001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY RTE": {
		"method": "calcCode",
		"code": "34101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY DEP ARR": {
		"method": "calcCode",
		"code": "34201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY PLAN": {
		"method": "calcCode",
		"code": "34301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY VNAV": {
		"method": "calcCode",
		"code": "34401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY FIX": {
		"method": "calcCode",
		"code": "34501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY LEGS": {
		"method": "calcCode",
		"code": "34601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY HOLD": {
		"method": "calcCode",
		"code": "34701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY FMC COMM": {
		"method": "calcCode",
		"code": "347101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY PROG": {
		"method": "calcCode",
		"code": "34801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY EXEC": {
		"method": "calcCode",
		"code": "34901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT EXEC LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_3491_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY MENU": {
		"method": "calcCode",
		"code": "35001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NAV RAD": {
		"method": "calcCode",
		"code": "35101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY PREV PAGE": {
		"method": "calcCode",
		"code": "35201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NEXT PAGE": {
		"method": "calcCode",
		"code": "35301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 1": {
		"method": "calcCode",
		"code": "35401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 2": {
		"method": "calcCode",
		"code": "35501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 3": {
		"method": "calcCode",
		"code": "35601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 4": {
		"method": "calcCode",
		"code": "35701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 5": {
		"method": "calcCode",
		"code": "35801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 6": {
		"method": "calcCode",
		"code": "35901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 7": {
		"method": "calcCode",
		"code": "36001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 8": {
		"method": "calcCode",
		"code": "36101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 9": {
		"method": "calcCode",
		"code": "36201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY DECIMAL": {
		"method": "calcCode",
		"code": "36301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY NUM 0": {
		"method": "calcCode",
		"code": "36401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY PLUS MINUS": {
		"method": "calcCode",
		"code": "36501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY A": {
		"method": "calcCode",
		"code": "36601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY B": {
		"method": "calcCode",
		"code": "36701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY C": {
		"method": "calcCode",
		"code": "36801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY D": {
		"method": "calcCode",
		"code": "36901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY E": {
		"method": "calcCode",
		"code": "37001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY F": {
		"method": "calcCode",
		"code": "37101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY G": {
		"method": "calcCode",
		"code": "37201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY H": {
		"method": "calcCode",
		"code": "37301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY I": {
		"method": "calcCode",
		"code": "37401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY J": {
		"method": "calcCode",
		"code": "37501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY K": {
		"method": "calcCode",
		"code": "37601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY L": {
		"method": "calcCode",
		"code": "37701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY M": {
		"method": "calcCode",
		"code": "37801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY N": {
		"method": "calcCode",
		"code": "37901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY O": {
		"method": "calcCode",
		"code": "38001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY P": {
		"method": "calcCode",
		"code": "38101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY Q": {
		"method": "calcCode",
		"code": "38201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY R": {
		"method": "calcCode",
		"code": "38301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY S": {
		"method": "calcCode",
		"code": "38401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY T": {
		"method": "calcCode",
		"code": "38501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY U": {
		"method": "calcCode",
		"code": "38601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY V": {
		"method": "calcCode",
		"code": "38701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY W": {
		"method": "calcCode",
		"code": "38801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY X": {
		"method": "calcCode",
		"code": "38901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY Y": {
		"method": "calcCode",
		"code": "39001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY Z": {
		"method": "calcCode",
		"code": "39101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY SP": {
		"method": "calcCode",
		"code": "39201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY DEL": {
		"method": "calcCode",
		"code": "39301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT KEY SLASH": {
		"method": "calcCode",
		"code": "39401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU LEFT KEY CLR Press": {
		"method": "calcCode",
		"code": "39501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT DISPY LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_396_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT FAIL LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_397_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT MSG LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_398_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU LEFT OFST LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_399_a, number)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU LEFT BRT SWITCH INC": {
		"method": "calcCode",
		"code": "40002  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU LEFT BRT SWITCH DEC": {
		"method": "calcCode",
		"code": "40001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L1": {
		"method": "calcCode",
		"code": "40101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L2": {
		"method": "calcCode",
		"code": "40201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L3": {
		"method": "calcCode",
		"code": "40301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L4": {
		"method": "calcCode",
		"code": "40401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L5": {
		"method": "calcCode",
		"code": "40501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L6": {
		"method": "calcCode",
		"code": "40601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R1": {
		"method": "calcCode",
		"code": "40701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R2": {
		"method": "calcCode",
		"code": "40801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R3": {
		"method": "calcCode",
		"code": "40901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R4": {
		"method": "calcCode",
		"code": "41001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R5": {
		"method": "calcCode",
		"code": "41101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R6": {
		"method": "calcCode",
		"code": "41201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY INIT REF": {
		"method": "calcCode",
		"code": "41301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY RTE": {
		"method": "calcCode",
		"code": "41401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY DEP ARR": {
		"method": "calcCode",
		"code": "41501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY PLAN": {
		"method": "calcCode",
		"code": "41601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY VNAV": {
		"method": "calcCode",
		"code": "41701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY FIX": {
		"method": "calcCode",
		"code": "41801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY LEGS": {
		"method": "calcCode",
		"code": "41901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY HOLD": {
		"method": "calcCode",
		"code": "42001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY FMC COMM": {
		"method": "calcCode",
		"code": "420101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY PROG": {
		"method": "calcCode",
		"code": "42101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY EXEC": {
		"method": "calcCode",
		"code": "42201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT EXEC LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_4221_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY MENU": {
		"method": "calcCode",
		"code": "42301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NAV RAD": {
		"method": "calcCode",
		"code": "42401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY PREV PAGE": {
		"method": "calcCode",
		"code": "42501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NEXT PAGE": {
		"method": "calcCode",
		"code": "42601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 1": {
		"method": "calcCode",
		"code": "42701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 2": {
		"method": "calcCode",
		"code": "42801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 3": {
		"method": "calcCode",
		"code": "42901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 4": {
		"method": "calcCode",
		"code": "43001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 5": {
		"method": "calcCode",
		"code": "43101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 6": {
		"method": "calcCode",
		"code": "43201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 7": {
		"method": "calcCode",
		"code": "43301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 8": {
		"method": "calcCode",
		"code": "43401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 9": {
		"method": "calcCode",
		"code": "43501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY DECIMAL": {
		"method": "calcCode",
		"code": "43601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY NUM 0": {
		"method": "calcCode",
		"code": "43701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY PLUS MINUS": {
		"method": "calcCode",
		"code": "43801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY A": {
		"method": "calcCode",
		"code": "43901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY B": {
		"method": "calcCode",
		"code": "44001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY C": {
		"method": "calcCode",
		"code": "44101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY D": {
		"method": "calcCode",
		"code": "44201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY E": {
		"method": "calcCode",
		"code": "44301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY F": {
		"method": "calcCode",
		"code": "44401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY G": {
		"method": "calcCode",
		"code": "44501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY H": {
		"method": "calcCode",
		"code": "44601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY I": {
		"method": "calcCode",
		"code": "44701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY J": {
		"method": "calcCode",
		"code": "44801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY K": {
		"method": "calcCode",
		"code": "44901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY L": {
		"method": "calcCode",
		"code": "45001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY M": {
		"method": "calcCode",
		"code": "45101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY N": {
		"method": "calcCode",
		"code": "45201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY O": {
		"method": "calcCode",
		"code": "45301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY P": {
		"method": "calcCode",
		"code": "45401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY Q": {
		"method": "calcCode",
		"code": "45501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY R": {
		"method": "calcCode",
		"code": "45601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY S": {
		"method": "calcCode",
		"code": "45701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY T": {
		"method": "calcCode",
		"code": "45801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY U": {
		"method": "calcCode",
		"code": "45901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY V": {
		"method": "calcCode",
		"code": "46001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY W": {
		"method": "calcCode",
		"code": "46101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY X": {
		"method": "calcCode",
		"code": "46201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY Y": {
		"method": "calcCode",
		"code": "46301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY Z": {
		"method": "calcCode",
		"code": "46401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY SP": {
		"method": "calcCode",
		"code": "46501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY DEL": {
		"method": "calcCode",
		"code": "46601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT KEY SLASH": {
		"method": "calcCode",
		"code": "46701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU RIGHT KEY CLR Press": {
		"method": "calcCode",
		"code": "46801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT DISPY LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_469_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT FAIL LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_470_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT MSG LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_471_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU RIGHT OFST LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_472_a, number)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU RIGHT BRT SWITCH INC": {
		"method": "calcCode",
		"code": "47302  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU RIGHT BRT SWITCH DEC": {
		"method": "calcCode",
		"code": "47301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L1": {
		"method": "calcCode",
		"code": "65301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L2": {
		"method": "calcCode",
		"code": "65401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L3": {
		"method": "calcCode",
		"code": "65501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L4": {
		"method": "calcCode",
		"code": "65601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L5": {
		"method": "calcCode",
		"code": "65701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L6": {
		"method": "calcCode",
		"code": "65801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R1": {
		"method": "calcCode",
		"code": "65901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R2": {
		"method": "calcCode",
		"code": "66001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R3": {
		"method": "calcCode",
		"code": "66101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R4": {
		"method": "calcCode",
		"code": "66201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R5": {
		"method": "calcCode",
		"code": "66301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R6": {
		"method": "calcCode",
		"code": "66401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY INIT REF": {
		"method": "calcCode",
		"code": "66501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY RTE": {
		"method": "calcCode",
		"code": "66601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY DEP ARR": {
		"method": "calcCode",
		"code": "66701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY PLAN": {
		"method": "calcCode",
		"code": "66801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY VNAV": {
		"method": "calcCode",
		"code": "66901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY FIX": {
		"method": "calcCode",
		"code": "67001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY LEGS": {
		"method": "calcCode",
		"code": "67101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY HOLD": {
		"method": "calcCode",
		"code": "67201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY FMC COMM": {
		"method": "calcCode",
		"code": "672101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY PROG": {
		"method": "calcCode",
		"code": "67301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY EXEC": {
		"method": "calcCode",
		"code": "67401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER EXEC LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_6741_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY MENU": {
		"method": "calcCode",
		"code": "67501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NAV RAD": {
		"method": "calcCode",
		"code": "67601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY PREV PAGE": {
		"method": "calcCode",
		"code": "67701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NEXT PAGE": {
		"method": "calcCode",
		"code": "67801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 1": {
		"method": "calcCode",
		"code": "67901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 2": {
		"method": "calcCode",
		"code": "68001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 3": {
		"method": "calcCode",
		"code": "68101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 4": {
		"method": "calcCode",
		"code": "68201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 5": {
		"method": "calcCode",
		"code": "68301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 6": {
		"method": "calcCode",
		"code": "68401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 7": {
		"method": "calcCode",
		"code": "68501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 8": {
		"method": "calcCode",
		"code": "68601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 9": {
		"method": "calcCode",
		"code": "68701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY DECIMAL": {
		"method": "calcCode",
		"code": "68801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY NUM 0": {
		"method": "calcCode",
		"code": "68901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY PLUS MINUS": {
		"method": "calcCode",
		"code": "69001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY A": {
		"method": "calcCode",
		"code": "69101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY B": {
		"method": "calcCode",
		"code": "69201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY C": {
		"method": "calcCode",
		"code": "69301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY D": {
		"method": "calcCode",
		"code": "69401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY E": {
		"method": "calcCode",
		"code": "69501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY F": {
		"method": "calcCode",
		"code": "69601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY G": {
		"method": "calcCode",
		"code": "69701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY H": {
		"method": "calcCode",
		"code": "69801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY I": {
		"method": "calcCode",
		"code": "69901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY J": {
		"method": "calcCode",
		"code": "70001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY K": {
		"method": "calcCode",
		"code": "70101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY L": {
		"method": "calcCode",
		"code": "70201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY M": {
		"method": "calcCode",
		"code": "70301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY N": {
		"method": "calcCode",
		"code": "70401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY O": {
		"method": "calcCode",
		"code": "70501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY P": {
		"method": "calcCode",
		"code": "70601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY Q": {
		"method": "calcCode",
		"code": "70701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY R": {
		"method": "calcCode",
		"code": "70801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY S": {
		"method": "calcCode",
		"code": "70901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY T": {
		"method": "calcCode",
		"code": "71001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY U": {
		"method": "calcCode",
		"code": "71101  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY V": {
		"method": "calcCode",
		"code": "71201  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY W": {
		"method": "calcCode",
		"code": "71301  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY X": {
		"method": "calcCode",
		"code": "71401  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY Y": {
		"method": "calcCode",
		"code": "71501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY Z": {
		"method": "calcCode",
		"code": "71601  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY SP": {
		"method": "calcCode",
		"code": "71701  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY DEL": {
		"method": "calcCode",
		"code": "71801  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER KEY SLASH": {
		"method": "calcCode",
		"code": "71901  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU CENTER KEY CLR Press": {
		"method": "calcCode",
		"code": "72001  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER DISPY LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_721_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER FAIL LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_722_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER MSG LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_723_a, number)"
	},
	"PMDG.B777 300ER.MCDU.PMDG B777 CDU CENTER OFST LIGHT": {
		"method": "calcCode",
		"code": "(L:switch_724_a, number)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU CENTER BRT SWITCH INC": {
		"method": "calcCode",
		"code": "72502  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU CENTER BRT SWITCH DEC": {
		"method": "calcCode",
		"code": "72501  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP MIC/INT Mic": {
		"method": "calcCode",
		"code": "0 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP MIC/INT -----": {
		"method": "calcCode",
		"code": "50 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP MIC/INT Int": {
		"method": "calcCode",
		"code": "100 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP MIC/INT Inc": {
		"method": "calcCode",
		"code": "55401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP MIC/INT Dec": {
		"method": "calcCode",
		"code": "55402 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Filter Select V": {
		"method": "calcCode",
		"code": "0 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Filter Select B": {
		"method": "calcCode",
		"code": "50 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Filter Select R": {
		"method": "calcCode",
		"code": "100 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Filter Select Inc": {
		"method": "calcCode",
		"code": "57201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Filter Select Dec": {
		"method": "calcCode",
		"code": "57202 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP MIC/INT Mic": {
		"method": "calcCode",
		"code": "0 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP MIC/INT -----": {
		"method": "calcCode",
		"code": "50 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP MIC/INT Int": {
		"method": "calcCode",
		"code": "100 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP MIC/INT Inc": {
		"method": "calcCode",
		"code": "77301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP MIC/INT Dec": {
		"method": "calcCode",
		"code": "77302 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Filter Select V": {
		"method": "calcCode",
		"code": "0 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Filter Select B": {
		"method": "calcCode",
		"code": "50 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Filter Select R": {
		"method": "calcCode",
		"code": "100 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Filter Select Inc": {
		"method": "calcCode",
		"code": "75501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Filter Select Dec": {
		"method": "calcCode",
		"code": "75502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABV/BLW ABV": {
		"method": "calcCode",
		"code": "0 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABV/BLW N": {
		"method": "calcCode",
		"code": "50 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABV/BLW BLW": {
		"method": "calcCode",
		"code": "100 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABV/BLW Inc": {
		"method": "calcCode",
		"code": "743101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABV/BLW Dec": {
		"method": "calcCode",
		"code": "743102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABV/BLW ABV": {
		"method": "calcCode",
		"code": "0 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABV/BLW N": {
		"method": "calcCode",
		"code": "50 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABV/BLW BLW": {
		"method": "calcCode",
		"code": "100 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABV/BLW Inc": {
		"method": "calcCode",
		"code": "743301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABV/BLW Dec": {
		"method": "calcCode",
		"code": "743302 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Floor Lights Brt": {
		"method": "calcCode",
		"code": "0 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Floor Lights Off": {
		"method": "calcCode",
		"code": "50 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Floor Lights Dim": {
		"method": "calcCode",
		"code": "100 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Floor Lights Inc": {
		"method": "calcCode",
		"code": "73501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Floor Lights Dec": {
		"method": "calcCode",
		"code": "73502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 OBS Audio Capt": {
		"method": "calcCode",
		"code": "0 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 OBS Audio Norm": {
		"method": "calcCode",
		"code": "50 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 OBS Audio Fo": {
		"method": "calcCode",
		"code": "100 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 OBS Audio Inc": {
		"method": "calcCode",
		"code": "64801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 OBS Audio Dec": {
		"method": "calcCode",
		"code": "64802 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP MIC/INT Mic": {
		"method": "calcCode",
		"code": "0 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP MIC/INT -----": {
		"method": "calcCode",
		"code": "50 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP MIC/INT Int": {
		"method": "calcCode",
		"code": "100 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP MIC/INT Inc": {
		"method": "calcCode",
		"code": "62501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP MIC/INT Dec": {
		"method": "calcCode",
		"code": "62502 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Filter Select V": {
		"method": "calcCode",
		"code": "0 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Filter Select B": {
		"method": "calcCode",
		"code": "50 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Filter Select R": {
		"method": "calcCode",
		"code": "100 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Filter Select Inc": {
		"method": "calcCode",
		"code": "64301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Filter Select Dec": {
		"method": "calcCode",
		"code": "64302 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 1 Btl Disch Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_649_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 1 Fire Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6513_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 2 Btl Disch Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_650_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 2 Fire Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6523_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 1 Cutoff Fire Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5201_a)"
	},
	"PMDG.B777 300ER.Warning.PMDG B777 Engine 2 Cutoff Fire Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5211_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_542_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_543_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_544_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_545_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_546_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_547_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Speaker Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_559_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_560_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_561_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_562_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_563_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_570_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_574_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_785_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_784_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_783_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_782_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_781_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_780_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Speaker Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_768_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_767_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_766_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_765_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_764_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_757_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_753_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_613_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_614_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_615_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_616_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_617_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_618_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Speaker Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_630_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_631_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_632_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_633_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_634_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_641_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Receive Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_645_a)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Pull": {
		"method": "calcCode",
		"code": "(L:switch_651_a) ! if{ 65101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Push": {
		"method": "calcCode",
		"code": "(L:switch_651_a) if{ 65101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Toggle": {
		"method": "calcCode",
		"code": "65101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Lock Press": {
		"method": "calcCode",
		"code": "(L:switch_6512_a) ! if{ 651201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Lock Release": {
		"method": "calcCode",
		"code": "(L:switch_6512_a) if{ 651201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Lock Toggle": {
		"method": "calcCode",
		"code": "651201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Pull": {
		"method": "calcCode",
		"code": "(L:switch_652_a) ! if{ 65201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Push": {
		"method": "calcCode",
		"code": "(L:switch_652_a) if{ 65201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Toggle": {
		"method": "calcCode",
		"code": "65201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Lock Press": {
		"method": "calcCode",
		"code": "(L:switch_6522_a) ! if{ 652201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Lock Release": {
		"method": "calcCode",
		"code": "(L:switch_6522_a) if{ 652201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Lock Toggle": {
		"method": "calcCode",
		"code": "652201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_548_a) ! if{ 54801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_548_a) if{ 54801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L Receive Toggle": {
		"method": "calcCode",
		"code": "54801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C Receive On": {
		"method": "calcCode",
		"code": "(L:switch_549_a) ! if{ 54901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_549_a) if{ 54901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C Receive Toggle": {
		"method": "calcCode",
		"code": "54901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_550_a) ! if{ 55001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_550_a) if{ 55001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R Receive Toggle": {
		"method": "calcCode",
		"code": "55001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT Receive On": {
		"method": "calcCode",
		"code": "(L:switch_551_a) ! if{ 55101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_551_a) if{ 55101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT Receive Toggle": {
		"method": "calcCode",
		"code": "55101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB Receive On": {
		"method": "calcCode",
		"code": "(L:switch_552_a) ! if{ 55201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_552_a) if{ 55201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB Receive Toggle": {
		"method": "calcCode",
		"code": "55201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA Receive On": {
		"method": "calcCode",
		"code": "(L:switch_553_a) ! if{ 55301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_553_a) if{ 55301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA Receive Toggle": {
		"method": "calcCode",
		"code": "55301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Speaker On": {
		"method": "calcCode",
		"code": "(L:switch_564_a) ! if{ 56401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Speaker Off": {
		"method": "calcCode",
		"code": "(L:switch_564_a) if{ 56401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP Speaker Toggle": {
		"method": "calcCode",
		"code": "56401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_565_a) ! if{ 56501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_565_a) if{ 56501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L Receive Toggle": {
		"method": "calcCode",
		"code": "56501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_566_a) ! if{ 56601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_566_a) if{ 56601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R Receive Toggle": {
		"method": "calcCode",
		"code": "56601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_567_a) ! if{ 56701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_567_a) if{ 56701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 Receive Toggle": {
		"method": "calcCode",
		"code": "56701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_568_a) ! if{ 56801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_568_a) if{ 56801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 Receive Toggle": {
		"method": "calcCode",
		"code": "56801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Receive On": {
		"method": "calcCode",
		"code": "(L:switch_571_a) ! if{ 57101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_571_a) if{ 57101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Receive Toggle": {
		"method": "calcCode",
		"code": "57101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Receive On": {
		"method": "calcCode",
		"code": "(L:switch_573_a) ! if{ 57301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_573_a) if{ 57301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Receive Toggle": {
		"method": "calcCode",
		"code": "57301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_779_a) ! if{ 77901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_779_a) if{ 77901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L Receive Toggle": {
		"method": "calcCode",
		"code": "77901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C Receive On": {
		"method": "calcCode",
		"code": "(L:switch_778_a) ! if{ 77801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_778_a) if{ 77801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C Receive Toggle": {
		"method": "calcCode",
		"code": "77801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_777_a) ! if{ 77701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_777_a) if{ 77701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R Receive Toggle": {
		"method": "calcCode",
		"code": "77701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT Receive On": {
		"method": "calcCode",
		"code": "(L:switch_776_a) ! if{ 77601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_776_a) if{ 77601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT Receive Toggle": {
		"method": "calcCode",
		"code": "77601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB Receive On": {
		"method": "calcCode",
		"code": "(L:switch_775_a) ! if{ 77501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_775_a) if{ 77501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB Receive Toggle": {
		"method": "calcCode",
		"code": "77501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA Receive On": {
		"method": "calcCode",
		"code": "(L:switch_774_a) ! if{ 77401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_774_a) if{ 77401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA Receive Toggle": {
		"method": "calcCode",
		"code": "77401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Speaker On": {
		"method": "calcCode",
		"code": "(L:switch_763_a) ! if{ 76301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Speaker Off": {
		"method": "calcCode",
		"code": "(L:switch_763_a) if{ 76301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP Speaker Toggle": {
		"method": "calcCode",
		"code": "76301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_762_a) ! if{ 76201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_762_a) if{ 76201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L Receive Toggle": {
		"method": "calcCode",
		"code": "76201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_761_a) ! if{ 76101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_761_a) if{ 76101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R Receive Toggle": {
		"method": "calcCode",
		"code": "76101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_760_a) ! if{ 76001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_760_a) if{ 76001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 Receive Toggle": {
		"method": "calcCode",
		"code": "76001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_759_a) ! if{ 75901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_759_a) if{ 75901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 Receive Toggle": {
		"method": "calcCode",
		"code": "75901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Receive On": {
		"method": "calcCode",
		"code": "(L:switch_756_a) ! if{ 75601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_756_a) if{ 75601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Receive Toggle": {
		"method": "calcCode",
		"code": "75601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Receive On": {
		"method": "calcCode",
		"code": "(L:switch_754_a) ! if{ 75401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_754_a) if{ 75401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Receive Toggle": {
		"method": "calcCode",
		"code": "75401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABS/REL Rel": {
		"method": "calcCode",
		"code": "(L:switch_7432_a) ! if{ 743201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABS/REL Abs": {
		"method": "calcCode",
		"code": "(L:switch_7432_a) if{ 743201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Left ABS/REL Toggle": {
		"method": "calcCode",
		"code": "743201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABS/REL Rel": {
		"method": "calcCode",
		"code": "(L:switch_7434_a) ! if{ 743401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABS/REL Abs": {
		"method": "calcCode",
		"code": "(L:switch_7434_a) if{ 743401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Right ABS/REL Toggle": {
		"method": "calcCode",
		"code": "743401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Alt Source Altn": {
		"method": "calcCode",
		"code": "(L:switch_743_a) ! if{ 74301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Alt Source Norm": {
		"method": "calcCode",
		"code": "(L:switch_743_a) if{ 74301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Alt Source Toggle": {
		"method": "calcCode",
		"code": "74301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC XPNDR L/R R": {
		"method": "calcCode",
		"code": "(L:switch_751_a) ! if{ 75101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC XPNDR L/R L": {
		"method": "calcCode",
		"code": "(L:switch_751_a) if{ 75101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC XPNDR L/R Toggle": {
		"method": "calcCode",
		"code": "75101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_619_a) ! if{ 61901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_619_a) if{ 61901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L Receive Toggle": {
		"method": "calcCode",
		"code": "61901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C Receive On": {
		"method": "calcCode",
		"code": "(L:switch_620_a) ! if{ 62001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_620_a) if{ 62001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C Receive Toggle": {
		"method": "calcCode",
		"code": "62001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_621_a) ! if{ 62101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_621_a) if{ 62101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R Receive Toggle": {
		"method": "calcCode",
		"code": "62101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT Receive On": {
		"method": "calcCode",
		"code": "(L:switch_622_a) ! if{ 62201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_622_a) if{ 62201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT Receive Toggle": {
		"method": "calcCode",
		"code": "62201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB Receive On": {
		"method": "calcCode",
		"code": "(L:switch_623_a) ! if{ 62301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_623_a) if{ 62301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB Receive Toggle": {
		"method": "calcCode",
		"code": "62301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA Receive On": {
		"method": "calcCode",
		"code": "(L:switch_624_a) ! if{ 62401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_624_a) if{ 62401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA Receive Toggle": {
		"method": "calcCode",
		"code": "62401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Speaker On": {
		"method": "calcCode",
		"code": "(L:switch_635_a) ! if{ 63501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Speaker Off": {
		"method": "calcCode",
		"code": "(L:switch_635_a) if{ 63501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP Speaker Toggle": {
		"method": "calcCode",
		"code": "63501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L Receive On": {
		"method": "calcCode",
		"code": "(L:switch_636_a) ! if{ 63601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_636_a) if{ 63601 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L Receive Toggle": {
		"method": "calcCode",
		"code": "63601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R Receive On": {
		"method": "calcCode",
		"code": "(L:switch_637_a) ! if{ 63701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_637_a) if{ 63701 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R Receive Toggle": {
		"method": "calcCode",
		"code": "63701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_638_a) ! if{ 63801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_638_a) if{ 63801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 Receive Toggle": {
		"method": "calcCode",
		"code": "63801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 Receive On": {
		"method": "calcCode",
		"code": "(L:switch_639_a) ! if{ 63901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_639_a) if{ 63901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 Receive Toggle": {
		"method": "calcCode",
		"code": "63901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Receive On": {
		"method": "calcCode",
		"code": "(L:switch_642_a) ! if{ 64201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_642_a) if{ 64201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Receive Toggle": {
		"method": "calcCode",
		"code": "64201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Receive On": {
		"method": "calcCode",
		"code": "(L:switch_644_a) ! if{ 64401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Receive Off": {
		"method": "calcCode",
		"code": "(L:switch_644_a) if{ 64401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Receive Toggle": {
		"method": "calcCode",
		"code": "64401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command On": {
		"method": "calcCode",
		"code": "(L:switch_739_a) ! if{ 73901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command Off": {
		"method": "calcCode",
		"code": "(L:switch_739_a) if{ 73901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command Toggle": {
		"method": "calcCode",
		"code": "73901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Horn Shutoff Push": {
		"method": "calcCode",
		"code": "(L:switch_741_a) ! if{ 74101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Horn Shutoff Pull": {
		"method": "calcCode",
		"code": "(L:switch_741_a) if{ 74101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Horn Shutoff Toggle": {
		"method": "calcCode",
		"code": "74101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command Switch Guard Open": {
		"method": "calcCode",
		"code": "(L:switch_740_a) ! if{ 74001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command Switch Guard Close": {
		"method": "calcCode",
		"code": "(L:switch_740_a) if{ 74001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Command Switch Guard Toggle": {
		"method": "calcCode",
		"code": "74001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF VOR L": {
		"method": "calcCode",
		"code": "0 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF VOR R": {
		"method": "calcCode",
		"code": "10 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF ADF L": {
		"method": "calcCode",
		"code": "20 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF ADF R": {
		"method": "calcCode",
		"code": "30 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Inc": {
		"method": "calcCode",
		"code": "56907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VOR/ADF Dec": {
		"method": "calcCode",
		"code": "56908 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP L": {
		"method": "calcCode",
		"code": "0 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP C": {
		"method": "calcCode",
		"code": "10 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP R": {
		"method": "calcCode",
		"code": "20 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP MKR": {
		"method": "calcCode",
		"code": "30 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Inc": {
		"method": "calcCode",
		"code": "57507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP APP Dec": {
		"method": "calcCode",
		"code": "57508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF VOR L": {
		"method": "calcCode",
		"code": "0 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF VOR R": {
		"method": "calcCode",
		"code": "10 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF ADF L": {
		"method": "calcCode",
		"code": "20 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF ADF R": {
		"method": "calcCode",
		"code": "30 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Inc": {
		"method": "calcCode",
		"code": "75807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VOR/ADF Dec": {
		"method": "calcCode",
		"code": "75808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP L": {
		"method": "calcCode",
		"code": "0 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP C": {
		"method": "calcCode",
		"code": "10 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP R": {
		"method": "calcCode",
		"code": "20 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP MKR": {
		"method": "calcCode",
		"code": "30 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Inc": {
		"method": "calcCode",
		"code": "75207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP APP Dec": {
		"method": "calcCode",
		"code": "75208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF VOR L": {
		"method": "calcCode",
		"code": "0 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF VOR R": {
		"method": "calcCode",
		"code": "10 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF ADF L": {
		"method": "calcCode",
		"code": "20 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF ADF R": {
		"method": "calcCode",
		"code": "30 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Inc": {
		"method": "calcCode",
		"code": "64007 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VOR/ADF Dec": {
		"method": "calcCode",
		"code": "64008 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP L": {
		"method": "calcCode",
		"code": "0 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP C": {
		"method": "calcCode",
		"code": "10 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP R": {
		"method": "calcCode",
		"code": "20 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP MKR": {
		"method": "calcCode",
		"code": "30 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Inc": {
		"method": "calcCode",
		"code": "64607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP APP Dec": {
		"method": "calcCode",
		"code": "64608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 DSPL CTRL On": {
		"method": "calcCode",
		"code": "(L:switch_478_a) ! if{ 47801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 DSPL CTRL Off": {
		"method": "calcCode",
		"code": "(L:switch_478_a) if{ 47801 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 DSPL CTRL Toggle": {
		"method": "calcCode",
		"code": "47801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 DSPL CTRL ALTN Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_478_a, bool) 100 =="
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Left": {
		"method": "calcCode",
		"code": "8401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 1 Fire Handle Right": {
		"method": "calcCode",
		"code": "65102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Left": {
		"method": "calcCode",
		"code": "65101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Engine 2 Fire Handle Right": {
		"method": "calcCode",
		"code": "65102 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF Sens Inc": {
		"method": "calcCode",
		"code": "52507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF Sens Dec": {
		"method": "calcCode",
		"code": "52508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF Sens Inc": {
		"method": "calcCode",
		"code": "80207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF Sens Dec": {
		"method": "calcCode",
		"code": "80208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left Tilt Inc": {
		"method": "calcCode",
		"code": "58107 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left Tilt Dec": {
		"method": "calcCode",
		"code": "58108 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left Gain Inc": {
		"method": "calcCode",
		"code": "58207 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left Gain Dec": {
		"method": "calcCode",
		"code": "58208 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right Tilt Inc": {
		"method": "calcCode",
		"code": "58607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right Tilt Dec": {
		"method": "calcCode",
		"code": "58608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right Gain Inc": {
		"method": "calcCode",
		"code": "58707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right Gain Dec": {
		"method": "calcCode",
		"code": "58708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Left Outer Inc": {
		"method": "calcCode",
		"code": "74407 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Left Outer Dec": {
		"method": "calcCode",
		"code": "74408 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Left Inner Inc": {
		"method": "calcCode",
		"code": "74507 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Left Inner Dec": {
		"method": "calcCode",
		"code": "74508 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Right Outer Inc": {
		"method": "calcCode",
		"code": "74707 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Right Outer Dec": {
		"method": "calcCode",
		"code": "74708 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Right Inner Inc": {
		"method": "calcCode",
		"code": "74807 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Code Selector Right Inner Dec": {
		"method": "calcCode",
		"code": "74808 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF Sens Inc": {
		"method": "calcCode",
		"code": "59607 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF Sens Dec": {
		"method": "calcCode",
		"code": "59608 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Aileron Trim Left Wing Down": {
		"method": "calcCode",
		"code": "72701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Aileron Trim Right Wing Down": {
		"method": "calcCode",
		"code": "72702 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Aileron Trim Release": {
		"method": "calcCode",
		"code": "72704 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Rudder Trim Nose Left": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (>L:myRudderTimer) (L:RudderTrimKnob, number) 11 - -50 max (>L:RudderTrimKnob, number)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Rudder Trim Nose Right": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME, second) (>L:myRudderTimer) (L:RudderTrimKnob, number) 11 + 50 min (>L:RudderTrimKnob, number)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Rudder Trim Timer Output": {
		"method": "calcCode",
		"code": "(L:myRudderTimer) 0 > (L:RudderTrimKnob, number) 0 != and if{ (E:SIMULATION TIME, second) (L:myRudderTimer) 0.5 + > if{ 0 (>L:RudderTrimKnob, number) 0 (>L:myRudderTimer) } }"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Aisle Stand Panel Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:PED_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:PED_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Aisle Stand Panel Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:PED_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:PED_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Aisle Stand Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:PED_FLOOD_LIGHT_CONTROL, number) 1 + 100 min (>L:PED_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Aisle Stand Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:PED_FLOOD_LIGHT_CONTROL, number) 1 - 0 max (>L:PED_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Upper Display Brightness Inc": {
		"method": "calcCode",
		"code": "(L:PED_UPPER_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_UPPER_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Upper Display Brightness Dec": {
		"method": "calcCode",
		"code": "(L:PED_UPPER_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_UPPER_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Lower Display Brightness Inc": {
		"method": "calcCode",
		"code": "(L:PED_LOWER_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_LOWER_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Lower Display Brightness Dec": {
		"method": "calcCode",
		"code": "(L:PED_LOWER_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_LOWER_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Lower Terr Display Brightness Inc": {
		"method": "calcCode",
		"code": "(L:PED_LOWER_TERR_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_LOWER_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.PMDG B777 Pedestal Lower Terr Display Brightness Dec": {
		"method": "calcCode",
		"code": "(L:PED_LOWER_TERR_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_LOWER_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP PNL Press": {
		"method": "calcCode",
		"code": "53201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP PNL Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5321_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF L Press": {
		"method": "calcCode",
		"code": "52901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5291_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF C Press": {
		"method": "calcCode",
		"code": "53001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF C Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5301_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF R Press": {
		"method": "calcCode",
		"code": "53101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP VHF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5311_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF L Press": {
		"method": "calcCode",
		"code": "53301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5331_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP AM Press": {
		"method": "calcCode",
		"code": "53401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP AM Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5341_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF R Press": {
		"method": "calcCode",
		"code": "53501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT RMP HF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5351_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP PNL Press": {
		"method": "calcCode",
		"code": "79501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP PNL Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7951_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF L Press": {
		"method": "calcCode",
		"code": "79801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7981_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF C Press": {
		"method": "calcCode",
		"code": "79701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF C Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7971_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF R Press": {
		"method": "calcCode",
		"code": "79601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP VHF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7961_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF L Press": {
		"method": "calcCode",
		"code": "79401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7941_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP AM Press": {
		"method": "calcCode",
		"code": "79301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP AM Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7931_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF R Press": {
		"method": "calcCode",
		"code": "79201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO RMP HF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7921_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP PNL Press": {
		"method": "calcCode",
		"code": "60301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP PNL Off Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6031_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF L Press": {
		"method": "calcCode",
		"code": "60001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6001_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF C Press": {
		"method": "calcCode",
		"code": "60101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF C Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6011_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF R Press": {
		"method": "calcCode",
		"code": "60201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP VHF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6021_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF L Press": {
		"method": "calcCode",
		"code": "60401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF L Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6041_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP AM Press": {
		"method": "calcCode",
		"code": "60501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP AM Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6051_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF R Press": {
		"method": "calcCode",
		"code": "60601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer RMP HF R Active Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6061_a)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Test Press": {
		"method": "calcCode",
		"code": "74201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Safety.PMDG B777 Evac Signal Test EVAC Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7421_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L MIC Selector Press": {
		"method": "calcCode",
		"code": "53601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5362_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5361_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C MIC Selector Press": {
		"method": "calcCode",
		"code": "53701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5372_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF C MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5371_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R MIC Selector Press": {
		"method": "calcCode",
		"code": "53801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5382_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP VHF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5381_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT MIC Selector Press": {
		"method": "calcCode",
		"code": "53901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5392_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP FLT MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5391_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB MIC Selector Press": {
		"method": "calcCode",
		"code": "54001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5402_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP CAB MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5401_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA MIC Selector Press": {
		"method": "calcCode",
		"code": "54101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5412_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP PA MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5411_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L MIC Selector Press": {
		"method": "calcCode",
		"code": "55501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5552_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5551_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R MIC Selector Press": {
		"method": "calcCode",
		"code": "55601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5562_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP HF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5561_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 MIC Selector Press": {
		"method": "calcCode",
		"code": "55701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5572_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 1 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5571_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 MIC Selector Press": {
		"method": "calcCode",
		"code": "55801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5582_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 CPT ACP SAT 2 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_5581_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L MIC Selector Press": {
		"method": "calcCode",
		"code": "79101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7912_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7911_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C MIC Selector Press": {
		"method": "calcCode",
		"code": "79001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7902_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF C MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7901_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R MIC Selector Press": {
		"method": "calcCode",
		"code": "78901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7892_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP VHF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7891_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT MIC Selector Press": {
		"method": "calcCode",
		"code": "78801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7882_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP FLT MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7881_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB MIC Selector Press": {
		"method": "calcCode",
		"code": "78701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7872_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP CAB MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7871_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA MIC Selector Press": {
		"method": "calcCode",
		"code": "78601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7862_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP PA MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7861_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L MIC Selector Press": {
		"method": "calcCode",
		"code": "77201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7722_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7721_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R MIC Selector Press": {
		"method": "calcCode",
		"code": "77101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7712_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP HF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7711_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 MIC Selector Press": {
		"method": "calcCode",
		"code": "77001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7702_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 1 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7701_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 MIC Selector Press": {
		"method": "calcCode",
		"code": "76901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7692_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 FO ACP SAT 2 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7691_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L MIC Selector Press": {
		"method": "calcCode",
		"code": "60701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6072_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6071_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C MIC Selector Press": {
		"method": "calcCode",
		"code": "60801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6082_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF C MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6081_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R MIC Selector Press": {
		"method": "calcCode",
		"code": "60901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6092_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP VHF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6091_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT MIC Selector Press": {
		"method": "calcCode",
		"code": "61001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6102_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP FLT MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6101_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB MIC Selector Press": {
		"method": "calcCode",
		"code": "61101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6112_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP CAB MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6111_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA MIC Selector Press": {
		"method": "calcCode",
		"code": "61201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6122_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP PA MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6121_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L MIC Selector Press": {
		"method": "calcCode",
		"code": "62601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6262_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF L MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6261_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R MIC Selector Press": {
		"method": "calcCode",
		"code": "62701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6272_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP HF R MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6271_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 MIC Selector Press": {
		"method": "calcCode",
		"code": "62801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6282_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 1 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6281_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 MIC Selector Press": {
		"method": "calcCode",
		"code": "62901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 MIC Selector Mic Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6292_a)"
	},
	"PMDG.B777 300ER.Radio.PMDG B777 Observer ACP SAT 2 MIC Selector Call Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_6291_a)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left TFR Press": {
		"method": "calcCode",
		"code": "57601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left WX Press": {
		"method": "calcCode",
		"code": "57701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left WX + T Press": {
		"method": "calcCode",
		"code": "57801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left MAP Press": {
		"method": "calcCode",
		"code": "57901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Left GC Press": {
		"method": "calcCode",
		"code": "58001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr AUTO Press": {
		"method": "calcCode",
		"code": "58301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr L/R Press": {
		"method": "calcCode",
		"code": "58401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr TEST Press": {
		"method": "calcCode",
		"code": "58501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right TFR Press": {
		"method": "calcCode",
		"code": "58801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right WX Press": {
		"method": "calcCode",
		"code": "58901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right WX + T Press": {
		"method": "calcCode",
		"code": "59001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right MAP Press": {
		"method": "calcCode",
		"code": "59101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Wx Rdr Right GC Press": {
		"method": "calcCode",
		"code": "59201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC Ident Press": {
		"method": "calcCode",
		"code": "74601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Test Press": {
		"method": "calcCode",
		"code": "749101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Flight Controls.PMDG B777 Manual Rudder Trim Cancel Press": {
		"method": "calcCode",
		"code": "72901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.PMDG B777 Eicas Event Rcd Press": {
		"method": "calcCode",
		"code": "47901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode STBY": {
		"method": "calcCode",
		"code": "0 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode OFF": {
		"method": "calcCode",
		"code": "10 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode XPNDR": {
		"method": "calcCode",
		"code": "20 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode TA ONLY": {
		"method": "calcCode",
		"code": "30 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode TARA": {
		"method": "calcCode",
		"code": "40 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode Inc": {
		"method": "calcCode",
		"code": "74907 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Navigation.PMDG B777 ATC TCAS Mode Dec": {
		"method": "calcCode",
		"code": "74908 (>K:ROTOR_BRAKE)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Speed Knob Inc": {
		"method": "calcCode",
		"code": "86066 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Speed Knob Dec": {
		"method": "calcCode",
		"code": "86067 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Speed Knob Pull": {
		"method": "calcCode",
		"code": "86068 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Speed Knob Pull Release": {
		"method": "calcCode",
		"code": "86069 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Speed Knob Push": {
		"method": "calcCode",
		"code": "86070 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS  Speed Knob Push Release": {
		"method": "calcCode",
		"code": "86071 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Bank Angle Knob Anti Clockwise Turn": {
		"method": "calcCode",
		"code": "86072 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Bank Angle Knob Clockwise Turn": {
		"method": "calcCode",
		"code": "86073 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Inc": {
		"method": "calcCode",
		"code": "86074 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Dec": {
		"method": "calcCode",
		"code": "86075 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Pull": {
		"method": "calcCode",
		"code": "86076 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Pull Release": {
		"method": "calcCode",
		"code": "86077 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Push": {
		"method": "calcCode",
		"code": "86078 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG Knob Push Release": {
		"method": "calcCode",
		"code": "86079 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS ALT Knob Inc": {
		"method": "calcCode",
		"code": "86080 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS  ALT Knob Dec": {
		"method": "calcCode",
		"code": "86081 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS ALT Knob Pull": {
		"method": "calcCode",
		"code": "86082 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS ALT Knob Pull Release": {
		"method": "calcCode",
		"code": "86083 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS ALT Knob Push": {
		"method": "calcCode",
		"code": "86084 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS ALT Knob Push Release": {
		"method": "calcCode",
		"code": "86085 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS VS Wheel Inc": {
		"method": "calcCode",
		"code": "86086 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS VS Wheel Dec": {
		"method": "calcCode",
		"code": "86087 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.FGS Panel Light Brightness Inc": {
		"method": "calcCode",
		"code": "86120 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.FGS Panel Light Brightness Dec": {
		"method": "calcCode",
		"code": "86121 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.FGS Flood Light Brightness Inc": {
		"method": "calcCode",
		"code": "86122 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.FGS Flood Light Brightness Dec": {
		"method": "calcCode",
		"code": "86123 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS FMS SPD Button Press": {
		"method": "calcCode",
		"code": "86088 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS FMS SPD Button Release": {
		"method": "calcCode",
		"code": "86089 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS NAV Button Press": {
		"method": "calcCode",
		"code": "86090 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS NAV Button Release": {
		"method": "calcCode",
		"code": "86091 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS APPR LAND Button Press": {
		"method": "calcCode",
		"code": "86092 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS APPR LAND Button Release": {
		"method": "calcCode",
		"code": "86093 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS AUTOFLIGHT Button Press": {
		"method": "calcCode",
		"code": "86094 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS AUTOFLIGHT Button Release": {
		"method": "calcCode",
		"code": "86095 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS PROF Button Press": {
		"method": "calcCode",
		"code": "86096 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS PROF Button Release": {
		"method": "calcCode",
		"code": "86097 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS IAS MACH Button Press": {
		"method": "calcCode",
		"code": "86098 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS IAS MACH Button Release": {
		"method": "calcCode",
		"code": "86099 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG TRK Button Press": {
		"method": "calcCode",
		"code": "86100 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS HDG TRK Button Release": {
		"method": "calcCode",
		"code": "86101 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Feet/Meter Button Press": {
		"method": "calcCode",
		"code": "86102 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS Feet/Meter Button Release": {
		"method": "calcCode",
		"code": "86103 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS VS FPA Button Press": {
		"method": "calcCode",
		"code": "86104 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS VS FPA Button Release": {
		"method": "calcCode",
		"code": "86105 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS AFS OVRD 1 Toggle": {
		"method": "calcCode",
		"code": "86106 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.FGS AFS OVRD 2 Toggle": {
		"method": "calcCode",
		"code": "86107 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Output.FGS SPD Value": {
		"method": "calcCode",
		"code": "(L:MD11_AFS_SPD)"
	},
	"TFDi.MD11.Autopilot.Output.FGS HDG Value": {
		"method": "calcCode",
		"code": "(L:MD11_AFS_HDG)"
	},
	"TFDi.MD11.Autopilot.Output.FGS ALT Value": {
		"method": "calcCode",
		"code": "(L:MD11_AFS_ALT)"
	},
	"TFDi.MD11.Autopilot.Output.FGS VS Value": {
		"method": "calcCode",
		"code": "(L:MD11_AFS_VS)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 TOGA SWITCH L": {
		"method": "calcCode",
		"code": "50001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 TOGA SWITCH R": {
		"method": "calcCode",
		"code": "50401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP ALT Knob Press": {
		"method": "calcCode",
		"code": "225101 (>K:ROTOR_BRAKE)"
	},
	"TFDi.MD11.Autopilot.Input.YOKE A/P Disconnect Push": {
		"method": "calcCode",
		"code": "94727 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.YOKE A/P Disconnect Release": {
		"method": "calcCode",
		"code": "94728 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.Throttle A/T Disconnect Push": {
		"method": "calcCode",
		"code": "77844 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.Throttle A/T Disconnect Release": {
		"method": "calcCode",
		"code": "77845 (>L:CEVENT)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP ALT HOLD Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2261_a)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP VS FPA Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2231_a)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP HDG HOLD Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2191_a)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP FO AP Button Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2291_a)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP VS Display": {
		"method": "calcCode",
		"code": "(L:ngx_VSwindow)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP NAV CDU L BUTTON TOGGLE": {
		"method": "calcCode",
		"code": "16801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT OUTBD DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_OUTBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_OUTBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT OUTBD DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LEFT_OUTBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_OUTBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT INBD DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_INBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_INBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT INBD DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LEFT_INBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_INBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT INBD TERR DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_INBD_TERR_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_INBD_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT INBD TERR DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LEFT_INBD_TERR_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_INBD_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT PNL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_PANEL_LIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT PNL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_PANEL_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT FLOOD Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:LEFT_FLOOD_LIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD LEFT FLOOD Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_FLOOD_LIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER LEFT SHOULDER Knob Inc": {
		"method": "calcCode",
		"code": "(L:LEFT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:LEFT_SHOULDER_HEATER)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER LEFT SHOULDER Knob Dec": {
		"method": "calcCode",
		"code": "(L:LEFT_SHOULDER_HEATER) 5 - 0 max 100 min (>L:LEFT_SHOULDER_HEATER)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER LEFT FOOT Knob Off": {
		"method": "calcCode",
		"code": "0 (L:switch_319_a) - 50 div s0\n:1\nl0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER LEFT FOOT Knob Low": {
		"method": "calcCode",
		"code": "50 (L:switch_319_a) - 50 div s0\n:1\nl0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER LEFT FOOT Knob High": {
		"method": "calcCode",
		"code": "100 (L:switch_319_a) - 50 div s0\n:1\nl0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP DSPL CTRL ALTN Button Toggle": {
		"method": "calcCode",
		"code": "16901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP AIR DATA ATT ALTN L Button Toggle": {
		"method": "calcCode",
		"code": "17001 (>K:ROTOR_BRAKE)\n"
	},
	"PMDG.B777 300ER.Gear.Output.PMDG B777 MIP BRAKE PRESSURE NEEDLE": {
		"method": "calcCode",
		"code": "(L:switch_316_a, number) 0.04 *"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP LEFT INBOARD DSPL PFD": {
		"method": "calcCode",
		"code": "0 (L:switch_315_a) - 10 div s0\n:1\nl0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP LEFT INBOARD DSPL NAV": {
		"method": "calcCode",
		"code": "10 (L:switch_315_a) - 10 div s0\n:1\nl0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP LEFT INBOARD DSPL MFD": {
		"method": "calcCode",
		"code": "20 (L:switch_315_a) - 10 div s0\n:1\nl0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP LEFT INBOARD DSPL EICAS": {
		"method": "calcCode",
		"code": "30 (L:switch_315_a) - 10 div s0\n:1\nl0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP HDG REF GUARD TOGGLE": {
		"method": "calcCode",
		"code": "31401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP HDG REF BUTTON TOGGLE": {
		"method": "calcCode",
		"code": "31301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP RIGHT INBOARD DSPL EICAS": {
		"method": "calcCode",
		"code": "0 (L:switch_290_a) - 10 div s0\n:1\nl0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP RIGHT INBOARD DSPL MFD": {
		"method": "calcCode",
		"code": "10 (L:switch_290_a) - 10 div s0\n:1\nl0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP RIGHT INBOARD DSPL NAV": {
		"method": "calcCode",
		"code": "20 (L:switch_290_a) - 10 div s0\n:1\nl0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP RIGHT INBOARD DSPL PFD": {
		"method": "calcCode",
		"code": "30 (L:switch_290_a) - 10 div s0\n:1\nl0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP FMC Sel Knob L": {
		"method": "calcCode",
		"code": "0 (L:switch_291_a) - 10 div s0\n:1\nl0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP FMC Sel Knob AUTO": {
		"method": "calcCode",
		"code": "50 (L:switch_291_a) - 10 div s0\n:1\nl0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP FMC Sel Knob R": {
		"method": "calcCode",
		"code": "100 (L:switch_291_a) - 10 div s0\n:1\nl0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU LEFT KEY CLR Release": {
		"method": "calcCode",
		"code": "39504  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU RIGHT KEY CLR Release": {
		"method": "calcCode",
		"code": "46804  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU CENTER KEY CLR Release": {
		"method": "calcCode",
		"code": "72004 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP GS Inhibit Switch": {
		"method": "calcCode",
		"code": "30301 (>K:ROTOR_BRAKE) "
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_INCREASE": {
		"method": "calcCode",
		"code": "(L:INI_AUTOBRAKE_LEVEL) ++ 0 max 3 min (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 MIP FLAP OVRD GUARD Toggle": {
		"method": "calcCode",
		"code": "30201 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 MIP FLAP OVRD Toggle": {
		"method": "calcCode",
		"code": "30101 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 MIP GEAR OVRD GUARD Toggle": {
		"method": "calcCode",
		"code": "30001 (>K:ROTOR_BRAKE) "
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_LOW": {
		"method": "calcCode",
		"code": "1 (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 MIP GEAR OVRD Toggle": {
		"method": "calcCode",
		"code": "29901 (>K:ROTOR_BRAKE) "
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_MED": {
		"method": "calcCode",
		"code": "2 (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_MAX": {
		"method": "calcCode",
		"code": "3 (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"IniBuilds.A320.BRAKES.Input.INI320_BRAKES_AUTOBRAKES_OFF": {
		"method": "calcCode",
		"code": "0 (>L:INI_AUTOBRAKE_LEVEL)"
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP TERR OVRD GUARD Toggle": {
		"method": "calcCode",
		"code": "29801 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP TERR OVRD Toggle": {
		"method": "calcCode",
		"code": "29701 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP ALTN GEAR GUARD Toggle": {
		"method": "calcCode",
		"code": "29401 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 MIP ALTN GEAR Press": {
		"method": "calcCode",
		"code": "29301 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Gear.Input.PMDG B777 MIP ALTN GEAR Release": {
		"method": "calcCode",
		"code": "29304 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP NAV CDU R BUTTON TOGGLE": {
		"method": "calcCode",
		"code": "27601 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP DSPL CTRL ALTN R BUTTON TOGGLE": {
		"method": "calcCode",
		"code": "27701 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Avionics.Input.PMDG B777 MIP AIR DATA ATT ALTN R Button Toggle": {
		"method": "calcCode",
		"code": "27801 (>K:ROTOR_BRAKE) "
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER RIGHT FOOT Knob Off": {
		"method": "calcCode",
		"code": "0 (L:switch_288_a) - 50 div s0\n:1\nl0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER RIGHT FOOT Knob Low": {
		"method": "calcCode",
		"code": "50 (L:switch_288_a) - 50 div s0\n:1\nl0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"IniBuilds.A320.BRAKES.Input.INI320_SPOILERS_ARMED_TOGGLE": {
		"method": "calcCode",
		"code": "(L:INI_SPOILERS_ARMED) ! (>L:INI_SPOILERS_ARMED)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER RIGHT FOOT Knob High": {
		"method": "calcCode",
		"code": "100 (L:switch_288_a) - 50 div s0\n:1\nl0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER RIGHT SHOULDER Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:RIGHT_SHOULDER_HEATER)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 HEATER RIGHT SHOULDER Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:RIGHT_SHOULDER_HEATER)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT PNL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_PANEL_LIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT PNL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_PANEL_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT FLOOD Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_FLOOD_LIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT FLOOD Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_FLOOD_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_FLOOD_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT INBD DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_INBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_INBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT INBD DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_INBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_INBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT INBD TERR DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_INBD_TERR_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_INBD_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT INBD TERR DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_INBD_TERR_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_INBD_TERR_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT OUTBD DSPL Brightness Knob Inc": {
		"method": "calcCode",
		"code": "(L:RIGHT_OUTBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_OUTBD_BRIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 FWD RIGHT OUTBD DSPL Brightness Knob Dec": {
		"method": "calcCode",
		"code": "(L:RIGHT_OUTBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_OUTBD_BRIGHT_CONTROL)"
	},
	"TFDi.MD11.Lights.Output.FGS Panel Flood Lights Output": {
		"method": "calcCode",
		"code": "(L:MD11_LTS_CGS_INTEG)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 MIP CLOCK ET HLD": {
		"method": "calcCode",
		"code": "50 (L:switch_173_a) - 50 div s0\n:1\nl0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 MIP CLOCK ET RUN": {
		"method": "calcCode",
		"code": "100 (L:switch_173_a) - 50 div s0\n:1\nl0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 MIP CLOCK ET RESET": {
		"method": "calcCode",
		"code": "0 (L:switch_173_a) - 50 div s0\n:1\nl0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\n"
	},
	"PMDG.B777 300ER.Controls.Input.PMDG B777 Spoiler Arm Toggle": {
		"method": "calcCode",
		"code": "(L:switch_498_a) 200 != if{ -13000 } els{ -16383 } (>K:AXIS_SPOILER_SET) "
	},
	"Microsoft.Generic.Controls.Input.AUTORUDDER TOGGLE": {
		"method": "calcCode",
		"code": "(>K:AUTORUDDER_TOGGLE)"
	},
	"Microsoft.Generic.Controls.Input.AXIS RUDDER SET": {
		"method": "calcCode",
		"code": "(>K:AXIS_RUDDER_SET)"
	},
	"Microsoft.Generic.Radio.Input.COM1 RECEIVE SELECT": {
		"method": "calcCode",
		"code": "(>K:COM1_RECEIVE_SELECT)"
	},
	"Microsoft.Generic.Radio.Input.COM2 RECEIVE SELECT": {
		"method": "calcCode",
		"code": "(>K:COM2_RECEIVE_SELECT) "
	},
	"Microsoft.Generic.Radio.Output.COM RECEIVE EX1": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE EX1:index, Bool)"
	},
	"Microsoft.Generic.Radio.Input.COM 2 SPACING MODE SWITCH": {
		"method": "calcCode",
		"code": "(>K:COM_2_SPACING_MODE_SWITCH)"
	},
	"Microsoft.Generic.Radio.Input.COM 3 SPACING MODE SWITCH": {
		"method": "calcCode",
		"code": "(>K:COM_3_SPACING_MODE_SWITCH)"
	},
	"Microsoft.Generic.Radio.Input.COM2 RECEIVE TOGGLE": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE EX1:2, Bool) ! (>K:COM2_RECEIVE_SELECT)"
	},
	"Microsoft.Generic.Radio.Input.COM1 RECEIVE TOGGLE": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE EX1:1, Bool) ! (>K:COM1_RECEIVE_SELECT)"
	},
	"Microsoft.Generic.Radio.Input.COM3 RECEIVE TOGGLE": {
		"method": "calcCode",
		"code": "(A:COM RECEIVE EX1:3, Bool) ! (>K:COM3_RECEIVE_SELECT)"
	},
	"PMDG.B777 300ER.Navigation.Input.PMDG B777 ATC TCAS Mode ALT RPTG OFF": {
		"method": "calcCode",
		"code": "10 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal TEST Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_734_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal RESET Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_733_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal SLEW Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_733_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal UNNAMED Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7311_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal PAPER Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_731_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 Rear Pedestal FAIL Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_730_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD L SIDE Switch Press": {
		"method": "calcCode",
		"code": "48201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD L INBD Switch Press": {
		"method": "calcCode",
		"code": "48301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD L LWR CTR Switch Press": {
		"method": "calcCode",
		"code": "48401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD L SIDE Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_485_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD L INBD Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_486_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD L LWR CTR Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_487_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD R LWR CTR Switch Press": {
		"method": "calcCode",
		"code": "48901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD R INBD Switch Press": {
		"method": "calcCode",
		"code": "49001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 CCD R SIDE Switch Press": {
		"method": "calcCode",
		"code": "49101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD R LWR CTR Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_492_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD R INBD Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_493_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 CCD R SIDE Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_494_a, number)"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Aft OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_148_a) - 50 div s0\n:1\nl0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Aft LOW": {
		"method": "calcCode",
		"code": "50 (L:switch_148_a) - 50 div s0\n:1\nl0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Aft HIGH": {
		"method": "calcCode",
		"code": "100 (L:switch_148_a) - 50 div s0\n:1\nl0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Bulk OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_149_a) - 50 div s0\n:1\nl0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Bulk LOW": {
		"method": "calcCode",
		"code": "50 (L:switch_149_a) - 50 div s0\n:1\nl0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition and Pressurization.Input.PMDG B777 OVHD Cargo Temp Select Bulk HIGH": {
		"method": "calcCode",
		"code": "100 (L:switch_149_a) - 50 div s0\n:1\nl0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\nl0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }"
	},
	"PMDG.B777 300ER.Air Condition / Pressurization.Input.PM OV": {
		"method": "calcCode",
		"code": "16001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD APU Power Test Guard Toggle": {
		"method": "calcCode",
		"code": "16001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD APU Power Test Toggle": {
		"method": "calcCode",
		"code": "15901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD APU Power Test Switch TEST": {
		"method": "calcCode",
		"code": "(L:switch_159_a) 0 == if{ 15901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD APU Power Test Switch NORM": {
		"method": "calcCode",
		"code": "(L:switch_159_a) 100 == if{ 15901 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD L ENG Power Test Guard Toggle": {
		"method": "calcCode",
		"code": "16201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD R ENG Power Test Guard Toggle": {
		"method": "calcCode",
		"code": "16401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD L ENG Power Test Switch Toggle": {
		"method": "calcCode",
		"code": "16101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD R ENG Power Test Switch Toggle": {
		"method": "calcCode",
		"code": "16301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD L ENG Power Test Switch TEST": {
		"method": "calcCode",
		"code": "(L:switch_161_a) 0 == if{ 16101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD L ENG Power Test Switch NORM": {
		"method": "calcCode",
		"code": "(L:switch_161_a) 100 == if{ 16101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD R ENG Power Test Switch TEST": {
		"method": "calcCode",
		"code": "(L:switch_163_a) 0 == if{ 16301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD R ENG Power Test Switch NORM": {
		"method": "calcCode",
		"code": "(L:switch_163_a) 100 == if{ 16301 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD Towing Power Switch BATT": {
		"method": "calcCode",
		"code": "100 (L:switch_150_a) != if{ 15001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD Towing Power Switch OFF": {
		"method": "calcCode",
		"code": "0 (L:switch_150_a) != if{ 15002 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD Towing Power Switch Guard Toggle": {
		"method": "calcCode",
		"code": "15101 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Electrical.Input.PMDG B777 OVHD GND Test Switch Guard Toggle": {
		"method": "calcCode",
		"code": "15302 (>K:ROTOR_BRAKE)"
	},
	"Microsoft.Generic.Avionics.Output.CONTROL_PAD_MODE": {
		"method": "calcCode",
		"code": "(L:WT1000_Controlpad_Mode,Enum)"
	},
	"Microsoft.SR22T.Avionics.Output.VNAV State": {
		"method": "calcCode",
		"code": "(L:WTAP_VNav_State,Enum)"
	},
	"Microsoft.SR22T.Avionics.Output.VNAV Path Mode": {
		"method": "calcCode",
		"code": "(L:WTAP_VNav_Path_Mode,Enum)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 PedestalMisc Cockpit Door Open Annunciator (V2)": {
		"method": "calcCode",
		"code": "(L:I_PED_COCKPIT_DOOR_U)"
	},
	"FenixSim.A320.Miscellaneous.Output.FNX320 PedestalMisc Cockpit Door Fault Annunciator (V2)": {
		"method": "calcCode",
		"code": "(L:I_PED_COCKPIT_DOOR_L)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU CENTER BRT Release": {
		"method": "calcCode",
		"code": "72504 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU LEFT BRT Release": {
		"method": "calcCode",
		"code": "40004  (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.MCDU.Input.PMDG B777 CDU RIGHT BRT Release": {
		"method": "calcCode",
		"code": "47304 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Warning.Input.PMDG B777 RIGHT WARNING CAUTION Button Press": {
		"method": "calcCode",
		"code": "27201 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 RIGHT MASTER WARNING ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:switch_2722_a)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 RIGHT MASTER CAUTION ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:switch_2721_a)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 LEFT ACPT Button Press": {
		"method": "calcCode",
		"code": "17801 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 LEFT CANC Button Press": {
		"method": "calcCode",
		"code": "17901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 LEFT RJCT Button Press": {
		"method": "calcCode",
		"code": "18001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 RIGHT ACPT Button Press": {
		"method": "calcCode",
		"code": "26901 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 RIGHT CANC Button Press": {
		"method": "calcCode",
		"code": "27001 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.CPDLC.Input.PMDG B777 RIGHT RJCT Button Press": {
		"method": "calcCode",
		"code": "27101 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS LEFT CLOCK Button Press": {
		"method": "calcCode",
		"code": "16501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS LEFT MIC Button Press": {
		"method": "calcCode",
		"code": "16701 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS LEFT MAP Knob Toggle": {
		"method": "calcCode",
		"code": "16601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS RIGHT MIC Button Press": {
		"method": "calcCode",
		"code": "27301 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS RIGHT MAP Knob Toggle": {
		"method": "calcCode",
		"code": "27401 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Miscellaneous.Input.PMDG B777 GS RIGHT CLOCK Button Press": {
		"method": "calcCode",
		"code": "27501 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 OVHD APU Fault Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_04_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD WING HYD VALVE POWER 0 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_62_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD WING HYD VALVE POWER 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_65_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD WING HYD VALVE POWER 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_68_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD TAIL HYD VALVE POWER 0 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_7111_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD TAIL HYD VALVE POWER 2 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_73_a, number)"
	},
	"PMDG.B777 300ER.Hydraulic.Output.PMDG B777 OVHD TAIL HYD VALVE POWER 1 Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_76_a, number)"
	},
	"PMDG.B777 300ER.Fire.Output.PMDG B777 OVHD APU FIRE WARN DISCH BOTTOM Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_8412_a, number)"
	},
	"PMDG.B777 300ER.Engines.Output.PMDG B777 OVHD AUTOSTART OFF Annun": {
		"method": "calcCode",
		"code": "(L:switch_96_c, number)"
	},
	"PMDG.B777 300ER.Electrical.Output.PMDG B777 OVHD ON BAT Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_154_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 OVHD CVR TEST Annun": {
		"method": "calcCode",
		"code": "(L:switch_1561_a, number)"
	},
	"PMDG.B777 300ER.Miscellaneous.Output.PMDG B777 OVHD CVR ERASE Annun": {
		"method": "calcCode",
		"code": "(L:switch_1571_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP HDG TRK Switch": {
		"method": "calcCode",
		"code": "(L:switch_2161_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP VS FPA Switch": {
		"method": "calcCode",
		"code": "(L:switch_2201_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP APP Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_2281_a, number)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 MIP GND Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_304_a, number)"
	},
	"PMDG.B777 300ER.Warning.Output.PMDG B777 MIP PROX GS INHIB Annunciator": {
		"method": "calcCode",
		"code": "(L:switch_3041_a, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP HDG HOLD Button Press": {
		"method": "calcCode",
		"code": "21901 (>K:ROTOR_BRAKE)"
	},
	"Asobo.Longitude.Engines.Output.Longitude AutoThrottle Status": {
		"method": "calcCode",
		"code": "(L:WT_Longitude_Autothrottle_Status)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 Glareshield PNL Light Brightness Dec": {
		"method": "calcCode",
		"code": "(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_PANEL_LIGHT_CONTROL)"
	},
	"PMDG.B777 300ER.Lights.Input.PMDG B777 Glareshield PNL Light Brightness Inc": {
		"method": "calcCode",
		"code": "(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_PANEL_LIGHT_CONTROL)"
	},
	"Hype Performance Group.H145.Warning.Input.H145_SDK_WU_ENG1_FIRE_SHUTOFF Warning Unit": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_WU_ENG1_FIRE_SHUTOFF Warning Unit)"
	},
	"Hype Performance Group.H145.Warning.Input.H145_SDK_WU_ENG2_FIRE_SHUTOFF Warning Unit": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_WU_ENG2_FIRE_SHUTOFF Warning Unit)"
	},
	"Hype Performance Group.H145.Warning.Input.H145_SDK_WU_ENG1_FIRE_EXTINGUISH Warning Unit": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_WU_ENG1_FIRE_EXTINGUISH Warning Unit)"
	},
	"Hype Performance Group.H145.Warning.Input.H145_SDK_WU_ENG2_FIRE_EXTINGUISH Warning Unit": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_WU_ENG2_FIRE_EXTINGUISH Warning Unit)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H:H145_SDK_MISC_FMS2_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_FMS2_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H:H145_SDK_MISC_FMS1_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_FMS1_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_FMS1_ON": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_FMS1_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_FMS2_ON": {
		"method": "calcCode",
		"code": "(<H:H145_SDK_MISC_FMS2_ON)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_FMS2_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_FMS2_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_FMS1_OFF": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_FMS1_OFF)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_MKR_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_MKR_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_MKR_HIGH": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_MKR_HIGH)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_MKR_LOW": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_MKR_LOW)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_DME1_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_DME1_TOGGLE)"
	},
	"Hype Performance Group.H145.Miscellaneous.Input.H145_SDK_MISC_DME2_TOGGLE": {
		"method": "calcCode",
		"code": "(>H:H145_SDK_MISC_DME2_TOGGLE)"
	},
	"WB Sim.Cessna 172 Classic.Avionics.Input.GNS530/GNS430": {
		"method": "calcCode",
		"code": "H:C172X_530_COMSWAP_PRESS\nH:C172X_530_COMSWAP_RELEASE\nH:C172X_530_NAVSWAP_PRESS\nH:C172X_530_NAVSWAP_RELEASE\nH:C172X_530_CDI_PRESS\nH:C172X_530_CDI_RELEASE\nH:C172X_530_OBS_PRESS\nH:C172X_530_OBS_RELEASE\nH:C172X_530_MSG_PRESS\nH:C172X_530_MSG_RELEASE\nH:C172X_530_FPL_PRESS\nH:C172X_530_FPL_RELEASE\nH:C172X_530_VNAV_PRESS\nH:C172X_530_VNAV_RELEASE\nH:C172X_530_PROC_PRESS\nH:C172X_530_PROC_RELEASE\nH:C172X_530_ENT_PRESS\nH:C172X_530_ENT_RELEASE\nH:C172X_530_CLR_PRESS\nH:C172X_530_CLR_RELEASE\nH:C172X_530_MENU_PRESS\nH:C172X_530_MENU_RELEASE\nH:C172X_530_DTO_PRESS\nH:C172X_530_DTO_RELEASE\nH:C172X_530_RNG_DEZOOM_PRESS\nH:C172X_530_RNG_RELEASE\nH:C172X_530_RNG_ZOOM_PRESS\nH:C172X_530_RNG_RELEASE\nH:C172X_530_CV_LARGE_INC\nH:C172X_530_CV_LARGE_DEC\nH:C172X_530_CV_SMALL_INC\nH:C172X_530_CV_SMALL_DEC\nH:C172X_530_CV_PRESS\nH:C172X_530_CV_RELEASE\nH:C172X_530_CRSR_LARGE_INC\nH:C172X_530_CRSR_LARGE_DEC\nH:C172X_530_CRSR_SMALL_INC\nH:C172X_530_CRSR_SMALL_DEC\nH:C172X_530_CRSR_PRESS\nH:C172X_530_CRSR_RELEASE\n\nH:C172X_430_COMSWAP_PRESS\nH:C172X_430_COMSWAP_RELEASE\nH:C172X_430_NAVSWAP_PRESS\nH:C172X_430_NAVSWAP_RELEASE\nH:C172X_430_CDI_PRESS\nH:C172X_430_CDI_RELEASE\nH:C172X_430_OBS_PRESS\nH:C172X_430_OBS_RELEASE\nH:C172X_430_MSG_PRESS\nH:C172X_430_MSG_RELEASE\nH:C172X_430_FPL_PRESS\nH:C172X_430_FPL_RELEASE\nH:C172X_430_PROC_PRESS\nH:C172X_430_PROC_RELEASE\nH:C172X_430_ENT_PRESS\nH:C172X_430_ENT_RELEASE\nH:C172X_430_CLR_PRESS\nH:C172X_430_CLR_RELEASE\nH:C172X_430_MENU_PRESS\nH:C172X_430_MENU_RELEASE\nH:C172X_430_DTO_PRESS\nH:C172X_430_DTO_RELEASE\nH:C172X_430_RNG_DEZOOM_PRESS\nH:C172X_430_RNG_RELEASE\nH:C172X_430_RNG_ZOOM_PRESS\nH:C172X_430_RNG_RELEASE\nH:C172X_430_CV_LARGE_INC\nH:C172X_430_CV_LARGE_DEC\nH:C172X_430_CV_SMALL_INC\nH:C172X_430_CV_SMALL_DEC\nH:C172X_430_CV_PRESS\nH:C172X_430_CV_RELEASE\nH:C172X_430_CRSR_LARGE_INC\nH:C172X_430_CRSR_LARGE_DEC\nH:C172X_430_CRSR_SMALL_INC\nH:C172X_430_CRSR_SMALL_DEC\nH:C172X_430_CRSR_PRESS\nH:C172X_430_CRSR_RELEASE"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF L SWITCH VOR L": {
		"method": "calcCode",
		"code": "0 (L:switch_251_a) - 50 div sp0\n:1\nl0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF L SWITCH ADF L": {
		"method": "calcCode",
		"code": "100 (L:switch_251_a) - 50 div sp0\n:1\nl0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF L SWITCH OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_251_a) - 50 div sp0\n:1\nl0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 }"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF R SWITCH VOR R": {
		"method": "calcCode",
		"code": "0 (L:switch_256_a) - 50 div sp0\n:1\nl0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF R SWITCH ADF R": {
		"method": "calcCode",
		"code": "100 (L:switch_256_a) - 50 div sp0\n:1\nl0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"PMDG.B777 300ER.EFIS.Input.PMDG B777 EFIS F0_ VOR ADF R SWITCH OFF": {
		"method": "calcCode",
		"code": "50 (L:switch_256_a) - 50 div sp0\n:1\nl0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }\nl0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 }\n"
	},
	"TFDi.MD11.Autopilot.Output.FGS AP State": {
		"method": "calcCode",
		"code": "(L:MD11_AFS_STATE)"
	},
	"TFDi.MD11.Autopilot.Output.FGS ATS State": {
		"method": "calcCode",
		"code": "(L:MD11_ATS_STATE)"
	},
	"TFDi.MD11.APU.Output.MD11 APU State": {
		"method": "calcCode",
		"code": "(L:MD11_APU_STATE)"
	},
	"TFDi.MD11.APU.Output.MD11 APU N1 value": {
		"method": "calcCode",
		"code": "(L:MD11_APU_N1)"
	},
	"TFDi.MD11.APU.Output.MD11 APU N2 value": {
		"method": "calcCode",
		"code": "(L:MD11_APU_N2)"
	},
	"Microsoft.SR22T.Lights.Input.SR22T_ICE_LIGHTS_OFF": {
		"method": "calcCode",
		"code": "(L:LIGHTING_WING_1,0)"
	},
	"Microsoft.SR22T.Lights.Input.SR22T_ICE_LIGHTS_ON": {
		"method": "calcCode",
		"code": "1 (>K:LIGHTING_WING_1)"
	},
	"Fly By Wire.A320-Dev.Lights.Output.A32NX OVHD Integ Light Brightness": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:86,percent)"
	},
	"IniBuilds.A300.Anti-Ice.Output.A300 Ovhd Wing Anti Ice Fault": {
		"method": "calcCode",
		"code": "(L:INI_ANTI_ICE_WING_MODE_FAULT, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.Output.A300 Ovhd Anti Ice Eng 1 Fault": {
		"method": "calcCode",
		"code": "(L:INI_ENG1_ANTI_ICE_FAULT, Bool) "
	},
	"IniBuilds.A300.Anti-Ice.Output.A300 Ovhd Anti Ice Eng 2 Fault": {
		"method": "calcCode",
		"code": "(L:INI_ENG2_ANTI_ICE_FAULT, Bool) "
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN INIT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_INIT) (>H:A320_Neo_CDU_1_BTN_INIT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN PERF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_PERF) (>H:A320_Neo_CDU_1_BTN_PERF)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN PROG": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_PROG) (>H:A320_Neo_CDU_1_BTN_PROG)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 0": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_0) (>H:A320_Neo_CDU_1_BTN_0)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_1) (>H:A320_Neo_CDU_1_BTN_1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_2) (>H:A320_Neo_CDU_1_BTN_2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_3) (>H:A320_Neo_CDU_1_BTN_3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_4) (>H:A320_Neo_CDU_1_BTN_4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_5) (>H:A320_Neo_CDU_1_BTN_5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_6) (>H:A320_Neo_CDU_1_BTN_6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 7": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_7) (>H:A320_Neo_CDU_1_BTN_7)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 8": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_8) (>H:A320_Neo_CDU_1_BTN_8)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN 9": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_9) (>H:A320_Neo_CDU_1_BTN_9)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN A": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_A) (>H:A320_Neo_CDU_1_BTN_A)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN AIRPORT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_AIRPORT) (>H:A320_Neo_CDU_1_BTN_AIRPORT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN ATC": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_ATC) (>H:A320_Neo_CDU_1_BTN_ATC)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN B": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_B) (>H:A320_Neo_CDU_1_BTN_B)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN C": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_C) (>H:A320_Neo_CDU_1_BTN_C)"
	},
	"Fly By Wire.A320-Dev.MCDU.Input.A32NX CDU 1 BTN CLR Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_CLR)\n(E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime)\n1 (>L:A32NX_MCDU_CLR_Pressed)\n(>H:A320_Neo_CDU_1_BTN_CLR)\n"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN CLR Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MCDU_CLR_Pressed)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN D": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_D) (>H:A320_Neo_CDU_1_BTN_D)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN DATA": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_DATA) (>H:A320_Neo_CDU_1_BTN_DATA)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN DIR": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_DIR) (>H:A320_Neo_CDU_1_BTN_DIR)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN DIV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_DIV) (>H:A320_Neo_CDU_1_BTN_DIV)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN DOT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_DOT) (>H:A320_Neo_CDU_1_BTN_DOT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN DOWN": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_DOWN) (>H:A320_Neo_CDU_1_BTN_DOWN)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN E": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_E) (>H:A320_Neo_CDU_1_BTN_E)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN F": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_F) (>H:A320_Neo_CDU_1_BTN_F)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN FPLN": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_FPLN) (>H:A320_Neo_CDU_1_BTN_FPLN)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN FUEL": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_FUEL) (>H:A320_Neo_CDU_1_BTN_FUEL)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN G": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_G) (>H:A320_Neo_CDU_1_BTN_G)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN H": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_H) (>H:A320_Neo_CDU_1_BTN_H)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN I": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_I) (>H:A320_Neo_CDU_1_BTN_I)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN J": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_J) (>H:A320_Neo_CDU_1_BTN_J)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN K": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_K) (>H:A320_Neo_CDU_1_BTN_K)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L) (>H:A320_Neo_CDU_1_BTN_L)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L1) (>H:A320_Neo_CDU_1_BTN_L1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L2) (>H:A320_Neo_CDU_1_BTN_L2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L3) (>H:A320_Neo_CDU_1_BTN_L3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L4) (>H:A320_Neo_CDU_1_BTN_L4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L5) (>H:A320_Neo_CDU_1_BTN_L5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN L6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_L6) (>H:A320_Neo_CDU_1_BTN_L6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN M": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_M) (>H:A320_Neo_CDU_1_BTN_M)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN MENU": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_MENU) (>H:A320_Neo_CDU_1_BTN_MENU)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN N": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_N) (>H:A320_Neo_CDU_1_BTN_N)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN NEXTPAGE": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_NEXTPAGE) (>H:A320_Neo_CDU_1_BTN_NEXTPAGE)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN O": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_O) (>H:A320_Neo_CDU_1_BTN_O)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN OVFY": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_OVFY) (>H:A320_Neo_CDU_1_BTN_OVFY)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN P": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_P) (>H:A320_Neo_CDU_1_BTN_P)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN PLUSMINUS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_PLUSMINUS) (>H:A320_Neo_CDU_1_BTN_PLUSMINUS)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN PREVPAGE": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_PREVPAGE) (>H:A320_Neo_CDU_1_BTN_PREVPAGE)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN Q": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_Q) (>H:A320_Neo_CDU_1_BTN_Q)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R) (>H:A320_Neo_CDU_1_BTN_R)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R1) (>H:A320_Neo_CDU_1_BTN_R1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R2) (>H:A320_Neo_CDU_1_BTN_R2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R3) (>H:A320_Neo_CDU_1_BTN_R3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R4) (>H:A320_Neo_CDU_1_BTN_R4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R5) (>H:A320_Neo_CDU_1_BTN_R5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN R6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_R6) (>H:A320_Neo_CDU_1_BTN_R6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN RAD": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_RAD) (>H:A320_Neo_CDU_1_BTN_RAD)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN S": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_S) (>H:A320_Neo_CDU_1_BTN_S)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN SEC": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_SEC) (>H:A320_Neo_CDU_1_BTN_SEC)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN SP": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_SP) (>H:A320_Neo_CDU_1_BTN_SP)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN T": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_T) (>H:A320_Neo_CDU_1_BTN_T)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN U": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_U) (>H:A320_Neo_CDU_1_BTN_U)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN UP": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_UP) (>H:A320_Neo_CDU_1_BTN_UP)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN V": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_V) (>H:A320_Neo_CDU_1_BTN_V)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN W": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_W) (>H:A320_Neo_CDU_1_BTN_W)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN X": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_X) (>H:A320_Neo_CDU_1_BTN_X)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN Y": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_Y) (>H:A320_Neo_CDU_1_BTN_Y)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 1 BTN Z": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_1_Z) (>H:A320_Neo_CDU_1_BTN_Z)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN INIT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_INIT) (>H:A320_Neo_CDU_2_BTN_INIT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN PERF": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_PERF) (>H:A320_Neo_CDU_2_BTN_PERF)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN PROG": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_PROG) (>H:A320_Neo_CDU_2_BTN_PROG)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 0": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_0) (>H:A320_Neo_CDU_2_BTN_0)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_1) (>H:A320_Neo_CDU_2_BTN_1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_2) (>H:A320_Neo_CDU_2_BTN_2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_3) (>H:A320_Neo_CDU_2_BTN_3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_4) (>H:A320_Neo_CDU_2_BTN_4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_5) (>H:A320_Neo_CDU_2_BTN_5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_6) (>H:A320_Neo_CDU_2_BTN_6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 7": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_7) (>H:A320_Neo_CDU_2_BTN_7)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 8": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_8) (>H:A320_Neo_CDU_2_BTN_8)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN 9": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_9) (>H:A320_Neo_CDU_2_BTN_9)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN A": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_A) (>H:A320_Neo_CDU_2_BTN_A)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN AIRPORT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_AIRPORT) (>H:A320_Neo_CDU_2_BTN_AIRPORT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN ATC": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_ATC) (>H:A320_Neo_CDU_2_BTN_ATC)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN B": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_B) (>H:A320_Neo_CDU_2_BTN_B)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN C": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_C) (>H:A320_Neo_CDU_2_BTN_C)"
	},
	"Fly By Wire.A320-Dev.MCDU.Input.A32NX CDU 2 BTN CLR Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_CLR)\n(E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime)\n1 (>L:A32NX_MCDU_CLR_Pressed)\n(>H:A320_Neo_CDU_2_BTN_CLR)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN CLR Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_MCDU_CLR_Pressed)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN D": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_D) (>H:A320_Neo_CDU_2_BTN_D)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN DATA": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_DATA) (>H:A320_Neo_CDU_2_BTN_DATA)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN DIR": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_DIR) (>H:A320_Neo_CDU_2_BTN_DIR)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN DIV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_DIV) (>H:A320_Neo_CDU_2_BTN_DIV)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN DOT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_DOT) (>H:A320_Neo_CDU_2_BTN_DOT)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN DOWN": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_DOWN) (>H:A320_Neo_CDU_2_BTN_DOWN)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN E": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_E) (>H:A320_Neo_CDU_2_BTN_E)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN F": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_F) (>H:A320_Neo_CDU_2_BTN_F)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN FPLN": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_FPLN) (>H:A320_Neo_CDU_2_BTN_FPLN)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN FUEL": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_FUEL) (>H:A320_Neo_CDU_2_BTN_FUEL)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN G": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_G) (>H:A320_Neo_CDU_2_BTN_G)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN H": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_H) (>H:A320_Neo_CDU_2_BTN_H)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN I": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_I) (>H:A320_Neo_CDU_2_BTN_I)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN J": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_J) (>H:A320_Neo_CDU_2_BTN_J)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN K": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_K) (>H:A320_Neo_CDU_2_BTN_K)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L) (>H:A320_Neo_CDU_2_BTN_L)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L1) (>H:A320_Neo_CDU_2_BTN_L1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L2) (>H:A320_Neo_CDU_2_BTN_L2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L3) (>H:A320_Neo_CDU_2_BTN_L3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L4) (>H:A320_Neo_CDU_2_BTN_L4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L5) (>H:A320_Neo_CDU_2_BTN_L5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN L6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_L6) (>H:A320_Neo_CDU_2_BTN_L6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN M": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_M) (>H:A320_Neo_CDU_2_BTN_M)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN MENU": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_MENU) (>H:A320_Neo_CDU_2_BTN_MENU)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN N": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_N) (>H:A320_Neo_CDU_2_BTN_N)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN NEXTPAGE": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_NEXTPAGE) (>H:A320_Neo_CDU_2_BTN_NEXTPAGE)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN O": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_O) (>H:A320_Neo_CDU_2_BTN_O)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN OVFY": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_OVFY) (>H:A320_Neo_CDU_2_BTN_OVFY)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN P": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_P) (>H:A320_Neo_CDU_2_BTN_P)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN PLUSMINUS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_PLUSMINUS) (>H:A320_Neo_CDU_2_BTN_PLUSMINUS)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN PREVPAGE": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_PREVPAGE) (>H:A320_Neo_CDU_2_BTN_PREVPAGE)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN Q": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_Q) (>H:A320_Neo_CDU_2_BTN_Q)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R) (>H:A320_Neo_CDU_2_BTN_R)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R1": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R1) (>H:A320_Neo_CDU_2_BTN_R1)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R2": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R2) (>H:A320_Neo_CDU_2_BTN_R2)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R3": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R3) (>H:A320_Neo_CDU_2_BTN_R3)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R4": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R4) (>H:A320_Neo_CDU_2_BTN_R4)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R5": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R5) (>H:A320_Neo_CDU_2_BTN_R5)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN R6": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_R6) (>H:A320_Neo_CDU_2_BTN_R6)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN RAD": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_RAD) (>H:A320_Neo_CDU_2_BTN_RAD)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN S": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_S) (>H:A320_Neo_CDU_2_BTN_S)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN SEC": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_SEC) (>H:A320_Neo_CDU_2_BTN_SEC)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN SP": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_SP) (>H:A320_Neo_CDU_2_BTN_SP)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN T": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_T) (>H:A320_Neo_CDU_2_BTN_T)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN U": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_U) (>H:A320_Neo_CDU_2_BTN_U)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN UP": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_UP) (>H:A320_Neo_CDU_2_BTN_UP)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN V": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_V) (>H:A320_Neo_CDU_2_BTN_V)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN W": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_W) (>H:A320_Neo_CDU_2_BTN_W)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN X": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_X) (>H:A320_Neo_CDU_2_BTN_X)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN Y": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_Y) (>H:A320_Neo_CDU_2_BTN_Y)"
	},
	"Fly By Wire.A320-Dev.MCDU.A32NX CDU 2 BTN Z": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_MCDU_PUSH_ANIM_2_Z) (>H:A320_Neo_CDU_2_BTN_Z)"
	},
	"Microsoft.Generic.Anti-Ice.Input.ANTI ICE SET ENG1": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_SET_ENG1)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_10": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 0 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_20": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 1 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_40": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 2 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_80": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 3 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_160": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 4 (>L:INI_map_range_capt_switch)"
	},
	"IniBuilds.A320.EFIS.Input.EFIS_RANGE_CAPT_320": {
		"method": "calcCode",
		"code": "(L:INI_map_range_capt_switch) 5 (>L:INI_map_range_capt_switch)"
	},
	"FenixSim.A320.Flight Controls.Input (Potentiometer).FNX320 Speed Brake  Lever - With: Armed - Off - Range": {
		"method": "calcCode",
		"code": "0 5000 @ rng if{ 0 (>L:A_FC_SPEEDBRAKE) } els{ 10000 20000 @ rng if{ 1 (>L:A_FC_SPEEDBRAKE) } els{ 21000 66000 @ rng if{ 0.0000559 @ * 0.1639 -  (>L:A_FC_SPEEDBRAKE) } } }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Left Bleed On": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:78, bool) if{ 1 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 0 (>L:var_environmentalBleedDisabled_L, bool) } 0 (>L:var_bleedState_L, number)"
	},
	"FenixSim.A320.Controls.Output.FNX320 RUDDER TRIM DASHED": {
		"method": "calcCode",
		"code": "(L:B_FC_RUDDER_TRIM_DASHED)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Left Bleed Environmental Off": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:78, bool) if{ 1 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_L, bool) } 1 (>L:var_bleedState_L, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Left Bleed Off": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:78, bool) if{ 0 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_L, bool) } 2 (>L:var_bleedState_L, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Right Bleed On": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:79, bool) if{ 1 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 0 (>L:var_environmentalBleedDisabled_R, bool) } 0 (>L:var_bleedState_R, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Right Bleed Environmental Off": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:79, bool) if{ 1 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_R, bool) } 1 (>L:var_bleedState_R, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Right Bleed Off": {
		"method": "calcCode",
		"code": "(A:CIRCUIT ON:79, bool) if{ 0 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_R, bool) } 2 (>L:var_bleedState_R, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Auto (on)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 3 + (>L:var_environmentalMode, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Off (on)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 2 + (>L:var_environmentalMode, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Man Heat (on)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 1 + (>L:var_environmentalMode, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Auto (off)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 3 - (>L:var_environmentalMode, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Off (off)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 2 - (>L:var_environmentalMode, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Temperature Mode Man Heat (off)": {
		"method": "calcCode",
		"code": "(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 1 - (>L:var_environmentalMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Left Fire (on)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 4 + (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Right Fire (on)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 3 + (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Off (on)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 2 + (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Right Extinguisher (on)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 1 + (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Left Fire (off)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 4 - (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Right Fire (off)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 3 - (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Off (off)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 2 - (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Fire.Input.BS KA Fire Detection Mode Switch Right Extinguisher (off)": {
		"method": "calcCode",
		"code": "(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 1 - (>L:var_fireTestMode, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Pressurization Climb Rate Increase": {
		"method": "calcCode",
		"code": "(L:var_pressurizationClimbRate, number) 2000 < if{ (L:var_pressurizationClimbRate, number) 50 + (>L:var_pressurizationClimbRate, number) }"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Cabin Pressurization Climb Rate Decrease": {
		"method": "calcCode",
		"code": "(L:var_pressurizationClimbRate, number) 150 > if{ (L:var_pressurizationClimbRate, number) 50 - (>L:var_pressurizationClimbRate, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Blower Vent Switch Lo": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:140, bool) 1 (>L:var_forwardVentBlowerState, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Blower Vent Switch Auto": {
		"method": "calcCode",
		"code": "1 (>A:CIRCUIT SWITCH ON:140, bool) 2 (>L:var_forwardVentBlowerState, number)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Electrical Heating Toggle": {
		"method": "calcCode",
		"code": "(L:var_ElectricHeatSwitch, bool) ! (>L:var_ElectricHeatSwitch, bool) (L:var_ElectricHeatSwitch, bool) (>A:CIRCUIT SWITCH ON:138, bool)"
	},
	"Black Square.Analog King Air.Air Condition / Pressurization.Input.BS KA Aft Blower Toggle": {
		"method": "calcCode",
		"code": "(L:var_AftBlowerSwitch, bool) ! (>L:var_AftBlowerSwitch, bool) (L:var_AftBlowerSwitch, bool) (>A:CIRCUIT SWITCH ON:139, bool)"
	},
	"Black Square.Analog King Air.Miscellaneous.Input.BS KA Prop Sync": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_PROPELLER_SYNC) (A:PROP SYNC ACTIVE, bool) (>A:CIRCUIT SWITCH ON:145, bool)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER AC STAT INV STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_AC_STAT_INV)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER AC ESS STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_AC_ESS)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER AC 1 STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_AC_1)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER AC 2 STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_AC_2)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER AC ESS SHED STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_AC_ESS_SHED)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC ESS STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_ESS)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC SERVICE STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_SERIVICE)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC BAT STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_BAT)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC ESS SHED STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_ESS_SHED)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC 1 STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_1)"
	},
	"FenixSim.A320.Electrical.Output.FNX320 ELEC BUS POWER DC 2 STATUS": {
		"method": "calcCode",
		"code": "(L:B_ELEC_BUS_POWER_DC_2)"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR NOSE UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:INI_GEAR1_UNLK_LIGHT,bool) (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR LEFT UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:INI_GEAR2_UNLK_LIGHT,bool) (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR RIGHT UNLK ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:INI_GEAR3_UNLK_LIGHT,bool) (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR NOSE EXTEND ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(A:GEAR POSITION:0, percent) 100 == (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR LEFT EXTEND ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(A:GEAR POSITION:1, percent) 100 == (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"IniBuilds.A320.Gear.Output.INI320 LDG GEAR RIGHT EXTEND ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(A:GEAR POSITION:2, percent) 100 == (L:INI_ANNLT_SWITCH) 0 == or"
	},
	"Just Flight.BAE146.Flight Instrumentation.Input.Left ASI knob bug Increase": {
		"method": "calcCode",
		"code": "(L:L_ASI_Bug_knob) ++ (>L:L_ASI_Bug_knob)"
	},
	"Just Flight.BAE146.Flight Instrumentation.Input.Left ASI knob bug Decrease": {
		"method": "calcCode",
		"code": "(L:L_ASI_Bug_knob) -- (>L:L_ASI_Bug_knob)"
	},
	"IniBuilds.A320.Warning.Output.INI320 MASTER WARNING CAPT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:INI_MASTER_WARNING_CAPT_TOP,Bool)"
	},
	"IniBuilds.A320.Warning.Output.INI320 MASTER CAUTION CAPT ANNUNCIATOR": {
		"method": "calcCode",
		"code": "(L:INI_MASTER_CAUTION_CAPT_TOP,Bool)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 == (A:CIRCUIT SWITCH ON:131, Boolean) and if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL LOG": {
		"method": "calcCode",
		"code": "5 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL NAV": {
		"method": "calcCode",
		"code": "4 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL ON": {
		"method": "calcCode",
		"code": "3 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL TST": {
		"method": "calcCode",
		"code": "2 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL STBY": {
		"method": "calcCode",
		"code": "1 (>L:var_radarMode, number)\n(L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }\n\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL RNG UP": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarRangeInc)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL RNG DOWN": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarRangeDec)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL TRACK LEFT": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarTrackLeft)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL TRACK RIGHT": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarTrackRight)\n"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL HOLD": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarHold)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL MAP": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarMap)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL VP": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarProfile)"
	},
	"Black Square.Analog King Air.Radar.Input.Bendix RDR1150XL Wx/WxA": {
		"method": "calcCode",
		"code": "(>H:bksq_wradar1_radarAlertToggle)"
	},
	"Black Square.Analog King Air.Radar.Input (Potentiometer).Bendix RDR1150XL RADAR GAIN": {
		"method": "calcCode",
		"code": "@ 655.36 / 0 max 100 min (>L:var_RadarGain, number)"
	},
	"Black Square.Analog King Air.Radar.Input (Potentiometer).Bendix RDR1150XL BRIGHTNESS": {
		"method": "calcCode",
		"code": "@ 655.36 / 0 max 100 min (>L:var_Radarbrightness, number)"
	},
	"Black Square.Analog King Air.Radar.Input (Potentiometer).Bendix RDR1150XL TILT/STAB": {
		"method": "calcCode",
		"code": "@ 655.36 / 0 max 100 min (>L:var_RadarTilt, number)"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 1 ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:5, Bool) 0 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 1 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:5, Bool) 1 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 2 ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:6, Bool) 0 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 2 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:6, Bool) 1 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 3 ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:7, Bool) 0 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 3 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:7, Bool) 1 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 4 ON": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"Asobo.747-8i.Fuel.Input.FUEL CONTROL ENG 4 OFF": {
		"method": "calcCode",
		"code": "(A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }"
	},
	"TFDi.MD11.Engine.Input.FUEL CONTROL ENG 1 ON": {
		"method": "calcCode",
		"code": "77834 (>L:CEVENT)"
	},
	"TFDi.MD11.Engine.Input.FUEL CONTROL ENG 2 ON": {
		"method": "calcCode",
		"code": "77835 (>L:CEVENT)"
	},
	"TFDi.MD11.Engine.Input.FUEL CONTROL ENG 3 ON": {
		"method": "calcCode",
		"code": "77836 (>L:CEVENT)"
	},
	"TFDi.MD11.Engine.Input.START SWITCH ENG 1 ": {
		"method": "calcCode",
		"code": "77837 (>L:CEVENT)"
	},
	"TFDi.MD11.Engine.Input.START SWITCH ENG 2": {
		"method": "calcCode",
		"code": "77838 (>L:CEVENT)"
	},
	"TFDi.MD11.Engine.Input.START SWITCH ENG 3": {
		"method": "calcCode",
		"code": "77839 (>L:CEVENT)"
	},
	"Blackbird/Milviz.Cessna 310R.Miscellaneous.Input.Tablet Toggle On/Off": {
		"method": "calcCode",
		"code": "1 (>L:C310_TOGGLE_TABLET_HIDDEN)"
	},
	"Black Square.Analog King Air.Pressurization.Input.RUDDER BOOST ON": {
		"method": "calcCode",
		"code": "100 (>A:CIRCUIT SWITCH ON:125, number)"
	},
	"Black Square.Analog King Air.Pressurization.Input.RUDDER BOOST OFF": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:125, number)"
	},
	"Microsoft.Generic.Camera.Input.CAMERA STATE": {
		"method": "calcCode",
		"code": "index (>A:CAMERA STATE, enum)"
	},
	"Microsoft.Generic.Camera.Input.CAMERA SUBSTATE": {
		"method": "calcCode",
		"code": "index (>A:CAMERA SUBSTATE, enum)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT AVAILABLE": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_GPU_AVAILABLE)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT UNAVAILABLE": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_GPU_AVAILABLE)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT DEPLOY": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_GPU_DEPLOY)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT UNDEPLOY": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_GPU_DEPLOY)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT CONNECTED": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_GPU_CONNECTED)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT DISCONNECTED": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_GPU_CONNECTED)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT CONNECTED TOGGLE": {
		"method": "calcCode",
		"code": "(L:FSR_M500_GPU_CONNECTED) ! (>L:FSR_M500_GPU_CONNECTED)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT DEPLOY TOGGLE": {
		"method": "calcCode",
		"code": " (L:FSR_M500_GPU_DEPLOY) ! (>L:FSR_M500_GPU_DEPLOY)"
	},
	"FSReborn.FSR500.Electrical.Input.FSR500 GPU UNIT AVAILABLE TOGGLE": {
		"method": "calcCode",
		"code": "(L:FSR_M500_GPU_AVAILABLE) ! (>L:FSR_M500_GPU_AVAILABLE)"
	},
	"Microsoft.Generic.Engines.Output.TURB_ENG_ITT_index_converted_in_Celsius": {
		"method": "calcCode",
		"code": "(A:TURB ENG ITT:1,Rankine) 491.67 - 1.8 /"
	},
	"FSReborn.FSR500.Lights.Input (Potentiometer).FSR500 DOME LIGHT PILOT SIDE": {
		"method": "calcCode",
		"code": "@ 15 - -9.95 / 100 + 0 max 100 min (>L:FSR_M500_LIGHTING_knob_pilot)"
	},
	"FSReborn.FSR500.Lights.Input (Potentiometer).FSR500 DOME LIGHT CO-PILOT SIDE": {
		"method": "calcCode",
		"code": "@ 15 - -9.95 / 100 + 0 max 100 min (>L:FSR_M500_LIGHTING_knob_copilot)"
	},
	"FSReborn.FSR500.Air Conditioning.Input.FSR500 BLEED LEVER PUSH": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_BLEED_LEVER)"
	},
	"FSReborn.FSR500.Air Conditioning.Input.FSR500 BLEED LEVER PULL": {
		"method": "calcCode",
		"code": "100 (>L:FSR_M500_BLEED_LEVER)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500  PITOT COVER  IN PLACE": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_PITOTCOVER_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 PITOT COVER REMOVED": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_PITOTCOVER_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 PROPELLER COVERS IN PLACE": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_PROPCOVERS_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 PROPELLER COVERS REMOVED": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_PROPCOVERS_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 CHOCKS IN PLACE": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_CHOKES_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 CHOCKS REMOVED": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_CHOKES_VIS)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 SECURITY CONES IN PLACE": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_CONES_AVAILABLE)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 SECURITY CONES REMOVED": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_CONES_AVAILABLE)"
	},
	"Black Square.Analog King Air.Warning.Input.MASTER WARNING": {
		"method": "calcCode",
		"code": "100 (>L:var_masterWarningLatching, number)"
	},
	"Black Square.Analog King Air.Warning.Input.MASTER CAUTION": {
		"method": "calcCode",
		"code": "100 (>L:var_masterCautionLatching, number)"
	},
	"Black Square.Analog King Air.Pressurization.Input.ELEC TRIM ON": {
		"method": "calcCode",
		"code": "100 (>A:CIRCUIT SWITCH ON:73, number)"
	},
	"Black Square.Analog King Air.Pressurization.Input.ELEC TRIM OFF": {
		"method": "calcCode",
		"code": "0 (>A:CIRCUIT SWITCH ON:73, number)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 SHOW EFB": {
		"method": "calcCode",
		"code": "1 (>L:FSR_M500_SHOW_EFB)"
	},
	"FSReborn.FSR500.Interaction.Input.FSR500 HIDE EFB": {
		"method": "calcCode",
		"code": "0 (>L:FSR_M500_SHOW_EFB)"
	},
	"Black Square.Analog King Air.Anti Ice.Input.FUEL VENT LEFT ON": {
		"method": "calcCode",
		"code": "100 (>L:var_FuelVentSwitchHeat_L, number)"
	},
	"Black Square.Analog King Air.Anti Ice.Input.FUEL VENT LEFT OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_FuelVentSwitchHeat_L, number)"
	},
	"Black Square.Analog King Air.Anti Ice.Input.FUEL VENT RIGHT ON": {
		"method": "calcCode",
		"code": "100 (>L:var_FuelVentSwitchHeat_R, number)"
	},
	"Black Square.Analog King Air.Anti Ice.Input.FUEL VENT RIGHT OFF": {
		"method": "calcCode",
		"code": "0 (>L:var_FuelVentSwitchHeat_R, number)"
	},
	"FSReborn.FSR500.Air Conditioning.Output.FSR500 CABINE TEMPERATURE": {
		"method": "calcCode",
		"code": "(L:FSR_M500_ClimateControl_CabinTemp)"
	},
	"Fly By Wire.A320.Controls.Input (Potentiometer).A32NX_SPOILERS_SET_THRUSTMASTER": {
		"method": "calcCode",
		"code": "0 5000 @ rng if{ (>K:SPOILERS_ARM_ON) } els{\n  8001 20000 @ rng if{ (>K:SPOILERS_ARM_OFF) } els{\n	25001 65535 @ rng if{ @ 25001 - 0 max 40534 / 16383 * (>K:SPOILERS_SET) }\n  }\n}\n"
	},
	"PMDG.B737-700.BRAKES.Input (Potentiometer).Boeing 737-700 SpeedBrake": {
		"method": "calcCode",
		"code": "@ 16.0147 * 0 max 16383 min (>K:SPDBRK_SET)"
	},
	"FenixSim.A320.Safety.Output.FNX320 OVHD SEAT BELT SIGN ON": {
		"method": "calcCode",
		"code": "(L:B_INT_CFSBLT)"
	},
	"PMDG.B737-700.Controls.Input (Potentiometer).PMDG B737 AXIS SPOILER LEVER SET": {
		"method": "calcCode",
		"code": "@ 20 - 32.668 * 16383 - -16383 max 16383 min  (>K:AXIS_SPOILER_SET)"
	},
	"Working Title.G1000 NXi.Navigation.Output.G1000 MFD PAN JOYSTICK LONG PRESS UP": {
		"method": "calcCode",
		"code": "(L:myBtnUP) (E:SIMULATION TIME,second) (L:myTlongUP) > and if{ (L:myTlongUP) 0.05 + (>L:myTlongUP) (>H:AS1000_MFD_JOYSTICK_UP) }"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS UP Input OnPress": {
		"method": "calcCode",
		"code": "1 (>L:myBtn,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshort) (>L:myTlong)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS UP Input OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTshort) < if{ (>H:AS1000_MFD_JOYSTICK_UP) }\n0 (>L:myBtn) 0 (>L:myTshort) 0 (>L:myTlong)"
	},
	"Working Title.G1000 NXi.Navigation.Output.G1000 MFD PAN JOYSTICK LONG PRESS DOWN": {
		"method": "calcCode",
		"code": "(L:myBtnDN) (E:SIMULATION TIME,second) (L:myTlongDN) > and if{ (L:myTlongDN) 0.05 + (>L:myTlongDN) (>H:AS1000_MFD_JOYSTICK_DOWN) }"
	},
	"Working Title.G1000 NXi.Navigation.Output.G1000 MFD PAN JOYSTICK LONG PRESS LEFT": {
		"method": "calcCode",
		"code": "(L:myBtnLF) (E:SIMULATION TIME,second) (L:myTlongLF) > and if{ (L:myTlongLF) 0.05 + (>L:myTlongLF) (>H:AS1000_MFD_JOYSTICK_LEFT) }"
	},
	"Working Title.G1000 NXi.Navigation.Output.G1000 MFD PAN JOYSTICK LONG PRESS RIGHT": {
		"method": "calcCode",
		"code": "(L:myBtnRH) (E:SIMULATION TIME,second) (L:myTlongRH) > and if{ (L:myTlongRH) 0.05 + (>L:myTlongRH) (>H:AS1000_MFD_JOYSTICK_RIGHT) }"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS DOWN Input OnPress": {
		"method": "calcCode",
		"code": "1 (>L:myBtnDN,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortDN) (>L:myTlongDN)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS LEFT Input OnPress": {
		"method": "calcCode",
		"code": "1 (>L:myBtnLF,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortLF) (>L:myTlongLF)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS RIGHT Input OnPress": {
		"method": "calcCode",
		"code": "1 (>L:myBtnRH,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortRH) (>L:myTlongRH)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS DOWN Input OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTshortDN) < if{ (>H:AS1000_MFD_JOYSTICK_DOWN) } 0 (>L:myBtnDN) 0 (>L:myTshortDN) 0 (>L:myTlongDN)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS LEFT Input OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTshortLF) < if{ (>H:AS1000_MFD_JOYSTICK_LEFT) } 0 (>L:myBtnLF) 0 (>L:myTshortLF) 0 (>L:myTlongLF)"
	},
	"Working Title.G1000 NXi.Navigation.Input.G1000 MFD PAN JOYSTICK LONG PRESS RIGHT Input OnRelease": {
		"method": "calcCode",
		"code": "(E:SIMULATION TIME,second) (L:myTshortRH) < if{ (>H:AS1000_MFD_JOYSTICK_RIGHT) } 0 (>L:myBtnRH) 0 (>L:myTshortRH) 0 (>L:myTlongRH)"
	},
	"Microsoft.Generic.Miscellaneous.Output.AIRSPEED TRUE RAW": {
		"method": "calcCode",
		"code": "(A:AIRSPEED TRUE RAW,Knot)"
	},
	"Microsoft.Generic.Electrical.Output.EXTERNAL POWER AVAILABLE": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE, Bool)"
	},
	"Microsoft.Generic.Electrical.Output.EXTERNAL POWER CONNECTION ON": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER CONNECTION ON,bool)"
	},
	"Microsoft.Generic.Electrical.Output.EXTERNAL POWER BREAKER PULLED": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER BREAKER PULLED,bool)"
	},
	"Microsoft.Generic.Electrical.Output.EXTERNAL POWER ON": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER ON,bool)"
	},
	"Microsoft.Generic.Electrical.Output.CIRCUIT BREAKER PULLED": {
		"method": "calcCode",
		"code": "(A:CIRCUIT BREAKER PULLED,bool)"
	},
	"Just Flight.Stearman PT17.Miscellaneous.Input.PT17 Smoke Toggle": {
		"method": "calcCode",
		"code": "(L:Smoke Visibility) ! (>L:Smoke Visibility)"
	},
	"TFDi.MD11.Radio.Input.PED_CPT_RADIO_PNL_XFER_BT_LEFT_BUTTON_DOWN": {
		"method": "calcCode",
		"code": "69644 (>L:CEVENT)"
	},
	"TFDi.MD11.Radio.Input.PED_CPT_RADIO_PNL_XFER_BT_LEFT_BUTTON_UP": {
		"method": "calcCode",
		"code": "69645 (>L:CEVENT)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Alt Knob  Inc  1000": {
		"method": "calcCode",
		"code": "3 1000 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)"
	},
	"Asobo.747-8i.Autopilot.Input.B747 AP Alt Knob  Dec  1000": {
		"method": "calcCode",
		"code": "3 1000 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)"
	},
	"Asobo.SR22T.Fuel.Input.Fuel Pump Boost": {
		"method": "calcCode",
		"code": "2 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.SR22T.Fuel.Input.Fuel Pump Off": {
		"method": "calcCode",
		"code": "0 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Asobo.SR22T.Fuel.Input.Fuel Pump Prime": {
		"method": "calcCode",
		"code": "1 (>K:ELECT_FUEL_PUMP1_SET)"
	},
	"Fly By Wire.A320-Dev.EFIS.Input.A32NX EFIS L PFD LS BUTTON PUSH": {
		"method": "calcCode",
		"code": "1 (>H:A320_Neo_PFD_BTN_LS_1, boolean)"
	},
	"Asobo.747-8i.Electrical.Input.B747 PACK  1 TOGGLE": {
		"method": "calcCode",
		"code": "(L:WT_748_PACK_ON:1) ! (>L:WT_748_PACK_ON:1)  "
	},
	"Asobo.747-8i.Electrical.Input.B747 PACK  2 TOGGLE": {
		"method": "calcCode",
		"code": "(L:WT_748_PACK_ON:2) ! (>L:WT_748_PACK_ON:2)\n"
	},
	"Asobo.747-8i.Electrical.Input.B747 PACK  3 TOGGLE": {
		"method": "calcCode",
		"code": "(L:WT_748_PACK_ON:3) ! (>L:WT_748_PACK_ON:3)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness L ND WX Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_CI_OUTER)"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX32 Display Brightness R ND WX Set": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_DISPLAY_BRIGHTNESS_FI_OUTER)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever  1 to IDLE": {
		"method": "calcCode",
		"code": "1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_1, Number)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever 1 to CUT OFF": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_1, Number)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever 2 to IDLE": {
		"method": "calcCode",
		"code": "1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_2, Number)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever 2 to CUT OFF": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_2, Number)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever 3 to IDLE": {
		"method": "calcCode",
		"code": "1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_3, Number)"
	},
	"FSS.B727-200 F.Fuel.Input.Fuel Lever 3 to CUT OFF": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_3, Number)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartSel_1": {
		"method": "calcCode",
		"code": "0 (>L:OVHD_ENG_StartSel)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartSel_2": {
		"method": "calcCode",
		"code": "1 (>L:OVHD_ENG_StartSel)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartSel_Off": {
		"method": "calcCode",
		"code": "2 (>L:OVHD_ENG_StartSel)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartSel_3": {
		"method": "calcCode",
		"code": "3 (>L:OVHD_ENG_StartSel)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartSel_4": {
		"method": "calcCode",
		"code": "4 (>L:OVHD_ENG_StartSel)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_1": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_2": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_3": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_4": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_5": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_6": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_7": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_8": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.All Aircraft.Camera.Input.VIEW_CAMERA_SELECT_9": {
		"method": "calcCode",
		"code": "2 (>A:CAMERA STATE,Enum) \n3 (>A:CAMERA SUBSTATE,Enum) \n2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) \n8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)"
	},
	"Microsoft.Generic.Avionics.Input.AS3X_Touch_1_Knob_Inner_R_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_R_PUSH)"
	},
	"Microsoft.Generic.Avionics.Input.AS3X_Touch_1_Knob_Inner_L_PUSH": {
		"method": "calcCode",
		"code": "(>H:AS3X_Touch_1_Knob_Inner_L_PUSH)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input (Potentiometer).Pilot sun visor adjustment (potentiometer)": {
		"method": "calcCode",
		"code": "@ 16.383 * (>L:C152X_PILOT_VISOR, number)"
	},
	"JPLogistics.Cessna 152X.Interaction.Input (Potentiometer).Copilot sun visor adjustment (potentiometer)": {
		"method": "calcCode",
		"code": "@ 16.383 * (>L:C152X_COPILOT_VISOR, number)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 1 PRIORITY LIGHT CAPT GREEN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_1_PRIORITY_LIGHT_CAPT_GREEN_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 1 PRIORITY LIGHT CAPT RED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_1_PRIORITY_LIGHT_CAPT_RED_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 1 PRIORITY LIGHT FO GREEN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_1_PRIORITY_LIGHT_FO_GREEN_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 1 PRIORITY LIGHT FO RED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_1_PRIORITY_LIGHT_FO_RED_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 2 PRIORITY LIGHT CAPT GREEN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_2_PRIORITY_LIGHT_CAPT_GREEN_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 2 PRIORITY LIGHT CAPT RED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_2_PRIORITY_LIGHT_CAPT_RED_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 2 PRIORITY LIGHT FO GREEN ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_2_PRIORITY_LIGHT_FO_GREEN_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FCDC 2 PRIORITY LIGHT FO RED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCDC_2_PRIORITY_LIGHT_FO_RED_ON, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX CAPT PRIORITY TAKEOVER STATUS": {
		"method": "calcCode",
		"code": "(L:A32NX_PRIORITY_TAKEOVER:1, bool)"
	},
	"Fly By Wire.A320-Dev.Controls.Output.A32NX FO PRIORITY TAKEOVER STATUS": {
		"method": "calcCode",
		"code": "(L:A32NX_PRIORITY_TAKEOVER:2, bool)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartMaster_ON": {
		"method": "calcCode",
		"code": "1 (>L:OVHD_ENG_StartMaster)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartMaster_OFF": {
		"method": "calcCode",
		"code": "0 (>L:OVHD_ENG_StartSel)"
	},
	"Just Flight.BAE146.Engine.Input.OVHD_ENG_StartMaster_TOGGLE": {
		"method": "calcCode",
		"code": "(L:OVHD_ENG_StartMaster, Number) ! (>L:OVHD_ENG_StartMaster)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 AP PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_AP_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 HDG PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_HDG_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 NAV PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_NAV_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 APR PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_APR_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 REV PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_REV_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 ALT PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_ALT_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 UP PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_UP_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 DN PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_DN_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 BARO PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_BARO_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 ARM PRESS": {
		"method": "calcCode",
		"code": "(>H:KAP140_ARM_PRESS)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 AP RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_AP_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 HDG RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_HDG_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 NAV RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_NAV_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 APR RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_APR_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 REV RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_REV_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 ALT RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_ALT_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 UP RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_UP_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 DN RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_DN_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 BARO RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_BARO_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 ARM RELEASE": {
		"method": "calcCode",
		"code": "(>H:KAP140_ARM_RELEASE)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 KNOB INNER INC": {
		"method": "calcCode",
		"code": "(>H:KAP140_KNOB_INNER_INC)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 KNOB INNER DEC": {
		"method": "calcCode",
		"code": "(>H:KAP140_KNOB_INNER_DEC)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 KNOB OUTER INC": {
		"method": "calcCode",
		"code": "(>H:KAP140_KNOB_OUTER_INC)"
	},
	"WB Sim.Cessna 172 Classic.Autopilot.KAP140 KNOB OUTER DEC": {
		"method": "calcCode",
		"code": "(>H:KAP140_KNOB_OUTER_DEC)"
	},
	"Carenado.C182RG II.Electrical.Input.Avionics Master  (AVN PWR) On": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }"
	},
	"Carenado.C182RG II.Electrical.Input.Avionics Master  (AVN PWR) Off": {
		"method": "calcCode",
		"code": "(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }"
	},
	"PMDG.B777 300ER.Autopilot.Output.PMDG B777 MCP IAS MACH MODE": {
		"method": "calcCode",
		"code": "(L:ngx_SPDmode)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Input (Potentiometer).RADIO ALTIMETER DECISION HEIGHT cw": {
		"method": "calcCode",
		"code": "(>K:INCREASE_DECISION_HEIGHT)"
	},
	"Black Square.AnalogBonanza.Flight Instruments.Input (Potentiometer).RADIO ALTIMETER DECISION HEIGHT (ccw)": {
		"method": "calcCode",
		"code": "(>K:DECREASE_DECISION_HEIGHT)"
	},
	"A2A SIM.Comanche 250.Avionics.Input.PA24 250 KLN90B Left Cursor Button Press": {
		"method": "calcCode",
		"code": "(>H:KLN90B_LeftCursor_Toggle)\n100 (>L:BUTTON_KLN90B_CRSR_L, number)"
	},
	"A2A SIM.Comanche 250.Avionics.Input.PA24 250 KLN90B Left Cursor Button Release": {
		"method": "calcCode",
		"code": "0 (>L:BUTTON_KLN90B_CRSR_L, number)"
	},
	"FlyInside.Bell 47 G.Engine.Output.AIRCRAFT_ROTOR_RPM_PERCENT": {
		"method": "calcCode",
		"code": "(L:Aircraft.Rotor.RPM.Percent)"
	},
	"IniBuilds.A320.EFIS.Output.INI CPT CSTR": {
		"method": "calcCode",
		"code": "(L:INI_SHOW_CONSTRAINTS, Bool) "
	},
	"IniBuilds.A320.EFIS.Output.INI CPT WPT": {
		"method": "calcCode",
		"code": "(L:INI_SHOW_FIXES, Bool)"
	},
	"IniBuilds.A320.EFIS.Output.INI CPT VOR.D": {
		"method": "calcCode",
		"code": "(L:INI_SHOW_VORS, Bool)"
	},
	"IniBuilds.A320.EFIS.Output.INI CPT NDB": {
		"method": "calcCode",
		"code": "(L:INI_SHOW_NDBS, Bool)"
	},
	"IniBuilds.A320.EFIS.Output.INI CPT ARPT": {
		"method": "calcCode",
		"code": "(L:INI_SHOW_AIRPORTS, Bool)"
	},
	"TFDi.MD11.Autopilot.Input.Go Around Button Press": {
		"method": "calcCode",
		"code": "THR_GA_BT_LEFT_BUTTON_DOWN#77851 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Input.Go Around Button Release": {
		"method": "calcCode",
		"code": "THR_GA_BT_LEFT_BUTTON_UP#77852 (>L:CEVENT)"
	},
	"TFDi.MD11.BRAKES.Input.Auto Brake Switch Rotate Left": {
		"method": "calcCode",
		"code": "CTR_AUTOBRAKE_SW_LEFT_BUTTON_DOWN#82211 (>L:CEVENT)"
	},
	"TFDi.MD11.BRAKES.Input.Auto Brake Switch Rotate Right ": {
		"method": "calcCode",
		"code": "CTR_AUTOBRAKE_SW_RIGHT_BUTTON_DOWN#82212 (>L:CEVENT)"
	},
	"TFDi.MD11.BRAKES.Input.Parking Brake Lever ": {
		"method": "calcCode",
		"code": "THR_PARK_LVR_LEFT_BUTTON_DOWN#77848 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Landing Lights Left Switch Down ": {
		"method": "calcCode",
		"code": "OVHD_LTS_LDG_L_SW_LEFT_BUTTON_DOWN#90257 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Landing Light Switch Left Up": {
		"method": "calcCode",
		"code": "OVHD_LTS_LDG_L_SW_RIGHT_BUTTON_DOWN#90258 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Landing Light Switch Right Down  ": {
		"method": "calcCode",
		"code": "OVHD_LTS_LDG_R_SW_Right_BUTTON_DOWN#90259 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Landing Light Switch Right Down ": {
		"method": "calcCode",
		"code": "OVHD_LTS_LDG_R_SW_RIGHT_BUTTON_DOWN#90260 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Nose Gear Light Switch Up": {
		"method": "calcCode",
		"code": "OVHD_LTS_NOSE_SW_LEFT_BUTTON_DOWN#90261 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Nose Gear Light Switch Down": {
		"method": "calcCode",
		"code": "OVHD_LTS_NOSE_SW_RIGHT_BUTTON_DOWN#90262 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Left Runway Turnoff Light Button Press ": {
		"method": "calcCode",
		"code": "OVHD_LTS_RWY_TURNOFF_L_BT_LEFT_BUTTON_DOWN#90263 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Left Runway Turnoff Light Button Release": {
		"method": "calcCode",
		"code": "OVHD_LTS_RWY_TURNOFF_L_BT_LEFT_BUTTON_UP#90264 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Right Runway Turnoff Light Button Press": {
		"method": "calcCode",
		"code": "OVHD_LTS_RWY_TURNOFF_R_BT_LEFT_BUTTON_DOWN#90265 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Right Runway Turnoff Light Button Release ": {
		"method": "calcCode",
		"code": "OVHD_LTS_RWY_TURNOFF_R_BT_LEFT_BUTTON_UP#90266 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Strobe Light Button Press": {
		"method": "calcCode",
		"code": "OVHD_LTS_HI_INT_BT_LEFT_BUTTON_DOWN#90273 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights.Input.Strobe Light Button Release ": {
		"method": "calcCode",
		"code": "OVHD_LTS_HI_INT_BT_LEFT_BUTTON_UP#90274 (>L:CEVENT)"
	},
	"TFDi.MD11.Radio.Input.XPNDR ALT Report Toggle": {
		"method": "calcCode",
		"code": "PED_XPNDR_ALT_RPTG_KB_LEFT_BUTTON_DOWN#69854 (>L:CEVENT)"
	},
	"TFDi.MD11.Radio.Input.XPNDR Mode Switch Left": {
		"method": "calcCode",
		"code": "PED_XPNDR_MODE_KB_LEFT_BUTTON_DOWN#69876 (>L:CEVENT)"
	},
	"TFDi.MD11.Radio.Input.XPNDR Mode Switch Right ": {
		"method": "calcCode",
		"code": "PED_XPNDR_MODE_KB_RIGHT_BUTTON_DOWN#69877 (>L:CEVENT)"
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 OVHD APU BLEED SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:S_OH_PNEUMATIC_APU_BLEED) "
	},
	"FenixSim.A320.Air Conditioning and Pressurization.Input.FNX320 OVHD APU BLEED SWITCH OFF": {
		"method": "calcCode",
		"code": "0 (>L:S_OH_PNEUMATIC_APU_BLEED)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP FLC Toggle": {
		"method": "calcCode",
		"code": "(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)\n"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP FLC LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, bOOL)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP HDG LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP APR LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool)"
	},
	"FenixSim.A320.Fuel.Input.FNX320 OVHD FUEL MODE SEL BUTTON": {
		"method": "calcCode",
		"code": "(L:S_OH_FUEL_MODE_SEL) ! (>L:S_OH_FUEL_MODE_SEL)"
	},
	"Black Square.Analog King Air.Navigation.Input.GPS APR (ACTV)": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_GPS_Approach, number)"
	},
	"Black Square.Analog King Air.Navigation.Input.GPS APR (ARM)": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_GPS_Approach, number)"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP CLB CON Button Press": {
		"method": "calcCode",
		"code": "20601 (>K:ROTOR_BRAKE)"
	},
	"PMDG.B777 300ER.Autopilot.Input. PMDG B777 MCP FD1 Switch Down": {
		"method": "calcCode",
		"code": "(L:switch_202_a) 0 == if{ 20201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FD1 Switch Up": {
		"method": "calcCode",
		"code": "(L:switch_202_a) 100 == if{ 20201 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FD2 Switch Down": {
		"method": "calcCode",
		"code": "(L:switch_230_a) 0 == if{ 23001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP FD2 Switch Up": {
		"method": "calcCode",
		"code": "(L:switch_230_a) 100 == if{ 23001 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm L Switch Down": {
		"method": "calcCode",
		"code": "(L:switch_204_a) 0 == if{ 20401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm L Switch Up": {
		"method": "calcCode",
		"code": "(L:switch_204_a) 100 == if{ 20401 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm R Switch Down": {
		"method": "calcCode",
		"code": "(L:switch_205_a) 0 == if{ 20501 (>K:ROTOR_BRAKE) }"
	},
	"PMDG.B777 300ER.Autopilot.Input.PMDG B777 MCP AT Arm R Switch Up": {
		"method": "calcCode",
		"code": "(L:switch_205_a) 100 == if{ 20501 (>K:ROTOR_BRAKE) }"
	},
	"FenixSim.A320.Lights.Input (Potentiometer).FNX320 FCU DISPLAY BRIGHTNESS KNOB SET": {
		"method": "calcCode",
		"code": "@ 1023 / 0 max 1 min (>L:A_FCU_LIGHTING_TEXT)"
	},
	"PMDG.B737-700.BRAKES.Output.ANTI-SKID INOP": {
		"method": "calcCode",
		"code": "(L:switch_4611_73X) 0 >"
	},
	"SimWorks Studios.PC-12.Electrical.Input.Battery 1 On": {
		"method": "calcCode",
		"code": "1 (>L:ELECTRICAL_Switch_BATTERY_Bus_1, Bool)"
	},
	"SimWorks Studios.PC-12.Electrical.Input.Battery 1 Off": {
		"method": "calcCode",
		"code": "0 (>L:ELECTRICAL_Switch_BATTERY_Bus_1, Bool)"
	},
	"Fly By Wire.A320-Dev.Gear.Input (Potentiometer).A32NX Tiller Axis Set": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_STEERING_SET)"
	},
	"Fly By Wire.A320-Dev.Gear.Input.A32NX REALISTIC TILLER ENABLED ": {
		"method": "calcCode",
		"code": "(L:A32NX_REALISTIC_TILLER_ENABLED) ! (>L:A32NX_REALISTIC_TILLER_ENABLED)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS MIXTURE SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_MIXTURE_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS MIXTURE1 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_MIXTURE1_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS MIXTURE2 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_MIXTURE2_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS MIXTURE3 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_MIXTURE3_SET)"
	},
	"Microsoft.Generic.Engines.Input (Potentiometer).AXIS MIXTURE4 SET": {
		"method": "calcCode",
		"code": "@ 32.0293 * 16383 - -16383 max 16383 min (>K:AXIS_MIXTURE4_SET)"
	},
	"Fly By Wire.A320.Navigation.Input.A320_Neo_CDU_1_BTN_SLASH": {
		"method": "calcCode",
		"code": ">H:A320_Neo_CDU_1_BTN_DIV"
	},
	"Black Square.Analog King Air.O2 System.Input.PASSENGER OXYGEN READY": {
		"method": "calcCode",
		"code": "1 (>L:var_PassOxygenReady, Number)"
	},
	"Black Square.Analog King Air.O2 System.Input.PASSENGER OXYGEN READY (DOWN)": {
		"method": "calcCode",
		"code": "0 (>L:var_PassOxygenReady, Number)"
	},
	"Black Square.Analog King Air.O2 System.Input.PASSENGER OXYGEN MANUAL (ARRIBA)": {
		"method": "calcCode",
		"code": "1 (>L:var_PassOxygenManual, Number)"
	},
	"Black Square.Analog King Air.O2 System.Input.PASSENGER OXYGEN MANUAL (ABAJO)": {
		"method": "calcCode",
		"code": "0 (>L:var_PassOxygenManual, Number)"
	},
	"PMDG.B777 300ER.Air Conditioning and Pressurization.Input.PMDG B777 Cabin Temp Inc": {
		"method": "calcCode",
		"code": "80 95 (L:CABINTempKnob,number) rng\nif{ 1 (>L:CABINTempKnob, number) }\nels{ (L:CABINTempKnob, number) 1 + 60 min (>L:CABINTempKnob, number)"
	},
	"FSS.B727-200 F.Electrical.Input.B727_BATT_ON": {
		"method": "calcCode",
		"code": "1 (>L:FSS_B727_FE_ELEC_DC_BATT_SWITCH, Number)\n"
	},
	"FSS.B727-200 F.Electrical.Input.B727_BATT_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_FE_ELEC_DC_BATT_SWITCH, Number)\n"
	},
	"Microsoft.Generic.Engine.Output.HELI COLLECTIVE POSITION": {
		"method": "calcCode",
		"code": "(A:COLLECTIVE POSITION, percent)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR BRAKE ACTIVE": {
		"method": "calcCode",
		"code": "(A:ROTOR BRAKE ACTIVE,Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR BRAKE HANDLE POS": {
		"method": "calcCode",
		"code": "(A:ROTOR BRAKE HANDLE POS,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR CLUTCH ACTIVE": {
		"method": "calcCode",
		"code": "(A:ROTOR CLUTCH ACTIVE,Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR CLUTCH SWITCH POS": {
		"method": "calcCode",
		"code": "(A:ROTOR CLUTCH SWITCH POS, Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR COLLECTIVE BLADE PITCH PCT": {
		"method": "calcCode",
		"code": "(A:ROTOR COLLECTIVE BLADE PITCH PCT,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR CYCLIC BLADE MAX PITCH POSITION": {
		"method": "calcCode",
		"code": "(A:ROTOR CYCLIC BLADE MAX PITCH POSITION,Degrees)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR CYCLIC BLADE PITCH PCT": {
		"method": "calcCode",
		"code": "(A:ROTOR CYCLIC BLADE PITCH PCT,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR GOV ACTIVE": {
		"method": "calcCode",
		"code": "(A:ROTOR GOV ACTIVE:index,Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR GOV SWITCH POS": {
		"method": "calcCode",
		"code": "(A:ROTOR GOV SWITCH POS:index,Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR LATERAL TRIM PCT": {
		"method": "calcCode",
		"code": "(A:ROTOR LATERAL TRIM PCT,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR LONGITUDINAL TRIM PCT": {
		"method": "calcCode",
		"code": "(A:ROTOR LONGITUDINAL TRIM PCT, Percent over 100)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP FD LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1,  Bool)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR ROTATION ANGLE": {
		"method": "calcCode",
		"code": "(A:ROTOR ROTATION ANGLE:index,Degrees)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR RPM": {
		"method": "calcCode",
		"code": "(A:ROTOR RPM:index,RPM)"
	},
	"Microsoft.Generic.Controls.Output.HELI ROTOR RPM PCT": {
		"method": "calcCode",
		"code": "(A:ROTOR RPM PCT:index,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI TAIL ROTOR BLADE PITCH PCT": {
		"method": "calcCode",
		"code": "(A:TAIL ROTOR BLADE PITCH PCT,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI TAIL ROTOR PEDAL POSITION": {
		"method": "calcCode",
		"code": "(A:TAIL ROTOR PEDAL POSITION,Percent over 100)"
	},
	"Microsoft.Generic.Controls.Output.HELI ENG ROTOR RPM": {
		"method": "calcCode",
		"code": "(A:ENG ROTOR RPM:index,Percent scalar 16K)"
	},
	"Microsoft.Generic.Engines.Output.HELI ENG TORQUE PERCENT": {
		"method": "calcCode",
		"code": "(A:ENG TORQUE PERCENT:index,Percent scalar 16k)"
	},
	"Microsoft.Generic.Engine.Output.HELICOPTER MASTER THROTTLE POSITION": {
		"method": "calcCode",
		"code": "(A:HELICOPTER_MASTER_THROTTLE_POSITION,Percent over 100)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP NAV LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT NAV1 LOCK, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT MASTER, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP LVL LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT WING LEVELER, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VNAV TOGGLE": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP VNAV LED": {
		"method": "calcCode",
		"code": "(L:XMLVAR_VNAVButtonValue)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VS Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_PANEL_VS_HOLD)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP VS LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP ALT Toggle": {
		"method": "calcCode",
		"code": "(>K:AP_ALT_HOLD)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Output.SF50 AP ALT LED": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK, Bool)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP ALT SEL INC": {
		"method": "calcCode",
		"code": "(>K:2:AP_ALT_VAR_INC)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP ALT SEL DEC": {
		"method": "calcCode",
		"code": "(>K:2:AP_ALT_VAR_DEC)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP ALT SEL PUSH SYNC": {
		"method": "calcCode",
		"code": "(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VERTICAL SPEED  WHEEL UP": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ \n(L:XMLVAR_AirSpeedIsInMach) if{ \n(A:AUTOPILOT MACH HOLD VAR, number) 1 - 0 max (>K:AP_MACH_VAR_SET) \n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET) \n} } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ \n1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH) \n} els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ \n(A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 - 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) \n} } } "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VERTICAL SPEED WHEEL DOWN": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ \n(L:XMLVAR_AirSpeedIsInMach) if{ \n(A:AUTOPILOT MACH HOLD VAR, number) 1 + 0 max (>K:AP_MACH_VAR_SET) \n} els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET) \n} } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ \n1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) \n} els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ \n(A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) \n} } } "
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VS DEC": {
		"method": "calcCode",
		"code": "1 (>B:AUTOPILOT_VerticalSpeed_Dec)"
	},
	"FlightFX.Visionjet SF50.Autopilot.Input.SF50 AP VS INC": {
		"method": "calcCode",
		"code": "1 (>B:AUTOPILOT_VerticalSpeed_Inc)"
	},
	"Asobo.CT-415 Canadair.Miscellaneous.Input.Waterdrop CT_415": {
		"method": "calcCode",
		"code": "(>IE:INSTRUMENT_HANDLING_Yoke_Switch_WATERDROP_L)"
	},
	"Fly By Wire.A320-Dev.Air Condition / Pressurization.Output.A32NX Ovhd Press Mode Select Fault Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_PRESS_MODE_SEL_PB_HAS_FAULT) (L:A32NX_OVHD_INTLT_ANN) 0 ==\n(L:A32NX_ELEC_DC_2_BUS_IS_POWERED,Bool) and or 1 and \n(L:A32NX_ELEC_AC_ESS_SHED_BUS_IS_POWERED, Bool) \n(L:A32NX_ELEC_AC_STAT_INV_BUS_IS_POWERED, Bool) or and\n(L:A32NX_OVHD_INTLT_ANN,Number) 2 == if{ 0.1 } els{ 1 } *"
	},
	"IniBuilds.A320.Autopilot.Output.INI320_FCU_HDG_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:INI_FCU_HDG_DOT)"
	},
	"IniBuilds.A320.Autopilot.Output.INI320_FCU_ALT_MANAGED_DOT": {
		"method": "calcCode",
		"code": "(L:INI_FCU_ALT_DOT)"
	},
	"IniBuilds.A320.Autopilot.Output.INI320_FCU_HDG_DASHED": {
		"method": "calcCode",
		"code": "(L:INI_FCU_HDG_DASHED)"
	},
	"IniBuilds.A320.Autopilot.Output.INI320_FCU_VS_DASHED": {
		"method": "calcCode",
		"code": "(L:INI_FCU_VS_DASHED)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot Heading Mode On": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_HDG_SEL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot Heading Hold On": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_HDG_HLD)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz increase (captain side)": {
		"method": "calcCode",
		"code": "69632 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz decrease (captain side)": {
		"method": "calcCode",
		"code": "69633 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz increase (captain side)": {
		"method": "calcCode",
		"code": "69634 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz decrease (captain side)": {
		"method": "calcCode",
		"code": "69635 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz increase (first officer side)": {
		"method": "calcCode",
		"code": "69636 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz decrease (first officer side)": {
		"method": "calcCode",
		"code": "69637 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz increase (first officer side)": {
		"method": "calcCode",
		"code": "69638 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz decrease (first officer side)": {
		"method": "calcCode",
		"code": "69639 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz increase (observer side)": {
		"method": "calcCode",
		"code": "69640 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency MHz decrease (observer side)": {
		"method": "calcCode",
		"code": "69641 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz increase (observer side)": {
		"method": "calcCode",
		"code": "69642 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio frequency kHz decrease (observerside)": {
		"method": "calcCode",
		"code": "69643 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button press (captain side)": {
		"method": "calcCode",
		"code": "69644 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button release (captain side)": {
		"method": "calcCode",
		"code": "69645 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button press (first officer side)": {
		"method": "calcCode",
		"code": "69646 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button release (first officer side)": {
		"method": "calcCode",
		"code": "69647 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button press (observer side)": {
		"method": "calcCode",
		"code": "69648 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.Radio transfer button release (observer side)": {
		"method": "calcCode",
		"code": "69649 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button press (captain side)": {
		"method": "calcCode",
		"code": "69650 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button release (captain side)": {
		"method": "calcCode",
		"code": "69651 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button press (captain side)": {
		"method": "calcCode",
		"code": "69652 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button release (captain side)": {
		"method": "calcCode",
		"code": "69653 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button press (captain side)": {
		"method": "calcCode",
		"code": "69654 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button release (captain side)": {
		"method": "calcCode",
		"code": "69655 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button press (captain side)": {
		"method": "calcCode",
		"code": "69656 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button release (captain side)": {
		"method": "calcCode",
		"code": "69657 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button press (captain side)": {
		"method": "calcCode",
		"code": "69658 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button release (captain side)": {
		"method": "calcCode",
		"code": "69659 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button press (first officer side)": {
		"method": "calcCode",
		"code": "69660 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button release (first officer side)": {
		"method": "calcCode",
		"code": "69661 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button press (first officer side)": {
		"method": "calcCode",
		"code": "69662 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button release (first officer side)": {
		"method": "calcCode",
		"code": "69663 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button press (first officer side)": {
		"method": "calcCode",
		"code": "69664 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button release (first officer side)": {
		"method": "calcCode",
		"code": "69665 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button press (first officer side)": {
		"method": "calcCode",
		"code": "69666 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button release (first officer side)": {
		"method": "calcCode",
		"code": "69667 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button press (first officer side)": {
		"method": "calcCode",
		"code": "69668 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button release (first officer side)": {
		"method": "calcCode",
		"code": "69669 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button press (observer side)": {
		"method": "calcCode",
		"code": "69670 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF1 button release (observer side)": {
		"method": "calcCode",
		"code": "69671 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button press (observer side)": {
		"method": "calcCode",
		"code": "69672 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF2 button release (observer side)": {
		"method": "calcCode",
		"code": "69673 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button press (observer side)": {
		"method": "calcCode",
		"code": "69674 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.VHF3 button release (observer side)": {
		"method": "calcCode",
		"code": "69675 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button press (observer side)": {
		"method": "calcCode",
		"code": "69676 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF1 button release (observer side)": {
		"method": "calcCode",
		"code": "69677 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button press (observer side)": {
		"method": "calcCode",
		"code": "69678 (>L:CEVENT)"
	},
	"TFDi.MD11.Radios.HF2 button release (observer side)": {
		"method": "calcCode",
		"code": "69679 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 mic button press (captain side)": {
		"method": "calcCode",
		"code": "69680 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 mic button release (captain side)": {
		"method": "calcCode",
		"code": "69681 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 mic button press (captain side)": {
		"method": "calcCode",
		"code": "69682 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 mic button release (captain side)": {
		"method": "calcCode",
		"code": "69683 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF3 mic button press (captain side)": {
		"method": "calcCode",
		"code": "69684 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF3 mic button release (captain side)": {
		"method": "calcCode",
		"code": "69685 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF1 mic button press (captain side)": {
		"method": "calcCode",
		"code": "69686 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF1 mic button release (captain side)": {
		"method": "calcCode",
		"code": "69687 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF2 mic button press (captain side)": {
		"method": "calcCode",
		"code": "69688 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF2 mic button release (captain side)": {
		"method": "calcCode",
		"code": "69689 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.SATCOM mic button press (captain side)": {
		"method": "calcCode",
		"code": "69690 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.SATCOM mic button release (captain side)": {
		"method": "calcCode",
		"code": "69691 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Intercom mic button press (captain side)": {
		"method": "calcCode",
		"code": "69692 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Intercom mic button release (captain side)": {
		"method": "calcCode",
		"code": "69693 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Cabin mic button press (captain side)": {
		"method": "calcCode",
		"code": "69694 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Cabin mic button release (captain side)": {
		"method": "calcCode",
		"code": "69695 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69696 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69697 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69698 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69699 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF3 mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69700 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF3 mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69701 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF1 mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69702 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF1 mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69703 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF2 mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69704 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.HF2 mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69705 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.SATCOM mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69706 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.SATCOM mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69707 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Intercom mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69708 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Intercom mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69709 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Cabin mic button press (first officer side)": {
		"method": "calcCode",
		"code": "69710 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Cabin mic button release (first officer side)": {
		"method": "calcCode",
		"code": "69711 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69712 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69713 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF1 volume button press (captain side)": {
		"method": "calcCode",
		"code": "69714 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69715 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69716 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF2 volume button press (captain side)": {
		"method": "calcCode",
		"code": "69717 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.VHF3 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69718 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69719 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69720 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69721 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69722 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69723 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69724 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69725 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69726 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT volume increase (captain side)": {
		"method": "calcCode",
		"code": "69727 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69728 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69729 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume increase (captain side)": {
		"method": "calcCode",
		"code": "69730 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69731 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69732 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume increase (captain side)": {
		"method": "calcCode",
		"code": "69733 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69734 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69735 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume increase (captain side)": {
		"method": "calcCode",
		"code": "69736 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69737 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69738 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69739 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69740 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69741 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69742 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69743 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69744 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69745 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69746 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69747 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69748 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69749 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69750 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69751 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69752 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69753 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume increase (captain side)": {
		"method": "calcCode",
		"code": "69754 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69755 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69756 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR volume increase (captain side)": {
		"method": "calcCode",
		"code": "69757 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR volume decrease (captain side)": {
		"method": "calcCode",
		"code": "69758 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR volume left button press (captain side)": {
		"method": "calcCode",
		"code": "69759 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 volume increase (first officer side)": {
		"method": "calcCode",
		"code": "69760 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 volume decrease (first officer side)": {
		"method": "calcCode",
		"code": "69761 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 volume left button press (first officer side)": {
		"method": "calcCode",
		"code": "69762 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 volume increase (first officer side)": {
		"method": "calcCode",
		"code": "69763 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 volume decrease (first officer side)": {
		"method": "calcCode",
		"code": "69764 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 volume left button press (first officer side)": {
		"method": "calcCode",
		"code": "69765 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume increase (first officer side)": {
		"method": "calcCode",
		"code": "69766 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume decrease (first officer side)": {
		"method": "calcCode",
		"code": "69767 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume left button press (first officer side)": {
		"method": "calcCode",
		"code": "69768 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69769 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69770 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 left button press (FO side)": {
		"method": "calcCode",
		"code": "69771 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69772 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69773 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 left button press (FO side)": {
		"method": "calcCode",
		"code": "69774 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT volume increase (FO side)": {
		"method": "calcCode",
		"code": "69775 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69776 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT left button press (FO side)": {
		"method": "calcCode",
		"code": "69777 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume increase (FO side)": {
		"method": "calcCode",
		"code": "69778 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69779 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT left button press (FO side)": {
		"method": "calcCode",
		"code": "69780 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume increase (FO side)": {
		"method": "calcCode",
		"code": "69781 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69782 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB left button press (FO side)": {
		"method": "calcCode",
		"code": "69783 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume increase (FO side)": {
		"method": "calcCode",
		"code": "69784 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69785 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA left button press (FO side)": {
		"method": "calcCode",
		"code": "69786 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69787 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69788 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 left button press (FO side)": {
		"method": "calcCode",
		"code": "69789 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69790 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69791 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 left button press (FO side)": {
		"method": "calcCode",
		"code": "69792 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69793 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69794 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 left button press (FO side)": {
		"method": "calcCode",
		"code": "69795 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69796 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69797 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 left button press (FO side)": {
		"method": "calcCode",
		"code": "69798 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69799 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69800 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 left button press (FO side)": {
		"method": "calcCode",
		"code": "69801 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume increase (FO side)": {
		"method": "calcCode",
		"code": "69802 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69803 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 left button press (FO side)": {
		"method": "calcCode",
		"code": "69804 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR volume increase (FO side)": {
		"method": "calcCode",
		"code": "69805 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR volume decrease (FO side)": {
		"method": "calcCode",
		"code": "69806 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Audio panel MKR left button press (FO side)": {
		"method": "calcCode",
		"code": "69807 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.IDENT button press (captain side)": {
		"method": "calcCode",
		"code": "69808 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.IDENT button release (captain side)": {
		"method": "calcCode",
		"code": "69809 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.IDENT button press (first officer side)": {
		"method": "calcCode",
		"code": "69810 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.IDENT button release (first officer side)": {
		"method": "calcCode",
		"code": "69811 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Captain audio panel intercom radio left press": {
		"method": "calcCode",
		"code": "69812 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Captain audio panel intercom radio right press": {
		"method": "calcCode",
		"code": "69813 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.First officer audio panel intercom radio left press": {
		"method": "calcCode",
		"code": "69814 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.First officer audio panel intercom radio right press": {
		"method": "calcCode",
		"code": "69815 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU1 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69816 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU1 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69817 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU2 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69818 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU2 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69819 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU3 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69820 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU3 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69821 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU4 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69822 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU4 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69823 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU5 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69824 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU5 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69825 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU6 brightness decrease (pedestal)": {
		"method": "calcCode",
		"code": "69826 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.DU6 brightness increase (pedestal)": {
		"method": "calcCode",
		"code": "69827 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Engine SD button press": {
		"method": "calcCode",
		"code": "69828 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Engine SD button release": {
		"method": "calcCode",
		"code": "69829 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.ND SD button press": {
		"method": "calcCode",
		"code": "69830 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.ND SD button release": {
		"method": "calcCode",
		"code": "69831 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Consequences SD button press": {
		"method": "calcCode",
		"code": "69832 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Consequences SD button release": {
		"method": "calcCode",
		"code": "69833 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Status SD button press": {
		"method": "calcCode",
		"code": "69834 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Status SD button release": {
		"method": "calcCode",
		"code": "69835 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Hydraulic SD button press": {
		"method": "calcCode",
		"code": "69836 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Hydraulic SD button release": {
		"method": "calcCode",
		"code": "69837 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Electric SD button press": {
		"method": "calcCode",
		"code": "69838 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Electric SD button release": {
		"method": "calcCode",
		"code": "69839 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Air SD button press": {
		"method": "calcCode",
		"code": "69840 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Air SD button release": {
		"method": "calcCode",
		"code": "69841 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Fuel SD button press": {
		"method": "calcCode",
		"code": "69842 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Fuel SD button release": {
		"method": "calcCode",
		"code": "69843 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Config SD button press": {
		"method": "calcCode",
		"code": "69844 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Config SD button release": {
		"method": "calcCode",
		"code": "69845 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Miscellaneous SD button press": {
		"method": "calcCode",
		"code": "69846 (>L:CEVENT)"
	},
	"TFDi.MD11.Systems Display panel.Miscellaneous SD button release": {
		"method": "calcCode",
		"code": "69847 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal rudder trim left press": {
		"method": "calcCode",
		"code": "69848 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal rudder trim left release": {
		"method": "calcCode",
		"code": "69849 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal rudder trim right press": {
		"method": "calcCode",
		"code": "69850 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal rudder trim right release": {
		"method": "calcCode",
		"code": "69851 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal aileron trim increase": {
		"method": "calcCode",
		"code": "69852 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Pedestal aileron trim decrease": {
		"method": "calcCode",
		"code": "69853 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder altitude reporting press": {
		"method": "calcCode",
		"code": "69854 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder select press": {
		"method": "calcCode",
		"code": "69855 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 1 button press": {
		"method": "calcCode",
		"code": "69856 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 1 button release": {
		"method": "calcCode",
		"code": "69857 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 2 button press": {
		"method": "calcCode",
		"code": "69858 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 2 button release": {
		"method": "calcCode",
		"code": "69859 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 3 button press": {
		"method": "calcCode",
		"code": "69860 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 3 button release": {
		"method": "calcCode",
		"code": "69861 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 4 button press": {
		"method": "calcCode",
		"code": "69862 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 4 button release": {
		"method": "calcCode",
		"code": "69863 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 5 button press": {
		"method": "calcCode",
		"code": "69864 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 5 button release": {
		"method": "calcCode",
		"code": "69865 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 6 button press": {
		"method": "calcCode",
		"code": "69866 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 6 button release": {
		"method": "calcCode",
		"code": "69867 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 7 button press": {
		"method": "calcCode",
		"code": "69868 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 7 button release": {
		"method": "calcCode",
		"code": "69869 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 0 button press": {
		"method": "calcCode",
		"code": "69870 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder 0 button release": {
		"method": "calcCode",
		"code": "69871 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder clear button press": {
		"method": "calcCode",
		"code": "69872 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder clear button release": {
		"method": "calcCode",
		"code": "69873 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder above/below switch left press": {
		"method": "calcCode",
		"code": "69874 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder above/below switch right press": {
		"method": "calcCode",
		"code": "69875 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder mode left press": {
		"method": "calcCode",
		"code": "69876 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Pedestal transponder mode right press": {
		"method": "calcCode",
		"code": "69877 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder test button press": {
		"method": "calcCode",
		"code": "69878 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder test button release": {
		"method": "calcCode",
		"code": "69879 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder IDENT button press": {
		"method": "calcCode",
		"code": "69880 (>L:CEVENT)"
	},
	"TFDi.MD11.Transponder.Transponder IDENT button release": {
		"method": "calcCode",
		"code": "69881 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Pedestal ADG lever left press": {
		"method": "calcCode",
		"code": "69882 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar off button press": {
		"method": "calcCode",
		"code": "69883 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar off button release": {
		"method": "calcCode",
		"code": "69884 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar test button press": {
		"method": "calcCode",
		"code": "69885 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar test button release": {
		"method": "calcCode",
		"code": "69886 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar WX+T button press": {
		"method": "calcCode",
		"code": "69887 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar WX+T button release": {
		"method": "calcCode",
		"code": "69888 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar WX button press": {
		"method": "calcCode",
		"code": "69889 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar WX button release": {
		"method": "calcCode",
		"code": "69890 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar MAP button press": {
		"method": "calcCode",
		"code": "69891 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar MAP button release": {
		"method": "calcCode",
		"code": "69892 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar SYS button press": {
		"method": "calcCode",
		"code": "69893 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar SYS button release": {
		"method": "calcCode",
		"code": "69894 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar IDENT button press": {
		"method": "calcCode",
		"code": "69895 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar IDENT button release": {
		"method": "calcCode",
		"code": "69896 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar STAB button press": {
		"method": "calcCode",
		"code": "69897 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Weather radar STAB button release": {
		"method": "calcCode",
		"code": "69898 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Pedestal weather radar gain decrease": {
		"method": "calcCode",
		"code": "69899 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Pedestal weather radar gain increase": {
		"method": "calcCode",
		"code": "69900 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Pedestal weather radar tilt decrease": {
		"method": "calcCode",
		"code": "69901 (>L:CEVENT)"
	},
	"TFDi.MD11.Weather Radar.Pedestal weather radar tilt increase": {
		"method": "calcCode",
		"code": "69902 (>L:CEVENT)"
	},
	"TFDi.MD11.APU.Overhead APU start button press": {
		"method": "calcCode",
		"code": "73728 (>L:CEVENT)"
	},
	"TFDi.MD11.APU.Overhead APU start button release": {
		"method": "calcCode",
		"code": "73729 (>L:CEVENT)"
	},
	"TFDi.MD11.APU.Overhead APU generator button press": {
		"method": "calcCode",
		"code": "73730 (>L:CEVENT)"
	},
	"TFDi.MD11.APU.Overhead APU generator button release": {
		"method": "calcCode",
		"code": "73731 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 1 fire left press": {
		"method": "calcCode",
		"code": "73732 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 1 fire right press": {
		"method": "calcCode",
		"code": "73733 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 1 fire increase": {
		"method": "calcCode",
		"code": "73734 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 1 fire decrease": {
		"method": "calcCode",
		"code": "73735 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 2 fire left press": {
		"method": "calcCode",
		"code": "73736 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 2 fire right press": {
		"method": "calcCode",
		"code": "73737 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 2 fire increase": {
		"method": "calcCode",
		"code": "73738 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 2 fire decrease": {
		"method": "calcCode",
		"code": "73739 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 3 fire left press": {
		"method": "calcCode",
		"code": "73740 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 3 fire right press": {
		"method": "calcCode",
		"code": "73741 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 3 fire increase": {
		"method": "calcCode",
		"code": "73742 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead engine 3 fire decrease": {
		"method": "calcCode",
		"code": "73743 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead APU fire left press": {
		"method": "calcCode",
		"code": "73744 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead APU fire right press": {
		"method": "calcCode",
		"code": "73745 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead APU fire increase": {
		"method": "calcCode",
		"code": "73746 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead APU fire decrease": {
		"method": "calcCode",
		"code": "73747 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead fire test button press": {
		"method": "calcCode",
		"code": "73748 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead fire test button release": {
		"method": "calcCode",
		"code": "73749 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke vent left press": {
		"method": "calcCode",
		"code": "73750 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 1 button press": {
		"method": "calcCode",
		"code": "73751 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 1 button release": {
		"method": "calcCode",
		"code": "73752 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 1 guard left press": {
		"method": "calcCode",
		"code": "73753 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 2 button press": {
		"method": "calcCode",
		"code": "73754 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 2 button release": {
		"method": "calcCode",
		"code": "73755 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead forward cargo smoke agent 2 guard left press": {
		"method": "calcCode",
		"code": "73756 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead cargo smoke test button press": {
		"method": "calcCode",
		"code": "73757 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead cargo smoke test button release": {
		"method": "calcCode",
		"code": "73758 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke vent left press": {
		"method": "calcCode",
		"code": "73759 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 1 button press": {
		"method": "calcCode",
		"code": "73760 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 1 button release": {
		"method": "calcCode",
		"code": "73761 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 1 guard left press": {
		"method": "calcCode",
		"code": "73762 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 2 button press": {
		"method": "calcCode",
		"code": "73763 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 2 button release": {
		"method": "calcCode",
		"code": "73764 (>L:CEVENT)"
	},
	"TFDi.MD11.Fire Protection.Overhead aft cargo smoke agent 2 guard left press": {
		"method": "calcCode",
		"code": "73765 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS terrain override button press": {
		"method": "calcCode",
		"code": "73766 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS terrain override button release": {
		"method": "calcCode",
		"code": "73767 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS terrain override guard left press": {
		"method": "calcCode",
		"code": "73768 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS switch left press": {
		"method": "calcCode",
		"code": "73769 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS switch right press": {
		"method": "calcCode",
		"code": "73770 (>L:CEVENT)"
	},
	"TFDi.MD11.GPWS.Overhead GPWS guard left press": {
		"method": "calcCode",
		"code": "73771 (>L:CEVENT)"
	},
	"TFDi.MD11.Evacuation.Overhead evacuation horn shut-off left press": {
		"method": "calcCode",
		"code": "73772 (>L:CEVENT)"
	},
	"TFDi.MD11.Evacuation.Overhead evacuation switch left press": {
		"method": "calcCode",
		"code": "73773 (>L:CEVENT)"
	},
	"TFDi.MD11.Evacuation.Overhead evacuation switch right press": {
		"method": "calcCode",
		"code": "73774 (>L:CEVENT)"
	},
	"TFDi.MD11.Evacuation.Overhead evacuation guard left press": {
		"method": "calcCode",
		"code": "73775 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Speedbrake handle button press (left)": {
		"method": "calcCode",
		"code": "77828 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight controls.Speedbrake handle button press (right)": {
		"method": "calcCode",
		"code": "77829 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flap latch button press (left)": {
		"method": "calcCode",
		"code": "77830 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flap latch button press (right)": {
		"method": "calcCode",
		"code": "77831 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Dial-a-flap range wheel up": {
		"method": "calcCode",
		"code": "77832 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Dial-a-flap range wheel down": {
		"method": "calcCode",
		"code": "77833 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Left throttle fuel switch button press (left)": {
		"method": "calcCode",
		"code": "77834 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Center throttle fuel switch button press (left)": {
		"method": "calcCode",
		"code": "77835 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Right throttle fuel switch button press (left)": {
		"method": "calcCode",
		"code": "77836 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Left throttle start switch button press (left)": {
		"method": "calcCode",
		"code": "77837 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Center throttle start switch button press (left)": {
		"method": "calcCode",
		"code": "77838 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Right throttle start switch button press (left)": {
		"method": "calcCode",
		"code": "77839 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle longitudinal trim switch button press (left)": {
		"method": "calcCode",
		"code": "77840 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle longitudinal trim switch button release (left)": {
		"method": "calcCode",
		"code": "77841 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle longitudinal trim switch button press (right)": {
		"method": "calcCode",
		"code": "77842 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle longitudinal trim switch button release (right)": {
		"method": "calcCode",
		"code": "77843 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant right ATS button press": {
		"method": "calcCode",
		"code": "77846 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant right ATS button release": {
		"method": "calcCode",
		"code": "77847 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle parking lever button press (left)": {
		"method": "calcCode",
		"code": "77848 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant gear horn button press": {
		"method": "calcCode",
		"code": "77849 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant gear horn button release": {
		"method": "calcCode",
		"code": "77850 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant go-around button press": {
		"method": "calcCode",
		"code": "77851 (>L:CEVENT)"
	},
	"TFDi.MD11.Throttle Quadrant.Throttle quadrant go-around button release": {
		"method": "calcCode",
		"code": "77852 (>L:CEVENT)"
	},
	"TFDi.MD11.Flaps.Center slat stow button press (left)": {
		"method": "calcCode",
		"code": "81920 (>L:CEVENT)"
	},
	"TFDi.MD11.Flaps.Center slat stow button release (left)": {
		"method": "calcCode",
		"code": "81921 (>L:CEVENT)"
	},
	"TFDi.MD11.Flaps.Center slat stow guard button press": {
		"method": "calcCode",
		"code": "81922 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC scratchpad button press (left)": {
		"method": "calcCode",
		"code": "81923 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC scratchpad button release (left)": {
		"method": "calcCode",
		"code": "81924 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 1L button press": {
		"method": "calcCode",
		"code": "81925 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 1L button release": {
		"method": "calcCode",
		"code": "81926 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 2L button press": {
		"method": "calcCode",
		"code": "81927 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 2L button release": {
		"method": "calcCode",
		"code": "81928 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 3L button press": {
		"method": "calcCode",
		"code": "81929 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 3L button release": {
		"method": "calcCode",
		"code": "81930 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 4L button press": {
		"method": "calcCode",
		"code": "81931 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 4L button release": {
		"method": "calcCode",
		"code": "81932 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 5L button press": {
		"method": "calcCode",
		"code": "81933 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 5L button release": {
		"method": "calcCode",
		"code": "81934 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 6L button press": {
		"method": "calcCode",
		"code": "81935 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 6L button release": {
		"method": "calcCode",
		"code": "81936 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 1R button press": {
		"method": "calcCode",
		"code": "81937 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 1R button release": {
		"method": "calcCode",
		"code": "81938 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 2R button press": {
		"method": "calcCode",
		"code": "81939 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 2R button release": {
		"method": "calcCode",
		"code": "81940 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 3R button press": {
		"method": "calcCode",
		"code": "81941 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 3R button release": {
		"method": "calcCode",
		"code": "81942 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 4R button press": {
		"method": "calcCode",
		"code": "81943 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 4R button release": {
		"method": "calcCode",
		"code": "81944 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 5R button press": {
		"method": "calcCode",
		"code": "81945 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 5R button release": {
		"method": "calcCode",
		"code": "81946 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 6R button press": {
		"method": "calcCode",
		"code": "81947 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC LSK 6R button release": {
		"method": "calcCode",
		"code": "81948 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).Left MCDU brightness knob decrease": {
		"method": "calcCode",
		"code": "81949 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).Left MCDU brightness knob increase": {
		"method": "calcCode",
		"code": "81950 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC DIR/INTC button press": {
		"method": "calcCode",
		"code": "81951 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC DIR/INTC button release": {
		"method": "calcCode",
		"code": "81952 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC NAV/RAD button press": {
		"method": "calcCode",
		"code": "81953 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC NAV/RAD button release": {
		"method": "calcCode",
		"code": "81954 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC PERF button press": {
		"method": "calcCode",
		"code": "81955 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC PERF button release": {
		"method": "calcCode",
		"code": "81956 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC INIT button press": {
		"method": "calcCode",
		"code": "81957 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC INIT button release": {
		"method": "calcCode",
		"code": "81958 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC TO/APPR button press": {
		"method": "calcCode",
		"code": "81959 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC TO/APPR button release": {
		"method": "calcCode",
		"code": "81960 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC FPLN button press": {
		"method": "calcCode",
		"code": "81961 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC FPLN button release": {
		"method": "calcCode",
		"code": "81962 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC PROG button press": {
		"method": "calcCode",
		"code": "81963 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC PROG button release": {
		"method": "calcCode",
		"code": "81964 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC FIX button press": {
		"method": "calcCode",
		"code": "81965 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC FIX button release": {
		"method": "calcCode",
		"code": "81966 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC SEC FPLN button press": {
		"method": "calcCode",
		"code": "81967 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC SEC FPLN button release": {
		"method": "calcCode",
		"code": "81968 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC REF button press": {
		"method": "calcCode",
		"code": "81969 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC REF button release": {
		"method": "calcCode",
		"code": "81970 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC ENG OUT button press": {
		"method": "calcCode",
		"code": "81971 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC ENG OUT button release": {
		"method": "calcCode",
		"code": "81972 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC menu button press (left)": {
		"method": "calcCode",
		"code": "81973 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC menu button release (left)": {
		"method": "calcCode",
		"code": "81974 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC up button press (left)": {
		"method": "calcCode",
		"code": "81975 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC up button release (left)": {
		"method": "calcCode",
		"code": "81976 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC next page button press (left)": {
		"method": "calcCode",
		"code": "81977 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC next page button release (left)": {
		"method": "calcCode",
		"code": "81978 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC down button press (left)": {
		"method": "calcCode",
		"code": "81979 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC down button release (left)": {
		"method": "calcCode",
		"code": "81980 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 1 press (left)": {
		"method": "calcCode",
		"code": "81981 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 1 release (left)": {
		"method": "calcCode",
		"code": "81982 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 2 press (left)": {
		"method": "calcCode",
		"code": "81983 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 2 release (left)": {
		"method": "calcCode",
		"code": "81984 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 3 press (left)": {
		"method": "calcCode",
		"code": "81985 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 3 release (left)": {
		"method": "calcCode",
		"code": "81986 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 4 press (left)": {
		"method": "calcCode",
		"code": "81987 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 4 release (left)": {
		"method": "calcCode",
		"code": "81988 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 5 press (left)": {
		"method": "calcCode",
		"code": "81989 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 5 release (left)": {
		"method": "calcCode",
		"code": "81990 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 6 press (left)": {
		"method": "calcCode",
		"code": "81991 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 6 release (left)": {
		"method": "calcCode",
		"code": "81992 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 7 press (left)": {
		"method": "calcCode",
		"code": "81993 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 7 release (left)": {
		"method": "calcCode",
		"code": "81994 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 8 press (left)": {
		"method": "calcCode",
		"code": "81995 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 8 release (left)": {
		"method": "calcCode",
		"code": "81996 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 9 press (left)": {
		"method": "calcCode",
		"code": "81997 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 9 release (left)": {
		"method": "calcCode",
		"code": "81998 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC slash button press (left)": {
		"method": "calcCode",
		"code": "81999 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC slash button release (left)": {
		"method": "calcCode",
		"code": "82000 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 0 press (left)": {
		"method": "calcCode",
		"code": "82001 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button 0 release (left)": {
		"method": "calcCode",
		"code": "82002 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC dot button press (left)": {
		"method": "calcCode",
		"code": "82003 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC dot button release (left)": {
		"method": "calcCode",
		"code": "82004 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button A press (left)": {
		"method": "calcCode",
		"code": "82005 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button A release (left)": {
		"method": "calcCode",
		"code": "82006 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button B press (left)": {
		"method": "calcCode",
		"code": "82007 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button B release (left)": {
		"method": "calcCode",
		"code": "82008 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button C press (left)": {
		"method": "calcCode",
		"code": "82009 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button C release (left)": {
		"method": "calcCode",
		"code": "82010 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button D press (left)": {
		"method": "calcCode",
		"code": "82011 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button D release (left)": {
		"method": "calcCode",
		"code": "82012 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button E press (left)": {
		"method": "calcCode",
		"code": "82013 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button E release (left)": {
		"method": "calcCode",
		"code": "82014 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button F press (left)": {
		"method": "calcCode",
		"code": "82015 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button F release (left)": {
		"method": "calcCode",
		"code": "82016 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button G press (left)": {
		"method": "calcCode",
		"code": "82017 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button G release (left)": {
		"method": "calcCode",
		"code": "82018 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button H press (left)": {
		"method": "calcCode",
		"code": "82019 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button H release (left)": {
		"method": "calcCode",
		"code": "82020 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button I press (left)": {
		"method": "calcCode",
		"code": "82021 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button I release (left)": {
		"method": "calcCode",
		"code": "82022 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button J press (left)": {
		"method": "calcCode",
		"code": "82023 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button J release (left)": {
		"method": "calcCode",
		"code": "82024 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button K press (left)": {
		"method": "calcCode",
		"code": "82025 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button K release (left)": {
		"method": "calcCode",
		"code": "82026 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button L press (left)": {
		"method": "calcCode",
		"code": "82027 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button L release (left)": {
		"method": "calcCode",
		"code": "82028 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button M press (left)": {
		"method": "calcCode",
		"code": "82029 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button M release (left)": {
		"method": "calcCode",
		"code": "82030 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button N press (left)": {
		"method": "calcCode",
		"code": "82031 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button N release (left)": {
		"method": "calcCode",
		"code": "82032 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button O press (left)": {
		"method": "calcCode",
		"code": "82033 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button O release (left)": {
		"method": "calcCode",
		"code": "82034 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button P press (left)": {
		"method": "calcCode",
		"code": "82035 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button P release (left)": {
		"method": "calcCode",
		"code": "82036 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Q press (left)": {
		"method": "calcCode",
		"code": "82037 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Q release (left)": {
		"method": "calcCode",
		"code": "82038 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button R press (left)": {
		"method": "calcCode",
		"code": "82039 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button R release (left)": {
		"method": "calcCode",
		"code": "82040 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button S press (left)": {
		"method": "calcCode",
		"code": "82041 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button S release (left)": {
		"method": "calcCode",
		"code": "82042 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button T press (left)": {
		"method": "calcCode",
		"code": "82043 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button T release (left)": {
		"method": "calcCode",
		"code": "82044 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button U press (left)": {
		"method": "calcCode",
		"code": "82045 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button U release (left)": {
		"method": "calcCode",
		"code": "82046 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button V press (left)": {
		"method": "calcCode",
		"code": "82047 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button V release (left)": {
		"method": "calcCode",
		"code": "82048 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button W press (left)": {
		"method": "calcCode",
		"code": "82049 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button W release (left)": {
		"method": "calcCode",
		"code": "82050 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button X press (left)": {
		"method": "calcCode",
		"code": "82051 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button X release (left)": {
		"method": "calcCode",
		"code": "82052 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Y press (left)": {
		"method": "calcCode",
		"code": "82053 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Y release (left)": {
		"method": "calcCode",
		"code": "82054 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Z press (left)": {
		"method": "calcCode",
		"code": "82055 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC button Z release (left)": {
		"method": "calcCode",
		"code": "82056 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC minus button press (left)": {
		"method": "calcCode",
		"code": "82057 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC minus button release (left)": {
		"method": "calcCode",
		"code": "82058 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC plus button press (left)": {
		"method": "calcCode",
		"code": "82059 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC plus button release (left)": {
		"method": "calcCode",
		"code": "82060 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC SP button press (left)": {
		"method": "calcCode",
		"code": "82061 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC SP button release (left)": {
		"method": "calcCode",
		"code": "82062 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC CLR button press (left)": {
		"method": "calcCode",
		"code": "82063 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (left).FMC CLR button release (left)": {
		"method": "calcCode",
		"code": "82064 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU scratchpad button press (left)": {
		"method": "calcCode",
		"code": "82065 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU scratchpad button release (left)": {
		"method": "calcCode",
		"code": "82066 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU LSK 1L button press": {
		"method": "calcCode",
		"code": "82067 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU LSK 1L button release": {
		"method": "calcCode",
		"code": "82068 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU LSK 2L button press": {
		"method": "calcCode",
		"code": "82069 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU LSK 2L button release": {
		"method": "calcCode",
		"code": "82070 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC RMCDU LSK 3L button press": {
		"method": "calcCode",
		"code": "82071 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 3L button release": {
		"method": "calcCode",
		"code": "82072 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 4L button press": {
		"method": "calcCode",
		"code": "82073 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 4L button release": {
		"method": "calcCode",
		"code": "82074 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 5L button press": {
		"method": "calcCode",
		"code": "82075 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 5L button release": {
		"method": "calcCode",
		"code": "82076 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 6L button press": {
		"method": "calcCode",
		"code": "82077 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 6L button release": {
		"method": "calcCode",
		"code": "82078 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 1R button press": {
		"method": "calcCode",
		"code": "82079 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 1R button release": {
		"method": "calcCode",
		"code": "82080 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 2R button press": {
		"method": "calcCode",
		"code": "82081 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 2R button release": {
		"method": "calcCode",
		"code": "82082 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 3R button press": {
		"method": "calcCode",
		"code": "82083 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 3R button release": {
		"method": "calcCode",
		"code": "82084 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 4R button press": {
		"method": "calcCode",
		"code": "82085 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 4R button release": {
		"method": "calcCode",
		"code": "82086 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 5R button press": {
		"method": "calcCode",
		"code": "82087 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 5R button release": {
		"method": "calcCode",
		"code": "82088 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 6R button press": {
		"method": "calcCode",
		"code": "82089 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) LSK 6R button release": {
		"method": "calcCode",
		"code": "82090 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).Right MCDU brightness knob decrease": {
		"method": "calcCode",
		"code": "82091 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).Right MCDU brightness knob increase": {
		"method": "calcCode",
		"code": "82092 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) DIR INTC button press": {
		"method": "calcCode",
		"code": "82093 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) DIR INTC button release": {
		"method": "calcCode",
		"code": "82094 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) NAV RAD button press": {
		"method": "calcCode",
		"code": "82095 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) NAV RAD button release": {
		"method": "calcCode",
		"code": "82096 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) PERF button press": {
		"method": "calcCode",
		"code": "82097 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) PERF button release": {
		"method": "calcCode",
		"code": "82098 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) INIT button press": {
		"method": "calcCode",
		"code": "82099 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) INIT button release": {
		"method": "calcCode",
		"code": "82100 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) TOAPPR button press": {
		"method": "calcCode",
		"code": "82101 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) TOAPPR button release": {
		"method": "calcCode",
		"code": "82102 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) FPLN button press": {
		"method": "calcCode",
		"code": "82103 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) FPLN button release": {
		"method": "calcCode",
		"code": "82104 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) PROG button press": {
		"method": "calcCode",
		"code": "82105 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) PROG button release": {
		"method": "calcCode",
		"code": "82106 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) FIX button press": {
		"method": "calcCode",
		"code": "82107 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) FIX button release": {
		"method": "calcCode",
		"code": "82108 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) SEC FPLN button press": {
		"method": "calcCode",
		"code": "82109 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) SEC FPLN button release": {
		"method": "calcCode",
		"code": "82110 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) REF button press": {
		"method": "calcCode",
		"code": "82111 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) REF button release": {
		"method": "calcCode",
		"code": "82112 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) ENG OUT button press": {
		"method": "calcCode",
		"code": "82113 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) ENG OUT button release": {
		"method": "calcCode",
		"code": "82114 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) MENU button press": {
		"method": "calcCode",
		"code": "82115 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) MENU button release": {
		"method": "calcCode",
		"code": "82116 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) UP button press": {
		"method": "calcCode",
		"code": "82117 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) UP button release": {
		"method": "calcCode",
		"code": "82118 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) NEXTPAGE button press": {
		"method": "calcCode",
		"code": "82119 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) NEXTPAGE button release": {
		"method": "calcCode",
		"code": "82120 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) DOWN button press": {
		"method": "calcCode",
		"code": "82121 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) DOWN button release": {
		"method": "calcCode",
		"code": "82122 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 1 button press": {
		"method": "calcCode",
		"code": "82123 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 1 button release": {
		"method": "calcCode",
		"code": "82124 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 2 button press": {
		"method": "calcCode",
		"code": "82125 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 2 button release": {
		"method": "calcCode",
		"code": "82126 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 3 button press": {
		"method": "calcCode",
		"code": "82127 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 3 button release": {
		"method": "calcCode",
		"code": "82128 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 4 button press": {
		"method": "calcCode",
		"code": "82129 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 4 button release": {
		"method": "calcCode",
		"code": "82130 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 5 button press": {
		"method": "calcCode",
		"code": "82131 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 5 button release": {
		"method": "calcCode",
		"code": "82132 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 6 button press": {
		"method": "calcCode",
		"code": "82133 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 6 button release": {
		"method": "calcCode",
		"code": "82134 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 7 button press": {
		"method": "calcCode",
		"code": "82135 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 7 button release": {
		"method": "calcCode",
		"code": "82136 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 8 button press": {
		"method": "calcCode",
		"code": "82137 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 8 button release": {
		"method": "calcCode",
		"code": "82138 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 9 button press": {
		"method": "calcCode",
		"code": "82139 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 9 button release": {
		"method": "calcCode",
		"code": "82140 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) slash button press": {
		"method": "calcCode",
		"code": "82141 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) slash button release": {
		"method": "calcCode",
		"code": "82142 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 0 button press": {
		"method": "calcCode",
		"code": "82143 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) 0 button release": {
		"method": "calcCode",
		"code": "82144 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) dot button press": {
		"method": "calcCode",
		"code": "82145 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) dot button release": {
		"method": "calcCode",
		"code": "82146 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) A button press": {
		"method": "calcCode",
		"code": "82147 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) A button release": {
		"method": "calcCode",
		"code": "82148 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) B button press": {
		"method": "calcCode",
		"code": "82149 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) B button release": {
		"method": "calcCode",
		"code": "82150 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) C button press": {
		"method": "calcCode",
		"code": "82151 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) C button release": {
		"method": "calcCode",
		"code": "82152 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) D button press": {
		"method": "calcCode",
		"code": "82153 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) D button release": {
		"method": "calcCode",
		"code": "82154 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) E button press": {
		"method": "calcCode",
		"code": "82155 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) E button release": {
		"method": "calcCode",
		"code": "82156 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) F button press": {
		"method": "calcCode",
		"code": "82157 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) F button release": {
		"method": "calcCode",
		"code": "82158 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) G button press": {
		"method": "calcCode",
		"code": "82159 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) G button release": {
		"method": "calcCode",
		"code": "82160 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) H button press": {
		"method": "calcCode",
		"code": "82161 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) H button release": {
		"method": "calcCode",
		"code": "82162 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) I button press": {
		"method": "calcCode",
		"code": "82163 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) I button release": {
		"method": "calcCode",
		"code": "82164 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) J button press": {
		"method": "calcCode",
		"code": "82165 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) J button release": {
		"method": "calcCode",
		"code": "82166 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) K button press": {
		"method": "calcCode",
		"code": "82167 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) K button release": {
		"method": "calcCode",
		"code": "82168 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) L button press": {
		"method": "calcCode",
		"code": "82169 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) L button release": {
		"method": "calcCode",
		"code": "82170 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) M button press": {
		"method": "calcCode",
		"code": "82171 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).FMC (right) M button release": {
		"method": "calcCode",
		"code": "82172 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button N press": {
		"method": "calcCode",
		"code": "82173 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button N release": {
		"method": "calcCode",
		"code": "82174 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button O press": {
		"method": "calcCode",
		"code": "82175 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button O release": {
		"method": "calcCode",
		"code": "82176 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button P press": {
		"method": "calcCode",
		"code": "82177 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button P release": {
		"method": "calcCode",
		"code": "82178 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Q press": {
		"method": "calcCode",
		"code": "82179 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Q release": {
		"method": "calcCode",
		"code": "82180 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button R press": {
		"method": "calcCode",
		"code": "82181 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button R release": {
		"method": "calcCode",
		"code": "82182 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button S press": {
		"method": "calcCode",
		"code": "82183 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button S release": {
		"method": "calcCode",
		"code": "82184 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button T press": {
		"method": "calcCode",
		"code": "82185 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button T release": {
		"method": "calcCode",
		"code": "82186 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button U press": {
		"method": "calcCode",
		"code": "82187 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button U release": {
		"method": "calcCode",
		"code": "82188 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button V press": {
		"method": "calcCode",
		"code": "82189 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button V release": {
		"method": "calcCode",
		"code": "82190 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button W press": {
		"method": "calcCode",
		"code": "82191 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button W release": {
		"method": "calcCode",
		"code": "82192 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button X press": {
		"method": "calcCode",
		"code": "82193 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button X release": {
		"method": "calcCode",
		"code": "82194 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Y press": {
		"method": "calcCode",
		"code": "82195 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Y release": {
		"method": "calcCode",
		"code": "82196 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Z press": {
		"method": "calcCode",
		"code": "82197 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button Z release": {
		"method": "calcCode",
		"code": "82198 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button minus press": {
		"method": "calcCode",
		"code": "82199 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button minus release": {
		"method": "calcCode",
		"code": "82200 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button plus press": {
		"method": "calcCode",
		"code": "82201 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button plus release": {
		"method": "calcCode",
		"code": "82202 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button SP press": {
		"method": "calcCode",
		"code": "82203 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button SP release": {
		"method": "calcCode",
		"code": "82204 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button CLR press": {
		"method": "calcCode",
		"code": "82205 (>L:CEVENT)"
	},
	"TFDi.MD11.MCDU (right).MCDU right button CLR release": {
		"method": "calcCode",
		"code": "82206 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Center auxiliary hydraulic pump button press": {
		"method": "calcCode",
		"code": "82207 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Center auxiliary hydraulic pump button release": {
		"method": "calcCode",
		"code": "82208 (>L:CEVENT)"
	},
	"TFDi.MD11.Brakes.Center anti-skid button press": {
		"method": "calcCode",
		"code": "82209 (>L:CEVENT)"
	},
	"TFDi.MD11.Brakes.Center anti-skid button release": {
		"method": "calcCode",
		"code": "82210 (>L:CEVENT)"
	},
	"TFDi.MD11.Brakes.Center autobrake switch left button press": {
		"method": "calcCode",
		"code": "82211 (>L:CEVENT)"
	},
	"TFDi.MD11.Brakes.Center autobrake switch right button press": {
		"method": "calcCode",
		"code": "82212 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 1 switch wheel up": {
		"method": "calcCode",
		"code": "82213 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 1 switch wheel down": {
		"method": "calcCode",
		"code": "82214 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 2 switch wheel up": {
		"method": "calcCode",
		"code": "82215 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 2 switch wheel down": {
		"method": "calcCode",
		"code": "82216 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 3 switch wheel up": {
		"method": "calcCode",
		"code": "82217 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 3 switch wheel down": {
		"method": "calcCode",
		"code": "82218 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 4 switch wheel up": {
		"method": "calcCode",
		"code": "82219 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Center flight number 4 switch wheel down": {
		"method": "calcCode",
		"code": "82220 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel magnetic true button press": {
		"method": "calcCode",
		"code": "86016 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel magnetic true button release": {
		"method": "calcCode",
		"code": "86017 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel map button press": {
		"method": "calcCode",
		"code": "86018 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel map button release": {
		"method": "calcCode",
		"code": "86019 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR button press": {
		"method": "calcCode",
		"code": "86020 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR button release": {
		"method": "calcCode",
		"code": "86021 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel plan button press": {
		"method": "calcCode",
		"code": "86022 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel plan button release": {
		"method": "calcCode",
		"code": "86023 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel approach button press": {
		"method": "calcCode",
		"code": "86024 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel approach button release": {
		"method": "calcCode",
		"code": "86025 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel TCAS button press": {
		"method": "calcCode",
		"code": "86026 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel TCAS button release": {
		"method": "calcCode",
		"code": "86027 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR1 button press": {
		"method": "calcCode",
		"code": "86028 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR1 button release": {
		"method": "calcCode",
		"code": "86029 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel increment button press": {
		"method": "calcCode",
		"code": "86030 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel increment button release": {
		"method": "calcCode",
		"code": "86031 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR2 button press": {
		"method": "calcCode",
		"code": "86032 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR2 button release": {
		"method": "calcCode",
		"code": "86033 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel ADF1 button press": {
		"method": "calcCode",
		"code": "86034 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel ADF1 button release": {
		"method": "calcCode",
		"code": "86035 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel decrement button press": {
		"method": "calcCode",
		"code": "86036 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel decrement button release": {
		"method": "calcCode",
		"code": "86037 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel ADF2 button press": {
		"method": "calcCode",
		"code": "86038 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel ADF2 button release": {
		"method": "calcCode",
		"code": "86039 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel traffic button press": {
		"method": "calcCode",
		"code": "86040 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel traffic button release": {
		"method": "calcCode",
		"code": "86041 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel data button press": {
		"method": "calcCode",
		"code": "86042 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel data button release": {
		"method": "calcCode",
		"code": "86043 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel waypoint button press": {
		"method": "calcCode",
		"code": "86044 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel waypoint button release": {
		"method": "calcCode",
		"code": "86045 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR/NDB button press": {
		"method": "calcCode",
		"code": "86046 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel VOR/NDB button release": {
		"method": "calcCode",
		"code": "86047 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel airport button press": {
		"method": "calcCode",
		"code": "86048 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel airport button release": {
		"method": "calcCode",
		"code": "86049 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel inhibit button press": {
		"method": "calcCode",
		"code": "86050 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).Left EFIS control panel inhibit button release": {
		"method": "calcCode",
		"code": "86051 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left weather brightness knob press": {
		"method": "calcCode",
		"code": "86052 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left weather brightness knob release": {
		"method": "calcCode",
		"code": "86053 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left weather brightness knob increase": {
		"method": "calcCode",
		"code": "86054 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left weather brightness knob decrease": {
		"method": "calcCode",
		"code": "86055 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left baro set knob press": {
		"method": "calcCode",
		"code": "86056 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain baro set knob press": {
		"method": "calcCode",
		"code": "86057 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain baro set knob release": {
		"method": "calcCode",
		"code": "86058 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain baro set knob increase": {
		"method": "calcCode",
		"code": "86059 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain baro set knob decrease": {
		"method": "calcCode",
		"code": "86060 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left minimums knob press": {
		"method": "calcCode",
		"code": "86061 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain minimums knob press": {
		"method": "calcCode",
		"code": "86062 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain minimums knob release": {
		"method": "calcCode",
		"code": "86063 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain minimums knob increase": {
		"method": "calcCode",
		"code": "86064 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (left).EFIS left captain minimums knob decrease": {
		"method": "calcCode",
		"code": "86065 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.FGS speed knob push release": {
		"method": "calcCode",
		"code": "86071 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master warning button press (left side)": {
		"method": "calcCode",
		"code": "86108 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master warning button release (left side)": {
		"method": "calcCode",
		"code": "86109 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master caution button press (left side)": {
		"method": "calcCode",
		"code": "86110 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master caution button release (left side)": {
		"method": "calcCode",
		"code": "86111 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master warning button press (right side)": {
		"method": "calcCode",
		"code": "86112 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master warning button release (right side)": {
		"method": "calcCode",
		"code": "86113 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master caution button press (right side)": {
		"method": "calcCode",
		"code": "86114 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator master caution button release (right side)": {
		"method": "calcCode",
		"code": "86115 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator ground service button press (left side)": {
		"method": "calcCode",
		"code": "86116 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator ground service button release (left side)": {
		"method": "calcCode",
		"code": "86117 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator ground service button press (right side)": {
		"method": "calcCode",
		"code": "86118 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator ground service button release (right side)": {
		"method": "calcCode",
		"code": "86119 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display inhibit button press": {
		"method": "calcCode",
		"code": "86124 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display inhibit button release": {
		"method": "calcCode",
		"code": "86125 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right baro set knob press": {
		"method": "calcCode",
		"code": "86126 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain baro set knob press": {
		"method": "calcCode",
		"code": "86127 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain baro set knob release": {
		"method": "calcCode",
		"code": "86128 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain baro set knob increase": {
		"method": "calcCode",
		"code": "86129 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain baro set knob decrease": {
		"method": "calcCode",
		"code": "86130 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right minimums knob press": {
		"method": "calcCode",
		"code": "86131 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain minimums knob press": {
		"method": "calcCode",
		"code": "86132 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain minimums knob release": {
		"method": "calcCode",
		"code": "86133 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain minimums knob increase": {
		"method": "calcCode",
		"code": "86134 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right captain minimums knob decrease": {
		"method": "calcCode",
		"code": "86135 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right weather brightness knob press": {
		"method": "calcCode",
		"code": "86136 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right weather brightness knob release": {
		"method": "calcCode",
		"code": "86137 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right weather brightness knob increase": {
		"method": "calcCode",
		"code": "86138 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right weather brightness knob decrease": {
		"method": "calcCode",
		"code": "86139 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display traffic button press": {
		"method": "calcCode",
		"code": "86140 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display traffic button release": {
		"method": "calcCode",
		"code": "86141 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display data button press": {
		"method": "calcCode",
		"code": "86142 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display data button release": {
		"method": "calcCode",
		"code": "86143 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display waypoint button press": {
		"method": "calcCode",
		"code": "86144 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display waypoint button release": {
		"method": "calcCode",
		"code": "86145 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display VOR/NDB button press": {
		"method": "calcCode",
		"code": "86146 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display VOR/NDB button release": {
		"method": "calcCode",
		"code": "86147 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display airport button press": {
		"method": "calcCode",
		"code": "86148 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display airport button release": {
		"method": "calcCode",
		"code": "86149 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display magnetic/true heading button press": {
		"method": "calcCode",
		"code": "86150 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display magnetic/true heading button release": {
		"method": "calcCode",
		"code": "86151 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display map button press": {
		"method": "calcCode",
		"code": "86152 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display map button release": {
		"method": "calcCode",
		"code": "86153 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display VOR button press": {
		"method": "calcCode",
		"code": "86154 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display VOR button release": {
		"method": "calcCode",
		"code": "86155 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display plan button press": {
		"method": "calcCode",
		"code": "86156 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display plan button release": {
		"method": "calcCode",
		"code": "86157 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display approach button press": {
		"method": "calcCode",
		"code": "86158 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display approach button release": {
		"method": "calcCode",
		"code": "86159 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).Control display TCAS button press": {
		"method": "calcCode",
		"code": "86160 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right TCAS button release": {
		"method": "calcCode",
		"code": "86161 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right VOR1 button press": {
		"method": "calcCode",
		"code": "86162 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right VOR1 button release": {
		"method": "calcCode",
		"code": "86163 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right increment button press": {
		"method": "calcCode",
		"code": "86164 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right increment button release": {
		"method": "calcCode",
		"code": "86165 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right VOR2 button press": {
		"method": "calcCode",
		"code": "86166 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right VOR2 button release": {
		"method": "calcCode",
		"code": "86167 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right ADF1 button press": {
		"method": "calcCode",
		"code": "86168 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right ADF1 button release": {
		"method": "calcCode",
		"code": "86169 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right decrement button press": {
		"method": "calcCode",
		"code": "86170 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right decrement button release": {
		"method": "calcCode",
		"code": "86171 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right ADF2 button press": {
		"method": "calcCode",
		"code": "86172 (>L:CEVENT)"
	},
	"TFDi.MD11.EFIS (right).EFIS right ADF2 button release": {
		"method": "calcCode",
		"code": "86173 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.IRS 1 knob press": {
		"method": "calcCode",
		"code": "90112 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.IRS 2 knob press": {
		"method": "calcCode",
		"code": "90114 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.IRS 3 knob press": {
		"method": "calcCode",
		"code": "90116 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 1 button press": {
		"method": "calcCode",
		"code": "90118 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 1 button release": {
		"method": "calcCode",
		"code": "90119 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 1 drive button press": {
		"method": "calcCode",
		"code": "90120 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 1 drive button release": {
		"method": "calcCode",
		"code": "90121 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator 1 drive switch guard press": {
		"method": "calcCode",
		"code": "90122 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 2 button press": {
		"method": "calcCode",
		"code": "90123 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 2 button release": {
		"method": "calcCode",
		"code": "90124 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 2 drive button press": {
		"method": "calcCode",
		"code": "90125 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 2 drive button release": {
		"method": "calcCode",
		"code": "90126 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator 2 drive switch guard press": {
		"method": "calcCode",
		"code": "90127 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 3 button press": {
		"method": "calcCode",
		"code": "90128 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 3 button release": {
		"method": "calcCode",
		"code": "90129 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 3 drive button press": {
		"method": "calcCode",
		"code": "90130 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead generator 3 drive button release": {
		"method": "calcCode",
		"code": "90131 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator 3 drive switch guard press": {
		"method": "calcCode",
		"code": "90132 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead cabin bus button press": {
		"method": "calcCode",
		"code": "90133 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Cabin bus switch guard press": {
		"method": "calcCode",
		"code": "90135 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 1 button press": {
		"method": "calcCode",
		"code": "90136 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 1 button release": {
		"method": "calcCode",
		"code": "90137 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead galley external power button press": {
		"method": "calcCode",
		"code": "90138 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead galley external power button release": {
		"method": "calcCode",
		"code": "90139 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 2 button press": {
		"method": "calcCode",
		"code": "90140 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 2 button release": {
		"method": "calcCode",
		"code": "90141 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead external power button press": {
		"method": "calcCode",
		"code": "90142 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead external power button release": {
		"method": "calcCode",
		"code": "90143 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead APU power button press": {
		"method": "calcCode",
		"code": "90144 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead APU power button release": {
		"method": "calcCode",
		"code": "90145 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 3 button press": {
		"method": "calcCode",
		"code": "90146 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead AC tie 3 button release": {
		"method": "calcCode",
		"code": "90147 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead ADG electrical button press": {
		"method": "calcCode",
		"code": "90148 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead battery button press": {
		"method": "calcCode",
		"code": "90150 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead battery button release": {
		"method": "calcCode",
		"code": "90151 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Battery switch guard press": {
		"method": "calcCode",
		"code": "90152 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead DC tie 1 button press": {
		"method": "calcCode",
		"code": "90153 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead DC tie 1 button release": {
		"method": "calcCode",
		"code": "90154 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead DC tie 3 button press": {
		"method": "calcCode",
		"code": "90155 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead DC tie 3 button release": {
		"method": "calcCode",
		"code": "90156 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead system selector button press": {
		"method": "calcCode",
		"code": "90157 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Electrical overhead system selector button release": {
		"method": "calcCode",
		"code": "90158 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Emergency power knob left press": {
		"method": "calcCode",
		"code": "90159 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Emergency power knob right press": {
		"method": "calcCode",
		"code": "90160 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Smoke electrical air knob left press": {
		"method": "calcCode",
		"code": "90161 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Smoke electrical air knob right press": {
		"method": "calcCode",
		"code": "90162 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 1 button press": {
		"method": "calcCode",
		"code": "90163 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 1 button release": {
		"method": "calcCode",
		"code": "90164 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 2 button press": {
		"method": "calcCode",
		"code": "90165 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 2 button release": {
		"method": "calcCode",
		"code": "90166 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 3 button press": {
		"method": "calcCode",
		"code": "90167 (>L:CEVENT)"
	},
	"TFDi.MD11.Galley.Galley bus 3 button release": {
		"method": "calcCode",
		"code": "90168 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic pump 1-3 button press": {
		"method": "calcCode",
		"code": "90169 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic pump 1-3 button release": {
		"method": "calcCode",
		"code": "90170 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic pump 2-3 button press": {
		"method": "calcCode",
		"code": "90171 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic pump 2-3 button release": {
		"method": "calcCode",
		"code": "90172 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Auxiliary hydraulic pump 1 button press": {
		"method": "calcCode",
		"code": "90173 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Auxiliary hydraulic pump 1 button release": {
		"method": "calcCode",
		"code": "90174 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Auxiliary hydraulic pump 2 button press": {
		"method": "calcCode",
		"code": "90175 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Auxiliary hydraulic pump 2 button release": {
		"method": "calcCode",
		"code": "90176 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic system selector button press": {
		"method": "calcCode",
		"code": "90177 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic system selector button release": {
		"method": "calcCode",
		"code": "90178 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 1 left button press": {
		"method": "calcCode",
		"code": "90179 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 1 left button release": {
		"method": "calcCode",
		"code": "90180 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 1 right button press": {
		"method": "calcCode",
		"code": "90181 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 1 right button release": {
		"method": "calcCode",
		"code": "90182 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 2 left button press": {
		"method": "calcCode",
		"code": "90183 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 2 left button release": {
		"method": "calcCode",
		"code": "90184 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 2 right button press": {
		"method": "calcCode",
		"code": "90185 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 2 right button release": {
		"method": "calcCode",
		"code": "90186 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 3 left button press": {
		"method": "calcCode",
		"code": "90187 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 3 left button release": {
		"method": "calcCode",
		"code": "90188 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 3 right button press": {
		"method": "calcCode",
		"code": "90189 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic EDP 3 right button release": {
		"method": "calcCode",
		"code": "90190 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic system test button press": {
		"method": "calcCode",
		"code": "90191 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic system test button release": {
		"method": "calcCode",
		"code": "90192 (>L:CEVENT)"
	},
	"TFDi.MD11.Hydraulics.Hydraulic test switch guard press": {
		"method": "calcCode",
		"code": "90193 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 fill button press": {
		"method": "calcCode",
		"code": "90194 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 fill button release": {
		"method": "calcCode",
		"code": "90195 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 pump button press": {
		"method": "calcCode",
		"code": "90196 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 pump button release": {
		"method": "calcCode",
		"code": "90197 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 crossfeed button press": {
		"method": "calcCode",
		"code": "90198 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 crossfeed button release": {
		"method": "calcCode",
		"code": "90199 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 fill button press": {
		"method": "calcCode",
		"code": "90200 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 fill button release": {
		"method": "calcCode",
		"code": "90201 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 pump button press": {
		"method": "calcCode",
		"code": "90202 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 pump button release": {
		"method": "calcCode",
		"code": "90203 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 crossfeed button press": {
		"method": "calcCode",
		"code": "90204 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 crossfeed button release": {
		"method": "calcCode",
		"code": "90205 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 fill button press": {
		"method": "calcCode",
		"code": "90206 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 fill button release": {
		"method": "calcCode",
		"code": "90207 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 pump button press": {
		"method": "calcCode",
		"code": "90208 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 pump button release": {
		"method": "calcCode",
		"code": "90209 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 crossfeed button press": {
		"method": "calcCode",
		"code": "90210 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 crossfeed button release": {
		"method": "calcCode",
		"code": "90211 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel system selector button press": {
		"method": "calcCode",
		"code": "90212 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel system selector button release": {
		"method": "calcCode",
		"code": "90213 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 transfer button press": {
		"method": "calcCode",
		"code": "90214 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 1 transfer button release": {
		"method": "calcCode",
		"code": "90215 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 transfer button press": {
		"method": "calcCode",
		"code": "90216 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 2 transfer button release": {
		"method": "calcCode",
		"code": "90217 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 transfer button press": {
		"method": "calcCode",
		"code": "90218 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tank 3 transfer button release": {
		"method": "calcCode",
		"code": "90219 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel dump button press": {
		"method": "calcCode",
		"code": "90220 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel dump button release": {
		"method": "calcCode",
		"code": "90221 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel dump switch guard press": {
		"method": "calcCode",
		"code": "90222 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel left transfer button press": {
		"method": "calcCode",
		"code": "90223 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel left transfer button release": {
		"method": "calcCode",
		"code": "90224 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel right transfer button press": {
		"method": "calcCode",
		"code": "90225 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel right transfer button release": {
		"method": "calcCode",
		"code": "90226 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tail transfer button press": {
		"method": "calcCode",
		"code": "90227 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel tail transfer button release": {
		"method": "calcCode",
		"code": "90228 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel alternate pump button press": {
		"method": "calcCode",
		"code": "90229 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel alternate pump button release": {
		"method": "calcCode",
		"code": "90230 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel manifold drain button press": {
		"method": "calcCode",
		"code": "90231 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel manifold drain button release": {
		"method": "calcCode",
		"code": "90232 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel manifold drain switch guard press": {
		"method": "calcCode",
		"code": "90233 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel quantity test button press": {
		"method": "calcCode",
		"code": "90234 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel quantity test button release": {
		"method": "calcCode",
		"code": "90235 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Dome light button press": {
		"method": "calcCode",
		"code": "90236 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Dome light button release": {
		"method": "calcCode",
		"code": "90237 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Outer overhead panel flood knob decrease": {
		"method": "calcCode",
		"code": "90238 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Outer overhead panel flood knob increase": {
		"method": "calcCode",
		"code": "90239 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Inner overhead panel flood knob decrease": {
		"method": "calcCode",
		"code": "90240 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Inner overhead panel flood knob increase": {
		"method": "calcCode",
		"code": "90241 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Emergency lights switch press (left)": {
		"method": "calcCode",
		"code": "90242 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Emergency lights switch press (right)": {
		"method": "calcCode",
		"code": "90243 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Emergency lights test button press": {
		"method": "calcCode",
		"code": "90244 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Emergency lights test button release": {
		"method": "calcCode",
		"code": "90245 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).No smoking sign switch press (left)": {
		"method": "calcCode",
		"code": "90246 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).No smoking sign switch press (right)": {
		"method": "calcCode",
		"code": "90247 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Seat belts sign switch press (left)": {
		"method": "calcCode",
		"code": "90248 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Seat belts sign switch press (right)": {
		"method": "calcCode",
		"code": "90249 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Thunderstorm lights switch press (left)": {
		"method": "calcCode",
		"code": "90250 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Outer instrument pedestal panel flood knob decrease": {
		"method": "calcCode",
		"code": "90251 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Outer instrument pedestal panel flood knob increase": {
		"method": "calcCode",
		"code": "90252 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Inner instrument pedestal panel flood knob decrease": {
		"method": "calcCode",
		"code": "90253 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Inner instrument pedestal panel flood knob increase": {
		"method": "calcCode",
		"code": "90254 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Standby compass light button press": {
		"method": "calcCode",
		"code": "90255 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Standby compass light button release": {
		"method": "calcCode",
		"code": "90256 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Left landing light switch press (left)": {
		"method": "calcCode",
		"code": "90257 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Left landing light switch press (right)": {
		"method": "calcCode",
		"code": "90258 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Right landing light switch press (left)": {
		"method": "calcCode",
		"code": "90259 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Right landing light switch press (right)": {
		"method": "calcCode",
		"code": "90260 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Nose light switch press (left)": {
		"method": "calcCode",
		"code": "90261 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Nose light switch press (right)": {
		"method": "calcCode",
		"code": "90262 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Runway turnoff left light button press": {
		"method": "calcCode",
		"code": "90263 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Runway turnoff left light button release": {
		"method": "calcCode",
		"code": "90264 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Runway turnoff right light button press": {
		"method": "calcCode",
		"code": "90265 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Runway turnoff right light button release": {
		"method": "calcCode",
		"code": "90266 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Navigation light button press": {
		"method": "calcCode",
		"code": "90267 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Navigation light button release": {
		"method": "calcCode",
		"code": "90268 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Logo light button press": {
		"method": "calcCode",
		"code": "90269 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Logo light button release": {
		"method": "calcCode",
		"code": "90270 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Beacon light button press": {
		"method": "calcCode",
		"code": "90271 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).Beacon light button release": {
		"method": "calcCode",
		"code": "90272 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).High intensity light button press": {
		"method": "calcCode",
		"code": "90273 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (exterior).High intensity light button release": {
		"method": "calcCode",
		"code": "90274 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Forward cargo temperature left button press": {
		"method": "calcCode",
		"code": "90275 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Forward cargo temperature right button press": {
		"method": "calcCode",
		"code": "90276 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Aft cargo temperature left button press": {
		"method": "calcCode",
		"code": "90277 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Aft cargo temperature right button press": {
		"method": "calcCode",
		"code": "90278 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Cockpit temperature left button press": {
		"method": "calcCode",
		"code": "90279 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Cockpit temperature right button press": {
		"method": "calcCode",
		"code": "90280 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Forward cabin temperature left button press": {
		"method": "calcCode",
		"code": "90281 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Forward cabin temperature right button press": {
		"method": "calcCode",
		"code": "90282 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Mid cabin temperature left button press": {
		"method": "calcCode",
		"code": "90283 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Mid cabin temperature right button press": {
		"method": "calcCode",
		"code": "90284 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Aft cabin temperature left button press": {
		"method": "calcCode",
		"code": "90285 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Aft cabin temperature right button press": {
		"method": "calcCode",
		"code": "90286 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Outflow valve position switch left press": {
		"method": "calcCode",
		"code": "90287 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Outflow valve position switch right press": {
		"method": "calcCode",
		"code": "90288 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 1 button press": {
		"method": "calcCode",
		"code": "90289 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 1 button release": {
		"method": "calcCode",
		"code": "90290 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 2 button press": {
		"method": "calcCode",
		"code": "90291 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 2 button release": {
		"method": "calcCode",
		"code": "90292 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 3 button press": {
		"method": "calcCode",
		"code": "90293 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic pack 3 button release": {
		"method": "calcCode",
		"code": "90294 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic system selector button press": {
		"method": "calcCode",
		"code": "90295 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic system selector button release": {
		"method": "calcCode",
		"code": "90296 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic econ button press": {
		"method": "calcCode",
		"code": "90297 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic econ button release": {
		"method": "calcCode",
		"code": "90298 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic 1-2 isolation button press": {
		"method": "calcCode",
		"code": "90299 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic 1-2 isolation button release": {
		"method": "calcCode",
		"code": "90300 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic 1-3 isolation button press": {
		"method": "calcCode",
		"code": "90301 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic 1-3 isolation button release": {
		"method": "calcCode",
		"code": "90302 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic trim air button press": {
		"method": "calcCode",
		"code": "90303 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic trim air button release": {
		"method": "calcCode",
		"code": "90304 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 1 off button press": {
		"method": "calcCode",
		"code": "90305 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 1 off button release": {
		"method": "calcCode",
		"code": "90306 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 1 manifold temperature high button press": {
		"method": "calcCode",
		"code": "90307 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 1 manifold temperature high button release": {
		"method": "calcCode",
		"code": "90308 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 2 off button press": {
		"method": "calcCode",
		"code": "90309 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 2 off button release": {
		"method": "calcCode",
		"code": "90310 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 2 manifold temperature high button press": {
		"method": "calcCode",
		"code": "90311 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 2 manifold temperature high button release": {
		"method": "calcCode",
		"code": "90312 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic APU bleed button press": {
		"method": "calcCode",
		"code": "90313 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic APU bleed button release": {
		"method": "calcCode",
		"code": "90314 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 3 off button press": {
		"method": "calcCode",
		"code": "90315 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 3 off button release": {
		"method": "calcCode",
		"code": "90316 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 3 manifold temperature high button press": {
		"method": "calcCode",
		"code": "90317 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic bleed 3 manifold temperature high button release": {
		"method": "calcCode",
		"code": "90318 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic avionics fan button press": {
		"method": "calcCode",
		"code": "90319 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic avionics fan button release": {
		"method": "calcCode",
		"code": "90320 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic masks button press": {
		"method": "calcCode",
		"code": "90321 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic masks button release": {
		"method": "calcCode",
		"code": "90322 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic masks switch guard press": {
		"method": "calcCode",
		"code": "90323 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics cabin descent button press (left)": {
		"method": "calcCode",
		"code": "90324 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics cabin descent button release (left)": {
		"method": "calcCode",
		"code": "90325 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics cabin descent button press (right)": {
		"method": "calcCode",
		"code": "90326 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics cabin descent button release (right)": {
		"method": "calcCode",
		"code": "90327 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic cabin system selector button press": {
		"method": "calcCode",
		"code": "90328 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic cabin system selector button release": {
		"method": "calcCode",
		"code": "90329 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics molding altitude knob increase": {
		"method": "calcCode",
		"code": "90330 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatics molding altitude knob decrease": {
		"method": "calcCode",
		"code": "90331 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic ditching button press": {
		"method": "calcCode",
		"code": "90332 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic ditching button release": {
		"method": "calcCode",
		"code": "90333 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Pneumatic ditching switch guard press": {
		"method": "calcCode",
		"code": "90334 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.100 pax load switch press (left)": {
		"method": "calcCode",
		"code": "90335 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.100 pax load switch press (right)": {
		"method": "calcCode",
		"code": "90336 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.10 pax load switch press (left)": {
		"method": "calcCode",
		"code": "90337 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.10 pax load switch press (right)": {
		"method": "calcCode",
		"code": "90338 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.1 pax load switch press (left)": {
		"method": "calcCode",
		"code": "90339 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.1 pax load switch press (right)": {
		"method": "calcCode",
		"code": "90340 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 1 button press": {
		"method": "calcCode",
		"code": "90341 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 1 button release": {
		"method": "calcCode",
		"code": "90342 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine 1 FADEC switch guard press": {
		"method": "calcCode",
		"code": "90343 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 2 button press": {
		"method": "calcCode",
		"code": "90344 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 2 button release": {
		"method": "calcCode",
		"code": "90345 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine 2 FADEC switch guard press": {
		"method": "calcCode",
		"code": "90346 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 3 button press": {
		"method": "calcCode",
		"code": "90347 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine FADEC 3 button release": {
		"method": "calcCode",
		"code": "90348 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine 3 FADEC switch guard press": {
		"method": "calcCode",
		"code": "90349 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine A button press": {
		"method": "calcCode",
		"code": "90350 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine A button release": {
		"method": "calcCode",
		"code": "90351 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine B button press": {
		"method": "calcCode",
		"code": "90352 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine B button release": {
		"method": "calcCode",
		"code": "90353 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine ignition override button press": {
		"method": "calcCode",
		"code": "90354 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine ignition override button release": {
		"method": "calcCode",
		"code": "90355 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cargo door test button press": {
		"method": "calcCode",
		"code": "90356 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cargo door test button release": {
		"method": "calcCode",
		"code": "90357 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit voice recorder test button press": {
		"method": "calcCode",
		"code": "90358 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit voice recorder test button release": {
		"method": "calcCode",
		"code": "90359 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit voice recorder erase button press": {
		"method": "calcCode",
		"code": "90360 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit voice recorder erase button release": {
		"method": "calcCode",
		"code": "90361 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 1 reset button press": {
		"method": "calcCode",
		"code": "90362 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 1 reset button release": {
		"method": "calcCode",
		"code": "90363 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Overhead gen bus 1 reset button guard press": {
		"method": "calcCode",
		"code": "90364 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 2 reset button press": {
		"method": "calcCode",
		"code": "90365 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 2 reset button release": {
		"method": "calcCode",
		"code": "90366 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Overhead gen bus 2 reset button guard press": {
		"method": "calcCode",
		"code": "90367 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 3 reset button press": {
		"method": "calcCode",
		"code": "90368 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Generator bus 3 reset button release": {
		"method": "calcCode",
		"code": "90369 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Overhead gen bus 3 reset button guard press": {
		"method": "calcCode",
		"code": "90370 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Call reset button press": {
		"method": "calcCode",
		"code": "90371 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Call reset button release": {
		"method": "calcCode",
		"code": "90372 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Left rain repellent button press": {
		"method": "calcCode",
		"code": "90373 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Left rain repellent button release": {
		"method": "calcCode",
		"code": "90374 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Left wiper button press (left)": {
		"method": "calcCode",
		"code": "90375 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Left wiper button press (right)": {
		"method": "calcCode",
		"code": "90376 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel dump stop button press": {
		"method": "calcCode",
		"code": "90377 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel dump stop button release": {
		"method": "calcCode",
		"code": "90378 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Overhead fuel dump stop button guard press": {
		"method": "calcCode",
		"code": "90379 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Right rain repellent button press": {
		"method": "calcCode",
		"code": "90380 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Right rain repellent button release": {
		"method": "calcCode",
		"code": "90381 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Right wiper button press (left)": {
		"method": "calcCode",
		"code": "90382 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous controls.Right wiper button press (right)": {
		"method": "calcCode",
		"code": "90383 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flight controls flap limiter button press (left)": {
		"method": "calcCode",
		"code": "90384 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flight controls flap limiter button press (right)": {
		"method": "calcCode",
		"code": "90385 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flight controls elevator feel knob increase": {
		"method": "calcCode",
		"code": "90388 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Flight controls elevator feel knob decrease": {
		"method": "calcCode",
		"code": "90389 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control upper yaw damper A button press": {
		"method": "calcCode",
		"code": "90390 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control upper yaw damper A button release": {
		"method": "calcCode",
		"code": "90391 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control upper yaw damper B button press": {
		"method": "calcCode",
		"code": "90392 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control upper yaw damper B button release": {
		"method": "calcCode",
		"code": "90393 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower yaw damper A button press": {
		"method": "calcCode",
		"code": "90394 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower yaw damper A button release": {
		"method": "calcCode",
		"code": "90395 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower yaw damper B button press": {
		"method": "calcCode",
		"code": "90396 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower yaw damper B button release": {
		"method": "calcCode",
		"code": "90397 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower left outboard aileron button press": {
		"method": "calcCode",
		"code": "90398 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower left outboard aileron button release": {
		"method": "calcCode",
		"code": "90399 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower left inboard aileron button press": {
		"method": "calcCode",
		"code": "90400 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower left inboard aileron button release": {
		"method": "calcCode",
		"code": "90401 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower right inboard aileron button press": {
		"method": "calcCode",
		"code": "90402 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower right inboard aileron button release": {
		"method": "calcCode",
		"code": "90403 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower right outboard aileron button press": {
		"method": "calcCode",
		"code": "90404 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Control Panel.Flight control lower right outboard aileron button release": {
		"method": "calcCode",
		"code": "90405 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator lights bright/dim button press": {
		"method": "calcCode",
		"code": "90406 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator lights bright/dim button release": {
		"method": "calcCode",
		"code": "90407 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator lights test button press": {
		"method": "calcCode",
		"code": "90408 (>L:CEVENT)"
	},
	"TFDi.MD11.Annunciator Panel.Annunciator lights test button release": {
		"method": "calcCode",
		"code": "90409 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel used reset button press": {
		"method": "calcCode",
		"code": "90410 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Fuel used reset button release": {
		"method": "calcCode",
		"code": "90411 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine maximum pointer reset button press": {
		"method": "calcCode",
		"code": "90412 (>L:CEVENT)"
	},
	"TFDi.MD11.Engines.Engine maximum pointer reset button release": {
		"method": "calcCode",
		"code": "90413 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 1 button press": {
		"method": "calcCode",
		"code": "90414 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 1 button release": {
		"method": "calcCode",
		"code": "90415 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 2 button press": {
		"method": "calcCode",
		"code": "90416 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 2 button release": {
		"method": "calcCode",
		"code": "90417 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 3 button press": {
		"method": "calcCode",
		"code": "90418 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice engine 3 button release": {
		"method": "calcCode",
		"code": "90419 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice wing button press": {
		"method": "calcCode",
		"code": "90420 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice wing button release": {
		"method": "calcCode",
		"code": "90421 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice tail button press": {
		"method": "calcCode",
		"code": "90422 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice tail button release": {
		"method": "calcCode",
		"code": "90423 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice left button press": {
		"method": "calcCode",
		"code": "90424 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice left button release": {
		"method": "calcCode",
		"code": "90425 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice button press": {
		"method": "calcCode",
		"code": "90426 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice button release": {
		"method": "calcCode",
		"code": "90427 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice right button press": {
		"method": "calcCode",
		"code": "90428 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield anti-ice right button release": {
		"method": "calcCode",
		"code": "90429 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield defog button press": {
		"method": "calcCode",
		"code": "90430 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Windshield defog button release": {
		"method": "calcCode",
		"code": "90431 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit door lock button press (left)": {
		"method": "calcCode",
		"code": "90432 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Cockpit door lock button press (right)": {
		"method": "calcCode",
		"code": "90433 (>L:CEVENT)"
	},
	"TFDi.MD11.Miscellaneous Controls.Standby compass switch press (left)": {
		"method": "calcCode",
		"code": "90434 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Upper auxiliary bypass button press": {
		"method": "calcCode",
		"code": "90435 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Upper auxiliary bypass button release": {
		"method": "calcCode",
		"code": "90436 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Forward auxiliary left transfer button press": {
		"method": "calcCode",
		"code": "90437 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Forward auxiliary left transfer button release": {
		"method": "calcCode",
		"code": "90438 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Forward auxiliary right transfer button press": {
		"method": "calcCode",
		"code": "90439 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Forward auxiliary right transfer button release": {
		"method": "calcCode",
		"code": "90440 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice auto button press": {
		"method": "calcCode",
		"code": "90441 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice auto button release": {
		"method": "calcCode",
		"code": "90442 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice system selector button press": {
		"method": "calcCode",
		"code": "90443 (>L:CEVENT)"
	},
	"TFDi.MD11.Anti-Ice.Anti-ice system selector button release": {
		"method": "calcCode",
		"code": "90444 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Cabin air button press": {
		"method": "calcCode",
		"code": "90445 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Cabin air button release": {
		"method": "calcCode",
		"code": "90446 (>L:CEVENT)"
	},
	"TFDi.MD11.Pneumatic.Overhead cabin air button guard press": {
		"method": "calcCode",
		"code": "90447 (>L:CEVENT)"
	},
	"TFDi.MD11.Fuel.Overhead fuel upraux bypass guard button press": {
		"method": "calcCode",
		"code": "90448 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel timer button press": {
		"method": "calcCode",
		"code": "94208 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel timer button release": {
		"method": "calcCode",
		"code": "94209 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel timer switch left press": {
		"method": "calcCode",
		"code": "94210 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel timer switch right press": {
		"method": "calcCode",
		"code": "94211 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Left side panel floor switch left press": {
		"method": "calcCode",
		"code": "94212 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Left side panel floor switch right press": {
		"method": "calcCode",
		"code": "94213 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Left side panel briefcase increase": {
		"method": "calcCode",
		"code": "94214 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Left side panel briefcase decrease": {
		"method": "calcCode",
		"code": "94215 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Left side panel push-to-talk button press": {
		"method": "calcCode",
		"code": "94216 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Left side panel push-to-talk button release": {
		"method": "calcCode",
		"code": "94217 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Left side panel flight director off button press": {
		"method": "calcCode",
		"code": "94218 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Left side panel flight director off button release": {
		"method": "calcCode",
		"code": "94219 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Left side panel flight director button press": {
		"method": "calcCode",
		"code": "94220 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Left side panel flight director button release": {
		"method": "calcCode",
		"code": "94221 (>L:CEVENT)"
	},
	"TFDi.MD11.CADC.Left side panel CADC button press": {
		"method": "calcCode",
		"code": "94222 (>L:CEVENT)"
	},
	"TFDi.MD11.CADC.Left side panel CADC button release": {
		"method": "calcCode",
		"code": "94223 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel IRS button press": {
		"method": "calcCode",
		"code": "94224 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel IRS button release": {
		"method": "calcCode",
		"code": "94225 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel FMS button press": {
		"method": "calcCode",
		"code": "94226 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel FMS button release": {
		"method": "calcCode",
		"code": "94227 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel VOR button press": {
		"method": "calcCode",
		"code": "94228 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel VOR button release": {
		"method": "calcCode",
		"code": "94229 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel approach button press": {
		"method": "calcCode",
		"code": "94230 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Left side panel approach button release": {
		"method": "calcCode",
		"code": "94231 (>L:CEVENT)"
	},
	"TFDi.MD11.EIS.Left side panel EIS left press": {
		"method": "calcCode",
		"code": "94232 (>L:CEVENT)"
	},
	"TFDi.MD11.EIS.Left side panel EIS right press": {
		"method": "calcCode",
		"code": "94233 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel captain event marker switch left press": {
		"method": "calcCode",
		"code": "94464 (>L:CEVENT)"
	},
	"TFDi.MD11.EFB.EFB toggle left press": {
		"method": "calcCode",
		"code": "94465 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Yoke trim switch left press": {
		"method": "calcCode",
		"code": "94723 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Yoke trim switch left release": {
		"method": "calcCode",
		"code": "94724 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Yoke trim switch right press": {
		"method": "calcCode",
		"code": "94725 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Yoke trim switch right release": {
		"method": "calcCode",
		"code": "94726 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel gear switch left press": {
		"method": "calcCode",
		"code": "94976 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel center gear button press": {
		"method": "calcCode",
		"code": "94977 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel center gear guard left press": {
		"method": "calcCode",
		"code": "94979 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel handle release button press": {
		"method": "calcCode",
		"code": "94980 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel handle release button release": {
		"method": "calcCode",
		"code": "94981 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.ISIS barometer button press": {
		"method": "calcCode",
		"code": "94982 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.ISIS barometer button release": {
		"method": "calcCode",
		"code": "94983 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel standby altimeter barometer decrease": {
		"method": "calcCode",
		"code": "94984 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel standby altimeter barometer increase": {
		"method": "calcCode",
		"code": "94985 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel standby attitude indicator cage button press": {
		"method": "calcCode",
		"code": "94986 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel timer button press": {
		"method": "calcCode",
		"code": "95488 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel timer button release": {
		"method": "calcCode",
		"code": "95489 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel timer switch left press": {
		"method": "calcCode",
		"code": "95490 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel timer switch right press": {
		"method": "calcCode",
		"code": "95491 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Right side panel floor switch left press": {
		"method": "calcCode",
		"code": "95492 (>L:CEVENT)"
	},
	"TFDi.MD11.Lights (interior).Right side panel floor switch right press": {
		"method": "calcCode",
		"code": "95493 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Right side panel briefcase increase": {
		"method": "calcCode",
		"code": "95494 (>L:CEVENT)"
	},
	"TFDi.MD11.Electrical.Right side panel briefcase decrease": {
		"method": "calcCode",
		"code": "95495 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Right side panel push-to-talk button press": {
		"method": "calcCode",
		"code": "95496 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio Panel.Right side panel push-to-talk button release": {
		"method": "calcCode",
		"code": "95497 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right side panel flight director off button press": {
		"method": "calcCode",
		"code": "95498 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right side panel flight director off button release": {
		"method": "calcCode",
		"code": "95499 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right side panel flight director button press": {
		"method": "calcCode",
		"code": "95500 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right side panel flight director button release": {
		"method": "calcCode",
		"code": "95501 (>L:CEVENT)"
	},
	"TFDi.MD11.CADC.Right side panel CADC button press": {
		"method": "calcCode",
		"code": "95502 (>L:CEVENT)"
	},
	"TFDi.MD11.CADC.Right side panel CADC button release": {
		"method": "calcCode",
		"code": "95503 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel IRS button press": {
		"method": "calcCode",
		"code": "95504 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel IRS button release": {
		"method": "calcCode",
		"code": "95505 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel FMS button press": {
		"method": "calcCode",
		"code": "95506 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel FMS button release": {
		"method": "calcCode",
		"code": "95507 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel VOR button press": {
		"method": "calcCode",
		"code": "95508 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel VOR button release": {
		"method": "calcCode",
		"code": "95509 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel approach button press": {
		"method": "calcCode",
		"code": "95510 (>L:CEVENT)"
	},
	"TFDi.MD11.Navigation.Right side panel approach button release": {
		"method": "calcCode",
		"code": "95511 (>L:CEVENT)"
	},
	"TFDi.MD11.EIS.Right side panel EIS left press": {
		"method": "calcCode",
		"code": "95512 (>L:CEVENT)"
	},
	"TFDi.MD11.EIS.Right side panel EIS right press": {
		"method": "calcCode",
		"code": "95513 (>L:CEVENT)"
	},
	"TFDi.MD11.Main instrument panel.Main instrument panel first officer event marker switch left press": {
		"method": "calcCode",
		"code": "95744 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Right yoke trim switch left press": {
		"method": "calcCode",
		"code": "96000 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Right yoke trim switch left release": {
		"method": "calcCode",
		"code": "96001 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Right yoke trim switch right press": {
		"method": "calcCode",
		"code": "96002 (>L:CEVENT)"
	},
	"TFDi.MD11.Flight Controls.Right yoke trim switch right release": {
		"method": "calcCode",
		"code": "96003 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right yoke autopilot button press": {
		"method": "calcCode",
		"code": "96004 (>L:CEVENT)"
	},
	"TFDi.MD11.Autopilot.Right yoke autopilot button release": {
		"method": "calcCode",
		"code": "96005 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF1 mic button press (observer)": {
		"method": "calcCode",
		"code": "96256 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF1 mic button release (observer)": {
		"method": "calcCode",
		"code": "96257 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF2 mic button press (observer)": {
		"method": "calcCode",
		"code": "96258 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF2 mic button release (observer)": {
		"method": "calcCode",
		"code": "96259 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF3 mic button press (observer)": {
		"method": "calcCode",
		"code": "96260 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF3 mic button release (observer)": {
		"method": "calcCode",
		"code": "96261 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF1 mic button press (observer)": {
		"method": "calcCode",
		"code": "96262 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF1 mic button release (observer)": {
		"method": "calcCode",
		"code": "96263 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF2 mic button press (observer)": {
		"method": "calcCode",
		"code": "96264 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF2 mic button release (observer)": {
		"method": "calcCode",
		"code": "96265 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel SATCOM mic button press (observer)": {
		"method": "calcCode",
		"code": "96266 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel SATCOM mic button release (observer)": {
		"method": "calcCode",
		"code": "96267 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom mic button press (observer)": {
		"method": "calcCode",
		"code": "96268 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom mic button release (observer)": {
		"method": "calcCode",
		"code": "96269 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel cabin mic button press (observer)": {
		"method": "calcCode",
		"code": "96270 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel cabin mic button release (observer)": {
		"method": "calcCode",
		"code": "96271 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF1 volume increase (observer)": {
		"method": "calcCode",
		"code": "96272 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF1 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96273 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF1 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96274 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF2 volume increase (observer)": {
		"method": "calcCode",
		"code": "96275 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF2 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96276 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF2 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96277 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF3 volume increase (observer)": {
		"method": "calcCode",
		"code": "96278 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF3 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96279 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VHF3 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96280 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF1 volume increase (observer)": {
		"method": "calcCode",
		"code": "96281 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF1 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96282 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF1 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96283 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF2 volume increase (observer)": {
		"method": "calcCode",
		"code": "96284 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF2 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96285 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel HF2 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96286 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel SATCOM volume increase (observer)": {
		"method": "calcCode",
		"code": "96287 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel SATCOM volume decrease (observer)": {
		"method": "calcCode",
		"code": "96288 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel SATCOM volume left button press (observer)": {
		"method": "calcCode",
		"code": "96289 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom volume increase (observer)": {
		"method": "calcCode",
		"code": "96290 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom volume decrease (observer)": {
		"method": "calcCode",
		"code": "96291 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom volume left button press (observer)": {
		"method": "calcCode",
		"code": "96292 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel cabin volume increase (observer)": {
		"method": "calcCode",
		"code": "96293 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel cabin volume decrease (observer)": {
		"method": "calcCode",
		"code": "96294 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel cabin volume left button press (observer)": {
		"method": "calcCode",
		"code": "96295 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel PA volume increase (observer)": {
		"method": "calcCode",
		"code": "96296 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel PA volume decrease (observer)": {
		"method": "calcCode",
		"code": "96297 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel PA volume left button press (observer)": {
		"method": "calcCode",
		"code": "96298 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR1 volume increase (observer)": {
		"method": "calcCode",
		"code": "96299 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR1 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96300 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR1 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96301 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR2 volume increase (observer)": {
		"method": "calcCode",
		"code": "96302 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR2 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96303 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel VOR2 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96304 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS1 volume increase (observer)": {
		"method": "calcCode",
		"code": "96305 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS1 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96306 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS1 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96307 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS2 volume increase (observer)": {
		"method": "calcCode",
		"code": "96308 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS2 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96309 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ILS2 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96310 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF1 volume increase (observer)": {
		"method": "calcCode",
		"code": "96311 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF1 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96312 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF1 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96313 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF2 volume increase (observer)": {
		"method": "calcCode",
		"code": "96314 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF2 volume decrease (observer)": {
		"method": "calcCode",
		"code": "96315 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ADF2 volume left button press (observer)": {
		"method": "calcCode",
		"code": "96316 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel marker volume increase (observer)": {
		"method": "calcCode",
		"code": "96317 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel marker volume decrease (observer)": {
		"method": "calcCode",
		"code": "96318 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel marker volume left button press (observer)": {
		"method": "calcCode",
		"code": "96319 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ident button press (observer)": {
		"method": "calcCode",
		"code": "96320 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel ident button release (observer)": {
		"method": "calcCode",
		"code": "96321 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom radio switch left button press (observer)": {
		"method": "calcCode",
		"code": "96322 (>L:CEVENT)"
	},
	"TFDi.MD11.Audio panel.Audio panel intercom radio switch right button press (observer)": {
		"method": "calcCode",
		"code": "96323 (>L:CEVENT)"
	},
	"TFDi.MD11.Backlights and flood lights.Cockpit dome light": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:1, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Glareshield (CGS) flood light": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:16, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Overhead flood light": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:17, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Briefcase flood light (left)": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:3, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Briefcase flood light (right)": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:4, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Pedestal and MIP flood light": {
		"method": "calcCode",
		"code": "(A:LIGHT POTENTIOMETER:2, percent)"
	},
	"TFDi.MD11.Backlights and flood lights.Overhead panel backlight": {
		"method": "calcCode",
		"code": "(L:MD11_LTS_OVHD_INTEG, Number)"
	},
	"TFDi.MD11.Backlights and flood lights.Glareshield (CGS) backlight": {
		"method": "calcCode",
		"code": "(L:MD11_LTS_CGS_INTEG, Number)"
	},
	"TFDi.MD11.Backlights and flood lights.Pedestal and main panel backlight": {
		"method": "calcCode",
		"code": "(L:MD11_LTS_INSTPED_INTEG, Number)"
	},
	"TFDi.MD11.Backlights and flood lights.Overhead standby compass light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_STBY_COMP_LT, Number)"
	},
	"TFDi.MD11.Miscellaneous.Seatbelt sign": {
		"method": "calcCode",
		"code": "(L:MD11_CAB_SEATBELT_LT, bool)"
	},
	"TFDi.MD11.Miscellaneous.No smoking sign": {
		"method": "calcCode",
		"code": "(L:MD11_CAB_NOSMOKE_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Passenger address light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_PA_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Passenger address light on": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_PA_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.All stations light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_ALL_STA_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Forward attendant light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_FWD_ATTND_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Forward attendant call light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_FWD_ATTND_CALL_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Mid attendant light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MID_ATTND_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Mid attendant call light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MID_ATTND_CALL_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Overwing attendant light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_OVW_ATTND_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Overwing attendant call light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_OVW_ATTND_CALL_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Aft attendant light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_AFT_ATTND_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Aft attendant call light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_AFT_ATTND_CALL_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Maintenance interphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MAINT_INTP_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Maintenance interphone light on": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MAINT_INTP_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Mechanic light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MECH_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Mechanic call light on": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MECH_CALL_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Passenger address in use light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_PAINUSE_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Movie light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_MOVIE_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Crew rest light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_CREW_REST_LT, bool)"
	},
	"TFDi.MD11.Overhead annunciator panel.Crew rest call light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_CREW_REST_CALL_LT, bool)"
	},
	"TFDi.MD11.Center console.Cockpit door fail light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CKPTDOOR_FAIL_LT, bool)"
	},
	"TFDi.MD11.Center console.Cockpit door auto light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CKPTDOOR_AUTO_LT, bool)"
	},
	"TFDi.MD11.Center Pedestal Display Unit (CDU).Center CDU display light": {
		"method": "calcCode",
		"code": "(L:MD11_CMCDU_DSPY_LT, bool)"
	},
	"TFDi.MD11.Center Pedestal Display Unit (CDU).Center CDU fail light": {
		"method": "calcCode",
		"code": "(L:MD11_CMCDU_FAIL_LT, bool)"
	},
	"TFDi.MD11.Center Pedestal Display Unit (CDU).Center CDU message light": {
		"method": "calcCode",
		"code": "(L:MD11_CMCDU_MSG_LT, bool)"
	},
	"TFDi.MD11.Center Pedestal Display Unit (CDU).Center CDU offset light": {
		"method": "calcCode",
		"code": "(L:MD11_CMCDU_OFST_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Aileron deflection override light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AIL_DEFL_OVRD_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine A manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_A_MAN_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine B manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_B_MAN_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF1 light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_RADIO_PNL_VHF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF2 light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_RADIO_PNL_VHF2_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF3 light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_RADIO_PNL_VHF3_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF1 light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_RADIO_PNL_HF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF2 light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_RADIO_PNL_HF2_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF1 light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_RADIO_PNL_VHF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF2 light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_RADIO_PNL_VHF2_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF3 light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_RADIO_PNL_VHF3_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF1 light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_RADIO_PNL_HF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF2 light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_RADIO_PNL_HF2_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF1 light (observer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_OBS_RADIO_PNL_VHF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF2 light (observer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_OBS_RADIO_PNL_VHF2_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel VHF3 light (observer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_OBS_RADIO_PNL_VHF3_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF1 light (observer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_OBS_RADIO_PNL_HF1_LT, bool)"
	},
	"TFDi.MD11.Radios.Radio panel HF2 light (observer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_OBS_RADIO_PNL_HF2_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF3_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF3_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_SAT_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT telephone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_SAT_TEL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_INT_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT mechanic light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_INT_MECH_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB microphone light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_CAB_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB call light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_CAB_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF3_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF3_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_SAT_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel SAT telephone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_SAT_TELL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_INT_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT mechanic light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_INT_MECH_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB microphone light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_CAB_MIC_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB call light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_CAB_CALL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VHF3_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_HF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_INT_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_CAB_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_PA_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VOR1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_VOR2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_ILS1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_ILS2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_ADF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_ADF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel marker volume light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_MKR_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF1 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF2 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VHF3 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VHF3_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF1 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel HF2 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_HF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel INT volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_INT_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel CAB volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_CAB_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel PA volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_PA_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR1 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VOR1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel VOR2 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_VOR2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS1 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_ILS1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ILS2 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_ILS2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF1 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_ADF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ADF2 volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_ADF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel marker volume light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_MKR_VOL_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ident light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_CPT_AUDIO_PNL_IDENT_LT, bool)"
	},
	"TFDi.MD11.Audio Panel.Audio panel ident light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_PED_FO_AUDIO_PNL_IDENT_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display engine light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_ENG_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display hydraulics light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_HYD_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display electrical light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_ELEC_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display air light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_AIR_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display fuel light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_FUEL_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display configuration light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_CONFIG_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.System display miscellaneous light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_SD_MISC_LT, bool)"
	},
	"TFDi.MD11.Systems display panel.Transponder fail light": {
		"method": "calcCode",
		"code": "(L:MD11_PED_XPNDR_FAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU on light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU off light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU fuel light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_FUEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU fail light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_FAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU door light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_DOOR_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU blank light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_BLANK_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU generator light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APU_GEN_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 1 fire light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG1FIRE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 2 fire light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG2FIRE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 3 fire light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG3FIRE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.APU fire light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_APUFIRE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 1 agent 1 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG1AGENT1LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 1 agent 2 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG1AGENT2LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 2 agent 1 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG2AGENT1LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 2 agent 2 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG2AGENT2LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 3 agent 1 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG3AGENT1LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Engine 3 agent 2 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ENG3AGENT2LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward heat light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_HEAT_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward smoke light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_SMOKE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward vent disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_VENTDISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward vent off light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_VENTOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward agent 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_AGNT1_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward agent 1 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_AGNT1LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward agent 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_AGNT2_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke forward agent 2 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_FWD_AGNT2LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke test light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_TEST_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft heat light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_HEAT_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft smoke light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_SMOKE_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft vent disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_VENTDISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft vent off light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_VENTOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft agent 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_AGNT1_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft agent 1 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_AGNT1LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft agent 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_AGNT2_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Cargo smoke aft agent 2 low light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_CRGSMK_AFT_AGNT2LO_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.GPWS terrain override light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_GPWS_TERROVRD_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.Electrical evacuation alarm light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_ELEC_EVAC_ALARM_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.Flight director off light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_FLTDIROFF_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.Flight director captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_FLTDIRCAP2_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.Flight director first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_FLTDIRFO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.CADC captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_CADCCAP2_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.CADC first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_CADCFO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.IRS captain auxiliary light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_IRS_CAPTAUX_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.IRS first officer auxiliary light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_IRS_FOAUX_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.FMS captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_FMSCAP2_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.FMS first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_FMSFO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.VOR captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_VORCAP2_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.VOR first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_VORFO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.Approach captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_APPRCAP2_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.Approach first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_APPRFO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.EIS first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_EIS_FO1_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.EIS auxiliary light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_EIS_FOAUX_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.EIS auxiliary light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_EIS_CAPAUX_LT, bool)"
	},
	"TFDi.MD11.Left Side Panel.EIS light (captain 2)": {
		"method": "calcCode",
		"code": "(L:MD11_LSIDE_INP_EIS_CAP2_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Center gear light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_CTR_GEAR_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Nose gear red light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_NOSE_RED_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Nose gear green light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_NOSE_GREEN_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Left gear red light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_LEFT_RED_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Left gear green light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_LEFT_GREEN_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Center gear red light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_CTR_RED_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Center gear green light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_CTR_GREEN_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Right gear red light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_RIGHT_RED_LT, bool)"
	},
	"TFDi.MD11.Main Instrument Panel.Right gear green light": {
		"method": "calcCode",
		"code": "(L:MD11_MIP_RIGHT_GREEN_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.Flight director off light": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_FLTDIROFF_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.Flight director captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_FLTDIRCAP2_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.Flight director first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_FLTDIRFO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.CADC captain 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_CADCCAP2_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.CADC first officer 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_CADCFO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.IRS auxiliary light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_IRS_CAPTAUX_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.IRS auxiliary light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_IRS_FOAUX_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.FMS light (captain 2)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_FMSCAP2_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.FMS light (first officer 1)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_FMSFO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.VOR light (captain 2)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_VORCAP2_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.VOR light (first officer 1)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_VORFO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.Approach light (captain 2)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_APPRCAP2_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.Approach light (first officer 1)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_APPRFO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.EIS light (first officer 1)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_EIS_FO1_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.EIS auxiliary light (first officer)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_EIS_FOAUX_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.EIS auxiliary light (captain)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_EIS_CAPAUX_LT, bool)"
	},
	"TFDi.MD11.Right Side Panel.EIS light (captain 2)": {
		"method": "calcCode",
		"code": "(L:MD11_RSIDE_INP_EIS_CAP2_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Left fuel light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_L_FUEL_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Center fuel light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_C_FUEL_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Right fuel light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_R_FUEL_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Left start light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_L_START_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Center start light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_C_START_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Right start light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_R_START_LT, bool)"
	},
	"TFDi.MD11.Throttle quadrant.Park light": {
		"method": "calcCode",
		"code": "(L:MD11_THR_PARK_LT, bool)"
	},
	"TFDi.MD11.Center Console.Slat stow light": {
		"method": "calcCode",
		"code": "(L:MD11_CTR_SLAT_STOW_LT, bool)"
	},
	"TFDi.MD11.Left MCDU.Display light": {
		"method": "calcCode",
		"code": "(L:MD11_LMCDU_DSPY_LT, bool)"
	},
	"TFDi.MD11.Left MCDU.Fail light": {
		"method": "calcCode",
		"code": "(L:MD11_LMCDU_FAIL_LT, bool)"
	},
	"TFDi.MD11.Left MCDU.Message light": {
		"method": "calcCode",
		"code": "(L:MD11_LMCDU_MSG_LT, bool)"
	},
	"TFDi.MD11.Left MCDU.Offset light": {
		"method": "calcCode",
		"code": "(L:MD11_LMCDU_OFST_LT, bool)"
	},
	"TFDi.MD11.Right MCDU.Display light": {
		"method": "calcCode",
		"code": "(L:MD11_RMCDU_DSPY_LT, bool)"
	},
	"TFDi.MD11.Right MCDU.Fail light": {
		"method": "calcCode",
		"code": "(L:MD11_RMCDU_FAIL_LT, bool)"
	},
	"TFDi.MD11.Right MCDU.Message light": {
		"method": "calcCode",
		"code": "(L:MD11_RMCDU_MSG_LT, bool)"
	},
	"TFDi.MD11.Right MCDU.Offset light": {
		"method": "calcCode",
		"code": "(L:MD11_RMCDU_OFST_LT, bool)"
	},
	"TFDi.MD11.Center Console.Auxiliary hydraulic pump light": {
		"method": "calcCode",
		"code": "(L:MD11_CTR_AUX_HYD_PUMP_LT, bool)"
	},
	"TFDi.MD11.Center Console.Antiskid light": {
		"method": "calcCode",
		"code": "(L:MD11_CTR_ANTISKID_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Engine fail light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_ENG_FAIL_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Master warning light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_MST_WRN_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Master caution light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_MST_CAUT_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Engine fail light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_ENG_FAIL_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Master warning light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_MST_WRN_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Master caution light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_MST_CAUT_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Below glide slope light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_BELOW_GS_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Glide slope inhibit light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_GS_INHIBIT_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Below glide slope light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_BELOW_GS_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Glide slope inhibit light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_GS_INHIBIT_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Autobrake disarm light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_GSL_ABS_DISARM_LT, bool)"
	},
	"TFDi.MD11.Ground Service Panel.Autobrake disarm light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_GSR_ABS_DISARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.IRS 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_IRS_1_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.IRS 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_IRS_2_LT, bool)"
	},
	"TFDi.MD11.Overhead Panel.IRS 3 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_IRS_3_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 1 arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN1_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 1 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN1_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 1 drive disconnect light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN1_DRIVE_DISCONNECT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 1 drive fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN1_DRIVE_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 2 arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN2_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 2 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN2_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 2 drive disconnect light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN2_DRIVE_DISCONNECT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 2 drive fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN2_DRIVE_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 3 arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN3_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 3 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN3_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 3 drive disconnect light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN3_DRIVE_DISCONNECT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator 3 drive fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GEN3_DRIVE_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Cabin bus off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_CABIN_BUS_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Left emergency AC off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_L_EMER_AC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 1 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC1_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 2 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC2_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC ground service off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC_GND_SVC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.APU power on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_APU_PWR_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.APU power available light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_APU_PWR_AVAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 3 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC3_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Right emergency AC off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_R_EMER_AC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Emergency power off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_EMER_PWR_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Emergency power on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_EMER_PWR_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 1 tie arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC1_TIE_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 1 tie off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC1_TIE_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Galley external power on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GLY_EXT_PWR_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Galley external power available light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GLY_EXT_PWR_AVAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 2 tie arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC2_TIE_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 2 tie off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC2_TIE_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.External power on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_EXT_PWR_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.External power available light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_EXT_PWR_AVAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 3 tie arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC3_TIE_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.AC bus 3 tie off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_AC3_TIE_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.ADG electrical on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_ADG_ELEC_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Battery off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_BATT_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Battery bus off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_BATT_BUS_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Left emergency DC off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_L_EMER_DC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC bus 1 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC1_BUS_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC bus 1 tie off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC1_TIE_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC bus 2 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC2_BUS_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC ground service off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC_GND_SVC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC bus 3 tie off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC3_TIE_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.DC bus 3 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_DC3_BUS_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Right emergency DC off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_R_EMER_DC_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.System select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_SYS_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.System manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_SYS_MANUAL_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Galley bus 1 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GALLEY_BUS_1_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Galley bus 2 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GALLEY_BUS_2_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Galley bus 3 light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ELEC_GALLEY_BUS_3_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.System 1 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_SYS_1_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.System 2 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_SYS_2_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.System 3 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_SYS_3_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.Auxiliary pump 1 on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_AUX_PUMP_1_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.Auxiliary pump 2 on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_AUX_PUMP_2_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.System select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_SYS_SELECT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.System manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_SYS_MANUAL_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.1/3 RMP on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_1_3_RMP_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.1/3 RMP disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_1_3_RMP_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.2/3 RMP on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_2_3_RMP_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.2/3 RMP disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_2_3_RMP_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 1 left fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_1_L_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 1 left off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_1_L_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 1 right fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_1_R_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 1 right off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_1_R_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 2 left fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_2_L_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 2 left off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_2_L_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 2 right fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_2_R_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 2 right off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_2_R_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 3 left fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_3_L_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 3 left off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_3_L_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 3 right fault light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_3_R_FAULT_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.EDP 3 right off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_EDP_3_R_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Hydraulics.Hydraulics test light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_HYD_TEST_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 fill arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_FILL_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 fill light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_FILL_FILL_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 pump low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_PUMP_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 pump off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_PUMP_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 crossfeed on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_XFEED_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 crossfeed disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_XFEED_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 fill arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_FILL_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 fill light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_FILL_FILL_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 pump low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_PUMP_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 pump off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_PUMP_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 crossfeed on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_XFEED_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 crossfeed disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_XFEED_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 fill arm light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_FILL_ARM_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 fill light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_FILL_FILL_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 pump low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_PUMP_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 pump off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_PUMP_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 crossfeed on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_XFEED_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 crossfeed disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_XFEED_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.System select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_SYSTEM_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.System manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_SYSTEM_MAN_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 1 transfer light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_1_TRANS_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 transfer light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_TRANS_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 2 transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_2_TRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 transfer light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_TRANS_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tank 3 transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TANK_3_TRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Fuel dump light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_DUMP_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Left transfer on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_LEFT_TRANS_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Left transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_LEFT_TRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Right transfer on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_RIGHT_TRANS_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Right transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_RIGHT_TRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tail transfer on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TAIL_TRANS_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Tail transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_TAIL_TRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Alternate pump on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_ALT_PUMP_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Alternate pump low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_ALT_PUMP_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Manifold drain light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_MANF_DRAIN_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Standby compass light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_STBY_COMP_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Runway turnoff light (left)": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_RWY_TURNOFF_L_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Runway turnoff light (right)": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_RWY_TURNOFF_R_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Navigation light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_NAV_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Logo light on": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_LOGO_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Logo light off": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_LOGO_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.Beacon light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_BCN_LT, bool)"
	},
	"TFDi.MD11.Overhead Lights.High intensity light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LTS_HI_INT_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 1 flow light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_1_FLOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 1 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_1_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 2 flow light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_2_FLOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 2 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_2_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 3 flow light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_3_FLOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Pack 3 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_PACK_3_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.System select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_SYSTEM_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.System manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_SYSTEM_MAN_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Econ cabin altitude light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ECON_CAB_ALT_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Econ off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ECON_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Trim air avionics overheat light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_TRIM_AIR_AVIONICS_OVHT_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Trim air off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_TRIM_AIR_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Cabin system select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_CABIN_SYSTEM_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Cabin system manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_CABIN_SYSTEM_MAN_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Outflow closed light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_OUTFLOW_CLOSED_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 1 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_1_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 1 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_1_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 1 manifold light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_1_MANF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 1 temperature high light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_1_TEMP_HI_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 2 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_2_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 2 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_2_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 2 manifold light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_2_MANF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 2 temperature high light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_2_TEMP_HI_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 3 pressure light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_3_PRESS_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 3 off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_3_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 3 manifold light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_3_MANF_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Bleed 3 temperature high light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_BLEED_3_TEMP_HI_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.APU on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_APU_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.APU use engine air light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_APU_USE_ENG_AIR_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Avionics fan flow light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_AVIONICS_FAN_FLOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Avionics fan override light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_AVIONICS_FAN_OVRD_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.No masks light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_NO_MASKS_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Isolation valve 1-2 on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ISOL_1_2_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Isolation valve 1-2 disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ISOL_1_2_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Isolation valve 1-3 on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ISOL_1_3_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Isolation valve 1-3 disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_ISOL_1_3_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Ditching light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_DITCHING_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 1 select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_1_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 2 select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_2_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 3 select light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_3_SEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 1 alternate light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_1_ALTN_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 2 alternate light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_2_ALTN_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.FADEC 3 alternate light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_FADEC_3_ALTN_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.Ignition off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_IGN_OFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.Engine A light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_A_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.Engine B light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_B_LT, bool)"
	},
	"TFDi.MD11.Overhead Engine.Ignition override light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_ENG_IGN_OVRD_LT, bool)"
	},
	"TFDi.MD11.Overhead Cargo.Cargo door test light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_CRG_DOOR_TEST_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator bus 1 reset light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_GEN_BUS_1_RESET_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator bus 2 reset light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_GEN_BUS_2_RESET_LT, bool)"
	},
	"TFDi.MD11.Overhead Electrical.Generator bus 3 reset light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_GEN_BUS_3_RESET_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Fuel dump stop light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_DUMP_STOP_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.Flap limit light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_FLAPLIM_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.Elevator feel light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_ELEVFEEL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.UYDA fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_UYDAFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.UYDA off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_UYDAOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.UYDB fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_UYDBFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.UYDB off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_UYDBOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LYDA fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LYDAFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LYDA off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LYDAOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LYDB fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LYDBFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LYDB off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LYDBOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LLO fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LLOFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LLO off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LLOFOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LLI fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LLIFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.LLI off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_LLIFOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.RLI fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_RLIFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.RLI off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_RLIFOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.RLO fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_RLOFAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Flight Control.RLO off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FLTCTL_RLOFOFF_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 1 anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG1_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 1 anti-ice disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG1_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 2 anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG2_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 2 anti-ice disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG2_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 3 anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG3_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Engine 3 anti-ice disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_ENG3_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Wing anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_WING_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Wing anti-ice disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_WING_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Tail anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_TAIL_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Tail anti-ice disagree light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_TAIL_DISAG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Left windshield anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_WNDSHLD_AICE_L_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.High windshield anti-ice light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_WNDSHLD_AICE_HIGH_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Windshield anti-ice normal light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_WNDSHLD_AICE_NORM_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Right windshield anti-ice on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_WNDSHLD_AICE_R_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Windshield defog light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_WNDSHLD_AICE_DEFOG_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Anti-ice system manual light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_SYSTEM_MAN_LT, bool)"
	},
	"TFDi.MD11.Overhead Locks.Lock fail light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LOCK_FAIL_LT, bool)"
	},
	"TFDi.MD11.Overhead Locks.Lock auto light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_LOCK_AUTO_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Upper auxiliary bypass light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_UPRAUX_BYP_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Forward auxiliary left transfer on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_FWDAUX_LTRANS_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Forward auxiliary left transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_FWDAUX_LTRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Forward auxiliary right transfer on light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_FWDAUX_RTRANS_ON_LT, bool)"
	},
	"TFDi.MD11.Overhead Fuel.Forward auxiliary right transfer low light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_FUEL_FWDAUX_RTRANS_LOW_LT, bool)"
	},
	"TFDi.MD11.Overhead Anti-Ice.Anti-ice auto light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_AICE_AUTO_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Cabin air smoke light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_CAB_AIR_SMOKE_LT, bool)"
	},
	"TFDi.MD11.Overhead Pneumatics.Cabin air off light": {
		"method": "calcCode",
		"code": "(L:MD11_OVHD_PNEU_CAB_AIR_OFF_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF1 microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF1 call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF2 microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF2 call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF3 microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF3_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF3 call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF3_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF1 microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF1_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF1 call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF1_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF2 microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF2_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF2 call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF2_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.SAT microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_SAT_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.SAT telephone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_SAT_TEL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.INT microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_INT_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.INT mechanic light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_INT_MECH_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.CAB microphone light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_CAB_MIC_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.CAB call light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_CAB_CALL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF1 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF2 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VHF3 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VHF3_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF1 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.HF2 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_HF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.SAT volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_SAT_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.INT volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_INT_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.CAB volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_CAB_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.PA volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_PA_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VOR1 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VOR1_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.VOR2 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_VOR2_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.ILS1 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_ILS1_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.ILS2 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_ILS2_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.ADF1 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_ADF1_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.ADF2 volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_ADF2_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.Marker volume light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_MKR_VOL_LT, bool)"
	},
	"TFDi.MD11.Observer Audio Panel.Identification light": {
		"method": "calcCode",
		"code": "(L:MD11_OBS_AUDIO_PNL_IDENT_LT, bool)"
	},
	"TFDi.MD11.Overhead Emergency.Emergency light": {
		"method": "calcCode",
		"code": "(L:MD11_AOVHD_EMER_LT, bool)"
	},
	"FSS.B727-200 F.APU.Input.APU_START": {
		"method": "calcCode",
		"code": "2 (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)"
	},
	"FSS.B727-200 F.APU.Input.APU_ON": {
		"method": "calcCode",
		"code": "1  (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)"
	},
	"FSS.B727-200 F.APU.Input.APU_OFF": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.EXT_PWR GRD SERVICE": {
		"method": "calcCode",
		"code": "0  (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.EXT_PWR OFF": {
		"method": "calcCode",
		"code": "1  (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.EXT_PWR ON": {
		"method": "calcCode",
		"code": "2 (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER STBY": {
		"method": "calcCode",
		"code": "0 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER APU": {
		"method": "calcCode",
		"code": "1 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER GEN 1": {
		"method": "calcCode",
		"code": "2 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER GEN 2": {
		"method": "calcCode",
		"code": "3 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER GEN 3": {
		"method": "calcCode",
		"code": "4 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"FSS.B727-200 F.Electrical.Input.ESS POWER EXT PWR": {
		"method": "calcCode",
		"code": "5 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)"
	},
	"A2A SIM.Comanche 250.Gear.Input.PA24 Parking Brake On": {
		"method": "calcCode",
		"code": "1 s0 (>L:ParkingBrakePosition, bool) \nl0 (>L:ParkingBrakeActive, bool) \n(>H:A2A_PARKING_BRAKE_POSITION)"
	},
	"A2A SIM.Comanche 250.Gear.Input.PA24 Parking Brake Off": {
		"method": "calcCode",
		"code": "0 s0 (>L:ParkingBrakePosition, bool) \nl0 (>L:ParkingBrakeActive, bool) \n(>H:A2A_PARKING_BRAKE_POSITION)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Landing Light L on": {
		"method": "calcCode",
		"code": "19 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Landing Light L off": {
		"method": "calcCode",
		"code": "18 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Landing Light R on": {
		"method": "calcCode",
		"code": "21 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Landing Light R off": {
		"method": "calcCode",
		"code": "20 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Safety.Input.Seatbelt on": {
		"method": "calcCode",
		"code": "16 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Safety.Input.Seatbelt off": {
		"method": "calcCode",
		"code": "17 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Taxi light on": {
		"method": "calcCode",
		"code": "27 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Taxi light off": {
		"method": "calcCode",
		"code": "26 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Logo light on": {
		"method": "calcCode",
		"code": "29 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Logo light off": {
		"method": "calcCode",
		"code": "28 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.APU.Input.APU ON": {
		"method": "calcCode",
		"code": "8 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.APU.Input.APU OFF": {
		"method": "calcCode",
		"code": "7 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 1 fuel control lever idle": {
		"method": "calcCode",
		"code": "12 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 1 fule lever CUTOFF": {
		"method": "calcCode",
		"code": "11 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 2 Fuel lever idle": {
		"method": "calcCode",
		"code": "14 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 2 Fuel lever CUTOFF": {
		"method": "calcCode",
		"code": "13 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 1 starter counter clock wise": {
		"method": "calcCode",
		"code": "3 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 1 starter  clock wise": {
		"method": "calcCode",
		"code": "4 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 2 starter counter clock wise": {
		"method": "calcCode",
		"code": "5 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine 2 starter clock wise": {
		"method": "calcCode",
		"code": "6 (>L:VC_Engine_APU_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Position & Strobe backwards": {
		"method": "calcCode",
		"code": "30 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Position & Strobe forward": {
		"method": "calcCode",
		"code": "31 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.ANTI COLLISION ON": {
		"method": "calcCode",
		"code": "33 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.ANTI COLLISION OFF": {
		"method": "calcCode",
		"code": "32 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.WING ON": {
		"method": "calcCode",
		"code": "35 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.WING OFF": {
		"method": "calcCode",
		"code": "34 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.WHEEL WELL ON": {
		"method": "calcCode",
		"code": "37 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.WHEEL WELL OFF": {
		"method": "calcCode",
		"code": "36 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autothrust System.Input.TOGA Press": {
		"method": "calcCode",
		"code": "15 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autothrust System.Input.TOGA Release": {
		"method": "calcCode",
		"code": "16 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP LVL CHG": {
		"method": "calcCode",
		"code": "49 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP LNAV": {
		"method": "calcCode",
		"code": "5 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP AP A CMD": {
		"method": "calcCode",
		"code": "7 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP AP B CMD": {
		"method": "calcCode",
		"code": "9 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP HDG Decrease": {
		"method": "calcCode",
		"code": "27 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP HDG Increase": {
		"method": "calcCode",
		"code": "28 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP VOR/LOC": {
		"method": "calcCode",
		"code": "29 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP ALT Decrease": {
		"method": "calcCode",
		"code": "31 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP ALT Increase": {
		"method": "calcCode",
		"code": "32 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP V/S Decrease": {
		"method": "calcCode",
		"code": "35 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP V/S Increase": {
		"method": "calcCode",
		"code": "36 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP SPD": {
		"method": "calcCode",
		"code": "47 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP HDG Select": {
		"method": "calcCode",
		"code": "51 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP APP": {
		"method": "calcCode",
		"code": "53 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP ALT HLD": {
		"method": "calcCode",
		"code": "55 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP V/S": {
		"method": "calcCode",
		"code": "57 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot APP Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_APP_L)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot VS Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_VS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot VNAV ALT Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_VNAV_ALT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot ALT Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_ALT)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot AP Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_AP)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot YD Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_YD)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP SPD Increase": {
		"method": "calcCode",
		"code": "22 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP SPD Decrease": {
		"method": "calcCode",
		"code": "21 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Lights.Input.Taxi Lights ON": {
		"method": "calcCode",
		"code": "27 (>L:VC_Miscellaneous_trigger_VAL)"
	},
	"iFly.737-Max8.Lights.Input.Taxi Lights OFF": {
		"method": "calcCode",
		"code": "26 (>L:VC_Miscellaneous_trigger_VAL)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP VNAV": {
		"method": "calcCode",
		"code": "3 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot IAS Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_IAS)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot BC Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_BC)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot CPL Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_CPL)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Autopilot.Output.MSATR Autopilot MAN SPD Status": {
		"method": "calcCode",
		"code": "(L:MSATR_FGCP_STAT_MAN_SPD)"
	},
	"Asobo.Longitude.Avionics.Input.AP_NAV_SRC_TOGGLE": {
		"method": "calcCode",
		"code": "(L:WTGarmin_Nav_ActiveNavSource:1) ++ 3 % (>L:WTGarmin_Nav_ActiveNavSource:1, enum)"
	},
	"iFly.737-Max8.Autopilot.Input.SPD INTV": {
		"method": "calcCode",
		"code": "23 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Input.ALT INTV": {
		"method": "calcCode",
		"code": " 33 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Input.A/T ARM SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Input.CAPT FLIGHT DIRECTOR ON": {
		"method": "calcCode",
		"code": "42 (>L:VC_Automatic_Flight_trigger_VAL,number)\n"
	},
	"iFly.737-Max8.Autopilot.Input.CAPT FLIGHT DIRECTOR OFF": {
		"method": "calcCode",
		"code": "41 (>L:VC_Automatic_Flight_trigger_VAL,number)\n"
	},
	"iFly.737-Max8.Autopilot.Output.CMD A PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_CMD_A_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.CMD B PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_CMD_B_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.A/T ARM LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_AT_ARM_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.N1 PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_N1_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.SPEED PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_SPEED_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.VNAV PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_VNAV_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.LVL CHG PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_LVL_CHG_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.HDG SEL PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_HDG_SEL_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.LNAV PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_LNAV_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.VORLOC PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_VOR_LOC_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.APP PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_APP_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.ALT HLD PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_ALT_HLD_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.V/S PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_VS_SW_LIGHT_VAL,number)\n"
	},
	"iFly.737-Max8.Miscellaneous.Input.HUD": {
		"method": "calcCode",
		"code": "158 (>L:VC_Instruments_trigger_VAL,number)"
	},
	"iFly.737-Max8.Miscellaneous.Input.HUD STOW/DEPLOY": {
		"method": "calcCode",
		"code": "(L:VC_HUD_MOVE_VAL,number)"
	},
	"iFly.737-Max8.Gear.Input.LANDING GEAR UP": {
		"method": "calcCode",
		"code": "1 (>L:VC_Gear_trigger_VAL,number)"
	},
	"iFly.737-Max8.Gear.Input.LANDING GEAR DOWN": {
		"method": "calcCode",
		"code": "2 (>L:VC_Gear_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.IAS VALUE (DOES NOT WORK)": {
		"method": "calcCode",
		"code": "(L:VC_IASMACH_SW_VAL,number)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_HDG_VAR_INC": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_VAR_INC)"
	},
	"Microsoft.Generic.Autopilot.Input.AP_HDG_VAR_DEC": {
		"method": "calcCode",
		"code": "(>K:AP_HDG_VAR_DEC)"
	},
	"iFly.737-Max8.Lights.Output.Pedestal Flood Brightness": {
		"method": "calcCode",
		"code": "(L:VC_Aft_Electronics_Flood_Light_SW_VAL,number)"
	},
	"iFly.737-Max8.Lights.Output.Pedestal Panel Brightness": {
		"method": "calcCode",
		"code": "(L:VC_Aft_Electronics_Panel_Light_SW_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.HEADING VALUE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT HEADING LOCK DIR, degrees)"
	},
	"iFly.737-Max8.Autopilot.Output.ALTITUDE VALUE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT ALTITUDE LOCK VAR:3, Feet)"
	},
	"iFly.737-Max8.Autopilot.Output.V/S VALUE": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT VERTICAL HOLD VAR,Feet/minute)"
	},
	"Black Square.AnalogBaron.Avionics.Input.B58 Edm 760 Step Short Push": {
		"method": "calcCode",
		"code": "(>H:bksq_JpiButton_1_L_Short)"
	},
	"Black Square.AnalogBaron.Avionics.Input.B58 Edm 760 Step long Push": {
		"method": "calcCode",
		"code": "(>H:bksq_JpiButton_1_L_Long)"
	},
	"Black Square.AnalogBaron.Avionics.Input.B58 Edm 760 Lean find Short Push": {
		"method": "calcCode",
		"code": "(>H:bksq_JpiButton_1_R_Short)"
	},
	"Black Square.AnalogBaron.Avionics.Input.B58 Edm 760 Lean find Long Push": {
		"method": "calcCode",
		"code": "(>H:bksq_JpiButton_1_R_Long)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Position Light UP/Strobe": {
		"method": "calcCode",
		"code": "30(>L:VCMiscellaneoustriggerVALnumber)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Position Light DOWN/Nav": {
		"method": "calcCode",
		"code": "31(>L:VCMiscellaneoustriggerVALnumber)"
	},
	"Black Square.Analog King Air.Navigation.Input.HDG CENTER": {
		"method": "calcCode",
		"code": "(A:HEADING INDICATOR degrees) (>K:1:HEADINGBUGSET)"
	},
	"Hype Performance Group.H145.Lights (exterior).Input.H145HISLON": {
		"method": "calcCode",
		"code": "(>H:H145SDKHISLLAMPON)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 1": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_1)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 2": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_2)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 3": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_3)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 4": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_4)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 5": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_5)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 6": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_6)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 7": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_7)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 8": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_8)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 9": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_9)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key 0": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_0)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key DOT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_DOT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_PLUSMINUS)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key A": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_A)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key B": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_B)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key C": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_C)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key D": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_D)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key E": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_E)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key F": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_F)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key G": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_G)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key H": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_H)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key I": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_I)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key J": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_J)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key L": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_L)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key M": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_M)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key N": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_N)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key O": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_O)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key P": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_P)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key Q": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_Q)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key R": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_R)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key S": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_S)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key T": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_T)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key U": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_U)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key V": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_V)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key W": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_W)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key X": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_X)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key Y": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_Y)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key Z": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_Z)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key ESC": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_ESC)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key UP": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_UP)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key RIGHT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_RIGHT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key DOWN": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_DOWN)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key LEFT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_LEFT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key DIR": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_DIR)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key PERF": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_PERF)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key INIT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_INIT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key NAVAID": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_NAVAID)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key MAILBOX": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_MAILBOX)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key FPLN": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_FPLN)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key DEST": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_DEST)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key SECINDEX": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_SECINDEX)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key SURV": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_SURV)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key ATCCOM": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_ATCCOM)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key ND": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_ND)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key SLASH": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_SLASH)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key ESC2": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_ESC2)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key KBD": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_KBD)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key REWIND": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_REWIND)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key FORWARD": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_FORWARD)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key ENT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_ENT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key BACKSPACE": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_BACKSPACE)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key SP": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_SP)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU L Key CLRINFO": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_L_CLRINFO)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 1": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_1)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 2": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_2)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 3": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_3)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 4": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_4)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 5": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_5)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 6": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_6)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 7": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_7)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 8": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_8)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 9": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_9)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key 0": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_0)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key DOT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_DOT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key PLUSMINUS": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_PLUSMINUS)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key A": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_A)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key B": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_B)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key C": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_C)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key D": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_D)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key E": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_E)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key F": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_F)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key G": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_G)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key H": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_H)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key I": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_I)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key J": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_J)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key L": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_L)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key M": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_M)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key N": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_N)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key O": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_O)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key P": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_P)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key Q": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_Q)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key R": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_R)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key S": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_S)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key T": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_T)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key U": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_U)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key V": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_V)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key W": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_W)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key X": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_X)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key Y": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_Y)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key Z": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_Z)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key ESC": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_ESC)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key UP": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_UP)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key RIGHT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_RIGHT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key DOWN": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_DOWN)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key LEFT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_LEFT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key DIR": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_DIR)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key PERF": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_PERF)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key INIT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_INIT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key NAVAID": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_NAVAID)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key MAILBOX": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_MAILBOX)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key FPLN": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_FPLN)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key DEST": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_DEST)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key SECINDEX": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_SECINDEX)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key SURV": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_SURV)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key ATCCOM": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_ATCCOM)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key ND": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_ND)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key SLASH": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_SLASH)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key ESC2": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_ESC2)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key KBD": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_KBD)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key REWIND": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_REWIND)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key FORWARD": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_FORWARD)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key ENT": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_ENT)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key BACKSPACE": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_BACKSPACE)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key SP": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_SP)"
	},
	"Fly By Wire.A380X.MCDU.A380X KCCU R Key CLRINFO": {
		"method": "calcCode",
		"code": "(>H:A32NX_KCCU_R_CLRINFO)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Beacon Lights On": {
		"method": "calcCode",
		"code": "1 s0 0 r (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_0)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Beacon Lights Off": {
		"method": "calcCode",
		"code": "0 s0 0 r (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_0)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X OVHD ENG MODE SELECT KNOB IGN START": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_ENG_MODE_SEL) 2 (>K:TURBINE_IGNITION_SWITCH_SET)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob STBY": {
		"method": "calcCode",
		"code": "0 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob ALT OFF": {
		"method": "calcCode",
		"code": "1 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob XPNDR": {
		"method": "calcCode",
		"code": "2 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob TA": {
		"method": "calcCode",
		"code": "3 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob TA/RA": {
		"method": "calcCode",
		"code": "4 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob ABV": {
		"method": "calcCode",
		"code": "5 (>L:PED_AFT_XPDR_MODE)"
	},
	"Just Flight.BAE146.Radio.Input.Transponder/TCAS Mode select knob BLW": {
		"method": "calcCode",
		"code": "6 (>L:PED_AFT_XPDR_MODE)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X OVHD ENG MODE SELECT KNOB CRANK": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_ENG_MODE_SEL) 0 (>K:TURBINE_IGNITION_SWITCH_SET)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X OVHD ENG MODE SELECT KNOB NORM": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_ENG_MODE_SEL) 1 (>K:TURBINE_IGNITION_SWITCH_SET)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG1 MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:1,Bool) if{ (>K:TOGGLE_STARTER1) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG2 MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:2,Bool) if{ (>K:TOGGLE_STARTER2) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG3 MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:3,Bool) if{ (>K:TOGGLE_STARTER3) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG4 MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "4 (>K:FUELSYSTEM_VALVE_CLOSE)\n(A:GENERAL ENG STARTER:4,Bool) if{ (>K:TOGGLE_STARTER4) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG1 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:1,Bool) ! if{ (>K:TOGGLE_STARTER1) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG2 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "2 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:2,Bool) ! if{ (>K:TOGGLE_STARTER2) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG3 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:3,Bool) ! if{ (>K:TOGGLE_STARTER3) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG4 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "4 (>K:FUELSYSTEM_VALVE_OPEN)\n(A:GENERAL ENG STARTER:4,Bool) ! if{ (>K:TOGGLE_STARTER4) }"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG1&2 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_OPEN) 2 (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG1&2 MASTER SWITCH_OFF": {
		"method": "calcCode",
		"code": "1 (>K:FUELSYSTEM_VALVE_CLOSE) 2 (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG3&4 MASTER SWITCH ON": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_OPEN) 4 (>K:FUELSYSTEM_VALVE_OPEN)"
	},
	"Fly By Wire.A380X.Engine.Input.A380X ENG3&4 MASTER SWITCH OFF": {
		"method": "calcCode",
		"code": "3 (>K:FUELSYSTEM_VALVE_CLOSE) 4 (>K:FUELSYSTEM_VALVE_CLOSE)"
	},
	"Fly By Wire.A380X.Fire Protection.Input.A380X OVHD FIRE TEST PB PRESS": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_FIRE_TEST_PB_IS_PRESSED)"
	},
	"Fly By Wire.A380X.Fire Protection.Input.A380X OVHD FIRE TEST PB RELEASE": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_FIRE_TEST_PB_IS_PRESSED)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES SELECTED MODE DISARM": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES SELECTED MODE BTV": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X_AUTOBRAKES_SELECTED_MODE_LO": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES SELECTED MODE 2": {
		"method": "calcCode",
		"code": "3 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES SELECTED MODE 3": {
		"method": "calcCode",
		"code": "4 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES SELECTED MODE HI": {
		"method": "calcCode",
		"code": "5 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CHECK Button L Press ": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CHECK_LH)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CHECK Button L Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CHECK_LH)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CHECK Button R Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CHECK_RH)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CHECK Button R Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CHECK_RH)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM UP Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_UP)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM UP Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_UP)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM DOWN Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_DOWN)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM DOWN Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_DOWN)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_HF_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_TEL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 SQWK Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_SQWK_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 BLANK Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_BLANK_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 MENU Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_MENU_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_NAV_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 ADK 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_ADK_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 ADK 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_ADK_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 ADK 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_ADK_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 MSG CLR Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_MSG_CLR_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 LSK 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_LSK_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 LSK 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_LSK_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 LSK 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_LSK_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 RST Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_RST_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 UP Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_UP_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DOWN Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DOWN_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 0 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_0_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 4 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_4_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 5 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_5_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 6 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_6_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 7 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_7_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 8 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_8_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT 9 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_9_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT DOT Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_DOT_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DIGIT CLR Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DIGIT_CLR_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF CALL 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_CALL_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VHF_VOL_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_1)\n   l0 (>L:A380X_RMP_3_VHF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_2)\n   l0 (>L:A380X_RMP_3_VHF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 3 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_3) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_3)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_3)\n   l0 (>L:A380X_RMP_3_VHF_VOL_3) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_HF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_1)\n   l0 (>L:A380X_RMP_3_HF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_HF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_2)\n   l0 (>L:A380X_RMP_3_HF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_TEL_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_1)\n   l0 (>L:A380X_RMP_3_TEL_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_TEL_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_2)\n   l0 (>L:A380X_RMP_3_TEL_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 INT VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_INT_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_INT_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_INT_VOL)\n   l0 (>L:A380X_RMP_3_INT_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 CAB VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_CAB_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_CAB_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_CAB_VOL)\n   l0 (>L:A380X_RMP_3_CAB_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 PA VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_PA_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_PA_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_PA_VOL)\n   l0 (>L:A380X_RMP_3_PA_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_NAV_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_NAV_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_NAV_VOL)\n   l0 (>L:A380X_RMP_3_NAV_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DUMMY VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_DUMMY_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_DUMMY_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_DUMMY_VOL)\n   l0 (>L:A380X_RMP_3_DUMMY_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_1)\n   l0 (>L:A380X_RMP_3_VHF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_2)\n   l0 (>L:A380X_RMP_3_VHF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 3 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_3) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_3)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_3)\n   l0 (>L:A380X_RMP_3_VHF_VOL_3) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_HF_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_1)\n   l0 (>L:A380X_RMP_3_HF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_HF_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_2)\n   l0 (>L:A380X_RMP_3_HF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_TEL_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_1)\n   l0 (>L:A380X_RMP_3_TEL_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_TEL_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_2)\n   l0 (>L:A380X_RMP_3_TEL_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 INT VOL Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_INT_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_INT_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_INT_VOL)\n   l0 (>L:A380X_RMP_3_INT_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 CAB VOL Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_CAB_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_CAB_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_CAB_VOL)\n   l0 (>L:A380X_RMP_3_CAB_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 PA VOL Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_PA_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_PA_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_PA_VOL)\n   l0 (>L:A380X_RMP_3_PA_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV VOL Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_NAV_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_NAV_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_NAV_VOL)\n   l0 (>L:A380X_RMP_3_NAV_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DUMMY VOL Knob Dec": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_DUMMY_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_DUMMY_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_DUMMY_VOL)\n   l0 (>L:A380X_RMP_3_DUMMY_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob ADF 1": {
		"method": "calcCode",
		"code": "0 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob ADF 2": {
		"method": "calcCode",
		"code": "1 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob LS": {
		"method": "calcCode",
		"code": "2 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob VOR 1": {
		"method": "calcCode",
		"code": "3 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob VOR 2": {
		"method": "calcCode",
		"code": "4 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV SEL Knob MKR": {
		"method": "calcCode",
		"code": "5 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 1 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_1) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_1) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 2 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_2) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_2) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VHF VOL 3 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_3) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_3) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_HF_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_HF_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_HF_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 HF VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_HF_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_TEL_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_TEL_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_TEL_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 TEL VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_TEL_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 MECH CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_MECH_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 INT VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_INT_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 CAB CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_CAB_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 CAB VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_CAB_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 PA CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_PA_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 PA VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_PA_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 VOICE Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_VOICE_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 NAV VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_NAV_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 BLANK2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_BLANK2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DUMMY VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DUMMY_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 DUMMY2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_DUMMY2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP1 STBY RAD NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_1_STBY_RAD_NAV_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_HF_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_TEL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 SQWK Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_SQWK_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 BLANK Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_BLANK_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 MENU Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_MENU_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_NAV_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 ADK 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_ADK_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 ADK 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_ADK_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 ADK 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_ADK_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 MSG CLR Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_MSG_CLR_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 LSK 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_LSK_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 LSK 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_LSK_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 LSK 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_LSK_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 RST Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_RST_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 UP Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_UP_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DOWN Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DOWN_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 0 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_0_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 4 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_4_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 5 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_5_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 6 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_6_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 7 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_7_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 8 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_8_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT 9 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_9_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT DOT Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_DOT_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DIGIT CLR Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DIGIT_CLR_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF CALL 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_CALL_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 3 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VHF_VOL_3_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_VHF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_1)\n   l0 (>L:A380X_RMP_3_VHF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_VHF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_2)\n   l0 (>L:A380X_RMP_3_VHF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 3 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_VHF_VOL_3) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_3)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_VHF_VOL_3)\n   l0 (>L:A380X_RMP_3_VHF_VOL_3) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_HF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_HF_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_1)\n   l0 (>L:A380X_RMP_3_HF_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_HF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_HF_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_HF_VOL_2)\n   l0 (>L:A380X_RMP_3_HF_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 1 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_TEL_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_TEL_VOL_1)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_1)\n   l0 (>L:A380X_RMP_3_TEL_VOL_1) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 2 Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_TEL_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_TEL_VOL_2)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_TEL_VOL_2)\n   l0 (>L:A380X_RMP_3_TEL_VOL_2) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 INT VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_INT_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_INT_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_INT_VOL)\n   l0 (>L:A380X_RMP_3_INT_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 CAB VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_CAB_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_CAB_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_CAB_VOL)\n   l0 (>L:A380X_RMP_3_CAB_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 PA VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_PA_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_PA_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_PA_VOL)\n   l0 (>L:A380X_RMP_3_PA_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_NAV_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_NAV_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_NAV_VOL)\n   l0 (>L:A380X_RMP_3_NAV_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DUMMY VOL Knob Inc": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_2_DUMMY_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_DUMMY_VOL)\n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n   l0 (>L:A380X_RMP_2_DUMMY_VOL)\n   l0 (>L:A380X_RMP_3_DUMMY_VOL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 3 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 1 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 2 Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 INT VOL Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 CAB VOL Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 PA VOL Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV VOL Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DUMMY VOL Knob Dec": {
		"method": "calcCode",
		"code": "#REF!"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob ADF 1": {
		"method": "calcCode",
		"code": "0 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob ADF 2": {
		"method": "calcCode",
		"code": "1 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob LS": {
		"method": "calcCode",
		"code": "2 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob VOR 1": {
		"method": "calcCode",
		"code": "3 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob VOR 2": {
		"method": "calcCode",
		"code": "4 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV SEL Knob MKR": {
		"method": "calcCode",
		"code": "5 s0 (>L:A380X_RMP_1_NAV_SEL) \n(L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_NAV_SEL) \n  l0 (>L:A380X_RMP_3_NAV_SEL) }"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 1 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_1) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_1) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 2 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_2) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_2) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VHF VOL 3 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) \n(L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ \n  l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_3) \n  l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_3) } "
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_HF_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_HF_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_HF_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 HF VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_HF_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL CALL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_TEL_CALL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL CALL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_TEL_CALL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_TEL_VOL_1_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 TEL VOL 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_TEL_VOL_2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 MECH CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_MECH_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 INT VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_INT_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 CAB CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_CAB_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 CAB VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_CAB_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 PA CALL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_PA_CALL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 PA VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_PA_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 VOICE Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_VOICE_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 NAV VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_NAV_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 BLANK2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_BLANK2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DUMMY VOL Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DUMMY_VOL_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 DUMMY2 Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_DUMMY2_PRESSED)"
	},
	"Fly By Wire.A380X.Radios.A380X RMP2 STBY RAD NAV Button Press": {
		"method": "calcCode",
		"code": "(>H:RMP_2_STBY_RAD_NAV_PRESSED)"
	},
	"Microsoft.Cessna 172.Flight Controls.Input (Potentiometer).Trim Wheel": {
		"method": "calcCode",
		"code": "@ 17 - 32.603 * 16383 - -16383 max 16383 min (>K:ELEVATOR_TRIM_SET)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU LOC Button Press": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_LOC_PUSH)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU AP 1 Button Press": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_AP_1_PUSH)"
	},
	"Fly By Wire.A380X.Autopilot.Output.A380X FCU AP 1 Active Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_1_ACTIVE,Bool)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU AP 2 Button Press": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_AP_2_PUSH)"
	},
	"Fly By Wire.A380X.Autopilot.Output.A380X FCU AP 2 Active Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOPILOT_2_ACTIVE,Bool)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU FD Button Press": {
		"method": "calcCode",
		"code": "1 (>K:TOGGLE_FLIGHT_DIRECTOR)\n2 (>K:TOGGLE_FLIGHT_DIRECTOR)"
	},
	"Fly By Wire.A380X.Autopilot.Output.A380X FCU FD Active Indicator": {
		"method": "calcCode",
		"code": "(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1,Bool)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU ATHR Button Press": {
		"method": "calcCode",
		"code": "1 (>K:AUTO_THROTTLE_ARM)"
	},
	"Fly By Wire.A380X.Autopilot.Output.A380X FCU ATHR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_AUTOTHRUST_STATUS,Enum) 0 >"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU APPR Button Press": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_APPR_PUSH)"
	},
	"Fly By Wire.A380X.Autopilot.Output.A380X FCU APPR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_MODE_ACTIVE,Bool)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU VS Knob Inc": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE,Bool) 1 == if{ \n  (>H:A320_Neo_FCU_VS_INC_FPA)\n} els{ (>H:A320_Neo_FCU_VS_INC_VS) }\n(>H:A320_Neo_CDU_VS) "
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU VS Knob Dec": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE,Bool) 1 == if{ \n  (>H:A320_Neo_FCU_VS_DEC_FPA)\n} els{ (>H:A320_Neo_FCU_VS_DEC_VS) }\n(>H:A320_Neo_CDU_VS) "
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU VS Knob Push": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_VS_PUSH)\n(>H:A320_Neo_CDU_VS)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU VS Knob Pull": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_VS_PULL)\n(>H:A320_Neo_CDU_VS)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU Altitude Increment Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Autopilot_Altitude_Increment, number) 100 == if{ 1000 }\nels{ 100 } (>L:XMLVAR_Autopilot_Altitude_Increment, number) "
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L CSTR Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_CSTR_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_CSTR_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L CSTR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_CSTR_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L WPT Button Press": {
		"method": "calcCode",
		"code": "0 1 (L:A380X_EFIS_L_ACTIVE_FILTER) 1 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L VORD Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A380X_EFIS_L_ACTIVE_FILTER) 2 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L VORD Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L NDB Button Press": {
		"method": "calcCode",
		"code": "0 3 (L:A380X_EFIS_L_ACTIVE_FILTER) 3 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L ARPT Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ARPT_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_ARPT_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L VOR1 Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A32NX_EFIS_L_NAVAID_1_MODE) 2 == ? (>L:A32NX_EFIS_L_NAVAID_1_MODE)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L WX Button Press": {
		"method": "calcCode",
		"code": "0 1 (L:A380X_EFIS_L_ACTIVE_OVERLAY) 1 == ? (>L:A380X_EFIS_L_ACTIVE_OVERLAY)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L TERR Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A380X_EFIS_L_ACTIVE_OVERLAY) 2 == ? (>L:A380X_EFIS_L_ACTIVE_OVERLAY)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L TRAF Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L VOR2 Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A32NX_EFIS_L_NAVAID_2_MODE) 2 == ? (>L:A32NX_EFIS_L_NAVAID_2_MODE)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L ADF Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_NAVAID_2_MODE) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L WPT Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 1 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L NDB Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 3 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L ARPT Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ARPT_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L VOR1 Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_NAVAID_1_MODE) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L WX Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_OVERLAY) 1 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L TERR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_OVERLAY) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L TRAF Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L VOR2 Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_NAVAID_2_MODE) 2 =="
	},
	"Fly By Wire.A380X.Electrical.Input.A380X OVHD ELEC Battery ESS Button Auto": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) "
	},
	"FenixSim.A320.Lights.Output.FNX320 FCU INTEG BRIGHTNESS VALUE": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING)"
	},
	"FenixSim.A320.Lights.Output.FNX320 FCU DISPLAY BRIGHTNESS VALUE": {
		"method": "calcCode",
		"code": "(L:A_FCU_LIGHTING_TEXT)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380 OVHD ELEC Battery ESS Button Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X OVHD ELEC Battery ESS Button Off": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) "
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R CSTR Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_CSTR_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_R_CSTR_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R WPT Button Press": {
		"method": "calcCode",
		"code": "0 1 (L:A380X_EFIS_R_ACTIVE_FILTER) 1 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R VORD Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A380X_EFIS_R_ACTIVE_FILTER) 2 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R NDB Button Press": {
		"method": "calcCode",
		"code": "0 3 (L:A380X_EFIS_R_ACTIVE_FILTER) 3 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R ARPT Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_ARPT_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_R_ARPT_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R VOR1 Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A32NX_EFIS_R_NAVAID_1_MODE) 2 == ? (>L:A32NX_EFIS_R_NAVAID_1_MODE)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R WX Button Press": {
		"method": "calcCode",
		"code": "0 1 (L:A380X_EFIS_R_ACTIVE_OVERLAY) 1 == ? (>L:A380X_EFIS_R_ACTIVE_OVERLAY)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R TERR Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A380X_EFIS_R_ACTIVE_OVERLAY) 2 == ? (>L:A380X_EFIS_R_ACTIVE_OVERLAY)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R TRAF Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_TRAF_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_R_TRAF_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS R VOR2 Button Press": {
		"method": "calcCode",
		"code": "0 2 (L:A32NX_EFIS_R_NAVAID_2_MODE) 2 == ? (>L:A32NX_EFIS_R_NAVAID_2_MODE)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R CSTR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_CSTR_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R WPT Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 1 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R VORD Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R NDB Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_ACTIVE_FILTER) 3 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R ARPT Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_ARPT_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R VOR1 Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_NAVAID_1_MODE) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R WX Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_ACTIVE_OVERLAY) 1 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R TERR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_R_ACTIVE_OVERLAY) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R TRAF Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS R VOR2 Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_R_NAVAID_2_MODE) 2 =="
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Mode Select Knob Inc": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) 3 == (L:A32NX_EFIS_L_ND_RANGE) 7 < and if{\n  (L:A32NX_EFIS_L_ND_RANGE) 0 > if{\n	(L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } }\n(L:A32NX_EFIS_L_ND_MODE) ++ 0 max 4 min s0 (>L:A32NX_EFIS_L_ND_MODE)\nl0 3 == (L:A32NX_EFIS_L_ND_RANGE) 1 > and if{ \n  (L:A32NX_EFIS_L_ND_RANGE) -- 1 max (>L:A32NX_EFIS_L_ND_RANGE) }\nl0 2 < if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) \n  (L:A32NX_EFIS_L_ND_RANGE) 0 == if{\n	1 (>L:A32NX_EFIS_L_ND_RANGE) } }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Mode Select Knob Dec": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) 3 == (L:A32NX_EFIS_L_ND_RANGE) 7 < and if{\n  (L:A32NX_EFIS_L_ND_RANGE) 0 > if{\n	(L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } }\n(L:A32NX_EFIS_L_ND_MODE) -- 0 max 4 min s0 (>L:A32NX_EFIS_L_ND_MODE)\nl0 3 == (L:A32NX_EFIS_L_ND_RANGE) 1 > and if{ \n  (L:A32NX_EFIS_L_ND_RANGE) -- 1 max (>L:A32NX_EFIS_L_ND_RANGE) }\nl0 2 < if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) \n  (L:A32NX_EFIS_L_ND_RANGE) 0 == if{\n	1 (>L:A32NX_EFIS_L_ND_RANGE) } }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Range Select Knob Inc": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or \n(L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ \n  4 (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_RANGE) 7 < (L:A32NX_EFIS_L_OANS_RANGE) 4 == and if{ \n  (L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) }\n(L:A32NX_EFIS_L_OANS_RANGE) 4 < (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ \n  (L:A32NX_EFIS_L_OANS_RANGE) ++ (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_RANGE) 0 > (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ \n   4 (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or\n (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ \n  1 (> L:A32NX_EFIS_L_ND_RANGE) }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Range Select Knob Dec": {
		"method": "calcCode",
		"code": "(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or \n(L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ \n  4 (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_RANGE) 0 == (L:A32NX_EFIS_L_OANS_RANGE) 0 > and if{ \n  (L:A32NX_EFIS_L_OANS_RANGE) -- (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_RANGE) 0 > if{ \n  (L:A32NX_EFIS_L_ND_RANGE) -- (>L:A32NX_EFIS_L_ND_RANGE) }\n(L:A32NX_EFIS_L_ND_RANGE) 0 > (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ \n   4 (>L:A32NX_EFIS_L_OANS_RANGE) }\n(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or\n (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ \n  1 (> L:A32NX_EFIS_L_ND_RANGE) }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Baro Knob Pull": {
		"method": "calcCode",
		"code": "3 (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Baro Knob Push": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_Baro1_Mode)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Baro Knob Dec": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{\n  (L:XMLVAR_Baro_Selector_HPA_1) if{\n	1 (A:KOHLSMAN SETTING MB:1, mbars) -- 16 * (>K:2:KOHLSMAN_SET) }\n  els{ 1 (>K:KOHLSMAN_DEC) }\nels{ (>H:A380X_FCU_BARO_PRESEL_DEC) }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Baro Knob Inc": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{\n  (L:XMLVAR_Baro_Selector_HPA_1) if{\n	1 (A:KOHLSMAN SETTING MB:1, mbars) ++ 16 * (>K:2:KOHLSMAN_SET) }\n  els{ 1 (>K:KOHLSMAN_INC) }\nels{ (>H:A380X_FCU_BARO_PRESEL_INC) }"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L Baro Selector HPA Toggle": {
		"method": "calcCode",
		"code": "(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L TAXI Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ELEC_DC_ESS_BUS_IS_POWERED, Bool) if{ }\n"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L LS Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_LS_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_LS_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L LS Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_LS_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Input.A380X EFIS L VV Button Press": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_VV_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_L_VV_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.EFIS.Output.A380X EFIS L VV Button Indicator": {
		"method": "calcCode",
		"code": "(L:A380X_EFIS_L_VV_BUTTON_IS_ON,Bool)"
	},
	"Fly By Wire.A380X.Miscellaneous.Input.A380X EFIS L CHRONO Button Press": {
		"method": "calcCode",
		"code": "0 (>H:A32NX_EFIS_L_CHRONO_PUSHED)"
	},
	"Fly By Wire.A380X.Warning.Input.A380 MASTER WARNING L Button Press": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_AUTOPILOT_MASTERWAN_L)"
	},
	"Fly By Wire.A380X.Warning.Input.A380 MASTER WARNING L Button Release": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_AUTOPILOT_MASTERWAN_L)"
	},
	"Fly By Wire.A380X.Warning.Input.A380X MASTER CAUTION Button Press": {
		"method": "calcCode",
		"code": "1 (>L:PUSH_AUTOPILOT_MASTERCAUT_L)"
	},
	"Fly By Wire.A380X.Warning.Input.A380X MASTER CAUTION Button Release": {
		"method": "calcCode",
		"code": "0 (>L:PUSH_AUTOPILOT_MASTERCAUT_L)"
	},
	"Fly By Wire.A380X.Warning.Input.A380X DCDU ATC MSG ACK": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_DCDU_ATC_MSG_ACK)\n(L:XMLVAR_Momentary_PUSH_GLARESHIELD_CS_ATCMSG_Pressed) ! (>L:XMLVAR_Momentary_PUSH_GLARESHIELD_CS_ATCMSG_Pressed)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM ABN PROC Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_ABNPROC)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM ABN PROC Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_ABNPROC)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CALL FOR CHECKLIST Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CL)"
	},
	"Fly By Wire.A380X.Avionics.Input.A380X ECAM CALL FOR CHECKLIST Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CL)"
	},
	"PMDG.B737-700.Autopilot.Output.VS diisplay": {
		"method": "calcCode",
		"code": "(L:ngx_V/Swindow, number)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Strobe Lights On": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Strobe Lights Auto": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_STROBE_0)\n1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Strobe Lights Off": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_STROBE_0)\n0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Nav Lights On": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_NAV_0)\n0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Nav Lights Off": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_NAV_0)\n0 0 (>K:2:NAV_LIGHTS_SET) 0 0 (>K:2:LOGO_LIGHTS_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Wing Lights On": {
		"method": "calcCode",
		"code": "1 s0 0 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Wing Lights Off": {
		"method": "calcCode",
		"code": "0 s0 0 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Rwy Turn Off & Camera Lights On": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_TAXI_2) \n2 1 (>K:2:TAXI_LIGHTS_SET) 3 1 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Rwy Turn Off & Camera Lights Off": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_TAXI_2) \n2 0 (>K:2:TAXI_LIGHTS_SET) 3 0 (>K:2:TAXI_LIGHTS_SET)"
	},
	"Fly By Wire.A380X.Lights.Input.A380 OVHD Landing Lights On": {
		"method": "calcCode",
		"code": "1 s0 2 l0 (>K:2:LANDING_LIGHTS_SET)\nl0 (>L:LIGHTING_LANDING_2)"
	},
	"Fly By Wire.A380X.Lights.Input.A380 OVHD Landing Lights Off": {
		"method": "calcCode",
		"code": "0 s0 2 l0 (>K:2:LANDING_LIGHTS_SET)\nl0 (>L:LIGHTING_LANDING_2)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Nose Lights TO": {
		"method": "calcCode",
		"code": "0 (>L:LIGHTING_LANDING_1) \n1 1 (>K:2:LANDING_LIGHTS_SET) \n1 1 (>K:2:TAXI_LIGHTS_SET) "
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Nose Lights Taxi": {
		"method": "calcCode",
		"code": "1 (>L:LIGHTING_LANDING_1) \n1 0 (>K:2:LANDING_LIGHTS_SET) \n1 1 (>K:2:TAXI_LIGHTS_SET) "
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Nose Lights Off": {
		"method": "calcCode",
		"code": "2 (>L:LIGHTING_LANDING_1) \n1 0 (>K:2:LANDING_LIGHTS_SET) \n1 0 (>K:2:TAXI_LIGHTS_SET) "
	},
	"Fly By Wire.A380X.Lights.Input.A380 OVHD Ann Lt TEST": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"Fly By Wire.A380X.Lights.Input.A380 OVHD Ann Lt BRT": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"Fly By Wire.A380X.Lights.Input.A380 OVHD Ann Lt DIM": {
		"method": "calcCode",
		"code": "2 (>L:A32NX_OVHD_INTLT_ANN)"
	},
	"Microsoft.ATR 42-600, ATR 72-600.Lights.Output.MSATR ANNLT Switch Status": {
		"method": "calcCode",
		"code": "(L:MSATR_ITLS_ANNLT)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Emer Exit Lt On": {
		"method": "calcCode",
		"code": "0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Emer Exit Lt Arm": {
		"method": "calcCode",
		"code": "1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A380X.Lights.Input.A380X OVHD Emer Exit Lt Off": {
		"method": "calcCode",
		"code": "2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM TO CONFIG Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM ABN PROC Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_ABNPROC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EMER CANC Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_EMERCANC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM RCL Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_RCL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM MORE Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_MORE)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR2 Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_BTN_CLR2)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM TO CONFIG Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CL Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM ABN PROC Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_ABNPROC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EMER CANC Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_EMERCANC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM RCL LAST Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_RCL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM MORE Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_MORE)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR2 Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_BTN_CLR2)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM ENG Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 != if{ 0 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM BLEED Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 != if{ 1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM PRESS Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 != if{ 2 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EL/AC Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 != if{ 3 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM FUEL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 != if{ 4 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM HYD Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 != if{ 5 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM APU Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 != if{ 7 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM COND Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 != if{ 8 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM DOOR Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 != if{ 9 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EL/DC Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 != if{ 10 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM WHEEL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 != if{ 11 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM FCTL Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 12 != if{ 12 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM VIDEO Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 13 != if{ 13 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CB Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 14 != if{ 14 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM STS Button Press": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 15 != if{ 15 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } \nels{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) }\n(>H:A32NX_SD_PAGE_CHANGED)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM ENG Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM BLEED Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM PRESS Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EL/AC Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM FUEL Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM HYD Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM APU Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM COND Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM DOOR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EL/DC Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM WHEEL Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM F CTL Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 12 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM VIDEO Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 13 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CB Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 14 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM STS Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 15 =="
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM TO CONFIG Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_TOCONFIG)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CL Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_CL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM ABN PROC Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_ABNPROC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM EMER CANC Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_EMERCANC)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_CLR)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM RCL Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_RCL)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM MORE Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_MORE)"
	},
	"Fly By Wire.A380X.Avionics.A380X ECAM CLR2 Button Indicator": {
		"method": "calcCode",
		"code": "(L:A32NX_BTN_CLR2)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot HDG Increment": {
		"method": "calcCode",
		"code": "(L:MCP_HDG_sel) ++ (>L:MCP_HDG_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot HDG Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_HDG_sel) -- (>L:MCP_HDG_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Left Course Sel Increment": {
		"method": "calcCode",
		"code": "(L:MCP_CRS1_sel) ++ (>L:MCP_CRS1_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Left Course Sel Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_CRS1_sel) -- (>L:MCP_CRS1_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Right Course Increment": {
		"method": "calcCode",
		"code": "(L:MCP_CRS2_sel)++(>L:MCP_CRS2_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Right Course Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_CRS2_sel)--(>L:MCP_CRS2_sel)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot Altitude Sel Increment": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob)++(>L:MCP_Alt_sel_knob)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot Altitude Sel Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob)--(>L:MCP_Alt_sel_knob)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380 OVHD ELEC Battery APU Button Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO)\n"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X OVHD ELEC Battery APU Button Auto": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) \n"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X OVHD ELEC Battery APU Button Off": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) "
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot Alt Sel Increment": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob) ++ (>L:MCP_Alt_sel_knob)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot Alt Sel Decrement": {
		"method": "calcCode",
		"code": "(L:MCP_Alt_sel_knob) -- (>L:MCP_Alt_sel_knob)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.LNAV Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_LNAV)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.VNAV Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VNAV)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Auto Pilot 1": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_NAV1)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot 2": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_NAV2)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot FLCH Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_LvlChg)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot VS Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VS)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot ALT HOLD Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_ALT)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot VOR LOC Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_VL)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot APP Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_APP)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot HDG Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_HDG)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot THRUST Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_Thrust)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Autopilot C/O Button": {
		"method": "calcCode",
		"code": "1 (>L:MCP_Mode_CO)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Left Flight Director Toggle Press": {
		"method": "calcCode",
		"code": "1 (>L:MCP_FD_L_switch)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Left Flight Director Toggle Release": {
		"method": "calcCode",
		"code": "0 (>L:MCP_FD_L_switch)"
	},
	"Just Flight.Avro RJ.Autopilot.Input. Right Flight Director Toggle Press": {
		"method": "calcCode",
		"code": "1 (>L:MCP_FD_R_switch)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Right Flight Director Toggle Release": {
		"method": "calcCode",
		"code": "0 (>L:MCP_FD_R_switch)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Auto Throttle Toggle Press": {
		"method": "calcCode",
		"code": "1 (>L:MCP_AT_switch)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.Auto Throttle Toggle Release": {
		"method": "calcCode",
		"code": "0 (>L:MCP_AT_switch)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU HDG Knob Dec": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{\n	 (>H:A320_Neo_FCU_HDG_DEC_TRACK)\n} els{\n	(>H:A320_Neo_FCU_HDG_DEC_HEADING)\n}"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU HDG Knob Inc": {
		"method": "calcCode",
		"code": "(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{\n	 (>H:A320_Neo_FCU_HDG_INC_TRACK)\n} els{\n	(>H:A320_Neo_FCU_HDG_INC_HEADING)\n}"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU ALT Knob Inc": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH)\n(>H:AP_KNOB_Up)\n(>H:A320_Neo_CDU_AP_INC_ALT)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU ALT Knob Dec": {
		"method": "calcCode",
		"code": "3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH)\n(>H:AP_KNOB_Down)\n(>H:A320_Neo_CDU_AP_DEC_ALT)\n"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU SPEED Knob Inc": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_SPEED_INC)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380 FCU SPEED Knob Dec": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_SPEED_DEC)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS A Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_A)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS B Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_B)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS C Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_C)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS D Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_D)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS E Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_E)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS F Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_F)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS G Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_G)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS H Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_H)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS I Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_I)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS J Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_J)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS K Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_K)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS L Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS M Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_M)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS N Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_N)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS O Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_O)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS P Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_P)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Q Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Q)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS R Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS S Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_S)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS T Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_T)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS U Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_U)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS W Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_W)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS X Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_X)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Y Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Y)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Z Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Z)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS SP Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Sp)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS DEL Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Del)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ FMS SLASH Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Div)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS CLR Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Clr)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ FMS PLUS MINUS Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_PlusMinus)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT  FMS DOT Key": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Dot)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT  FMS Key 1": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_1)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 2": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_2)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 3": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_3)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 4": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_4)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 5": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_5)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 6": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_6)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 7": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_7)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 8": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_8)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key 9": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_9)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS Key ZERO": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_0)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS INIT REF": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_InitRef)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS RTE": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Rte)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS DEP ARR": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_DepArr)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS VNAV": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Vnav)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS FIX": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Fix)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LEGS": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Legs)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS HOLD": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_hold)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS PROG": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Prog)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS EXEC BUTTON": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Exec)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS MENU": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_menu)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS NAV RAD": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_NavRad)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS PREV PAGE": {
		"method": "calcCode",
		"code": "(>L:GNLU910_L_FMS_PrvNxt) (>L:PED_FWD_L_FMS_Prev)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS NEXT PAGE": {
		"method": "calcCode",
		"code": "2  (>L:GNLU910_L_FMS_PrvNxt) (>L:PED_FWD_L_FMS_Next)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 1L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_1L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 2L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_2L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 3L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_3L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 4L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_4L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 5L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_5L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 6L": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_6L)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 1R": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_1R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK R2": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_2R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK R3": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_3R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 4R": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_4R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK R5": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_5R)"
	},
	"Just Flight.Avro RJ.FMS.Input.JF RJ LEFT FMS LSK 6R": {
		"method": "calcCode",
		"code": "1 (>L:GNLU910_L_FMS_Lsk_6R)"
	},
	"Just Flight.Avro RJ.FMS.Output.JF RJ LEFT FMS EXEC ANNOUNCIATOR": {
		"method": "calcCode",
		"code": "(L:JF_RJ_FMS_L_power, bool) (L:GNLU910_L_FMS_Exec_light, bool)"
	},
	"Just Flight.Avro RJ.FMS.Output.JF RJ LEFT FMS MSG ANNOUNCIATOR": {
		"method": "calcCode",
		"code": "(L:JF_RJ_FMS_L_power, bool) (L:GNLU910_L_FMS_Msg, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT VNAV INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VNAV_i, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT LNAV INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_LNAV_iL, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT VOR LOC INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VL_il, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT HDG INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_HDG_iL, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT APP INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_APP_il, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT AP1 INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_NAV1_il1, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT LVL CHG INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_LvlChg_il, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT VS INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_VS_iL, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT ALT HOLD INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_ALT_iL, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT THRUST INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_Thrust_il, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT A/T LED INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_AT_il1, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT FD1 MA INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_MA_left_il1, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.JF RJ AUTOPILOT FD2 MA INDICATOR": {
		"method": "calcCode",
		"code": "(L:MCP_Mode_MA_right_il1, bool)"
	},
	"Just Flight.Avro RJ.Autopilot.Input.IAS/MACH SELECTOR - INCREASE": {
		"method": "calcCode",
		"code": "(L:MCP_Speed_sel_inc) -- (>L:MCP_Speed_sel_inc)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X OVHD ELEC BUS TIE Button Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO,Bool) ! (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO,Bool)"
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OH_ANTIICE_ENG1_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG1) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)"
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OH_ANTIICE_ENG2_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG2) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)"
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OH_ANTIICE_ENG3_TOG": {
		"method": "calcCode",
		"code": "(>K:ANTI_ICE_TOGGLE_ENG3) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG3_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG3_Pressed)"
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OH_ANTIICE_ENG4_TOG": {
		"method": "calcCode",
		"code": "#(>K:ANTI_ICE_TOGGLE_ENG4) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG4_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG4_Pressed)"
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OVHD_ANTIICE_WING_TOGGLE": {
		"method": "calcCode",
		"code": "(>K:TOGGLE_STRUCTURAL_DEICE) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) "
	},
	"Fly By Wire.A380X.Anti Ice.Input.A380X_OVHD_PROBE_WINDOW_HEAT_TOGGLE": {
		"method": "calcCode",
		"code": "(L:A32NX_MAN_PITOT_HEAT,Bool) ! (>L:A32NX_MAN_PITOT_HEAT) (L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) "
	},
	"Fly By Wire.A380X.Electrical.Input.A380X_OH_ELEC_EXTPWR_TOG1": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:1, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X_OH_ELEC_EXTPWR_TOG2": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:2, Bool) (A:EXTERNAL POWER ON:2, Bool) ! and if{ 2 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:2, Bool) if{ 2 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X_OH_ELEC_EXTPWR_TOG3": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:3, Bool) (A:EXTERNAL POWER ON:3, Bool) ! and if{ 3 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:3, Bool) if{ 3 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"Fly By Wire.A380X.Electrical.Input.A380X_OH_ELEC_EXTPWR_TOG4": {
		"method": "calcCode",
		"code": "(A:EXTERNAL POWER AVAILABLE:4, Bool) (A:EXTERNAL POWER ON:4, Bool) ! and if{ 4 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:4, Bool) if{ 4 (>K:TOGGLE_EXTERNAL_POWER) } }"
	},
	"DC Designs.Concorde.Autopilot.Output.altimeter": {
		"method": "calcCode",
		"code": "(L:ALT_AP_VALUE, Feet)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380 OVHD ELEC Battery 1 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Turn Off L off": {
		"method": "calcCode",
		"code": "22 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Turn Off L on": {
		"method": "calcCode",
		"code": "23 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Turn Off R off": {
		"method": "calcCode",
		"code": "24 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights (exterior).Input.Turn Off R on": {
		"method": "calcCode",
		"code": "25 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Safety.Input.No Smoking off": {
		"method": "calcCode",
		"code": "15 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Safety.Input.No Smoking on": {
		"method": "calcCode",
		"code": "14 (>L:VC_Miscellaneous_trigger_VAL,number)"
	},
	"iFly.737-Max8.Lights.Input.Emergency Exit Light on": {
		"method": "calcCode",
		"code": "12 (>L:VC_Miscellaneous_trigger_VAL)"
	},
	"iFly.737-Max8.Lights.Input.Emergency Exit Light off": {
		"method": "calcCode",
		"code": "13 (>L:VC_Miscellaneous_trigger_VAL)"
	},
	"Fly By Wire.A320-Dev.Brakes.Input.A32NX PED PARK BRAKE ON": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_PARK_BRAKE_LEVER_POS)"
	},
	"Fly By Wire.A320-Dev.Brakes.Input.A32NX PED PARK BRAKE OFF": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_PARK_BRAKE_LEVER_POS)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES RTO ARM Button Press": {
		"method": "calcCode",
		"code": "1 (>L:A32NX_OVHD_AUTOBRK_RTO_ARM_IS_PRESSED)"
	},
	"Fly By Wire.A380X.Brakes.Input.A380X AUTOBRAKES RTO ARM Button Release": {
		"method": "calcCode",
		"code": "0 (>L:A32NX_OVHD_AUTOBRK_RTO_ARM_IS_PRESSED)"
	},
	"Microsoft.Generic.Fuel.Input.FUEL PUMP ON": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:1,Bool) ! if{ (>K:TOGGLE_ELECT_FUEL_PUMP) }"
	},
	"Microsoft.Generic.Fuel.Input.FUEL PUMP OFF": {
		"method": "calcCode",
		"code": "(A:GENERAL ENG FUEL PUMP SWITCH:1,Bool) if{ (>K:TOGGLE_ELECT_FUEL_PUMP) }"
	},
	"iFly.737-Max8.Engine.Input.Engine Ignition Left": {
		"method": "calcCode",
		"code": "0 (>L:VC_Ignition_Select_SW_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine Ignition Both": {
		"method": "calcCode",
		"code": "10 (>L:VC_Ignition_Select_SW_VAL,number)"
	},
	"iFly.737-Max8.Engine.Input.Engine Ignition Right": {
		"method": "calcCode",
		"code": "20 (>L:VC_Ignition_Select_SW_VAL,number)"
	},
	"Fly By Wire.A380X.Electrical.Input.A380 OVHD ELEC Battery 2 Button Toggle": {
		"method": "calcCode",
		"code": "(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO)"
	},
	"FlightFX.Visionjet SF50.Engine.Input.SF50 Engine Master On": {
		"method": "calcCode",
		"code": "1 (>L:SF50_knob_stop_run)"
	},
	"FlightFX.Visionjet SF50.Engine.Input.SF50 Engine Master Off": {
		"method": "calcCode",
		"code": "0 (>L:SF50_knob_stop_run)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.AP IAS Value": {
		"method": "calcCode",
		"code": "(L:JF_RJ_AP_IAS,number)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.AP Mach Value": {
		"method": "calcCode",
		"code": "(L:JF_RJ_AP_MACH,number)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.AP HDG Value": {
		"method": "calcCode",
		"code": "(L:JF_RJ_AP_HDG,number)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.AP ALT Value": {
		"method": "calcCode",
		"code": "(L:JF_RJ_AP_Alt,number)"
	},
	"Just Flight.Avro RJ.Autopilot.Output.AP V/S Value": {
		"method": "calcCode",
		"code": "(L:JF_RJ_AP_VS,number)"
	},
	"Microsoft.Generic.Lights (interior).Input (Potentiometer).GLARESHIELD BRIGHTNESS PCT": {
		"method": "calcCode",
		"code": "@ 10.24 / 1 (>K:2:GLARESHIELD_LIGHTS_POWER_SETTING_SET)"
	},
	"Microsoft.Generic.Lights (interior).Input (Potentiometer).PEDESTAL LIGHTING PERCENT": {
		"method": "calcCode",
		"code": "@ 10.24 / 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET)"
	},
	"iFly.737-Max8.Anti Ice.Input.Engine 1 Anti Ice ON": {
		"method": "calcCode",
		"code": "22 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Engine 1 Anti Ice OFF": {
		"method": "calcCode",
		"code": "21 (>L:VC_Anti_Ice_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Anti Ice.Input.Engine 2 Anti Ice ON": {
		"method": "calcCode",
		"code": "24 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Engine 2 Anti Ice OFF": {
		"method": "calcCode",
		"code": "23 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Probe Heat A ON": {
		"method": "calcCode",
		"code": "16 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Probe Heat A OFF": {
		"method": "calcCode",
		"code": "15 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Probe Heat B ON": {
		"method": "calcCode",
		"code": "18 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Probe Heat B OFF": {
		"method": "calcCode",
		"code": "17 (>L:VC_Anti_Ice_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 1 ON": {
		"method": "calcCode",
		"code": "8 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 1 OFF": {
		"method": "calcCode",
		"code": "7 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 2 ON": {
		"method": "calcCode",
		"code": "10 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 2 OFF": {
		"method": "calcCode",
		"code": "9 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 3 ON": {
		"method": "calcCode",
		"code": "12 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 3 OFF": {
		"method": "calcCode",
		"code": "11 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 4 ON": {
		"method": "calcCode",
		"code": "14 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Window Heat 4 OFF": {
		"method": "calcCode",
		"code": "13 (>L:VC_Anti_Ice_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Anti Ice.Input.Wing Anti Ice ON": {
		"method": "calcCode",
		"code": "20 (>L:VC_Anti_Ice_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Anti Ice.Input.Wing Anti Ice OFF": {
		"method": "calcCode",
		"code": "19 (>L:VC_Anti_Ice_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ENG 1 Pump ON": {
		"method": "calcCode",
		"code": "1 (>L:VC_Hydraulics_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ENG 1 Pump OFF": {
		"method": "calcCode",
		"code": "2 (>L:VC_Hydraulics_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ELEC 2 Pump ON": {
		"method": "calcCode",
		"code": "7 (>L:VC_Hydraulics_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ELEC 2 Pump OFF": {
		"method": "calcCode",
		"code": "8 (>L:VC_Hydraulics_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ELEC 1 Pump ON": {
		"method": "calcCode",
		"code": "5 (>L:VC_Hydraulics_trigger_VAL, Number) "
	},
	"iFly.737-Max8.Hydraulics.Input.ELEC 1 Pump OFF": {
		"method": "calcCode",
		"code": "6 (>L:VC_Hydraulics_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Hydraulics.Input.ENG 2 Pump ON": {
		"method": "calcCode",
		"code": "3 (>L:VC_Hydraulics_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Hydraulics.Input.ENG 2 Pump OFF": {
		"method": "calcCode",
		"code": "4 (>L:VC_Hydraulics_trigger_VAL, Number)"
	},
	"iFly.737-Max8.Autopilot.Output.CWS A PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_CWS_A_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.CWS B PUSH BUTTON LIGHT": {
		"method": "calcCode",
		"code": "(L:VC_CWS_B_SW_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.FD1 LED": {
		"method": "calcCode",
		"code": "(L:VC_MA_1_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Output.FD2 LED": {
		"method": "calcCode",
		"code": "(L:VC_MA_2_LIGHT_VAL,number)"
	},
	"iFly.737-Max8.EFIS.Input.MINS RADIO": {
		"method": "calcCode",
		"code": "8 (>L:VC_Instruments_Trigger_VAL)\n7 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.MINS BARO": {
		"method": "calcCode",
		"code": "7 (>L:VC_Instruments_Trigger_VAL)\n8 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.BARO INHG": {
		"method": "calcCode",
		"code": "28 (>L:VC_Instruments_Trigger_VAL)\n27 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.BARO HPA": {
		"method": "calcCode",
		"code": "27 (>L:VC_Instruments_Trigger_VAL)\n28 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.Autopilot.Input.FO FLIGHT DIRECTOR ON": {
		"method": "calcCode",
		"code": "44 (>L:VC_Automatic_Flight_trigger_VAL,number)\n"
	},
	"iFly.737-Max8.Autopilot.Input.FO FLIGHT DIRECTOR OFF": {
		"method": "calcCode",
		"code": "43 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.Autopilot.Input.A/T ARM SWITCH OFF": {
		"method": "calcCode",
		"code": "2 (>L:VC_Automatic_Flight_trigger_VAL,number)"
	},
	"iFly.737-Max8.EFIS.Input.BARO STD": {
		"method": "calcCode",
		"code": "35 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP CWS A": {
		"method": "calcCode",
		"code": "37 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.MCP CWS B": {
		"method": "calcCode",
		"code": "39 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.MINS RST": {
		"method": "calcCode",
		"code": "15 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.MINS DEC": {
		"method": "calcCode",
		"code": "11 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.MINS INC": {
		"method": "calcCode",
		"code": "12 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.BARO DEC": {
		"method": "calcCode",
		"code": "32 (>L:VC_Instruments_Trigger_VAL)\n31 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.BARO INC": {
		"method": "calcCode",
		"code": "31 (>L:VC_Instruments_Trigger_VAL)\n32 (>L:VC_Instruments_Trigger_VAL)"
	},
	"iFly.737-Max8.EFIS.Input.RANGE DEC": {
		"method": "calcCode",
		"code": "51 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.RANGE INC": {
		"method": "calcCode",
		"code": "52 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.MAP MODE DOWN": {
		"method": "calcCode",
		"code": "43 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.MAP MODE UP": {
		"method": "calcCode",
		"code": "44 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Autopilot.Input.CO": {
		"method": "calcCode",
		"code": "19 (>L:VC_Automatic_Flight_trigger_VAL, 0)"
	},
	"iFly.737-Max8.Miscellaneous.Input.FLUSH FORWARD LAVATORY": {
		"method": "calcCode",
		"code": "225 (>L:Animation_Trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.MAP CTR": {
		"method": "calcCode",
		"code": "47 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"iFly.737-Max8.EFIS.Input.TFC": {
		"method": "calcCode",
		"code": "55 (>L:VC_Instruments_trigger_VAL, 0)"
	},
	"Fly By Wire.A380X.Autopilot.Input.A380X FCU TRUEMAG Push": {
		"method": "calcCode",
		"code": "(>H:A320_Neo_FCU_TRUEMAG_PUSH)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.FCU LOC  BUTTON LED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_LOC_LIGHT_ON)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.AUTOPILOT APPR BUTTON LED ON ******DELETE THIS ONE******": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_LIGHT_ON)"
	},
	"Fly By Wire.A320-Dev.Autopilot.Output.FCU APPR BUTTON LED ON": {
		"method": "calcCode",
		"code": "(L:A32NX_FCU_APPR_LIGHT_ON)"
	}
}
